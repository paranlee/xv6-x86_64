!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALT	kern/kbd.h	16;"	d
AR	/home/kim/xv6-x86_64/Makefile	/^AR = ar$/;"	m	language:Make
AS	/home/kim/xv6-x86_64/Makefile	/^AS = gas$/;"	m	language:Make
Align	user/umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	user/sh.c	8;"	d	file:
BACKSPACE	kern/console.c	140;"	d	file:
BBLOCK	kern/fs.h	53;"	d
BOOT_BLOCK	boot/module.mk	/^BOOT_BLOCK := $(BOOT_DIR)\/bootblock$/;"	m
BOOT_CFLAGS	boot/module.mk	/^BOOT_CFLAGS := $(CFLAGS) -m32$/;"	m
BOOT_DIR	boot/module.mk	/^BOOT_DIR := boot$/;"	m
BOOT_LDFLAGS	boot/module.mk	/^BOOT_LDFLAGS := $(LDFLAGS) -m elf_i386$/;"	m
BOOT_LINKER_SCRIPT	boot/module.mk	/^BOOT_LINKER_SCRIPT := $(BOOT_DIR)\/boot.ld$/;"	m
BOOT_OBJS	boot/module.mk	/^BOOT_OBJS := \\$/;"	m
BPB	kern/fs.h	50;"	d
BSIZE	kern/fs.h	11;"	d
B_DIRTY	kern/buf.h	20;"	d
B_VALID	kern/buf.h	19;"	d
C	kern/console.c	206;"	d	file:
C	kern/kbd.h	37;"	d
CAPSLOCK	kern/kbd.h	18;"	d
CC	/home/kim/xv6-x86_64/Makefile	/^CC = gcc$/;"	m	language:Make
CFLAGS	/home/kim/xv6-x86_64/Makefile	/^CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -MD -ggdb -fno-omit-frame-pointer$/;"	m	language:Make
COM1	kern/uart.c	7;"	d	file:
CONSOLE	kern/file.h	43;"	d
CP	/home/kim/xv6-x86_64/Makefile	/^CP = cp$/;"	m	language:Make
CPUS	/home/kim/xv6-x86_64/Makefile	/^CPUS ?= 1$/;"	m	language:Make
CR0_PE	boot/mmu.h	8;"	d
CR0_PG	boot/mmu.h	10;"	d
CR0_WP	boot/mmu.h	9;"	d
CRTPORT	kern/console.c	141;"	d	file:
CTL	kern/kbd.h	15;"	d
DD	/home/kim/xv6-x86_64/Makefile	/^DD = dd$/;"	m	language:Make
DEVSPACE_P2V	kern/memlayout.h	13;"	d
DEVSPACE_PHYS	kern/memlayout.h	12;"	d
DIRSIZ	inc/dir.h	7;"	d
DPL_USER	kern/mmu.h	84;"	d
Disassembly	obj/boot/bootblock.asm	/^Disassembly of section .rest_of_bootloader:$/;"	l
Disassembly	obj/boot/bootblock.asm	/^Disassembly of section .stage_1:$/;"	l
Disassembly	obj/kern/initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fstest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/preemptiontest1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/preemptiontest2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/vatest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/wc.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/kbd.h	22;"	d
ELF_MAGIC	boot/elf.h	9;"	d
ELF_MAGIC	kern/elf.h	9;"	d
ELF_PROG_FLAG_EXEC	boot/elf.h	46;"	d
ELF_PROG_FLAG_EXEC	kern/elf.h	46;"	d
ELF_PROG_FLAG_READ	boot/elf.h	48;"	d
ELF_PROG_FLAG_READ	kern/elf.h	48;"	d
ELF_PROG_FLAG_WRITE	boot/elf.h	47;"	d
ELF_PROG_FLAG_WRITE	kern/elf.h	47;"	d
ELF_PROG_LOAD	boot/elf.h	43;"	d
ELF_PROG_LOAD	kern/elf.h	43;"	d
EMBRYO	kern/proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
EOI	kern/lapic.c	11;"	d	file:
ERROR	kern/lapic.c	30;"	d	file:
ESR	kern/lapic.c	14;"	d	file:
EXEC	user/sh.c	4;"	d	file:
EXTMEM	kern/memlayout.h	10;"	d
FD_INODE	kern/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon8
FD_NONE	kern/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon8
FD_PIPE	kern/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon8
FL_IF	kern/mmu.h	5;"	d
FSSIZE	kern/param.h	16;"	d
FS_IMG	/home/kim/xv6-x86_64/Makefile	/^FS_IMG := $(OBJDIR)\/fs.img$/;"	m	language:Make
GDB	/home/kim/xv6-x86_64/Makefile	/^GDB = gdb$/;"	m	language:Make
GDBPORT	/home/kim/xv6-x86_64/Makefile	/^GDBPORT	:= 12345$/;"	m	language:Make
Header	user/umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	kern/fs.h	47;"	d
ICRHI	kern/lapic.c	24;"	d	file:
ICRLO	kern/lapic.c	15;"	d	file:
ICR_BUSY	kern/lapic.c	23;"	d	file:
ICR_DELIVM_INIT	kern/lapic.c	16;"	d	file:
ICR_DELIVM_STARTUP	kern/lapic.c	17;"	d	file:
ICR_DELIVS	kern/lapic.c	18;"	d	file:
ICR_DEST_BCAST	kern/lapic.c	21;"	d	file:
ICR_LEVEL_ASSERT	kern/lapic.c	19;"	d	file:
ICR_TRIGGER_LEVEL	kern/lapic.c	20;"	d	file:
ID	kern/lapic.c	8;"	d	file:
IDE_CMD_RDMUL	kern/ide.c	44;"	d	file:
IDE_CMD_READ	kern/ide.c	42;"	d	file:
IDE_CMD_WRITE	kern/ide.c	43;"	d	file:
IDE_CMD_WRMUL	kern/ide.c	45;"	d	file:
IMAGES	/home/kim/xv6-x86_64/Makefile	/^IMAGES := $(XV6_IMG) $(FS_IMG)$/;"	m	language:Make
INPUT_BUF	kern/console.c	197;"	d	file:
INT_ACTIVELOW	kern/ioapic.c	17;"	d	file:
INT_DISABLED	kern/ioapic.c	15;"	d	file:
INT_LEVEL	kern/ioapic.c	16;"	d	file:
INT_LOGICAL	kern/ioapic.c	18;"	d	file:
IO_RTC	kern/kclock.h	9;"	d
IPB	kern/fs.h	44;"	d
IRQ_COM1	kern/trap.h	12;"	d
IRQ_ERROR	kern/trap.h	14;"	d
IRQ_IDE	kern/trap.h	13;"	d
IRQ_KBD	kern/trap.h	11;"	d
IRQ_SPURIOUS	kern/trap.h	15;"	d
IRQ_TIMER	kern/trap.h	10;"	d
KBDATAP	kern/kbd.h	10;"	d
KBSTATP	kern/kbd.h	8;"	d
KBS_DIB	kern/kbd.h	9;"	d
KERNBASE	kern/memlayout.h	16;"	d
KERNEL	kern/module.mk	/^KERNEL := $(KERN_DIR)\/kernel$/;"	m
KERNEL_ELF_PHYS_ADDR	boot/stage_2.c	14;"	d	file:
KERNEL_START_SECTOR	/home/kim/xv6-x86_64/Makefile	/^KERNEL_START_SECTOR := 32$/;"	m	language:Make
KERNEL_START_SECTOR	boot/stage_2.c	16;"	d	file:
KERNLINK	kern/memlayout.h	17;"	d
KERN_BINARY_OBJS	kern/module.mk	/^KERN_BINARY_OBJS := \\$/;"	m
KERN_CFLAGS	kern/module.mk	/^KERN_CFLAGS := $(CFLAGS) -m64 -mcmodel=kernel$/;"	m
KERN_DIR	kern/module.mk	/^KERN_DIR := kern$/;"	m
KERN_LDFLAGS	kern/module.mk	/^KERN_LDFLAGS := $(LDFLAGS) -m elf_x86_64$/;"	m
KERN_LINKER_SCRIPT	kern/module.mk	/^KERN_LINKER_SCRIPT := $(KERN_DIR)\/kernel.ld$/;"	m
KERN_OBJS	kern/module.mk	/^KERN_OBJS := \\$/;"	m
KEY_DEL	kern/kbd.h	34;"	d
KEY_DN	kern/kbd.h	28;"	d
KEY_END	kern/kbd.h	26;"	d
KEY_HOME	kern/kbd.h	25;"	d
KEY_INS	kern/kbd.h	33;"	d
KEY_LF	kern/kbd.h	29;"	d
KEY_PGDN	kern/kbd.h	32;"	d
KEY_PGUP	kern/kbd.h	31;"	d
KEY_RT	kern/kbd.h	30;"	d
KEY_UP	kern/kbd.h	27;"	d
KSTACKSIZE	kern/param.h	5;"	d
LD	/home/kim/xv6-x86_64/Makefile	/^LD = ld$/;"	m	language:Make
LDFLAGS	/home/kim/xv6-x86_64/Makefile	/^LDFLAGS :=$/;"	m	language:Make
LIB_ARCHIVE_FILE	lib/module.mk	/^LIB_ARCHIVE_FILE := $(OBJDIR)\/$(LIB_DIR)\/lib$(LIB_ARCHIVE_NAME).a$/;"	m
LIB_ARCHIVE_NAME	lib/module.mk	/^LIB_ARCHIVE_NAME := xv6_x86_64$/;"	m
LIB_CFLAGS	lib/module.mk	/^LIB_CFLAGS := $(CFLAGS) -m64 -fno-pic -nostdinc -I.$/;"	m
LIB_DIR	lib/module.mk	/^LIB_DIR := lib$/;"	m
LIB_LDFLAGS	lib/module.mk	/^LIB_LDFLAGS := $(LDFLAGS) -m elf_x86_64$/;"	m
LIB_OBJS	lib/module.mk	/^LIB_OBJS := \\$/;"	m
LINT0	kern/lapic.c	28;"	d	file:
LINT1	kern/lapic.c	29;"	d	file:
LIST	user/sh.c	7;"	d	file:
LOGSIZE	kern/param.h	14;"	d
LVT_MASKED	kern/lapic.c	31;"	d	file:
MAXARG	kern/param.h	12;"	d
MAXARGS	user/sh.c	10;"	d	file:
MAXFILE	kern/fs.h	31;"	d
MAXOPBLOCKS	kern/param.h	13;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MKDIR	/home/kim/xv6-x86_64/Makefile	/^MKDIR = mkdir$/;"	m	language:Make
MPBOOT	kern/mp.h	43;"	d
MPBUS	kern/mp.h	60;"	d
MPIOAPIC	kern/mp.h	61;"	d
MPIOINTR	kern/mp.h	62;"	d
MPLINTR	kern/mp.h	63;"	d
MPPROC	kern/mp.h	59;"	d
NBUF	kern/param.h	15;"	d
NCPU	kern/param.h	6;"	d
NDEV	kern/param.h	10;"	d
NDIRECT	kern/fs.h	29;"	d
NELEM	kern/defs.h	181;"	d
NFILE	kern/param.h	8;"	d
NINDIRECT	kern/fs.h	30;"	d
NINODE	kern/param.h	9;"	d
NINODES	kern/mkfs.c	25;"	d	file:
NO	kern/kbd.h	12;"	d
NOFILE	kern/param.h	7;"	d
NPROC	kern/param.h	4;"	d
NPTENTRIES	kern/mmu.h	110;"	d
NSEGS	kern/mmu.h	16;"	d
NULL	inc/types.h	25;"	d
NULL	user/user.h	4;"	d
NUMLOCK	kern/kbd.h	19;"	d
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
OBJCOPY	/home/kim/xv6-x86_64/Makefile	/^OBJCOPY = objcopy$/;"	m	language:Make
OBJDIR	/home/kim/xv6-x86_64/Makefile	/^OBJDIR := obj$/;"	m	language:Make
OBJDUMP	/home/kim/xv6-x86_64/Makefile	/^OBJDUMP = objdump$/;"	m	language:Make
O_APPEND	inc/fcntl.h	8;"	d
O_CREATE	inc/fcntl.h	7;"	d
O_RDONLY	inc/fcntl.h	4;"	d
O_RDWR	inc/fcntl.h	6;"	d
O_WRONLY	inc/fcntl.h	5;"	d
P2V	kern/memlayout.h	25;"	d
P2V_WO	kern/memlayout.h	30;"	d
PCINT	kern/lapic.c	27;"	d	file:
PGROUNDDOWN	kern/mmu.h	114;"	d
PGROUNDUP	kern/mmu.h	113;"	d
PGSIZE	kern/mmu.h	111;"	d
PIC_MASTER_COMMAND	kern/picirq.c	7;"	d	file:
PIC_MASTER_DATA	kern/picirq.c	8;"	d	file:
PIC_MASTER_DATA	obj/kern/kernel.asm	/^#define PIC_MASTER_DATA 0x21    \/\/ Master - Data (IRQs 0-7)$/;"	d
PIC_SLAVE_COMMAND	kern/picirq.c	9;"	d	file:
PIC_SLAVE_COMMAND	obj/kern/kernel.asm	/^#define PIC_SLAVE_COMMAND 0xA0  \/\/ Slave - Command (IRQs 8-15)$/;"	d
PIC_SLAVE_DATA	kern/picirq.c	10;"	d	file:
PIC_SLAVE_DATA	obj/kern/kernel.asm	/^#define PIC_SLAVE_DATA 0xA1     \/\/ Slave - Data (IRQs 8-15)$/;"	d
PIPE	user/sh.c	6;"	d	file:
PIPESIZE	kern/pipe.c	6;"	d	file:
PRIMARY_COMMAND_BASE_REG	kern/ide.c	24;"	d	file:
PRIMARY_CONTROL_BASE_REG	kern/ide.c	26;"	d	file:
PTE_ADDR	kern/mmu.h	124;"	d
PTE_FLAGS	kern/mmu.h	123;"	d
PTE_P	kern/mmu.h	117;"	d
PTE_PS	kern/mmu.h	120;"	d
PTE_U	kern/mmu.h	119;"	d
PTE_W	kern/mmu.h	118;"	d
PTX1	kern/mmu.h	108;"	d
PTX2	kern/mmu.h	107;"	d
PTX3	kern/mmu.h	106;"	d
PTX4	kern/mmu.h	105;"	d
QEMU	/home/kim/xv6-x86_64/Makefile	/^	QEMU = qemu-system-x86_64$/;"	m	language:Make
QEMUOPTS	/home/kim/xv6-x86_64/Makefile	/^QEMUOPTS := $(QEMUOPTS)$/;"	m	language:Make
REDIR	user/sh.c	5;"	d	file:
REG_COMMAND	kern/ide.c	37;"	d	file:
REG_DATA	kern/ide.c	29;"	d	file:
REG_ERROR	kern/ide.c	30;"	d	file:
REG_FEATURES	kern/ide.c	31;"	d	file:
REG_HDDEVSEL	kern/ide.c	36;"	d	file:
REG_ID	kern/ioapic.c	6;"	d	file:
REG_LBA0	kern/ide.c	33;"	d	file:
REG_LBA1	kern/ide.c	34;"	d	file:
REG_LBA2	kern/ide.c	35;"	d	file:
REG_SECCOUNT0	kern/ide.c	32;"	d	file:
REG_STATUS	kern/ide.c	38;"	d	file:
REG_TABLE	kern/ioapic.c	8;"	d	file:
REG_VER	kern/ioapic.c	7;"	d	file:
ROOTDEV	kern/param.h	11;"	d
ROOTINO	kern/fs.h	10;"	d
RULE_UOBJ	user/module.mk	/^define RULE_UOBJ$/;"	m
RUNNABLE	kern/proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	kern/proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SCROLLLOCK	kern/kbd.h	20;"	d
SECTOR_SIZE	kern/ide.c	14;"	d	file:
SECTSIZE	boot/stage_2.c	12;"	d	file:
SEG	boot/mmu.h	26;"	d
SEG	kern/mmu.h	44;"	d
SEG_KCODE	boot/mmu.h	13;"	d
SEG_KCODE	kern/mmu.h	8;"	d
SEG_KDATA	boot/mmu.h	14;"	d
SEG_KDATA	kern/mmu.h	9;"	d
SEG_NULL	boot/mmu.h	19;"	d
SEG_TSS	kern/mmu.h	12;"	d
SEG_UCODE	kern/mmu.h	10;"	d
SEG_UDATA	kern/mmu.h	11;"	d
SETGATE	kern/mmu.h	188;"	d
SHIFT	kern/kbd.h	14;"	d
SLEEPING	kern/proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SR_BSY	kern/ide.c	17;"	d	file:
SR_DRDY	kern/ide.c	18;"	d	file:
SR_DRQ	kern/ide.c	20;"	d	file:
SR_DWF	kern/ide.c	19;"	d	file:
SR_ERR	kern/ide.c	21;"	d	file:
STA_R	boot/mmu.h	36;"	d
STA_R	kern/mmu.h	89;"	d
STA_W	boot/mmu.h	35;"	d
STA_W	kern/mmu.h	88;"	d
STA_X	boot/mmu.h	34;"	d
STA_X	kern/mmu.h	87;"	d
STD_WRAP	user/user.h	14;"	d
STS_IG64	kern/mmu.h	93;"	d
STS_T64A	kern/mmu.h	92;"	d
STS_TG64	kern/mmu.h	94;"	d
SVR	kern/lapic.c	12;"	d	file:
SVR_ENABLE	kern/lapic.c	13;"	d	file:
SYSCALL	user/usys.S	/^#define SYSCALL(name) \\$/;"	d
SYS_chdir	inc/syscall.h	12;"	d
SYS_close	inc/syscall.h	23;"	d
SYS_dup	inc/syscall.h	13;"	d
SYS_exec	inc/syscall.h	10;"	d
SYS_exit	inc/syscall.h	5;"	d
SYS_fork	inc/syscall.h	4;"	d
SYS_fstat	inc/syscall.h	11;"	d
SYS_getpid	inc/syscall.h	14;"	d
SYS_kill	inc/syscall.h	9;"	d
SYS_link	inc/syscall.h	21;"	d
SYS_mkdir	inc/syscall.h	22;"	d
SYS_mknod	inc/syscall.h	19;"	d
SYS_open	inc/syscall.h	17;"	d
SYS_pipe	inc/syscall.h	7;"	d
SYS_read	inc/syscall.h	8;"	d
SYS_sbrk	inc/syscall.h	15;"	d
SYS_sleep	inc/syscall.h	16;"	d
SYS_unlink	inc/syscall.h	20;"	d
SYS_wait	inc/syscall.h	6;"	d
SYS_write	inc/syscall.h	18;"	d
TCCR	kern/lapic.c	33;"	d	file:
TDCR	kern/lapic.c	34;"	d	file:
TDCR_X1	kern/lapic.c	35;"	d	file:
TDCR_X1	obj/kern/kernel.asm	/^#define TDCR_X1 0x0000000B        \/\/ divide counts by 1$/;"	d
TICR	kern/lapic.c	32;"	d	file:
TIMER	kern/lapic.c	25;"	d	file:
TIMER_PERIODIC	kern/lapic.c	26;"	d	file:
TPR	kern/lapic.c	10;"	d	file:
TSSDESC64	kern/mmu.h	73;"	d
T_DEV	inc/stat.h	8;"	d
T_DIR	inc/stat.h	6;"	d
T_FILE	inc/stat.h	7;"	d
T_IRQ0	kern/trap.h	8;"	d
T_SYSCALL	kern/trap.h	6;"	d
T_SYSCALL	user/usys.S	/^#define T_SYSCALL 0x30$/;"	d
ULIBS	user/module.mk	/^ULIBS := \\$/;"	m
UNUSED	kern/proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UOBJS	/home/kim/xv6-x86_64/Makefile	/^UOBJS :=$/;"	m	language:Make
USER_CFLAGS	user/module.mk	/^USER_CFLAGS := $(CFLAGS) -m64 -fno-pic -nostdinc -I.$/;"	m
USER_DIR	user/module.mk	/^USER_DIR := user$/;"	m
USER_LDFLAGS	user/module.mk	/^USER_LDFLAGS := $(LDFLAGS) -T $(USER_LINKER_SCRIPT)$/;"	m
USER_LINKER_SCRIPT	user/module.mk	/^USER_LINKER_SCRIPT := $(USER_DIR)\/user.ld$/;"	m
USE_STD	kern/mkfs.c	10;"	d	file:
V2P	kern/memlayout.h	24;"	d
V2P_WO	kern/memlayout.h	29;"	d
VER	kern/lapic.c	9;"	d	file:
XV6_IMG	/home/kim/xv6-x86_64/Makefile	/^XV6_IMG := $(OBJDIR)\/xv6.img$/;"	m	language:Make
XV6_X86_64_BUF_H	kern/buf.h	2;"	d
XV6_X86_64_DEFS_H	kern/defs.h	2;"	d
XV6_X86_64_DIR_H	inc/dir.h	2;"	d
XV6_X86_64_ELF_H	boot/elf.h	2;"	d
XV6_X86_64_ELF_H	kern/elf.h	2;"	d
XV6_X86_64_FCNTL_H	inc/fcntl.h	2;"	d
XV6_X86_64_FILE_H	kern/file.h	2;"	d
XV6_X86_64_FS_H	kern/fs.h	2;"	d
XV6_X86_64_KBD_H	kern/kbd.h	2;"	d
XV6_X86_64_KCLOCK_H	kern/kclock.h	2;"	d
XV6_X86_64_MEMLAYOUT_H	kern/memlayout.h	2;"	d
XV6_X86_64_MMU_H	kern/mmu.h	2;"	d
XV6_X86_64_MP_H	kern/mp.h	2;"	d
XV6_X86_64_PARAM_H	kern/param.h	2;"	d
XV6_X86_64_PROC_H	kern/proc.h	2;"	d
XV6_X86_64_SLEEPLOCK_H	kern/sleeplock.h	2;"	d
XV6_X86_64_SPINLOCK_H	kern/spinlock.h	2;"	d
XV6_X86_64_STAT_H	inc/stat.h	2;"	d
XV6_X86_64_STDARG_H	inc/stdarg.h	2;"	d
XV6_X86_64_STRING_H	inc/string.h	2;"	d
XV6_X86_64_SYSCALL_H	inc/syscall.h	2;"	d
XV6_X86_64_TRAP_H	kern/trap.h	2;"	d
XV6_X86_64_TYPES_H	boot/types.h	2;"	d
XV6_X86_64_TYPES_H	inc/types.h	2;"	d
XV6_X86_64_X86_H	boot/x86.h	2;"	d
XV6_X86_64_X86_H	kern/x86.h	2;"	d
XV6_x86_64_USER_H	user/user.h	2;"	d
ZOMBIE	kern/proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
_bzero	kern/fs.c	/^static void _bzero(int dev, int bno) {$/;"	f	file:
_log	kern/log.c	/^static struct log _log;$/;"	v	typeref:struct:log	file:
_start	kern/entry.S	/^_start = V2P_WO(entry)$/;"	d
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/fstest.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ln.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/mkdir.asm	/^_start:$/;"	l
_start	obj/user/preemptiontest1.asm	/^_start:$/;"	l
_start	obj/user/preemptiontest2.asm	/^_start:$/;"	l
_start	obj/user/rm.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/vatest.asm	/^_start:$/;"	l
_start	obj/user/wc.asm	/^_start:$/;"	l
_start	user/entry.S	/^_start:$/;"	l
a	obj/kern/initcode.asm	/^   a:	48 8d 05 1f 00 00 00 	lea    0x1f(%rip),%rax        # 30 <argv>$/;"	l
a	obj/kern/kernel.asm	/^    a = (uint *)bp->data;$/;"	d
a	obj/kern/kernel.asm	/^  a = (char *)PGROUNDDOWN((uintptr_t)va);$/;"	d
a	obj/kern/kernel.asm	/^  a = PGROUNDUP(newsz);$/;"	d
a	obj/kern/kernel.asm	/^  a = PGROUNDUP(oldsz);$/;"	d
a	obj/user/cat.asm	/^   a:	53                   	push   %rbx$/;"	l
a	obj/user/fstest.asm	/^   a:	53                   	push   %rbx$/;"	l
a	obj/user/ls.asm	/^   a:	53                   	push   %rbx$/;"	l
a	obj/user/mkdir.asm	/^   a:	41 54                	push   %r12$/;"	l
a	obj/user/preemptiontest1.asm	/^   a:	41 54                	push   %r12$/;"	l
a	obj/user/rm.asm	/^   a:	41 54                	push   %r12$/;"	l
a	obj/user/sh.asm	/^       a:	53                   	push   %rbx$/;"	l
a	obj/user/vatest.asm	/^   a:	41 55                	push   %r13$/;"	l
a	obj/user/wc.asm	/^   a:	41 56                	push   %r14$/;"	l
a00	obj/user/ls.asm	/^ a00:	75 ef                	jne    9f1 <memmove+0x16>$/;"	l
a01	obj/user/fstest.asm	/^ a01:	eb f0                	jmp    9f3 <stat+0x32>$/;"	l
a02	obj/user/ls.asm	/^ a02:	c3                   	retq   $/;"	l
a02	obj/user/sh.asm	/^     a02:	48 39 da             	cmp    %rbx,%rdx$/;"	l
a03	obj/user/fstest.asm	/^ a03:	f3 0f 1e fa          	endbr64 $/;"	l
a03	obj/user/ls.asm	/^ a03:	c3                   	retq   $/;"	l
a04	obj/user/ls.asm	/^ a04:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx$/;"	l
a05	obj/user/sh.asm	/^     a05:	74 1e                	je     a25 <parsecmd+0x65>$/;"	l
a07	obj/user/fstest.asm	/^ a07:	48 8d 4f f0          	lea    -0x10(%rdi),%rcx$/;"	l
a07	obj/user/sh.asm	/^     a07:	be e2 13 00 00       	mov    $0x13e2,%esi$/;"	l
a08	obj/user/ls.asm	/^ a08:	48 39 cf             	cmp    %rcx,%rdi$/;"	l
a0b	obj/user/fstest.asm	/^ a0b:	48 8b 05 ee 05 00 00 	mov    0x5ee(%rip),%rax        # 1000 <freep>$/;"	l
a0b	obj/user/ls.asm	/^ a0b:	73 da                	jae    9e7 <memmove+0xc>$/;"	l
a0c	obj/user/sh.asm	/^     a0c:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
a0d	obj/user/ls.asm	/^ a0d:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx$/;"	l
a1	obj/user/cat.asm	/^  a1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
a1	obj/user/ln.asm	/^  a1:	c3                   	retq   $/;"	l
a1	obj/user/vatest.asm	/^  a1:	44 89 f1             	mov    %r14d,%ecx$/;"	l
a11	obj/user/ls.asm	/^ a11:	48 85 d2             	test   %rdx,%rdx$/;"	l
a11	obj/user/sh.asm	/^     a11:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a12	obj/user/fstest.asm	/^ a12:	eb 10                	jmp    a24 <free+0x21>$/;"	l
a14	obj/user/fstest.asm	/^ a14:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a14	obj/user/ls.asm	/^ a14:	74 ec                	je     a02 <memmove+0x27>$/;"	l
a16	obj/user/ls.asm	/^ a16:	0f b6 14 0e          	movzbl (%rsi,%rcx,1),%edx$/;"	l
a16	obj/user/sh.asm	/^     a16:	e8 04 05 00 00       	callq  f1f <dprintf>$/;"	l
a17	obj/user/fstest.asm	/^ a17:	48 39 c2             	cmp    %rax,%rdx$/;"	l
a1a	obj/user/fstest.asm	/^ a1a:	77 05                	ja     a21 <free+0x1e>$/;"	l
a1a	obj/user/ls.asm	/^ a1a:	88 14 08             	mov    %dl,(%rax,%rcx,1)$/;"	l
a1b	obj/user/sh.asm	/^     a1b:	bf a6 13 00 00       	mov    $0x13a6,%edi$/;"	l
a1c	obj/user/fstest.asm	/^ a1c:	48 39 ca             	cmp    %rcx,%rdx$/;"	l
a1d	obj/user/ls.asm	/^ a1d:	48 83 e9 01          	sub    $0x1,%rcx$/;"	l
a1f	obj/user/fstest.asm	/^ a1f:	77 15                	ja     a36 <free+0x33>$/;"	l
a2	obj/user/echo.asm	/^  a2:	5b                   	pop    %rbx$/;"	l
a2	obj/user/init.asm	/^  a2:	e8 31 00 00 00       	callq  d8 <exit>$/;"	l
a2	obj/user/ln.asm	/^  a2:	48 c7 c0 06 00 00 00 	mov    $0x6,%rax$/;"	l
a2	obj/user/sh.asm	/^      a2:	eb eb                	jmp    8f <fork1+0x19>$/;"	l
a2	obj/user/wc.asm	/^  a2:	85 c0                	test   %eax,%eax$/;"	l
a20	obj/user/sh.asm	/^     a20:	e8 2b f6 ff ff       	callq  50 <panic>$/;"	l
a21	obj/user/fstest.asm	/^ a21:	48 89 d0             	mov    %rdx,%rax$/;"	l
a21	obj/user/ls.asm	/^ a21:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx$/;"	l
a24	obj/user/fstest.asm	/^ a24:	48 39 c8             	cmp    %rcx,%rax$/;"	l
a25	obj/user/ls.asm	/^ a25:	75 ef                	jne    a16 <memmove+0x3b>$/;"	l
a25	obj/user/sh.asm	/^     a25:	4c 89 e7             	mov    %r12,%rdi$/;"	l
a27	obj/user/fstest.asm	/^ a27:	73 eb                	jae    a14 <free+0x11>$/;"	l
a27	obj/user/ls.asm	/^ a27:	c3                   	retq   $/;"	l
a28	obj/user/ls.asm	/^ a28:	f3 0f 1e fa          	endbr64 $/;"	l
a28	obj/user/sh.asm	/^     a28:	e8 03 ff ff ff       	callq  930 <nulterminate>$/;"	l
a29	obj/user/fstest.asm	/^ a29:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a2c	obj/user/fstest.asm	/^ a2c:	48 39 ca             	cmp    %rcx,%rdx$/;"	l
a2c	obj/user/ls.asm	/^ a2c:	48 85 d2             	test   %rdx,%rdx$/;"	l
a2d	obj/user/sh.asm	/^     a2d:	4c 89 e0             	mov    %r12,%rax$/;"	l
a2f	obj/user/fstest.asm	/^ a2f:	77 05                	ja     a36 <free+0x33>$/;"	l
a2f	obj/user/ls.asm	/^ a2f:	74 1f                	je     a50 <strncmp+0x28>$/;"	l
a3	obj/user/echo.asm	/^  a3:	41 5c                	pop    %r12$/;"	l
a3	obj/user/fstest.asm	/^  a3:	eb d9                	jmp    7e <main+0x7e>$/;"	l
a3	obj/user/ls.asm	/^  a3:	49 89 fc             	mov    %rdi,%r12$/;"	l
a3	obj/user/preemptiontest1.asm	/^  a3:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
a30	obj/user/sh.asm	/^     a30:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
a31	obj/user/fstest.asm	/^ a31:	48 39 c2             	cmp    %rax,%rdx$/;"	l
a31	obj/user/ls.asm	/^ a31:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
a34	obj/user/fstest.asm	/^ a34:	77 eb                	ja     a21 <free+0x1e>$/;"	l
a34	obj/user/ls.asm	/^ a34:	84 c0                	test   %al,%al$/;"	l
a34	obj/user/sh.asm	/^     a34:	5b                   	pop    %rbx$/;"	l
a35	obj/user/sh.asm	/^     a35:	41 5c                	pop    %r12$/;"	l
a36	obj/user/fstest.asm	/^ a36:	4c 8b 47 f8          	mov    -0x8(%rdi),%r8$/;"	l
a36	obj/user/ls.asm	/^ a36:	74 1e                	je     a56 <strncmp+0x2e>$/;"	l
a37	obj/user/sh.asm	/^     a37:	5d                   	pop    %rbp$/;"	l
a38	obj/user/ls.asm	/^ a38:	3a 06                	cmp    (%rsi),%al$/;"	l
a38	obj/user/sh.asm	/^     a38:	c3                   	retq   $/;"	l
a39	obj/user/sh.asm	/^     a39:	f3 0f 1e fa          	endbr64 $/;"	l
a3a	obj/user/fstest.asm	/^ a3a:	48 8b 30             	mov    (%rax),%rsi$/;"	l
a3a	obj/user/ls.asm	/^ a3a:	75 1a                	jne    a56 <strncmp+0x2e>$/;"	l
a3c	obj/user/ls.asm	/^ a3c:	48 83 c7 01          	add    $0x1,%rdi$/;"	l
a3d	obj/user/fstest.asm	/^ a3d:	4c 89 c2             	mov    %r8,%rdx$/;"	l
a3d	obj/user/sh.asm	/^     a3d:	55                   	push   %rbp$/;"	l
a3e	obj/user/sh.asm	/^     a3e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a4	obj/user/preemptiontest2.asm	/^  a4:	cd 30                	int    $0x30$/;"	l
a4	obj/user/sh.asm	/^      a4:	f3 0f 1e fa          	endbr64 $/;"	l
a4	obj/user/vatest.asm	/^  a4:	4c 89 ea             	mov    %r13,%rdx$/;"	l
a4	obj/user/wc.asm	/^  a4:	7e 0b                	jle    b1 <wc+0xb1>$/;"	l
a40	obj/user/fstest.asm	/^ a40:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
a40	obj/user/ls.asm	/^ a40:	48 83 c6 01          	add    $0x1,%rsi$/;"	l
a41	obj/user/sh.asm	/^     a41:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
a44	obj/user/fstest.asm	/^ a44:	48 01 ca             	add    %rcx,%rdx$/;"	l
a44	obj/user/ls.asm	/^ a44:	48 83 ea 01          	sub    $0x1,%rdx$/;"	l
a46	obj/user/sh.asm	/^     a46:	bf f1 13 00 00       	mov    $0x13f1,%edi$/;"	l
a47	obj/user/fstest.asm	/^ a47:	48 39 d6             	cmp    %rdx,%rsi$/;"	l
a48	obj/user/ls.asm	/^ a48:	75 e7                	jne    a31 <strncmp+0x9>$/;"	l
a4a	obj/user/fstest.asm	/^ a4a:	74 22                	je     a6e <free+0x6b>$/;"	l
a4a	obj/user/ls.asm	/^ a4a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a4b	obj/user/sh.asm	/^     a4b:	e8 2d 01 00 00       	callq  b7d <open>$/;"	l
a4c	obj/user/fstest.asm	/^ a4c:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)$/;"	l
a4f	obj/user/ls.asm	/^ a4f:	c3                   	retq   $/;"	l
a5	obj/user/echo.asm	/^  a5:	5d                   	pop    %rbp$/;"	l
a5	obj/user/fstest.asm	/^  a5:	be 58 0d 00 00       	mov    $0xd58,%esi$/;"	l
a5	obj/user/mkdir.asm	/^  a5:	cd 30                	int    $0x30$/;"	l
a5	obj/user/rm.asm	/^  a5:	cd 30                	int    $0x30$/;"	l
a50	obj/user/fstest.asm	/^ a50:	48 8b 70 08          	mov    0x8(%rax),%rsi$/;"	l
a50	obj/user/ls.asm	/^ a50:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a50	obj/user/sh.asm	/^     a50:	85 c0                	test   %eax,%eax$/;"	l
a52	obj/user/sh.asm	/^     a52:	78 1c                	js     a70 <main+0x37>$/;"	l
a54	obj/user/fstest.asm	/^ a54:	48 89 f2             	mov    %rsi,%rdx$/;"	l
a54	obj/user/sh.asm	/^     a54:	83 f8 02             	cmp    $0x2,%eax$/;"	l
a55	obj/user/ls.asm	/^ a55:	c3                   	retq   $/;"	l
a56	obj/user/ls.asm	/^ a56:	48 85 d2             	test   %rdx,%rdx$/;"	l
a57	obj/user/fstest.asm	/^ a57:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
a57	obj/user/sh.asm	/^     a57:	7e e8                	jle    a41 <main+0x8>$/;"	l
a59	obj/user/ls.asm	/^ a59:	74 09                	je     a64 <strncmp+0x3c>$/;"	l
a59	obj/user/sh.asm	/^     a59:	89 c7                	mov    %eax,%edi$/;"	l
a5b	obj/user/fstest.asm	/^ a5b:	48 01 c2             	add    %rax,%rdx$/;"	l
a5b	obj/user/ls.asm	/^ a5b:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
a5b	obj/user/sh.asm	/^     a5b:	e8 59 01 00 00       	callq  bb9 <close>$/;"	l
a5e	obj/user/fstest.asm	/^ a5e:	48 39 d1             	cmp    %rdx,%rcx$/;"	l
a5e	obj/user/ls.asm	/^ a5e:	0f b6 16             	movzbl (%rsi),%edx$/;"	l
a6	obj/user/cat.asm	/^  a6:	e8 55 ff ff ff       	callq  0 <cat>$/;"	l
a6	obj/user/echo.asm	/^  a6:	c3                   	retq   $/;"	l
a6	obj/user/ls.asm	/^  a6:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
a6	obj/user/preemptiontest2.asm	/^  a6:	c3                   	retq   $/;"	l
a6	obj/user/wc.asm	/^  a6:	44 8d 68 ff          	lea    -0x1(%rax),%r13d$/;"	l
a60	obj/user/sh.asm	/^     a60:	eb 0e                	jmp    a70 <main+0x37>$/;"	l
a61	obj/user/fstest.asm	/^ a61:	74 1f                	je     a82 <free+0x7f>$/;"	l
a61	obj/user/ls.asm	/^ a61:	29 d0                	sub    %edx,%eax$/;"	l
a62	obj/user/sh.asm	/^     a62:	e8 0f f6 ff ff       	callq  76 <fork1>$/;"	l
a63	obj/user/fstest.asm	/^ a63:	48 89 08             	mov    %rcx,(%rax)$/;"	l
a63	obj/user/ls.asm	/^ a63:	c3                   	retq   $/;"	l
a64	obj/user/ls.asm	/^ a64:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a66	obj/user/fstest.asm	/^ a66:	48 89 05 93 05 00 00 	mov    %rax,0x593(%rip)        # 1000 <freep>$/;"	l
a67	obj/user/sh.asm	/^     a67:	85 c0                	test   %eax,%eax$/;"	l
a69	obj/user/ls.asm	/^ a69:	c3                   	retq   $/;"	l
a69	obj/user/sh.asm	/^     a69:	74 6d                	je     ad8 <main+0x9f>$/;"	l
a6a	obj/user/ls.asm	/^ a6a:	f3 0f 1e fa          	endbr64 $/;"	l
a6b	obj/user/sh.asm	/^     a6b:	e8 9f 00 00 00       	callq  b0f <wait>$/;"	l
a6d	obj/user/fstest.asm	/^ a6d:	c3                   	retq   $/;"	l
a6e	obj/user/fstest.asm	/^ a6e:	4c 03 46 08          	add    0x8(%rsi),%r8$/;"	l
a6e	obj/user/ls.asm	/^ a6e:	48 89 f8             	mov    %rdi,%rax$/;"	l
a7	obj/user/echo.asm	/^  a7:	48 8b 16             	mov    (%rsi),%rdx$/;"	l
a7	obj/user/init.asm	/^  a7:	eb a7                	jmp    50 <main+0x50>$/;"	l
a7	obj/user/mkdir.asm	/^  a7:	c3                   	retq   $/;"	l
a7	obj/user/preemptiontest1.asm	/^  a7:	5b                   	pop    %rbx$/;"	l
a7	obj/user/preemptiontest2.asm	/^  a7:	48 c7 c0 0a 00 00 00 	mov    $0xa,%rax$/;"	l
a7	obj/user/rm.asm	/^  a7:	c3                   	retq   $/;"	l
a7	obj/user/vatest.asm	/^  a7:	44 89 e6             	mov    %r12d,%esi$/;"	l
a70	obj/user/sh.asm	/^     a70:	be 64 00 00 00       	mov    $0x64,%esi$/;"	l
a71	obj/user/ls.asm	/^ a71:	4c 8d 14 16          	lea    (%rsi,%rdx,1),%r10$/;"	l
a72	obj/user/fstest.asm	/^ a72:	4c 89 47 f8          	mov    %r8,-0x8(%rdi)$/;"	l
a75	obj/user/ls.asm	/^ a75:	48 89 f9             	mov    %rdi,%rcx$/;"	l
a75	obj/user/sh.asm	/^     a75:	bf 20 20 00 00       	mov    $0x2020,%edi$/;"	l
a76	obj/user/fstest.asm	/^ a76:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a78	obj/user/ls.asm	/^ a78:	49 89 d1             	mov    %rdx,%r9$/;"	l
a79	obj/user/fstest.asm	/^ a79:	48 8b 12             	mov    (%rdx),%rdx$/;"	l
a7a	obj/user/sh.asm	/^     a7a:	e8 81 f5 ff ff       	callq  0 <getcmd>$/;"	l
a7b	obj/user/ls.asm	/^ a7b:	48 83 ea 01          	sub    $0x1,%rdx$/;"	l
a7c	obj/user/fstest.asm	/^ a7c:	48 89 57 f0          	mov    %rdx,-0x10(%rdi)$/;"	l
a7f	obj/user/ls.asm	/^ a7f:	4c 39 d6             	cmp    %r10,%rsi$/;"	l
a7f	obj/user/sh.asm	/^     a7f:	85 c0                	test   %eax,%eax$/;"	l
a8	obj/user/mkdir.asm	/^  a8:	48 c7 c0 05 00 00 00 	mov    $0x5,%rax$/;"	l
a8	obj/user/preemptiontest1.asm	/^  a8:	41 5c                	pop    %r12$/;"	l
a8	obj/user/rm.asm	/^  a8:	48 c7 c0 05 00 00 00 	mov    $0x5,%rax$/;"	l
a8	obj/user/sh.asm	/^      a8:	55                   	push   %rbp$/;"	l
a80	obj/user/fstest.asm	/^ a80:	eb ce                	jmp    a50 <free+0x4d>$/;"	l
a81	obj/user/sh.asm	/^     a81:	78 6c                	js     aef <main+0xb6>$/;"	l
a82	obj/user/fstest.asm	/^ a82:	48 03 77 f8          	add    -0x8(%rdi),%rsi$/;"	l
a82	obj/user/ls.asm	/^ a82:	74 20                	je     aa4 <strncpy+0x3a>$/;"	l
a83	obj/user/sh.asm	/^     a83:	80 3d 96 15 00 00 63 	cmpb   $0x63,0x1596(%rip)        # 2020 <buf.1208>$/;"	l
a84	obj/user/ls.asm	/^ a84:	48 83 c6 01          	add    $0x1,%rsi$/;"	l
a86	obj/user/fstest.asm	/^ a86:	48 89 70 08          	mov    %rsi,0x8(%rax)$/;"	l
a88	obj/user/ls.asm	/^ a88:	48 83 c1 01          	add    $0x1,%rcx$/;"	l
a8a	obj/user/fstest.asm	/^ a8a:	48 8b 57 f0          	mov    -0x10(%rdi),%rdx$/;"	l
a8a	obj/user/sh.asm	/^     a8a:	75 d6                	jne    a62 <main+0x29>$/;"	l
a8c	obj/user/ls.asm	/^ a8c:	44 0f b6 46 ff       	movzbl -0x1(%rsi),%r8d$/;"	l
a8c	obj/user/sh.asm	/^     a8c:	80 3d 8e 15 00 00 64 	cmpb   $0x64,0x158e(%rip)        # 2021 <buf.1208+0x1>$/;"	l
a8e	obj/user/fstest.asm	/^ a8e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a9	obj/user/init.asm	/^  a9:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
a9	obj/user/ln.asm	/^  a9:	cd 30                	int    $0x30$/;"	l
a9	obj/user/sh.asm	/^      a9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a91	obj/user/fstest.asm	/^ a91:	eb d3                	jmp    a66 <free+0x63>$/;"	l
a91	obj/user/ls.asm	/^ a91:	44 88 41 ff          	mov    %r8b,-0x1(%rcx)$/;"	l
a93	obj/user/fstest.asm	/^ a93:	f3 0f 1e fa          	endbr64 $/;"	l
a93	obj/user/sh.asm	/^     a93:	75 cd                	jne    a62 <main+0x29>$/;"	l
a95	obj/user/ls.asm	/^ a95:	45 84 c0             	test   %r8b,%r8b$/;"	l
a95	obj/user/sh.asm	/^     a95:	80 3d 86 15 00 00 20 	cmpb   $0x20,0x1586(%rip)        # 2022 <buf.1208+0x2>$/;"	l
a97	obj/user/fstest.asm	/^ a97:	55                   	push   %rbp$/;"	l
a98	obj/user/fstest.asm	/^ a98:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a98	obj/user/ls.asm	/^ a98:	75 de                	jne    a78 <strncpy+0xe>$/;"	l
a9a	obj/user/ls.asm	/^ a9a:	49 83 e9 02          	sub    $0x2,%r9$/;"	l
a9b	obj/user/fstest.asm	/^ a9b:	41 55                	push   %r13$/;"	l
a9c	obj/user/sh.asm	/^     a9c:	75 c4                	jne    a62 <main+0x29>$/;"	l
a9d	obj/user/fstest.asm	/^ a9d:	41 54                	push   %r12$/;"	l
a9e	obj/user/ls.asm	/^ a9e:	48 85 d2             	test   %rdx,%rdx$/;"	l
a9e	obj/user/sh.asm	/^     a9e:	bf 20 20 00 00       	mov    $0x2020,%edi$/;"	l
a9f	obj/user/fstest.asm	/^ a9f:	53                   	push   %rbx$/;"	l
aa	obj/user/echo.asm	/^  aa:	be 77 07 00 00       	mov    $0x777,%esi$/;"	l
aa	obj/user/fstest.asm	/^  aa:	bf 65 0d 00 00       	mov    $0xd65,%edi$/;"	l
aa	obj/user/preemptiontest1.asm	/^  aa:	41 5d                	pop    %r13$/;"	l
aa	obj/user/vatest.asm	/^  aa:	48 89 df             	mov    %rbx,%rdi$/;"	l
aa	obj/user/wc.asm	/^  aa:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
aa0	obj/user/fstest.asm	/^ aa0:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
aa1	obj/user/ls.asm	/^ aa1:	75 05                	jne    aa8 <strncpy+0x3e>$/;"	l
aa3	obj/user/ls.asm	/^ aa3:	c3                   	retq   $/;"	l
aa3	obj/user/sh.asm	/^     aa3:	e8 5b 08 00 00       	callq  1303 <strlen>$/;"	l
aa4	obj/user/fstest.asm	/^ aa4:	48 8d 5f 0f          	lea    0xf(%rdi),%rbx$/;"	l
aa4	obj/user/ls.asm	/^ aa4:	49 83 e9 02          	sub    $0x2,%r9$/;"	l
aa8	obj/user/fstest.asm	/^ aa8:	48 c1 eb 04          	shr    $0x4,%rbx$/;"	l
aa8	obj/user/ls.asm	/^ aa8:	4a 8d 54 09 01       	lea    0x1(%rcx,%r9,1),%rdx$/;"	l
aa8	obj/user/sh.asm	/^     aa8:	c6 80 1f 20 00 00 00 	movb   $0x0,0x201f(%rax)$/;"	l
aac	obj/user/fstest.asm	/^ aac:	48 83 c3 01          	add    $0x1,%rbx$/;"	l
aad	obj/user/ls.asm	/^ aad:	48 83 c1 01          	add    $0x1,%rcx$/;"	l
aaf	obj/user/sh.asm	/^     aaf:	bf 23 20 00 00       	mov    $0x2023,%edi$/;"	l
ab	obj/user/cat.asm	/^  ab:	e8 69 00 00 00       	callq  119 <exit>$/;"	l
ab	obj/user/ln.asm	/^  ab:	c3                   	retq   $/;"	l
ab	obj/user/ls.asm	/^  ab:	e8 b6 02 00 00       	callq  366 <open>$/;"	l
ab0	obj/user/fstest.asm	/^ ab0:	48 8b 15 49 05 00 00 	mov    0x549(%rip),%rdx        # 1000 <freep>$/;"	l
ab1	obj/user/ls.asm	/^ ab1:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)$/;"	l
ab4	obj/user/sh.asm	/^     ab4:	e8 92 00 00 00       	callq  b4b <chdir>$/;"	l
ab5	obj/user/ls.asm	/^ ab5:	48 39 d1             	cmp    %rdx,%rcx$/;"	l
ab7	obj/user/fstest.asm	/^ ab7:	48 85 d2             	test   %rdx,%rdx$/;"	l
ab8	obj/user/ls.asm	/^ ab8:	75 f3                	jne    aad <strncpy+0x43>$/;"	l
ab9	obj/user/sh.asm	/^     ab9:	85 c0                	test   %eax,%eax$/;"	l
aba	obj/user/fstest.asm	/^ aba:	74 29                	je     ae5 <malloc+0x52>$/;"	l
aba	obj/user/ls.asm	/^ aba:	c3                   	retq   $/;"	l
abb	obj/user/ls.asm	/^ abb:	f3 0f 1e fa          	endbr64 $/;"	l
abb	obj/user/sh.asm	/^     abb:	79 b3                	jns    a70 <main+0x37>$/;"	l
abc	obj/user/fstest.asm	/^ abc:	48 8b 02             	mov    (%rdx),%rax$/;"	l
abd	obj/user/sh.asm	/^     abd:	ba 23 20 00 00       	mov    $0x2023,%edx$/;"	l
abf	obj/user/fstest.asm	/^ abf:	48 8b 48 08          	mov    0x8(%rax),%rcx$/;"	l
abf	obj/user/ls.asm	/^ abf:	48 89 f8             	mov    %rdi,%rax$/;"	l
ac	obj/user/ln.asm	/^  ac:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax$/;"	l
ac	obj/user/preemptiontest1.asm	/^  ac:	5d                   	pop    %rbp$/;"	l
ac	obj/user/sh.asm	/^      ac:	53                   	push   %rbx$/;"	l
ac2	obj/user/ls.asm	/^ ac2:	85 d2                	test   %edx,%edx$/;"	l
ac2	obj/user/sh.asm	/^     ac2:	be f9 13 00 00       	mov    $0x13f9,%esi$/;"	l
ac3	obj/user/fstest.asm	/^ ac3:	48 39 cb             	cmp    %rcx,%rbx$/;"	l
ac4	obj/user/ls.asm	/^ ac4:	7e 25                	jle    aeb <safestrcpy+0x30>$/;"	l
ac6	obj/user/fstest.asm	/^ ac6:	76 45                	jbe    b0d <malloc+0x7a>$/;"	l
ac6	obj/user/ls.asm	/^ ac6:	44 8d 42 ff          	lea    -0x1(%rdx),%r8d$/;"	l
ac7	obj/user/sh.asm	/^     ac7:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ac8	obj/user/fstest.asm	/^ ac8:	48 81 fb 00 10 00 00 	cmp    $0x1000,%rbx$/;"	l
aca	obj/user/ls.asm	/^ aca:	49 01 f0             	add    %rsi,%r8$/;"	l
acc	obj/user/sh.asm	/^     acc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
acd	obj/user/ls.asm	/^ acd:	48 89 fa             	mov    %rdi,%rdx$/;"	l
acf	obj/user/fstest.asm	/^ acf:	41 bc 00 10 00 00    	mov    $0x1000,%r12d$/;"	l
acquire	kern/spinlock.c	/^void acquire(struct spinlock *lk) {$/;"	f
acquiresleep	kern/sleeplock.c	/^void acquiresleep(struct sleeplock *lk) {$/;"	f
ad	obj/user/preemptiontest1.asm	/^  ad:	c3                   	retq   $/;"	l
ad	obj/user/sh.asm	/^      ad:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ad	obj/user/vatest.asm	/^  ad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ad0	obj/user/ls.asm	/^ ad0:	4c 39 c6             	cmp    %r8,%rsi$/;"	l
ad1	obj/user/sh.asm	/^     ad1:	e8 49 04 00 00       	callq  f1f <dprintf>$/;"	l
ad3	obj/user/ls.asm	/^ ad3:	74 13                	je     ae8 <safestrcpy+0x2d>$/;"	l
ad5	obj/user/fstest.asm	/^ ad5:	4c 0f 43 e3          	cmovae %rbx,%r12$/;"	l
ad5	obj/user/ls.asm	/^ ad5:	48 83 c6 01          	add    $0x1,%rsi$/;"	l
ad6	obj/user/sh.asm	/^     ad6:	eb 98                	jmp    a70 <main+0x37>$/;"	l
ad8	obj/user/sh.asm	/^     ad8:	bf 20 20 00 00       	mov    $0x2020,%edi$/;"	l
ad9	obj/user/fstest.asm	/^ ad9:	4d 89 e5             	mov    %r12,%r13$/;"	l
ad9	obj/user/ls.asm	/^ ad9:	48 83 c2 01          	add    $0x1,%rdx$/;"	l
adc	obj/user/fstest.asm	/^ adc:	49 c1 e5 04          	shl    $0x4,%r13$/;"	l
add	obj/user/ls.asm	/^ add:	0f b6 4e ff          	movzbl -0x1(%rsi),%ecx$/;"	l
add	obj/user/sh.asm	/^     add:	e8 de fe ff ff       	callq  9c0 <parsecmd>$/;"	l
addr	kern/mp.h	/^  uint32_t addr;   \/\/ I\/O APIC address$/;"	m	struct:mpioapic
addr	obj/kern/kernel.asm	/^  addr = (uint8_t *)P2V(a);$/;"	d
addr	obj/kern/kernel.asm	/^  addr = myproc()->sz;$/;"	d
addr	obj/user/fstest.asm	/^  addr = sbrk(0);$/;"	d
addrs	kern/file.h	/^  uint addrs[NDIRECT + 1];$/;"	m	struct:inode
addrs	kern/fs.h	/^  uint addrs[NDIRECT + 1]; \/\/ Data block addresses$/;"	m	struct:dinode
ae	obj/user/init.asm	/^  ae:	bf ae 07 00 00       	mov    $0x7ae,%edi$/;"	l
ae	obj/user/preemptiontest1.asm	/^  ae:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax$/;"	l
ae	obj/user/preemptiontest2.asm	/^  ae:	cd 30                	int    $0x30$/;"	l
ae0	obj/user/fstest.asm	/^ ae0:	e9 85 00 00 00       	jmpq   b6a <malloc+0xd7>$/;"	l
ae1	obj/user/ls.asm	/^ ae1:	88 4a ff             	mov    %cl,-0x1(%rdx)$/;"	l
ae2	obj/user/sh.asm	/^     ae2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ae4	obj/user/ls.asm	/^ ae4:	84 c9                	test   %cl,%cl$/;"	l
ae5	obj/user/fstest.asm	/^ ae5:	48 c7 05 10 05 00 00 	movq   $0x1010,0x510(%rip)        # 1000 <freep>$/;"	l
ae5	obj/user/sh.asm	/^     ae5:	e8 ba f5 ff ff       	callq  a4 <runcmd>$/;"	l
ae6	obj/user/ls.asm	/^ ae6:	75 e8                	jne    ad0 <safestrcpy+0x15>$/;"	l
ae8	obj/user/ls.asm	/^ ae8:	c6 02 00             	movb   $0x0,(%rdx)$/;"	l
aea	obj/user/sh.asm	/^     aea:	e9 7c ff ff ff       	jmpq   a6b <main+0x32>$/;"	l
aeb	obj/user/ls.asm	/^ aeb:	c3                   	retq   $/;"	l
aec	obj/user/fstest.asm	/^ aec:	10 10 00 00 $/;"	l
aec	obj/user/ls.asm	/^ aec:	f3 0f 1e fa          	endbr64 $/;"	l
aef	obj/user/sh.asm	/^     aef:	e8 11 00 00 00       	callq  b05 <exit>$/;"	l
af	obj/user/echo.asm	/^  af:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
af	obj/user/fstest.asm	/^  af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
af	obj/user/mkdir.asm	/^  af:	cd 30                	int    $0x30$/;"	l
af	obj/user/rm.asm	/^  af:	cd 30                	int    $0x30$/;"	l
af	obj/user/wc.asm	/^  af:	eb ab                	jmp    5c <wc+0x5c>$/;"	l
af0	obj/user/fstest.asm	/^ af0:	48 c7 05 15 05 00 00 	movq   $0x1010,0x515(%rip)        # 1010 <base>$/;"	l
af0	obj/user/ls.asm	/^ af0:	80 3f 00             	cmpb   $0x0,(%rdi)$/;"	l
af3	obj/user/ls.asm	/^ af3:	74 10                	je     b05 <strlen+0x19>$/;"	l
af4	obj/user/sh.asm	/^     af4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
af5	obj/user/ls.asm	/^ af5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
af7	obj/user/fstest.asm	/^ af7:	10 10 00 00 $/;"	l
af9	obj/user/sh.asm	/^     af9:	5d                   	pop    %rbp$/;"	l
afa	obj/user/ls.asm	/^ afa:	48 83 c0 01          	add    $0x1,%rax$/;"	l
afa	obj/user/sh.asm	/^     afa:	c3                   	retq   $/;"	l
afb	obj/user/fstest.asm	/^ afb:	48 c7 05 12 05 00 00 	movq   $0x0,0x512(%rip)        # 1018 <base+0x8>$/;"	l
afb	obj/user/sh.asm	/^     afb:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax$/;"	l
afe	obj/user/ls.asm	/^ afe:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)$/;"	l
align	boot/elf.h	/^  uint64_t align;$/;"	m	struct:proghdr
align	kern/elf.h	/^  uint64_t align;$/;"	m	struct:proghdr
allocproc	kern/proc.c	/^static struct proc *allocproc(void) {$/;"	f	file:
allocuvm	kern/vm.c	/^int allocuvm(pte_t *pgdir, size_t oldsz, size_t newsz) {$/;"	f
alltraps	kern/trapasm.S	/^alltraps:$/;"	l
alltraps	obj/kern/kernel.asm	/^alltraps:$/;"	l
apicid	kern/mp.h	/^  uint8_t apicid;    \/\/ local APIC id$/;"	m	struct:mpproc
apicid	kern/proc.h	/^  uchar apicid;              \/\/ Local APIC ID$/;"	m	struct:cpu
apicno	kern/mp.h	/^  uint8_t apicno;  \/\/ I\/O APIC id$/;"	m	struct:mpioapic
arg	kern/syscall.c	/^int arg(int n, uint64_t *ip) {$/;"	f
argc	obj/user/sh.asm	/^  argc = 0;$/;"	d
argfd	kern/sysfile.c	/^static int argfd(int n, int *pfd, struct file **pf) {$/;"	f	file:
argint	kern/syscall.c	/^int argint(int n, int *ip) {$/;"	f
argptr	kern/syscall.c	/^int argptr(int n, char **pp, int size) {$/;"	f
args	kern/mmu.h	/^  uint32_t args : 2;       \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
argstr	kern/syscall.c	/^int argstr(int n, char **pp) {$/;"	f
argv	kern/initcode.S	/^argv:$/;"	l
argv	user/init.c	/^char *argv[] = {"sh", 0};$/;"	v
argv	user/sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
avl	kern/mmu.h	/^  uint avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:segdesc
avl	kern/mmu.h	/^  uint32_t avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:tssdesc
b	obj/kern/kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	obj/user/cat.asm	/^   b:	41 89 fc             	mov    %edi,%r12d$/;"	l
b	obj/user/fstest.asm	/^   b:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp$/;"	l
b	obj/user/ls.asm	/^   b:	48 89 fb             	mov    %rdi,%rbx$/;"	l
b	obj/user/sh.asm	/^       b:	48 89 fb             	mov    %rdi,%rbx$/;"	l
b0	obj/user/cat.asm	/^  b0:	e8 64 00 00 00       	callq  119 <exit>$/;"	l
b0	obj/user/ls.asm	/^  b0:	85 c0                	test   %eax,%eax$/;"	l
b0	obj/user/preemptiontest2.asm	/^  b0:	c3                   	retq   $/;"	l
b02	obj/user/fstest.asm	/^ b02:	00 00 00 00 $/;"	l
b02	obj/user/ls.asm	/^ b02:	75 f6                	jne    afa <strlen+0xe>$/;"	l
b02	obj/user/sh.asm	/^     b02:	cd 30                	int    $0x30$/;"	l
b04	obj/user/ls.asm	/^ b04:	c3                   	retq   $/;"	l
b04	obj/user/sh.asm	/^     b04:	c3                   	retq   $/;"	l
b05	obj/user/ls.asm	/^ b05:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b05	obj/user/sh.asm	/^     b05:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax$/;"	l
b06	obj/user/fstest.asm	/^ b06:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
b0a	obj/user/ls.asm	/^ b0a:	c3                   	retq   $/;"	l
b0b	obj/user/fstest.asm	/^ b0b:	eb bb                	jmp    ac8 <malloc+0x35>$/;"	l
b0b	obj/user/ls.asm	/^ b0b:	f3 0f 1e fa          	endbr64 $/;"	l
b0c	obj/user/sh.asm	/^     b0c:	cd 30                	int    $0x30$/;"	l
b0d	obj/user/fstest.asm	/^ b0d:	48 39 cb             	cmp    %rcx,%rbx$/;"	l
b0e	obj/user/sh.asm	/^     b0e:	c3                   	retq   $/;"	l
b0f	obj/user/ls.asm	/^ b0f:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
b0f	obj/user/sh.asm	/^     b0f:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax$/;"	l
b1	obj/user/mkdir.asm	/^  b1:	c3                   	retq   $/;"	l
b1	obj/user/preemptiontest2.asm	/^  b1:	48 c7 c0 0b 00 00 00 	mov    $0xb,%rax$/;"	l
b1	obj/user/rm.asm	/^  b1:	c3                   	retq   $/;"	l
b1	obj/user/sh.asm	/^      b1:	48 89 fb             	mov    %rdi,%rbx$/;"	l
b1	obj/user/wc.asm	/^  b1:	85 c0                	test   %eax,%eax$/;"	l
b10	obj/user/fstest.asm	/^ b10:	74 2b                	je     b3d <malloc+0xaa>$/;"	l
b12	obj/user/fstest.asm	/^ b12:	48 29 d9             	sub    %rbx,%rcx$/;"	l
b12	obj/user/ls.asm	/^ b12:	84 c0                	test   %al,%al$/;"	l
b14	obj/user/ls.asm	/^ b14:	74 16                	je     b2c <strchr+0x21>$/;"	l
b15	obj/user/fstest.asm	/^ b15:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
b16	obj/user/ls.asm	/^ b16:	40 38 f0             	cmp    %sil,%al$/;"	l
b16	obj/user/sh.asm	/^     b16:	cd 30                	int    $0x30$/;"	l
b18	obj/user/sh.asm	/^     b18:	c3                   	retq   $/;"	l
b19	obj/user/fstest.asm	/^ b19:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
b19	obj/user/ls.asm	/^ b19:	74 17                	je     b32 <strchr+0x27>$/;"	l
b19	obj/user/sh.asm	/^     b19:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax$/;"	l
b1b	obj/user/ls.asm	/^ b1b:	48 83 c7 01          	add    $0x1,%rdi$/;"	l
b1d	obj/user/fstest.asm	/^ b1d:	48 01 c8             	add    %rcx,%rax$/;"	l
b1f	obj/user/ls.asm	/^ b1f:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
b2	obj/user/ls.asm	/^  b2:	0f 88 80 00 00 00    	js     138 <ls+0xad>$/;"	l
b2	obj/user/mkdir.asm	/^  b2:	48 c7 c0 06 00 00 00 	mov    $0x6,%rax$/;"	l
b2	obj/user/rm.asm	/^  b2:	48 c7 c0 06 00 00 00 	mov    $0x6,%rax$/;"	l
b2	obj/user/vatest.asm	/^  b2:	e8 33 04 00 00       	callq  4ea <printf>$/;"	l
b20	obj/user/fstest.asm	/^ b20:	48 89 58 08          	mov    %rbx,0x8(%rax)$/;"	l
b20	obj/user/sh.asm	/^     b20:	cd 30                	int    $0x30$/;"	l
b22	obj/user/ls.asm	/^ b22:	84 c0                	test   %al,%al$/;"	l
b22	obj/user/sh.asm	/^     b22:	c3                   	retq   $/;"	l
b23	obj/user/sh.asm	/^     b23:	48 c7 c0 05 00 00 00 	mov    $0x5,%rax$/;"	l
b24	obj/user/fstest.asm	/^ b24:	48 89 15 d5 04 00 00 	mov    %rdx,0x4d5(%rip)        # 1000 <freep>$/;"	l
b24	obj/user/ls.asm	/^ b24:	75 f0                	jne    b16 <strchr+0xb>$/;"	l
b26	obj/user/ls.asm	/^ b26:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b2a	obj/user/sh.asm	/^     b2a:	cd 30                	int    $0x30$/;"	l
b2b	obj/user/fstest.asm	/^ b2b:	48 8d 50 10          	lea    0x10(%rax),%rdx$/;"	l
b2b	obj/user/ls.asm	/^ b2b:	c3                   	retq   $/;"	l
b2c	obj/user/ls.asm	/^ b2c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b2c	obj/user/sh.asm	/^     b2c:	c3                   	retq   $/;"	l
b2d	obj/user/sh.asm	/^     b2d:	48 c7 c0 06 00 00 00 	mov    $0x6,%rax$/;"	l
b2f	obj/user/fstest.asm	/^ b2f:	48 89 d0             	mov    %rdx,%rax$/;"	l
b3	obj/user/init.asm	/^  b3:	e8 52 00 00 00       	callq  10a <exec>$/;"	l
b3	obj/user/ln.asm	/^  b3:	cd 30                	int    $0x30$/;"	l
b3	obj/user/wc.asm	/^  b3:	78 31                	js     e6 <wc+0xe6>$/;"	l
b31	obj/user/ls.asm	/^ b31:	c3                   	retq   $/;"	l
b32	obj/user/fstest.asm	/^ b32:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
b32	obj/user/ls.asm	/^ b32:	48 89 f8             	mov    %rdi,%rax$/;"	l
b34	obj/user/sh.asm	/^     b34:	cd 30                	int    $0x30$/;"	l
b35	obj/user/ls.asm	/^ b35:	c3                   	retq   $/;"	l
b36	obj/user/fstest.asm	/^ b36:	5b                   	pop    %rbx$/;"	l
b36	obj/user/sh.asm	/^     b36:	c3                   	retq   $/;"	l
b37	obj/user/fstest.asm	/^ b37:	41 5c                	pop    %r12$/;"	l
b37	obj/user/sh.asm	/^     b37:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax$/;"	l
b39	obj/user/fstest.asm	/^ b39:	41 5d                	pop    %r13$/;"	l
b3b	obj/user/fstest.asm	/^ b3b:	5d                   	pop    %rbp$/;"	l
b3c	obj/user/fstest.asm	/^ b3c:	c3                   	retq   $/;"	l
b3d	obj/user/fstest.asm	/^ b3d:	48 8b 08             	mov    (%rax),%rcx$/;"	l
b3e	obj/user/sh.asm	/^     b3e:	cd 30                	int    $0x30$/;"	l
b4	obj/user/echo.asm	/^  b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b4	obj/user/fstest.asm	/^  b4:	e8 06 08 00 00       	callq  8bf <printf>$/;"	l
b4	obj/user/sh.asm	/^      b4:	48 85 ff             	test   %rdi,%rdi$/;"	l
b40	obj/user/fstest.asm	/^ b40:	48 89 0a             	mov    %rcx,(%rdx)$/;"	l
b40	obj/user/sh.asm	/^     b40:	c3                   	retq   $/;"	l
b41	obj/user/sh.asm	/^     b41:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax$/;"	l
b43	obj/user/fstest.asm	/^ b43:	eb df                	jmp    b24 <malloc+0x91>$/;"	l
b45	obj/user/fstest.asm	/^ b45:	4c 89 60 08          	mov    %r12,0x8(%rax)$/;"	l
b48	obj/user/sh.asm	/^     b48:	cd 30                	int    $0x30$/;"	l
b49	obj/user/fstest.asm	/^ b49:	48 8d 78 10          	lea    0x10(%rax),%rdi$/;"	l
b4a	obj/user/sh.asm	/^     b4a:	c3                   	retq   $/;"	l
b4b	obj/user/sh.asm	/^     b4b:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax$/;"	l
b4d	obj/user/fstest.asm	/^ b4d:	e8 b1 fe ff ff       	callq  a03 <free>$/;"	l
b5	obj/user/cat.asm	/^  b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b5	obj/user/ln.asm	/^  b5:	c3                   	retq   $/;"	l
b5	obj/user/preemptiontest1.asm	/^  b5:	cd 30                	int    $0x30$/;"	l
b5	obj/user/wc.asm	/^  b5:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9$/;"	l
b52	obj/user/fstest.asm	/^ b52:	48 8b 15 a7 04 00 00 	mov    0x4a7(%rip),%rdx        # 1000 <freep>$/;"	l
b52	obj/user/sh.asm	/^     b52:	cd 30                	int    $0x30$/;"	l
b54	obj/user/sh.asm	/^     b54:	c3                   	retq   $/;"	l
b55	obj/user/sh.asm	/^     b55:	48 c7 c0 0a 00 00 00 	mov    $0xa,%rax$/;"	l
b59	obj/user/fstest.asm	/^ b59:	48 85 d2             	test   %rdx,%rdx$/;"	l
b5c	obj/user/fstest.asm	/^ b5c:	74 d1                	je     b2f <malloc+0x9c>$/;"	l
b5c	obj/user/sh.asm	/^     b5c:	cd 30                	int    $0x30$/;"	l
b5e	obj/user/fstest.asm	/^ b5e:	48 8b 02             	mov    (%rdx),%rax$/;"	l
b5e	obj/user/sh.asm	/^     b5e:	c3                   	retq   $/;"	l
b5f	obj/user/sh.asm	/^     b5f:	48 c7 c0 0b 00 00 00 	mov    $0xb,%rax$/;"	l
b6	obj/user/ln.asm	/^  b6:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax$/;"	l
b61	obj/user/fstest.asm	/^ b61:	48 8b 48 08          	mov    0x8(%rax),%rcx$/;"	l
b65	obj/user/fstest.asm	/^ b65:	48 39 d9             	cmp    %rbx,%rcx$/;"	l
b66	obj/user/sh.asm	/^     b66:	cd 30                	int    $0x30$/;"	l
b68	obj/user/fstest.asm	/^ b68:	73 a3                	jae    b0d <malloc+0x7a>$/;"	l
b68	obj/user/sh.asm	/^     b68:	c3                   	retq   $/;"	l
b69	obj/user/sh.asm	/^     b69:	48 c7 c0 0c 00 00 00 	mov    $0xc,%rax$/;"	l
b6a	obj/user/fstest.asm	/^ b6a:	48 89 c2             	mov    %rax,%rdx$/;"	l
b6d	obj/user/fstest.asm	/^ b6d:	48 39 05 8c 04 00 00 	cmp    %rax,0x48c(%rip)        # 1000 <freep>$/;"	l
b7	obj/user/preemptiontest1.asm	/^  b7:	c3                   	retq   $/;"	l
b7	obj/user/sh.asm	/^      b7:	74 0f                	je     c8 <runcmd+0x24>$/;"	l
b7	obj/user/vatest.asm	/^  b7:	48 83 c4 50          	add    $0x50,%rsp$/;"	l
b70	obj/user/sh.asm	/^     b70:	cd 30                	int    $0x30$/;"	l
b72	obj/user/sh.asm	/^     b72:	c3                   	retq   $/;"	l
b73	obj/user/sh.asm	/^     b73:	48 c7 c0 0d 00 00 00 	mov    $0xd,%rax$/;"	l
b74	obj/user/fstest.asm	/^ b74:	75 e8                	jne    b5e <malloc+0xcb>$/;"	l
b76	obj/user/fstest.asm	/^ b76:	4c 89 ef             	mov    %r13,%rdi$/;"	l
b79	obj/user/fstest.asm	/^ b79:	e8 d2 f9 ff ff       	callq  550 <sbrk>$/;"	l
b7a	obj/user/sh.asm	/^     b7a:	cd 30                	int    $0x30$/;"	l
b7c	obj/user/sh.asm	/^     b7c:	c3                   	retq   $/;"	l
b7d	obj/user/sh.asm	/^     b7d:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax$/;"	l
b7e	obj/user/fstest.asm	/^ b7e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax$/;"	l
b8	obj/user/init.asm	/^  b8:	bf b1 07 00 00       	mov    $0x7b1,%edi$/;"	l
b8	obj/user/ls.asm	/^  b8:	89 c3                	mov    %eax,%ebx$/;"	l
b8	obj/user/preemptiontest1.asm	/^  b8:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax$/;"	l
b8	obj/user/preemptiontest2.asm	/^  b8:	cd 30                	int    $0x30$/;"	l
b82	obj/user/fstest.asm	/^ b82:	75 c1                	jne    b45 <malloc+0xb2>$/;"	l
b84	obj/user/fstest.asm	/^ b84:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
b84	obj/user/sh.asm	/^     b84:	cd 30                	int    $0x30$/;"	l
b86	obj/user/sh.asm	/^     b86:	c3                   	retq   $/;"	l
b87	obj/user/sh.asm	/^     b87:	48 c7 c0 10 00 00 00 	mov    $0x10,%rax$/;"	l
b89	obj/user/fstest.asm	/^ b89:	eb a4                	jmp    b2f <malloc+0x9c>$/;"	l
b8b	obj/user/fstest.asm	/^ b8b:	f3 0f 1e fa          	endbr64 $/;"	l
b8e	obj/user/sh.asm	/^     b8e:	cd 30                	int    $0x30$/;"	l
b8f	obj/user/fstest.asm	/^ b8f:	48 85 d2             	test   %rdx,%rdx$/;"	l
b9	obj/user/echo.asm	/^  b9:	e8 2b 04 00 00       	callq  4e9 <dprintf>$/;"	l
b9	obj/user/fstest.asm	/^  b9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
b9	obj/user/mkdir.asm	/^  b9:	cd 30                	int    $0x30$/;"	l
b9	obj/user/rm.asm	/^  b9:	cd 30                	int    $0x30$/;"	l
b9	obj/user/sh.asm	/^      b9:	83 3b 05             	cmpl   $0x5,(%rbx)$/;"	l
b9	obj/user/wc.asm	/^  b9:	44 8b 45 c4          	mov    -0x3c(%rbp),%r8d$/;"	l
b90	obj/user/sh.asm	/^     b90:	c3                   	retq   $/;"	l
b91	obj/user/sh.asm	/^     b91:	48 c7 c0 11 00 00 00 	mov    $0x11,%rax$/;"	l
b92	obj/user/fstest.asm	/^ b92:	74 2d                	je     bc1 <memcmp+0x36>$/;"	l
b94	obj/user/fstest.asm	/^ b94:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b98	obj/user/sh.asm	/^     b98:	cd 30                	int    $0x30$/;"	l
b99	obj/user/fstest.asm	/^ b99:	0f b6 0c 07          	movzbl (%rdi,%rax,1),%ecx$/;"	l
b9a	obj/user/sh.asm	/^     b9a:	c3                   	retq   $/;"	l
b9b	obj/user/sh.asm	/^     b9b:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax$/;"	l
b9d	obj/user/fstest.asm	/^ b9d:	44 0f b6 04 06       	movzbl (%rsi,%rax,1),%r8d$/;"	l
ba	obj/user/cat.asm	/^  ba:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ba	obj/user/ls.asm	/^  ba:	48 8d b5 ac fd ff ff 	lea    -0x254(%rbp),%rsi$/;"	l
ba	obj/user/preemptiontest2.asm	/^  ba:	c3                   	retq   $/;"	l
ba2	obj/user/fstest.asm	/^ ba2:	44 38 c1             	cmp    %r8b,%cl$/;"	l
ba2	obj/user/sh.asm	/^     ba2:	cd 30                	int    $0x30$/;"	l
ba4	obj/user/sh.asm	/^     ba4:	c3                   	retq   $/;"	l
ba5	obj/user/fstest.asm	/^ ba5:	75 0f                	jne    bb6 <memcmp+0x2b>$/;"	l
ba5	obj/user/sh.asm	/^     ba5:	48 c7 c0 13 00 00 00 	mov    $0x13,%rax$/;"	l
ba7	obj/user/fstest.asm	/^ ba7:	48 83 c0 01          	add    $0x1,%rax$/;"	l
bab	obj/user/fstest.asm	/^ bab:	48 39 c2             	cmp    %rax,%rdx$/;"	l
bac	obj/user/sh.asm	/^     bac:	cd 30                	int    $0x30$/;"	l
backcmd	user/sh.c	/^struct backcmd {$/;"	s	file:
backcmd	user/sh.c	/^struct cmd *backcmd(struct cmd *subcmd) {$/;"	f
bad	obj/kern/kernel.asm	/^bad:$/;"	l
bae	obj/user/fstest.asm	/^ bae:	75 e9                	jne    b99 <memcmp+0xe>$/;"	l
bae	obj/user/sh.asm	/^     bae:	c3                   	retq   $/;"	l
baf	obj/user/sh.asm	/^     baf:	48 c7 c0 14 00 00 00 	mov    $0x14,%rax$/;"	l
balloc	kern/fs.c	/^static uint balloc(uint dev) {$/;"	f	file:
balloc	kern/mkfs.c	/^void balloc(int used) {$/;"	f
base	user/umalloc.c	/^static Header base;$/;"	v	file:
base_15_0	kern/mmu.h	/^  uint base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:segdesc
base_15_0	kern/mmu.h	/^  uint32_t base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:tssdesc
base_23_16	kern/mmu.h	/^  uint base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:segdesc
base_23_16	kern/mmu.h	/^  uint32_t base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:tssdesc
base_31_24	kern/mmu.h	/^  uint base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:segdesc
base_31_24	kern/mmu.h	/^  uint32_t base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:tssdesc
base_63_32	kern/mmu.h	/^  uint32_t base_63_32;$/;"	m	struct:tssdesc
basemem	obj/kern/kernel.asm	/^  basemem = nvram_read(NVRAM_BASELO);$/;"	d
bb	obj/user/mkdir.asm	/^  bb:	c3                   	retq   $/;"	l
bb	obj/user/preemptiontest2.asm	/^  bb:	48 c7 c0 0c 00 00 00 	mov    $0xc,%rax$/;"	l
bb	obj/user/rm.asm	/^  bb:	c3                   	retq   $/;"	l
bb	obj/user/vatest.asm	/^  bb:	5b                   	pop    %rbx$/;"	l
bb0	obj/user/fstest.asm	/^ bb0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bb5	obj/user/fstest.asm	/^ bb5:	c3                   	retq   $/;"	l
bb6	obj/user/fstest.asm	/^ bb6:	0f b6 c1             	movzbl %cl,%eax$/;"	l
bb6	obj/user/sh.asm	/^     bb6:	cd 30                	int    $0x30$/;"	l
bb8	obj/user/sh.asm	/^     bb8:	c3                   	retq   $/;"	l
bb9	obj/user/fstest.asm	/^ bb9:	45 0f b6 c0          	movzbl %r8b,%r8d$/;"	l
bb9	obj/user/sh.asm	/^     bb9:	48 c7 c0 15 00 00 00 	mov    $0x15,%rax$/;"	l
bbd	obj/user/fstest.asm	/^ bbd:	44 29 c0             	sub    %r8d,%eax$/;"	l
bc	obj/user/mkdir.asm	/^  bc:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax$/;"	l
bc	obj/user/rm.asm	/^  bc:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax$/;"	l
bc	obj/user/sh.asm	/^      bc:	77 11                	ja     cf <runcmd+0x2b>$/;"	l
bc	obj/user/vatest.asm	/^  bc:	41 5c                	pop    %r12$/;"	l
bc0	obj/user/fstest.asm	/^ bc0:	c3                   	retq   $/;"	l
bc0	obj/user/sh.asm	/^     bc0:	cd 30                	int    $0x30$/;"	l
bc1	obj/user/fstest.asm	/^ bc1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bc2	obj/user/sh.asm	/^     bc2:	c3                   	retq   $/;"	l
bc3	obj/user/sh.asm	/^     bc3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi$/;"	l
bc6	obj/user/fstest.asm	/^ bc6:	c3                   	retq   $/;"	l
bc7	obj/user/fstest.asm	/^ bc7:	f3 0f 1e fa          	endbr64 $/;"	l
bc8	obj/user/sh.asm	/^     bc8:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi$/;"	l
bcache	kern/bio.c	/^} bcache;$/;"	v	typeref:struct:__anon3
bcb	obj/user/fstest.asm	/^ bcb:	49 89 f8             	mov    %rdi,%r8$/;"	l
bcd	obj/user/sh.asm	/^     bcd:	e8 67 fe ff ff       	callq  a39 <main>$/;"	l
bce	obj/user/fstest.asm	/^ bce:	89 d1                	mov    %edx,%ecx$/;"	l
bcmd	obj/user/sh.asm	/^    bcmd = (struct backcmd *)cmd;$/;"	d
bd	obj/user/init.asm	/^  bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bd	obj/user/ln.asm	/^  bd:	cd 30                	int    $0x30$/;"	l
bd	obj/user/wc.asm	/^  bd:	8b 4d c8             	mov    -0x38(%rbp),%ecx$/;"	l
bd0	obj/user/fstest.asm	/^ bd0:	89 f0                	mov    %esi,%eax$/;"	l
bd2	obj/user/fstest.asm	/^ bd2:	fc                   	cld    $/;"	l
bd2	obj/user/sh.asm	/^     bd2:	e8 2e ff ff ff       	callq  b05 <exit>$/;"	l
bd3	obj/user/fstest.asm	/^ bd3:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
bd5	obj/user/fstest.asm	/^ bd5:	4c 89 c0             	mov    %r8,%rax$/;"	l
bd7	obj/user/sh.asm	/^     bd7:	55                   	push   %rbp$/;"	l
bd8	obj/user/fstest.asm	/^ bd8:	c3                   	retq   $/;"	l
bd8	obj/user/sh.asm	/^     bd8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bd9	obj/user/fstest.asm	/^ bd9:	f3 0f 1e fa          	endbr64 $/;"	l
bdb	obj/user/sh.asm	/^     bdb:	53                   	push   %rbx$/;"	l
bdc	obj/user/sh.asm	/^     bdc:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
bdd	obj/user/fstest.asm	/^ bdd:	48 89 f8             	mov    %rdi,%rax$/;"	l
be	obj/user/cat.asm	/^  be:	5b                   	pop    %rbx$/;"	l
be	obj/user/echo.asm	/^  be:	e8 0c 00 00 00       	callq  cf <exit>$/;"	l
be	obj/user/fstest.asm	/^  be:	eb be                	jmp    7e <main+0x7e>$/;"	l
be	obj/user/sh.asm	/^      be:	8b 03                	mov    (%rbx),%eax$/;"	l
be	obj/user/vatest.asm	/^  be:	41 5d                	pop    %r13$/;"	l
be0	obj/user/fstest.asm	/^ be0:	48 39 fe             	cmp    %rdi,%rsi$/;"	l
be0	obj/user/sh.asm	/^     be0:	48 89 d3             	mov    %rdx,%rbx$/;"	l
be3	obj/user/fstest.asm	/^ be3:	72 1d                	jb     c02 <memmove+0x29>$/;"	l
be3	obj/user/sh.asm	/^     be3:	40 88 75 ec          	mov    %sil,-0x14(%rbp)$/;"	l
be5	obj/user/fstest.asm	/^ be5:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
be7	obj/user/sh.asm	/^     be7:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
bea	obj/user/fstest.asm	/^ bea:	48 85 d2             	test   %rdx,%rdx$/;"	l
bec	obj/user/sh.asm	/^     bec:	48 8d 75 ec          	lea    -0x14(%rbp),%rsi$/;"	l
bed	obj/user/fstest.asm	/^ bed:	74 12                	je     c01 <memmove+0x28>$/;"	l
bef	obj/user/fstest.asm	/^ bef:	0f b6 3c 0e          	movzbl (%rsi,%rcx,1),%edi$/;"	l
begin_op	kern/log.c	/^void begin_op(void) {$/;"	f
bf	obj/user/cat.asm	/^  bf:	41 5c                	pop    %r12$/;"	l
bf	obj/user/ln.asm	/^  bf:	c3                   	retq   $/;"	l
bf	obj/user/preemptiontest1.asm	/^  bf:	cd 30                	int    $0x30$/;"	l
bf0	obj/user/sh.asm	/^     bf0:	e8 92 ff ff ff       	callq  b87 <write>$/;"	l
bf3	obj/user/fstest.asm	/^ bf3:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)$/;"	l
bf5	obj/user/sh.asm	/^     bf5:	83 03 01             	addl   $0x1,(%rbx)$/;"	l
bf7	obj/user/fstest.asm	/^ bf7:	48 83 c1 01          	add    $0x1,%rcx$/;"	l
bf8	obj/user/sh.asm	/^     bf8:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
bfb	obj/user/fstest.asm	/^ bfb:	48 39 ca             	cmp    %rcx,%rdx$/;"	l
bfc	obj/user/sh.asm	/^     bfc:	5b                   	pop    %rbx$/;"	l
bfd	obj/user/sh.asm	/^     bfd:	5d                   	pop    %rbp$/;"	l
bfe	obj/user/fstest.asm	/^ bfe:	75 ef                	jne    bef <memmove+0x16>$/;"	l
bfe	obj/user/sh.asm	/^     bfe:	c3                   	retq   $/;"	l
bff	obj/user/sh.asm	/^     bff:	55                   	push   %rbp$/;"	l
bfree	kern/fs.c	/^static void bfree(int dev, uint b) {$/;"	f	file:
bget	kern/bio.c	/^static struct buf *bget(uint dev, uint blockno) {$/;"	f	file:
bi	obj/kern/kernel.asm	/^  bi = b % BPB;$/;"	d
binit	kern/bio.c	/^void binit(void) {$/;"	f
block	kern/log.c	/^  uint block[LOGSIZE];$/;"	m	struct:logheader	file:
blockno	kern/buf.h	/^  uint blockno;$/;"	m	struct:buf
bmap	kern/fs.c	/^static uint bmap(struct inode *ip, uint bn) {$/;"	f	file:
bmapstart	kern/fs.h	/^  uint bmapstart;  \/\/ Block number of first free map block$/;"	m	struct:superblock
bp	obj/kern/kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	obj/kern/kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	obj/kern/kernel.asm	/^    bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	obj/kern/kernel.asm	/^    bp = bread(ip->dev, addr);$/;"	d
bp	obj/kern/kernel.asm	/^    bp = bread(ip->dev, bmap(ip, off \/ BSIZE));$/;"	d
bp	obj/kern/kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	obj/kern/kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	obj/kern/kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	obj/kern/kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	obj/kern/kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	obj/user/cat.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/echo.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/fstest.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/init.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/ln.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/ls.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/mkdir.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/preemptiontest1.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/preemptiontest2.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/rm.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/sh.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/vatest.asm	/^  bp = (Header *)ap - 1;$/;"	d
bp	obj/user/wc.asm	/^  bp = (Header *)ap - 1;$/;"	d
bread	kern/bio.c	/^struct buf *bread(uint dev, uint blockno) {$/;"	f
brelse	kern/bio.c	/^void brelse(struct buf *b) {$/;"	f
buf	kern/bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon3	typeref:struct:__anon3::buf	file:
buf	kern/buf.h	/^struct buf {$/;"	s
buf	kern/console.c	/^  char buf[INPUT_BUF];$/;"	m	struct:__anon5	file:
buf	obj/kern/kernel.asm	/^  buf = (char *)p;$/;"	d
buf	user/cat.c	/^char buf[512];$/;"	v
buf	user/wc.c	/^char buf[512];$/;"	v
bwrite	kern/bio.c	/^void bwrite(struct buf *b) {$/;"	f
c	obj/kern/kernel.asm	/^        c = (c == '\\r') ? '\\n' : c;$/;"	d
c	obj/kern/kernel.asm	/^    c = fmt[++i] & 0xff;$/;"	d
c	obj/kern/kernel.asm	/^    c = input.buf[input.r++ % INPUT_BUF];$/;"	d
c	obj/kern/kernel.asm	/^  c = &cpus[cpuid()];$/;"	d
c	obj/kern/kernel.asm	/^  c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^  c = mycpu();$/;"	d
c	obj/user/echo.asm	/^   c:	41 56                	push   %r14$/;"	l
c	obj/user/mkdir.asm	/^   c:	53                   	push   %rbx$/;"	l
c	obj/user/preemptiontest1.asm	/^   c:	53                   	push   %rbx$/;"	l
c	obj/user/rm.asm	/^   c:	53                   	push   %rbx$/;"	l
c	obj/user/vatest.asm	/^   c:	41 54                	push   %r12$/;"	l
c	obj/user/wc.asm	/^   c:	41 55                	push   %r13$/;"	l
c0	obj/user/fstest.asm	/^  c0:	be a0 0d 00 00       	mov    $0xda0,%esi$/;"	l
c0	obj/user/ln.asm	/^  c0:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax$/;"	l
c0	obj/user/sh.asm	/^      c0:	3e ff 24 c5 08 14 00 	notrack jmpq *0x1408(,%rax,8)$/;"	l
c0	obj/user/vatest.asm	/^  c0:	41 5e                	pop    %r14$/;"	l
c0	obj/user/wc.asm	/^  c0:	44 89 e2             	mov    %r12d,%edx$/;"	l
c00	obj/user/fstest.asm	/^ c00:	c3                   	retq   $/;"	l
c00	obj/user/sh.asm	/^     c00:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c01	obj/user/fstest.asm	/^ c01:	c3                   	retq   $/;"	l
c02	obj/user/fstest.asm	/^ c02:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx$/;"	l
c03	obj/user/sh.asm	/^     c03:	41 55                	push   %r13$/;"	l
c05	obj/user/sh.asm	/^     c05:	41 54                	push   %r12$/;"	l
c06	obj/user/fstest.asm	/^ c06:	48 39 cf             	cmp    %rcx,%rdi$/;"	l
c07	obj/user/sh.asm	/^     c07:	53                   	push   %rbx$/;"	l
c08	obj/user/sh.asm	/^     c08:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
c09	obj/user/fstest.asm	/^ c09:	73 da                	jae    be5 <memmove+0xc>$/;"	l
c0b	obj/user/fstest.asm	/^ c0b:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx$/;"	l
c0c	obj/user/sh.asm	/^     c0c:	41 89 fc             	mov    %edi,%r12d$/;"	l
c0f	obj/user/fstest.asm	/^ c0f:	48 85 d2             	test   %rdx,%rdx$/;"	l
c0f	obj/user/sh.asm	/^     c0f:	4d 89 c5             	mov    %r8,%r13$/;"	l
c1	obj/user/cat.asm	/^  c1:	41 5d                	pop    %r13$/;"	l
c1	obj/user/ls.asm	/^  c1:	89 c7                	mov    %eax,%edi$/;"	l
c1	obj/user/preemptiontest1.asm	/^  c1:	c3                   	retq   $/;"	l
c12	obj/user/fstest.asm	/^ c12:	74 ec                	je     c00 <memmove+0x27>$/;"	l
c12	obj/user/sh.asm	/^     c12:	85 c9                	test   %ecx,%ecx$/;"	l
c14	obj/user/fstest.asm	/^ c14:	0f b6 14 0e          	movzbl (%rsi,%rcx,1),%edx$/;"	l
c14	obj/user/sh.asm	/^     c14:	74 7f                	je     c95 <printint+0x96>$/;"	l
c16	obj/user/sh.asm	/^     c16:	48 85 f6             	test   %rsi,%rsi$/;"	l
c18	obj/user/fstest.asm	/^ c18:	88 14 08             	mov    %dl,(%rax,%rcx,1)$/;"	l
c19	obj/user/sh.asm	/^     c19:	79 7a                	jns    c95 <printint+0x96>$/;"	l
c1b	obj/user/fstest.asm	/^ c1b:	48 83 e9 01          	sub    $0x1,%rcx$/;"	l
c1b	obj/user/sh.asm	/^     c1b:	48 f7 de             	neg    %rsi$/;"	l
c1e	obj/user/sh.asm	/^     c1e:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
c1f	obj/user/fstest.asm	/^ c1f:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx$/;"	l
c2	obj/user/init.asm	/^  c2:	e8 e4 03 00 00       	callq  4ab <printf>$/;"	l
c2	obj/user/preemptiontest1.asm	/^  c2:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax$/;"	l
c2	obj/user/preemptiontest2.asm	/^  c2:	cd 30                	int    $0x30$/;"	l
c2	obj/user/vatest.asm	/^  c2:	5d                   	pop    %rbp$/;"	l
c23	obj/user/fstest.asm	/^ c23:	75 ef                	jne    c14 <memmove+0x3b>$/;"	l
c24	obj/user/sh.asm	/^     c24:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi$/;"	l
c25	obj/user/fstest.asm	/^ c25:	c3                   	retq   $/;"	l
c26	obj/user/fstest.asm	/^ c26:	f3 0f 1e fa          	endbr64 $/;"	l
c28	obj/user/sh.asm	/^     c28:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
c2a	obj/user/fstest.asm	/^ c2a:	48 85 d2             	test   %rdx,%rdx$/;"	l
c2d	obj/user/fstest.asm	/^ c2d:	74 1f                	je     c4e <strncmp+0x28>$/;"	l
c2d	obj/user/sh.asm	/^     c2d:	48 63 ca             	movslq %edx,%rcx$/;"	l
c2f	obj/user/fstest.asm	/^ c2f:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
c3	obj/user/cat.asm	/^  c3:	5d                   	pop    %rbp$/;"	l
c3	obj/user/echo.asm	/^  c3:	eb c6                	jmp    8b <main+0x15>$/;"	l
c3	obj/user/ls.asm	/^  c3:	e8 62 02 00 00       	callq  32a <fstat>$/;"	l
c3	obj/user/mkdir.asm	/^  c3:	cd 30                	int    $0x30$/;"	l
c3	obj/user/rm.asm	/^  c3:	cd 30                	int    $0x30$/;"	l
c3	obj/user/vatest.asm	/^  c3:	c3                   	retq   $/;"	l
c3	obj/user/wc.asm	/^  c3:	be 06 0a 00 00       	mov    $0xa06,%esi$/;"	l
c30	obj/user/sh.asm	/^     c30:	41 89 d9             	mov    %ebx,%r9d$/;"	l
c32	obj/user/fstest.asm	/^ c32:	84 c0                	test   %al,%al$/;"	l
c33	obj/user/sh.asm	/^     c33:	83 c3 01             	add    $0x1,%ebx$/;"	l
c34	obj/user/fstest.asm	/^ c34:	74 1e                	je     c54 <strncmp+0x2e>$/;"	l
c36	obj/user/fstest.asm	/^ c36:	3a 06                	cmp    (%rsi),%al$/;"	l
c36	obj/user/sh.asm	/^     c36:	48 89 f0             	mov    %rsi,%rax$/;"	l
c38	obj/user/fstest.asm	/^ c38:	75 1a                	jne    c54 <strncmp+0x2e>$/;"	l
c39	obj/user/sh.asm	/^     c39:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c3a	obj/user/fstest.asm	/^ c3a:	48 83 c7 01          	add    $0x1,%rdi$/;"	l
c3e	obj/user/fstest.asm	/^ c3e:	48 83 c6 01          	add    $0x1,%rsi$/;"	l
c3e	obj/user/sh.asm	/^     c3e:	48 f7 f1             	div    %rcx$/;"	l
c4	obj/user/cat.asm	/^  c4:	c3                   	retq   $/;"	l
c4	obj/user/preemptiontest2.asm	/^  c4:	c3                   	retq   $/;"	l
c4	obj/user/vatest.asm	/^  c4:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx$/;"	l
c41	obj/user/sh.asm	/^     c41:	0f b6 92 70 14 00 00 	movzbl 0x1470(%rdx),%edx$/;"	l
c42	obj/user/fstest.asm	/^ c42:	48 83 ea 01          	sub    $0x1,%rdx$/;"	l
c46	obj/user/fstest.asm	/^ c46:	75 e7                	jne    c2f <strncmp+0x9>$/;"	l
c48	obj/user/fstest.asm	/^ c48:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c48	obj/user/sh.asm	/^     c48:	88 17                	mov    %dl,(%rdi)$/;"	l
c4a	obj/user/sh.asm	/^     c4a:	48 89 f2             	mov    %rsi,%rdx$/;"	l
c4d	obj/user/fstest.asm	/^ c4d:	c3                   	retq   $/;"	l
c4d	obj/user/sh.asm	/^     c4d:	48 89 c6             	mov    %rax,%rsi$/;"	l
c4e	obj/user/fstest.asm	/^ c4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c5	obj/user/cat.asm	/^  c5:	89 df                	mov    %ebx,%edi$/;"	l
c5	obj/user/echo.asm	/^  c5:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax$/;"	l
c5	obj/user/fstest.asm	/^  c5:	bf 58 0d 00 00       	mov    $0xd58,%edi$/;"	l
c5	obj/user/mkdir.asm	/^  c5:	c3                   	retq   $/;"	l
c5	obj/user/preemptiontest2.asm	/^  c5:	48 c7 c0 0d 00 00 00 	mov    $0xd,%rax$/;"	l
c5	obj/user/rm.asm	/^  c5:	c3                   	retq   $/;"	l
c50	obj/user/sh.asm	/^     c50:	48 83 c7 01          	add    $0x1,%rdi$/;"	l
c53	obj/user/fstest.asm	/^ c53:	c3                   	retq   $/;"	l
c54	obj/user/fstest.asm	/^ c54:	48 85 d2             	test   %rdx,%rdx$/;"	l
c54	obj/user/sh.asm	/^     c54:	48 39 d1             	cmp    %rdx,%rcx$/;"	l
c57	obj/user/fstest.asm	/^ c57:	74 09                	je     c62 <strncmp+0x3c>$/;"	l
c57	obj/user/sh.asm	/^     c57:	76 d7                	jbe    c30 <printint+0x31>$/;"	l
c59	obj/user/fstest.asm	/^ c59:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
c59	obj/user/sh.asm	/^     c59:	45 85 c0             	test   %r8d,%r8d$/;"	l
c5c	obj/user/fstest.asm	/^ c5c:	0f b6 16             	movzbl (%rsi),%edx$/;"	l
c5c	obj/user/sh.asm	/^     c5c:	74 0c                	je     c6a <printint+0x6b>$/;"	l
c5e	obj/user/sh.asm	/^     c5e:	48 63 db             	movslq %ebx,%rbx$/;"	l
c5f	obj/user/fstest.asm	/^ c5f:	29 d0                	sub    %edx,%eax$/;"	l
c6	obj/user/mkdir.asm	/^  c6:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax$/;"	l
c6	obj/user/rm.asm	/^  c6:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax$/;"	l
c61	obj/user/fstest.asm	/^ c61:	c3                   	retq   $/;"	l
c61	obj/user/sh.asm	/^     c61:	c6 44 1d d0 2d       	movb   $0x2d,-0x30(%rbp,%rbx,1)$/;"	l
c62	obj/user/fstest.asm	/^ c62:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c66	obj/user/sh.asm	/^     c66:	41 8d 59 02          	lea    0x2(%r9),%ebx$/;"	l
c67	obj/user/fstest.asm	/^ c67:	c3                   	retq   $/;"	l
c68	obj/user/fstest.asm	/^ c68:	f3 0f 1e fa          	endbr64 $/;"	l
c6a	obj/user/sh.asm	/^     c6a:	83 eb 01             	sub    $0x1,%ebx$/;"	l
c6c	obj/user/fstest.asm	/^ c6c:	48 89 f8             	mov    %rdi,%rax$/;"	l
c6d	obj/user/sh.asm	/^     c6d:	78 1b                	js     c8a <printint+0x8b>$/;"	l
c6f	obj/user/fstest.asm	/^ c6f:	4c 8d 14 16          	lea    (%rsi,%rdx,1),%r10$/;"	l
c6f	obj/user/sh.asm	/^     c6f:	48 63 db             	movslq %ebx,%rbx$/;"	l
c7	obj/user/cat.asm	/^  c7:	e8 34 ff ff ff       	callq  0 <cat>$/;"	l
c7	obj/user/init.asm	/^  c7:	e8 0c 00 00 00       	callq  d8 <exit>$/;"	l
c7	obj/user/ln.asm	/^  c7:	cd 30                	int    $0x30$/;"	l
c7	obj/user/sh.asm	/^      c7:	00 $/;"	l
c72	obj/user/sh.asm	/^     c72:	0f be 74 2b d0       	movsbl -0x30(%rbx,%rbp,1),%esi$/;"	l
c73	obj/user/fstest.asm	/^ c73:	48 89 f9             	mov    %rdi,%rcx$/;"	l
c76	obj/user/fstest.asm	/^ c76:	49 89 d1             	mov    %rdx,%r9$/;"	l
c77	obj/user/sh.asm	/^     c77:	4c 89 ea             	mov    %r13,%rdx$/;"	l
c79	obj/user/fstest.asm	/^ c79:	48 83 ea 01          	sub    $0x1,%rdx$/;"	l
c7a	obj/user/sh.asm	/^     c7a:	44 89 e7             	mov    %r12d,%edi$/;"	l
c7d	obj/user/fstest.asm	/^ c7d:	4c 39 d6             	cmp    %r10,%rsi$/;"	l
c7d	obj/user/sh.asm	/^     c7d:	e8 55 ff ff ff       	callq  bd7 <printchar>$/;"	l
c8	obj/user/ls.asm	/^  c8:	85 c0                	test   %eax,%eax$/;"	l
c8	obj/user/sh.asm	/^      c8:	e8 38 0a 00 00       	callq  b05 <exit>$/;"	l
c8	obj/user/vatest.asm	/^  c8:	48 8d 42 08          	lea    0x8(%rdx),%rax$/;"	l
c8	obj/user/wc.asm	/^  c8:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
c80	obj/user/fstest.asm	/^ c80:	74 20                	je     ca2 <strncpy+0x3a>$/;"	l
c82	obj/user/fstest.asm	/^ c82:	48 83 c6 01          	add    $0x1,%rsi$/;"	l
c82	obj/user/sh.asm	/^     c82:	48 83 eb 01          	sub    $0x1,%rbx$/;"	l
c86	obj/user/fstest.asm	/^ c86:	48 83 c1 01          	add    $0x1,%rcx$/;"	l
c86	obj/user/sh.asm	/^     c86:	85 db                	test   %ebx,%ebx$/;"	l
c88	obj/user/sh.asm	/^     c88:	79 e8                	jns    c72 <printint+0x73>$/;"	l
c8a	obj/user/fstest.asm	/^ c8a:	44 0f b6 46 ff       	movzbl -0x1(%rsi),%r8d$/;"	l
c8a	obj/user/sh.asm	/^     c8a:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
c8e	obj/user/sh.asm	/^     c8e:	5b                   	pop    %rbx$/;"	l
c8f	obj/user/fstest.asm	/^ c8f:	44 88 41 ff          	mov    %r8b,-0x1(%rcx)$/;"	l
c8f	obj/user/sh.asm	/^     c8f:	41 5c                	pop    %r12$/;"	l
c9	obj/user/ln.asm	/^  c9:	c3                   	retq   $/;"	l
c9	obj/user/preemptiontest1.asm	/^  c9:	cd 30                	int    $0x30$/;"	l
c91	obj/user/sh.asm	/^     c91:	41 5d                	pop    %r13$/;"	l
c93	obj/user/fstest.asm	/^ c93:	45 84 c0             	test   %r8b,%r8b$/;"	l
c93	obj/user/sh.asm	/^     c93:	5d                   	pop    %rbp$/;"	l
c94	obj/user/sh.asm	/^     c94:	c3                   	retq   $/;"	l
c95	obj/user/sh.asm	/^     c95:	41 b8 00 00 00 00    	mov    $0x0,%r8d$/;"	l
c96	obj/user/fstest.asm	/^ c96:	75 de                	jne    c76 <strncpy+0xe>$/;"	l
c98	obj/user/fstest.asm	/^ c98:	49 83 e9 02          	sub    $0x2,%r9$/;"	l
c9b	obj/user/sh.asm	/^     c9b:	eb 87                	jmp    c24 <printint+0x25>$/;"	l
c9c	obj/user/fstest.asm	/^ c9c:	48 85 d2             	test   %rdx,%rdx$/;"	l
c9d	obj/user/sh.asm	/^     c9d:	55                   	push   %rbp$/;"	l
c9e	obj/user/sh.asm	/^     c9e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c9f	obj/user/fstest.asm	/^ c9f:	75 05                	jne    ca6 <strncpy+0x3e>$/;"	l
ca	obj/user/fstest.asm	/^  ca:	e8 bd 04 00 00       	callq  58c <link>$/;"	l
ca	obj/user/ln.asm	/^  ca:	48 c7 c0 0a 00 00 00 	mov    $0xa,%rax$/;"	l
ca	obj/user/ls.asm	/^  ca:	0f 88 81 00 00 00    	js     151 <ls+0xc6>$/;"	l
ca1	obj/user/fstest.asm	/^ ca1:	c3                   	retq   $/;"	l
ca1	obj/user/sh.asm	/^     ca1:	41 57                	push   %r15$/;"	l
ca2	obj/user/fstest.asm	/^ ca2:	49 83 e9 02          	sub    $0x2,%r9$/;"	l
ca3	obj/user/sh.asm	/^     ca3:	41 56                	push   %r14$/;"	l
ca5	obj/user/sh.asm	/^     ca5:	41 55                	push   %r13$/;"	l
ca6	obj/user/fstest.asm	/^ ca6:	4a 8d 54 09 01       	lea    0x1(%rcx,%r9,1),%rdx$/;"	l
ca7	obj/user/sh.asm	/^     ca7:	41 54                	push   %r12$/;"	l
ca9	obj/user/sh.asm	/^     ca9:	53                   	push   %rbx$/;"	l
caa	obj/user/sh.asm	/^     caa:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
cab	obj/user/fstest.asm	/^ cab:	48 83 c1 01          	add    $0x1,%rcx$/;"	l
cae	obj/user/sh.asm	/^     cae:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)$/;"	l
caf	obj/user/fstest.asm	/^ caf:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)$/;"	l
cat	user/cat.c	/^void cat(int fd) {$/;"	f
cb	obj/user/preemptiontest1.asm	/^  cb:	c3                   	retq   $/;"	l
cb3	obj/user/fstest.asm	/^ cb3:	48 39 d1             	cmp    %rdx,%rcx$/;"	l
cb5	obj/user/sh.asm	/^     cb5:	44 0f be 27          	movsbl (%rdi),%r12d$/;"	l
cb6	obj/user/fstest.asm	/^ cb6:	75 f3                	jne    cab <strncpy+0x43>$/;"	l
cb8	obj/user/fstest.asm	/^ cb8:	c3                   	retq   $/;"	l
cb9	obj/user/fstest.asm	/^ cb9:	f3 0f 1e fa          	endbr64 $/;"	l
cb9	obj/user/sh.asm	/^     cb9:	44 89 e0             	mov    %r12d,%eax$/;"	l
cbc	obj/user/sh.asm	/^     cbc:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
cbd	obj/user/fstest.asm	/^ cbd:	48 89 f8             	mov    %rdi,%rax$/;"	l
cc	obj/user/cat.asm	/^  cc:	89 df                	mov    %ebx,%edi$/;"	l
cc	obj/user/echo.asm	/^  cc:	cd 30                	int    $0x30$/;"	l
cc	obj/user/init.asm	/^  cc:	eb 82                	jmp    50 <main+0x50>$/;"	l
cc	obj/user/preemptiontest1.asm	/^  cc:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax$/;"	l
cc	obj/user/preemptiontest2.asm	/^  cc:	cd 30                	int    $0x30$/;"	l
cc	obj/user/vatest.asm	/^  cc:	48 89 45 a0          	mov    %rax,-0x60(%rbp)$/;"	l
cc0	obj/user/fstest.asm	/^ cc0:	85 d2                	test   %edx,%edx$/;"	l
cc1	obj/user/sh.asm	/^     cc1:	0f 84 ff 01 00 00    	je     ec6 <do_printf+0x229>$/;"	l
cc2	obj/user/fstest.asm	/^ cc2:	7e 25                	jle    ce9 <safestrcpy+0x30>$/;"	l
cc4	obj/user/fstest.asm	/^ cc4:	44 8d 42 ff          	lea    -0x1(%rdx),%r8d$/;"	l
cc7	obj/user/sh.asm	/^     cc7:	41 89 f6             	mov    %esi,%r14d$/;"	l
cc8	obj/user/fstest.asm	/^ cc8:	49 01 f0             	add    %rsi,%r8$/;"	l
cca	obj/user/sh.asm	/^     cca:	49 89 d7             	mov    %rdx,%r15$/;"	l
ccb	obj/user/fstest.asm	/^ ccb:	48 89 fa             	mov    %rdi,%rdx$/;"	l
ccd	obj/user/sh.asm	/^     ccd:	48 8d 5f 01          	lea    0x1(%rdi),%rbx$/;"	l
cce	obj/user/fstest.asm	/^ cce:	4c 39 c6             	cmp    %r8,%rsi$/;"	l
cd	obj/user/mkdir.asm	/^  cd:	cd 30                	int    $0x30$/;"	l
cd	obj/user/rm.asm	/^  cd:	cd 30                	int    $0x30$/;"	l
cd	obj/user/sh.asm	/^      cd:	eb ea                	jmp    b9 <runcmd+0x15>$/;"	l
cd	obj/user/wc.asm	/^  cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
cd1	obj/user/fstest.asm	/^ cd1:	74 13                	je     ce6 <safestrcpy+0x2d>$/;"	l
cd1	obj/user/sh.asm	/^     cd1:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
cd3	obj/user/fstest.asm	/^ cd3:	48 83 c6 01          	add    $0x1,%rsi$/;"	l
cd7	obj/user/fstest.asm	/^ cd7:	48 83 c2 01          	add    $0x1,%rdx$/;"	l
cd7	obj/user/sh.asm	/^     cd7:	eb 2d                	jmp    d06 <do_printf+0x69>$/;"	l
cd9	obj/user/sh.asm	/^     cd9:	48 8d 55 cc          	lea    -0x34(%rbp),%rdx$/;"	l
cdb	obj/user/fstest.asm	/^ cdb:	0f b6 4e ff          	movzbl -0x1(%rsi),%ecx$/;"	l
cdd	obj/user/sh.asm	/^     cdd:	44 89 e6             	mov    %r12d,%esi$/;"	l
cdf	obj/user/fstest.asm	/^ cdf:	88 4a ff             	mov    %cl,-0x1(%rdx)$/;"	l
ce	obj/user/cat.asm	/^  ce:	e8 fa 00 00 00       	callq  1cd <close>$/;"	l
ce	obj/user/echo.asm	/^  ce:	c3                   	retq   $/;"	l
ce	obj/user/init.asm	/^  ce:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax$/;"	l
ce	obj/user/preemptiontest2.asm	/^  ce:	c3                   	retq   $/;"	l
ce0	obj/user/sh.asm	/^     ce0:	44 89 f7             	mov    %r14d,%edi$/;"	l
ce2	obj/user/fstest.asm	/^ ce2:	84 c9                	test   %cl,%cl$/;"	l
ce3	obj/user/sh.asm	/^     ce3:	e8 ef fe ff ff       	callq  bd7 <printchar>$/;"	l
ce4	obj/user/fstest.asm	/^ ce4:	75 e8                	jne    cce <safestrcpy+0x15>$/;"	l
ce6	obj/user/fstest.asm	/^ ce6:	c6 02 00             	movb   $0x0,(%rdx)$/;"	l
ce8	obj/user/sh.asm	/^     ce8:	eb 06                	jmp    cf0 <do_printf+0x53>$/;"	l
ce9	obj/user/fstest.asm	/^ ce9:	c3                   	retq   $/;"	l
cea	obj/user/fstest.asm	/^ cea:	f3 0f 1e fa          	endbr64 $/;"	l
cea	obj/user/sh.asm	/^     cea:	41 83 fd 25          	cmp    $0x25,%r13d$/;"	l
cee	obj/user/fstest.asm	/^ cee:	80 3f 00             	cmpb   $0x0,(%rdi)$/;"	l
cee	obj/user/sh.asm	/^     cee:	74 25                	je     d15 <do_printf+0x78>$/;"	l
cf	obj/user/echo.asm	/^  cf:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax$/;"	l
cf	obj/user/fstest.asm	/^  cf:	85 c0                	test   %eax,%eax$/;"	l
cf	obj/user/mkdir.asm	/^  cf:	c3                   	retq   $/;"	l
cf	obj/user/preemptiontest2.asm	/^  cf:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax$/;"	l
cf	obj/user/rm.asm	/^  cf:	c3                   	retq   $/;"	l
cf	obj/user/sh.asm	/^      cf:	bf 58 13 00 00       	mov    $0x1358,%edi$/;"	l
cf0	obj/user/sh.asm	/^     cf0:	44 0f be 23          	movsbl (%rbx),%r12d$/;"	l
cf1	obj/user/fstest.asm	/^ cf1:	74 10                	je     d03 <strlen+0x19>$/;"	l
cf3	obj/user/fstest.asm	/^ cf3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
cf4	obj/user/sh.asm	/^     cf4:	48 83 c3 01          	add    $0x1,%rbx$/;"	l
cf8	obj/user/fstest.asm	/^ cf8:	48 83 c0 01          	add    $0x1,%rax$/;"	l
cf8	obj/user/sh.asm	/^     cf8:	44 89 e0             	mov    %r12d,%eax$/;"	l
cfb	obj/user/sh.asm	/^     cfb:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
cfc	obj/user/fstest.asm	/^ cfc:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)$/;"	l
cgaputc	kern/console.c	/^static void cgaputc(int c) {$/;"	f	file:
chan	kern/proc.h	/^  void *chan;                 \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc
char	obj/kern/kernel.asm	/^char *kalloc(void) {$/;"	l
char	obj/kern/kernel.asm	/^char *safestrcpy(char *s, const char *t, int n) {$/;"	l
char	obj/kern/kernel.asm	/^char *strchr(const char *s, int c) {$/;"	l
char	obj/kern/kernel.asm	/^char *strncpy(char *s, const char *t, size_t n) {$/;"	l
char	obj/kern/kernel.asm	/^char *uva2ka(pte_t *pgdir, char *uva) {$/;"	l
char	obj/user/cat.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/cat.asm	/^char buf[512];$/;"	l
char	obj/user/echo.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/fstest.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/fstest.asm	/^char *safestrcpy(char *s, const char *t, int n) {$/;"	l
char	obj/user/fstest.asm	/^char *strchr(const char *s, int c) {$/;"	l
char	obj/user/fstest.asm	/^char *strncpy(char *s, const char *t, size_t n) {$/;"	l
char	obj/user/init.asm	/^char *argv[] = {"sh", 0};$/;"	l
char	obj/user/init.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/ln.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/ls.asm	/^char *fmtname(char *path) {$/;"	l
char	obj/user/ls.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/ls.asm	/^char *safestrcpy(char *s, const char *t, int n) {$/;"	l
char	obj/user/ls.asm	/^char *strchr(const char *s, int c) {$/;"	l
char	obj/user/ls.asm	/^char *strncpy(char *s, const char *t, size_t n) {$/;"	l
char	obj/user/mkdir.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/preemptiontest1.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/preemptiontest1.asm	/^char *msg = "I am preemptiontest1\\n";$/;"	l
char	obj/user/preemptiontest2.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/preemptiontest2.asm	/^char *msg = "I am preemptiontest2\\n";$/;"	l
char	obj/user/rm.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/sh.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/sh.asm	/^char *safestrcpy(char *s, const char *t, int n) {$/;"	l
char	obj/user/sh.asm	/^char *strchr(const char *s, int c) {$/;"	l
char	obj/user/sh.asm	/^char *strncpy(char *s, const char *t, size_t n) {$/;"	l
char	obj/user/sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	obj/user/sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	obj/user/vatest.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/wc.asm	/^char *gets(char *buf, int max) {$/;"	l
char	obj/user/wc.asm	/^char *safestrcpy(char *s, const char *t, int n) {$/;"	l
char	obj/user/wc.asm	/^char *strchr(const char *s, int c) {$/;"	l
char	obj/user/wc.asm	/^char *strncpy(char *s, const char *t, size_t n) {$/;"	l
char	obj/user/wc.asm	/^char buf[512];$/;"	l
checksum	kern/mp.h	/^  uint8_t checksum;    \/\/ all bytes must add up to 0$/;"	m	struct:mpconf
checksum	kern/mp.h	/^  uint8_t checksum;  \/\/ all bytes must add up to 0$/;"	m	struct:mp
clearpteu	kern/vm.c	/^void clearpteu(pte_t *pgdir, char *uva) {$/;"	f
cli	kern/x86.h	/^static inline void cli(void) { __asm__ volatile("cli"); }$/;"	f
cmd	obj/user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	obj/user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY | O_CREATE | O_APPEND, 1);$/;"	d
cmd	obj/user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY | O_CREATE, 1);$/;"	d
cmd	obj/user/sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	obj/user/sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	obj/user/sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	obj/user/sh.asm	/^  cmd = (struct execcmd *)ret;$/;"	d
cmd	obj/user/sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	obj/user/sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	obj/user/sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	obj/user/sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	obj/user/sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	obj/user/sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	user/sh.c	/^struct cmd {$/;"	s	file:
commit	kern/log.c	/^static void commit(void) {$/;"	f	file:
committing	kern/log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	file:
conf	obj/kern/kernel.asm	/^  conf = (struct mpconf *)P2V((uintptr_t)mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon4	file:
consoleinit	kern/console.c	/^void consoleinit(void) {$/;"	f
consoleintr	kern/console.c	/^void consoleintr(int (*getc)(void)) {$/;"	f
consoleread	kern/console.c	/^int consoleread(struct inode *ip, char *dst, int n) {$/;"	f
consolewrite	kern/console.c	/^int consolewrite(struct inode *ip, char *buf, int n) {$/;"	f
consputc	kern/console.c	/^void consputc(int c) {$/;"	f
context	kern/proc.h	/^  struct context *context;    \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:proc::context
context	kern/proc.h	/^struct context {$/;"	s
copyout	kern/vm.c	/^int copyout(pte_t *pgdir, uintptr_t va, void *p, size_t len) {$/;"	f
copyuvm	kern/vm.c	/^pte_t *copyuvm(pte_t *pgdir, size_t sz) {$/;"	f
cprintf	kern/console.c	/^void cprintf(char *fmt, ...) {$/;"	f
cpu	kern/proc.h	/^struct cpu {$/;"	s
cpu	kern/spinlock.h	/^  struct cpu *cpu; \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu
cpuid	kern/proc.c	/^int cpuid() { return mycpu() - cpus; }$/;"	f
cpus	kern/mp.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu
create	kern/sysfile.c	/^static struct inode *create(char *path, short type, short major, short minor) {$/;"	f	file:
crt	kern/console.c	/^static ushort *crt = (ushort *)P2V(0xb8000); \/\/ CGA memory$/;"	v	file:
cs	kern/mmu.h	/^  uint32_t cs : 16;        \/\/ code segment selector$/;"	m	struct:gatedesc
cs	kern/x86.h	/^  uint16_t cs;$/;"	m	struct:trapframe
ctlmap	kern/kbd.h	/^static uchar ctlmap[256] = {NO,$/;"	v
cwd	kern/proc.h	/^  struct inode *cwd;          \/\/ Current directory$/;"	m	struct:proc	typeref:struct:proc::inode
d	obj/kern/kernel.asm	/^  d = dst;$/;"	d
d	obj/user/fstest.asm	/^  d = dst;$/;"	d
d	obj/user/init.asm	/^   d:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
d	obj/user/ln.asm	/^   d:	48 89 f3             	mov    %rsi,%rbx$/;"	l
d	obj/user/ls.asm	/^  d = dst;$/;"	d
d	obj/user/mkdir.asm	/^   d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
d	obj/user/preemptiontest1.asm	/^   d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
d	obj/user/preemptiontest2.asm	/^   d:	bb 64 00 00 00       	mov    $0x64,%ebx$/;"	l
d	obj/user/rm.asm	/^   d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
d	obj/user/sh.asm	/^  d = dst;$/;"	d
d	obj/user/wc.asm	/^  d = dst;$/;"	d
d0	obj/user/ls.asm	/^  d0:	0f b7 85 ac fd ff ff 	movzwl -0x254(%rbp),%eax$/;"	l
d0	obj/user/mkdir.asm	/^  d0:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax$/;"	l
d0	obj/user/rm.asm	/^  d0:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax$/;"	l
d0	obj/user/vatest.asm	/^  d0:	eb 91                	jmp    63 <f+0x63>$/;"	l
d00	obj/user/fstest.asm	/^ d00:	75 f6                	jne    cf8 <strlen+0xe>$/;"	l
d00	obj/user/sh.asm	/^     d00:	0f 84 c0 01 00 00    	je     ec6 <do_printf+0x229>$/;"	l
d02	obj/user/fstest.asm	/^ d02:	c3                   	retq   $/;"	l
d03	obj/user/fstest.asm	/^ d03:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d06	obj/user/sh.asm	/^     d06:	45 85 ed             	test   %r13d,%r13d$/;"	l
d08	obj/user/fstest.asm	/^ d08:	c3                   	retq   $/;"	l
d09	obj/user/fstest.asm	/^ d09:	f3 0f 1e fa          	endbr64 $/;"	l
d09	obj/user/sh.asm	/^     d09:	75 df                	jne    cea <do_printf+0x4d>$/;"	l
d0b	obj/user/sh.asm	/^     d0b:	83 f8 25             	cmp    $0x25,%eax$/;"	l
d0d	obj/user/fstest.asm	/^ d0d:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
d0e	obj/user/sh.asm	/^     d0e:	75 c9                	jne    cd9 <do_printf+0x3c>$/;"	l
d1	obj/user/fstest.asm	/^  d1:	0f 88 5b 01 00 00    	js     232 <main+0x232>$/;"	l
d1	obj/user/ln.asm	/^  d1:	cd 30                	int    $0x30$/;"	l
d10	obj/user/fstest.asm	/^ d10:	84 c0                	test   %al,%al$/;"	l
d10	obj/user/sh.asm	/^     d10:	41 89 c5             	mov    %eax,%r13d$/;"	l
d12	obj/user/fstest.asm	/^ d12:	74 16                	je     d2a <strchr+0x21>$/;"	l
d13	obj/user/sh.asm	/^     d13:	eb db                	jmp    cf0 <do_printf+0x53>$/;"	l
d14	obj/user/fstest.asm	/^ d14:	40 38 f0             	cmp    %sil,%al$/;"	l
d15	obj/user/sh.asm	/^     d15:	83 f8 64             	cmp    $0x64,%eax$/;"	l
d17	obj/user/fstest.asm	/^ d17:	74 17                	je     d30 <strchr+0x27>$/;"	l
d18	obj/user/sh.asm	/^     d18:	74 51                	je     d6b <do_printf+0xce>$/;"	l
d19	obj/user/fstest.asm	/^ d19:	48 83 c7 01          	add    $0x1,%rdi$/;"	l
d1a	obj/user/sh.asm	/^     d1a:	89 c2                	mov    %eax,%edx$/;"	l
d1c	obj/user/sh.asm	/^     d1c:	83 e2 f7             	and    $0xfffffff7,%edx$/;"	l
d1d	obj/user/fstest.asm	/^ d1d:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
d1f	obj/user/sh.asm	/^     d1f:	83 fa 70             	cmp    $0x70,%edx$/;"	l
d2	obj/user/vatest.asm	/^  d2:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx$/;"	l
d2	obj/user/wc.asm	/^  d2:	e8 e8 04 00 00       	callq  5bf <dprintf>$/;"	l
d20	obj/user/fstest.asm	/^ d20:	84 c0                	test   %al,%al$/;"	l
d22	obj/user/fstest.asm	/^ d22:	75 f0                	jne    d14 <strchr+0xb>$/;"	l
d22	obj/user/sh.asm	/^     d22:	0f 84 89 00 00 00    	je     db1 <do_printf+0x114>$/;"	l
d24	obj/user/fstest.asm	/^ d24:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d28	obj/user/sh.asm	/^     d28:	83 f8 73             	cmp    $0x73,%eax$/;"	l
d29	obj/user/fstest.asm	/^ d29:	c3                   	retq   $/;"	l
d2a	obj/user/fstest.asm	/^ d2a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d2b	obj/user/sh.asm	/^     d2b:	0f 84 c6 00 00 00    	je     df7 <do_printf+0x15a>$/;"	l
d2f	obj/user/fstest.asm	/^ d2f:	c3                   	retq   $/;"	l
d3	obj/user/cat.asm	/^  d3:	49 83 c4 08          	add    $0x8,%r12$/;"	l
d3	obj/user/ln.asm	/^  d3:	c3                   	retq   $/;"	l
d3	obj/user/preemptiontest1.asm	/^  d3:	cd 30                	int    $0x30$/;"	l
d30	obj/user/fstest.asm	/^ d30:	48 89 f8             	mov    %rdi,%rax$/;"	l
d31	obj/user/sh.asm	/^     d31:	83 f8 63             	cmp    $0x63,%eax$/;"	l
d33	obj/user/fstest.asm	/^ d33:	c3                   	retq   $/;"	l
d34	obj/user/sh.asm	/^     d34:	0f 84 2b 01 00 00    	je     e65 <do_printf+0x1c8>$/;"	l
d3a	obj/user/sh.asm	/^     d3a:	83 f8 25             	cmp    $0x25,%eax$/;"	l
d3d	obj/user/sh.asm	/^     d3d:	0f 84 5e 01 00 00    	je     ea1 <do_printf+0x204>$/;"	l
d4	obj/user/ln.asm	/^  d4:	48 c7 c0 0b 00 00 00 	mov    $0xb,%rax$/;"	l
d4	obj/user/sh.asm	/^      d4:	e8 77 ff ff ff       	callq  50 <panic>$/;"	l
d43	obj/user/sh.asm	/^     d43:	48 8d 55 cc          	lea    -0x34(%rbp),%rdx$/;"	l
d47	obj/user/sh.asm	/^     d47:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
d4c	obj/user/sh.asm	/^     d4c:	44 89 f7             	mov    %r14d,%edi$/;"	l
d4f	obj/user/sh.asm	/^     d4f:	e8 83 fe ff ff       	callq  bd7 <printchar>$/;"	l
d5	obj/user/init.asm	/^  d5:	cd 30                	int    $0x30$/;"	l
d5	obj/user/preemptiontest1.asm	/^  d5:	c3                   	retq   $/;"	l
d54	obj/user/sh.asm	/^     d54:	48 8d 55 cc          	lea    -0x34(%rbp),%rdx$/;"	l
d58	obj/user/sh.asm	/^     d58:	44 89 e6             	mov    %r12d,%esi$/;"	l
d5b	obj/user/sh.asm	/^     d5b:	44 89 f7             	mov    %r14d,%edi$/;"	l
d5e	obj/user/sh.asm	/^     d5e:	e8 74 fe ff ff       	callq  bd7 <printchar>$/;"	l
d6	obj/user/echo.asm	/^  d6:	cd 30                	int    $0x30$/;"	l
d6	obj/user/preemptiontest1.asm	/^  d6:	48 c7 c0 05 00 00 00 	mov    $0x5,%rax$/;"	l
d6	obj/user/preemptiontest2.asm	/^  d6:	cd 30                	int    $0x30$/;"	l
d6	obj/user/vatest.asm	/^  d6:	48 8d 42 08          	lea    0x8(%rdx),%rax$/;"	l
d63	obj/user/sh.asm	/^     d63:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
d69	obj/user/sh.asm	/^     d69:	eb 85                	jmp    cf0 <do_printf+0x53>$/;"	l
d6b	obj/user/sh.asm	/^     d6b:	41 8b 07             	mov    (%r15),%eax$/;"	l
d6e	obj/user/sh.asm	/^     d6e:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
d7	obj/user/cat.asm	/^  d7:	4d 39 ec             	cmp    %r13,%r12$/;"	l
d7	obj/user/fstest.asm	/^  d7:	bf 40 0d 00 00       	mov    $0xd40,%edi$/;"	l
d7	obj/user/init.asm	/^  d7:	c3                   	retq   $/;"	l
d7	obj/user/ls.asm	/^  d7:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
d7	obj/user/mkdir.asm	/^  d7:	cd 30                	int    $0x30$/;"	l
d7	obj/user/rm.asm	/^  d7:	cd 30                	int    $0x30$/;"	l
d7	obj/user/wc.asm	/^  d7:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
d71	obj/user/sh.asm	/^     d71:	77 30                	ja     da3 <do_printf+0x106>$/;"	l
d73	obj/user/sh.asm	/^     d73:	89 c2                	mov    %eax,%edx$/;"	l
d75	obj/user/sh.asm	/^     d75:	49 03 57 10          	add    0x10(%r15),%rdx$/;"	l
d79	obj/user/sh.asm	/^     d79:	83 c0 08             	add    $0x8,%eax$/;"	l
d7c	obj/user/sh.asm	/^     d7c:	41 89 07             	mov    %eax,(%r15)$/;"	l
d7f	obj/user/sh.asm	/^     d7f:	48 63 32             	movslq (%rdx),%rsi$/;"	l
d8	obj/user/echo.asm	/^  d8:	c3                   	retq   $/;"	l
d8	obj/user/init.asm	/^  d8:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax$/;"	l
d8	obj/user/preemptiontest2.asm	/^  d8:	c3                   	retq   $/;"	l
d82	obj/user/sh.asm	/^     d82:	4c 8d 45 cc          	lea    -0x34(%rbp),%r8$/;"	l
d86	obj/user/sh.asm	/^     d86:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
d8b	obj/user/sh.asm	/^     d8b:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
d9	obj/user/echo.asm	/^  d9:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax$/;"	l
d9	obj/user/mkdir.asm	/^  d9:	c3                   	retq   $/;"	l
d9	obj/user/preemptiontest2.asm	/^  d9:	48 c7 c0 10 00 00 00 	mov    $0x10,%rax$/;"	l
d9	obj/user/rm.asm	/^  d9:	c3                   	retq   $/;"	l
d9	obj/user/sh.asm	/^      d9:	e8 27 0a 00 00       	callq  b05 <exit>$/;"	l
d90	obj/user/sh.asm	/^     d90:	44 89 f7             	mov    %r14d,%edi$/;"	l
d93	obj/user/sh.asm	/^     d93:	e8 67 fe ff ff       	callq  bff <printint>$/;"	l
d98	obj/user/sh.asm	/^     d98:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
d9e	obj/user/sh.asm	/^     d9e:	e9 4d ff ff ff       	jmpq   cf0 <do_printf+0x53>$/;"	l
da	obj/user/cat.asm	/^  da:	74 d4                	je     b0 <main+0x33>$/;"	l
da	obj/user/mkdir.asm	/^  da:	48 c7 c0 0a 00 00 00 	mov    $0xa,%rax$/;"	l
da	obj/user/rm.asm	/^  da:	48 c7 c0 0a 00 00 00 	mov    $0xa,%rax$/;"	l
da	obj/user/vatest.asm	/^  da:	48 89 45 a0          	mov    %rax,-0x60(%rbp)$/;"	l
da3	obj/user/sh.asm	/^     da3:	49 8b 57 08          	mov    0x8(%r15),%rdx$/;"	l
da7	obj/user/sh.asm	/^     da7:	48 8d 42 08          	lea    0x8(%rdx),%rax$/;"	l
dab	obj/user/sh.asm	/^     dab:	49 89 47 08          	mov    %rax,0x8(%r15)$/;"	l
daf	obj/user/sh.asm	/^     daf:	eb ce                	jmp    d7f <do_printf+0xe2>$/;"	l
dap	boot/stage_1.S	/^dap: # disk access packet$/;"	l
dap_blocks	boot/stage_1.S	/^dap_blocks:$/;"	l
dap_buffer_addr	boot/stage_1.S	/^dap_buffer_addr:$/;"	l
dap_buffer_seg	boot/stage_1.S	/^dap_buffer_seg:$/;"	l
dap_start_lba	boot/stage_1.S	/^dap_start_lba:$/;"	l
data	kern/buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf
data	kern/ioapic.c	/^  uint32_t data;$/;"	m	struct:ioapic	file:
data	kern/pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	file:
data	obj/kern/kernel.asm	/^    data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^  data = inb(KBDATAP);$/;"	d
db	kern/mmu.h	/^  uint db : 1; \/\/ 0 = 16-bit segment, 1 = 32-bit segment <- this must be clear$/;"	m	struct:segdesc
db	kern/mmu.h	/^  uint32_t db : 1; \/\/ 0 = 16-bit segment, 1 = 32-bit segment <- this must be$/;"	m	struct:tssdesc
db	obj/user/ln.asm	/^  db:	cd 30                	int    $0x30$/;"	l
db	obj/user/ls.asm	/^  db:	0f 84 90 00 00 00    	je     171 <ls+0xe6>$/;"	l
db	obj/user/wc.asm	/^  db:	5b                   	pop    %rbx$/;"	l
db1	obj/user/sh.asm	/^     db1:	41 8b 07             	mov    (%r15),%eax$/;"	l
db4	obj/user/sh.asm	/^     db4:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
db7	obj/user/sh.asm	/^     db7:	77 30                	ja     de9 <do_printf+0x14c>$/;"	l
db9	obj/user/sh.asm	/^     db9:	89 c2                	mov    %eax,%edx$/;"	l
dbb	obj/user/sh.asm	/^     dbb:	49 03 57 10          	add    0x10(%r15),%rdx$/;"	l
dbf	obj/user/sh.asm	/^     dbf:	83 c0 08             	add    $0x8,%eax$/;"	l
dc	obj/user/cat.asm	/^  dc:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
dc	obj/user/fstest.asm	/^  dc:	e8 51 04 00 00       	callq  532 <chdir>$/;"	l
dc	obj/user/wc.asm	/^  dc:	41 5c                	pop    %r12$/;"	l
dc2	obj/user/sh.asm	/^     dc2:	41 89 07             	mov    %eax,(%r15)$/;"	l
dc5	obj/user/sh.asm	/^     dc5:	48 63 32             	movslq (%rdx),%rsi$/;"	l
dc8	obj/user/sh.asm	/^     dc8:	4c 8d 45 cc          	lea    -0x34(%rbp),%r8$/;"	l
dcc	obj/user/sh.asm	/^     dcc:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
dd	obj/user/ln.asm	/^  dd:	c3                   	retq   $/;"	l
dd	obj/user/preemptiontest1.asm	/^  dd:	cd 30                	int    $0x30$/;"	l
dd1	obj/user/sh.asm	/^     dd1:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
dd6	obj/user/sh.asm	/^     dd6:	44 89 f7             	mov    %r14d,%edi$/;"	l
dd9	obj/user/sh.asm	/^     dd9:	e8 21 fe ff ff       	callq  bff <printint>$/;"	l
dde	obj/user/sh.asm	/^     dde:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
de	obj/user/ln.asm	/^  de:	48 c7 c0 0c 00 00 00 	mov    $0xc,%rax$/;"	l
de	obj/user/sh.asm	/^      de:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
de	obj/user/vatest.asm	/^  de:	eb ac                	jmp    8c <f+0x8c>$/;"	l
de	obj/user/wc.asm	/^  de:	41 5d                	pop    %r13$/;"	l
de4	obj/user/sh.asm	/^     de4:	e9 07 ff ff ff       	jmpq   cf0 <do_printf+0x53>$/;"	l
de9	obj/user/sh.asm	/^     de9:	49 8b 57 08          	mov    0x8(%r15),%rdx$/;"	l
deallocuvm	kern/vm.c	/^int deallocuvm(pte_t *pgdir, size_t oldsz, size_t newsz) {$/;"	f
ded	obj/user/sh.asm	/^     ded:	48 8d 42 08          	lea    0x8(%rdx),%rax$/;"	l
default	obj/kern/kernel.asm	/^  default:$/;"	l
detect_memory	kern/kalloc.c	/^static void detect_memory(void) {$/;"	f	file:
dev	inc/stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat
dev	kern/buf.h	/^  uint dev;$/;"	m	struct:buf
dev	kern/file.h	/^  uint dev;              \/\/ Device number$/;"	m	struct:inode
dev	kern/log.c	/^  int dev;$/;"	m	struct:log	file:
devsw	kern/file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw
devsw	kern/file.h	/^struct devsw {$/;"	s
df	obj/user/init.asm	/^  df:	cd 30                	int    $0x30$/;"	l
df	obj/user/preemptiontest1.asm	/^  df:	c3                   	retq   $/;"	l
df1	obj/user/sh.asm	/^     df1:	49 89 47 08          	mov    %rax,0x8(%r15)$/;"	l
df5	obj/user/sh.asm	/^     df5:	eb ce                	jmp    dc5 <do_printf+0x128>$/;"	l
df7	obj/user/sh.asm	/^     df7:	41 8b 07             	mov    (%r15),%eax$/;"	l
dfa	obj/user/sh.asm	/^     dfa:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
dfd	obj/user/sh.asm	/^     dfd:	77 4b                	ja     e4a <do_printf+0x1ad>$/;"	l
dff	obj/user/sh.asm	/^     dff:	89 c2                	mov    %eax,%edx$/;"	l
dinode	kern/fs.h	/^struct dinode {$/;"	s
dip	obj/kern/kernel.asm	/^    dip = (struct dinode *)bp->data + inum % IPB;$/;"	d
dip	obj/kern/kernel.asm	/^    dip = (struct dinode *)bp->data + ip->inum % IPB;$/;"	d
dip	obj/kern/kernel.asm	/^  dip = (struct dinode *)bp->data + ip->inum % IPB;$/;"	d
dirent	inc/dir.h	/^struct dirent {$/;"	s
dirlink	kern/fs.c	/^int dirlink(struct inode *dp, char *name, uint inum) {$/;"	f
dirlookup	kern/fs.c	/^struct inode *dirlookup(struct inode *dp, char *name, uint *poff) {$/;"	f
do_commit	obj/kern/kernel.asm	/^    do_commit = 1;$/;"	d
do_freevm	kern/vm.c	/^void do_freevm(pte_t *table, int level) {$/;"	f
do_printf	user/printf.c	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	f	file:
do_walk	kern/vm.c	/^do_walk(pte_t *table, const void *va, int alloc, int level) {$/;"	f	file:
dpl	kern/mmu.h	/^  uint dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:segdesc
dpl	kern/mmu.h	/^  uint32_t dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:tssdesc
dpl	kern/mmu.h	/^  uint32_t dpl : 2;        \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
dprintf	user/printf.c	/^int dprintf(int fd, const char *fmt, ...) {$/;"	f
e	kern/console.c	/^  uint e; \/\/ Edit index$/;"	m	struct:__anon5	file:
e	obj/kern/kernel.asm	/^  e = addr + len;$/;"	d
e	obj/user/cat.asm	/^   e:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
e	obj/user/echo.asm	/^   e:	41 55                	push   %r13$/;"	l
e	obj/user/ls.asm	/^   e:	e8 d9 0a 00 00       	callq  aec <strlen>$/;"	l
e	obj/user/sh.asm	/^       e:	41 89 f4             	mov    %esi,%r12d$/;"	l
e	obj/user/vatest.asm	/^   e:	53                   	push   %rbx$/;"	l
e	obj/user/wc.asm	/^   e:	41 54                	push   %r12$/;"	l
e0	obj/user/echo.asm	/^  e0:	cd 30                	int    $0x30$/;"	l
e0	obj/user/preemptiontest1.asm	/^  e0:	48 c7 c0 06 00 00 00 	mov    $0x6,%rax$/;"	l
e0	obj/user/preemptiontest2.asm	/^  e0:	cd 30                	int    $0x30$/;"	l
e0	obj/user/vatest.asm	/^  e0:	f3 0f 1e fa          	endbr64 $/;"	l
e0	obj/user/wc.asm	/^  e0:	41 5e                	pop    %r14$/;"	l
e01	obj/user/sh.asm	/^     e01:	49 03 57 10          	add    0x10(%r15),%rdx$/;"	l
e05	obj/user/sh.asm	/^     e05:	83 c0 08             	add    $0x8,%eax$/;"	l
e08	obj/user/sh.asm	/^     e08:	41 89 07             	mov    %eax,(%r15)$/;"	l
e0b	obj/user/sh.asm	/^     e0b:	4c 8b 22             	mov    (%rdx),%r12$/;"	l
e0e	obj/user/sh.asm	/^     e0e:	4d 85 e4             	test   %r12,%r12$/;"	l
e1	obj/user/cat.asm	/^  e1:	49 8b 3c 24          	mov    (%r12),%rdi$/;"	l
e1	obj/user/fstest.asm	/^  e1:	85 c0                	test   %eax,%eax$/;"	l
e1	obj/user/init.asm	/^  e1:	c3                   	retq   $/;"	l
e1	obj/user/ls.asm	/^  e1:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
e1	obj/user/mkdir.asm	/^  e1:	cd 30                	int    $0x30$/;"	l
e1	obj/user/rm.asm	/^  e1:	cd 30                	int    $0x30$/;"	l
e11	obj/user/sh.asm	/^     e11:	74 45                	je     e58 <do_printf+0x1bb>$/;"	l
e13	obj/user/sh.asm	/^     e13:	41 0f b6 34 24       	movzbl (%r12),%esi$/;"	l
e18	obj/user/sh.asm	/^     e18:	40 84 f6             	test   %sil,%sil$/;"	l
e1b	obj/user/sh.asm	/^     e1b:	0f 84 9a 00 00 00    	je     ebb <do_printf+0x21e>$/;"	l
e2	obj/user/echo.asm	/^  e2:	c3                   	retq   $/;"	l
e2	obj/user/init.asm	/^  e2:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax$/;"	l
e2	obj/user/preemptiontest2.asm	/^  e2:	c3                   	retq   $/;"	l
e2	obj/user/sh.asm	/^      e2:	5b                   	pop    %rbx$/;"	l
e2	obj/user/wc.asm	/^  e2:	41 5f                	pop    %r15$/;"	l
e21	obj/user/sh.asm	/^     e21:	40 0f be f6          	movsbl %sil,%esi$/;"	l
e25	obj/user/sh.asm	/^     e25:	48 8d 55 cc          	lea    -0x34(%rbp),%rdx$/;"	l
e29	obj/user/sh.asm	/^     e29:	44 89 f7             	mov    %r14d,%edi$/;"	l
e2c	obj/user/sh.asm	/^     e2c:	e8 a6 fd ff ff       	callq  bd7 <printchar>$/;"	l
e3	obj/user/echo.asm	/^  e3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax$/;"	l
e3	obj/user/fstest.asm	/^  e3:	0f 88 6c 01 00 00    	js     255 <main+0x255>$/;"	l
e3	obj/user/mkdir.asm	/^  e3:	c3                   	retq   $/;"	l
e3	obj/user/preemptiontest2.asm	/^  e3:	48 c7 c0 11 00 00 00 	mov    $0x11,%rax$/;"	l
e3	obj/user/rm.asm	/^  e3:	c3                   	retq   $/;"	l
e3	obj/user/sh.asm	/^      e3:	5d                   	pop    %rbp$/;"	l
e31	obj/user/sh.asm	/^     e31:	49 83 c4 01          	add    $0x1,%r12$/;"	l
e35	obj/user/sh.asm	/^     e35:	41 0f b6 34 24       	movzbl (%r12),%esi$/;"	l
e3a	obj/user/sh.asm	/^     e3a:	40 84 f6             	test   %sil,%sil$/;"	l
e3d	obj/user/sh.asm	/^     e3d:	75 e2                	jne    e21 <do_printf+0x184>$/;"	l
e3f	obj/user/sh.asm	/^     e3f:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
e4	obj/user/mkdir.asm	/^  e4:	48 c7 c0 0b 00 00 00 	mov    $0xb,%rax$/;"	l
e4	obj/user/rm.asm	/^  e4:	48 c7 c0 0b 00 00 00 	mov    $0xb,%rax$/;"	l
e4	obj/user/sh.asm	/^      e4:	c3                   	retq   $/;"	l
e4	obj/user/vatest.asm	/^  e4:	55                   	push   %rbp$/;"	l
e4	obj/user/wc.asm	/^  e4:	5d                   	pop    %rbp$/;"	l
e45	obj/user/sh.asm	/^     e45:	e9 a6 fe ff ff       	jmpq   cf0 <do_printf+0x53>$/;"	l
e4a	obj/user/sh.asm	/^     e4a:	49 8b 57 08          	mov    0x8(%r15),%rdx$/;"	l
e4e	obj/user/sh.asm	/^     e4e:	48 8d 42 08          	lea    0x8(%rdx),%rax$/;"	l
e5	obj/user/cat.asm	/^  e5:	e8 a7 00 00 00       	callq  191 <open>$/;"	l
e5	obj/user/ln.asm	/^  e5:	cd 30                	int    $0x30$/;"	l
e5	obj/user/ls.asm	/^  e5:	75 38                	jne    11f <ls+0x94>$/;"	l
e5	obj/user/sh.asm	/^      e5:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)$/;"	l
e5	obj/user/vatest.asm	/^  e5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
e5	obj/user/wc.asm	/^  e5:	c3                   	retq   $/;"	l
e52	obj/user/sh.asm	/^     e52:	49 89 47 08          	mov    %rax,0x8(%r15)$/;"	l
e56	obj/user/sh.asm	/^     e56:	eb b3                	jmp    e0b <do_printf+0x16e>$/;"	l
e58	obj/user/sh.asm	/^     e58:	41 bc 68 14 00 00    	mov    $0x1468,%r12d$/;"	l
e5e	obj/user/sh.asm	/^     e5e:	be 28 00 00 00       	mov    $0x28,%esi$/;"	l
e6	obj/user/wc.asm	/^  e6:	be f6 09 00 00       	mov    $0x9f6,%esi$/;"	l
e63	obj/user/sh.asm	/^     e63:	eb bc                	jmp    e21 <do_printf+0x184>$/;"	l
e65	obj/user/sh.asm	/^     e65:	41 8b 07             	mov    (%r15),%eax$/;"	l
e68	obj/user/sh.asm	/^     e68:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
e6b	obj/user/sh.asm	/^     e6b:	77 26                	ja     e93 <do_printf+0x1f6>$/;"	l
e6d	obj/user/sh.asm	/^     e6d:	89 c2                	mov    %eax,%edx$/;"	l
e6f	obj/user/sh.asm	/^     e6f:	49 03 57 10          	add    0x10(%r15),%rdx$/;"	l
e7	obj/user/ln.asm	/^  e7:	c3                   	retq   $/;"	l
e7	obj/user/ls.asm	/^  e7:	44 8b b5 bc fd ff ff 	mov    -0x244(%rbp),%r14d$/;"	l
e7	obj/user/preemptiontest1.asm	/^  e7:	cd 30                	int    $0x30$/;"	l
e73	obj/user/sh.asm	/^     e73:	83 c0 08             	add    $0x8,%eax$/;"	l
e76	obj/user/sh.asm	/^     e76:	41 89 07             	mov    %eax,(%r15)$/;"	l
e79	obj/user/sh.asm	/^     e79:	0f be 32             	movsbl (%rdx),%esi$/;"	l
e7c	obj/user/sh.asm	/^     e7c:	48 8d 55 cc          	lea    -0x34(%rbp),%rdx$/;"	l
e8	obj/user/ln.asm	/^  e8:	48 c7 c0 0d 00 00 00 	mov    $0xd,%rax$/;"	l
e8	obj/user/vatest.asm	/^  e8:	b9 03 00 00 00       	mov    $0x3,%ecx$/;"	l
e80	obj/user/sh.asm	/^     e80:	44 89 f7             	mov    %r14d,%edi$/;"	l
e83	obj/user/sh.asm	/^     e83:	e8 4f fd ff ff       	callq  bd7 <printchar>$/;"	l
e88	obj/user/sh.asm	/^     e88:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
e8e	obj/user/sh.asm	/^     e8e:	e9 5d fe ff ff       	jmpq   cf0 <do_printf+0x53>$/;"	l
e9	obj/user/fstest.asm	/^  e9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
e9	obj/user/init.asm	/^  e9:	cd 30                	int    $0x30$/;"	l
e9	obj/user/preemptiontest1.asm	/^  e9:	c3                   	retq   $/;"	l
e93	obj/user/sh.asm	/^     e93:	49 8b 57 08          	mov    0x8(%r15),%rdx$/;"	l
e97	obj/user/sh.asm	/^     e97:	48 8d 42 08          	lea    0x8(%rdx),%rax$/;"	l
e9b	obj/user/sh.asm	/^     e9b:	49 89 47 08          	mov    %rax,0x8(%r15)$/;"	l
e9f	obj/user/sh.asm	/^     e9f:	eb d8                	jmp    e79 <do_printf+0x1dc>$/;"	l
ea	obj/user/cat.asm	/^  ea:	89 c3                	mov    %eax,%ebx$/;"	l
ea	obj/user/echo.asm	/^  ea:	cd 30                	int    $0x30$/;"	l
ea	obj/user/preemptiontest1.asm	/^  ea:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax$/;"	l
ea	obj/user/preemptiontest2.asm	/^  ea:	cd 30                	int    $0x30$/;"	l
ea	obj/user/sh.asm	/^      ea:	74 27                	je     113 <runcmd+0x6f>$/;"	l
ea1	obj/user/sh.asm	/^     ea1:	48 8d 55 cc          	lea    -0x34(%rbp),%rdx$/;"	l
ea5	obj/user/sh.asm	/^     ea5:	44 89 e6             	mov    %r12d,%esi$/;"	l
ea8	obj/user/sh.asm	/^     ea8:	44 89 f7             	mov    %r14d,%edi$/;"	l
eab	obj/user/sh.asm	/^     eab:	e8 27 fd ff ff       	callq  bd7 <printchar>$/;"	l
eargv	user/sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eb	obj/user/init.asm	/^  eb:	c3                   	retq   $/;"	l
eb	obj/user/mkdir.asm	/^  eb:	cd 30                	int    $0x30$/;"	l
eb	obj/user/rm.asm	/^  eb:	cd 30                	int    $0x30$/;"	l
eb	obj/user/wc.asm	/^  eb:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
eb0	obj/user/sh.asm	/^     eb0:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
eb6	obj/user/sh.asm	/^     eb6:	e9 35 fe ff ff       	jmpq   cf0 <do_printf+0x53>$/;"	l
ebb	obj/user/sh.asm	/^     ebb:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
ec	obj/user/cat.asm	/^  ec:	85 c0                	test   %eax,%eax$/;"	l
ec	obj/user/echo.asm	/^  ec:	c3                   	retq   $/;"	l
ec	obj/user/init.asm	/^  ec:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax$/;"	l
ec	obj/user/preemptiontest2.asm	/^  ec:	c3                   	retq   $/;"	l
ec	obj/user/sh.asm	/^      ec:	48 8d 73 08          	lea    0x8(%rbx),%rsi$/;"	l
ec1	obj/user/sh.asm	/^     ec1:	e9 2a fe ff ff       	jmpq   cf0 <do_printf+0x53>$/;"	l
ec6	obj/user/sh.asm	/^     ec6:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ec9	obj/user/sh.asm	/^     ec9:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ecd	obj/user/sh.asm	/^     ecd:	5b                   	pop    %rbx$/;"	l
ece	obj/user/sh.asm	/^     ece:	41 5c                	pop    %r12$/;"	l
echo	user/echo.c	/^void echo(int n, char *msgs[]) {$/;"	f
ecmd	obj/user/sh.asm	/^    ecmd = (struct execcmd *)cmd;$/;"	d
ed	obj/user/echo.asm	/^  ed:	48 c7 c0 05 00 00 00 	mov    $0x5,%rax$/;"	l
ed	obj/user/mkdir.asm	/^  ed:	c3                   	retq   $/;"	l
ed	obj/user/preemptiontest2.asm	/^  ed:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax$/;"	l
ed	obj/user/rm.asm	/^  ed:	c3                   	retq   $/;"	l
ed	obj/user/vatest.asm	/^  ed:	ba db 07 00 00       	mov    $0x7db,%edx$/;"	l
ed0	obj/user/sh.asm	/^     ed0:	41 5d                	pop    %r13$/;"	l
ed2	obj/user/sh.asm	/^     ed2:	41 5e                	pop    %r14$/;"	l
ed4	obj/user/sh.asm	/^     ed4:	41 5f                	pop    %r15$/;"	l
ed6	obj/user/sh.asm	/^     ed6:	5d                   	pop    %rbp$/;"	l
ed7	obj/user/sh.asm	/^     ed7:	c3                   	retq   $/;"	l
ed8	obj/user/sh.asm	/^     ed8:	f3 0f 1e fa          	endbr64 $/;"	l
edc	obj/user/sh.asm	/^     edc:	55                   	push   %rbp$/;"	l
edd	obj/user/sh.asm	/^     edd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ee	obj/user/cat.asm	/^  ee:	79 d5                	jns    c5 <main+0x48>$/;"	l
ee	obj/user/fstest.asm	/^  ee:	bf a5 0d 00 00       	mov    $0xda5,%edi$/;"	l
ee	obj/user/ls.asm	/^  ee:	44 8b ad b4 fd ff ff 	mov    -0x24c(%rbp),%r13d$/;"	l
ee	obj/user/mkdir.asm	/^  ee:	48 c7 c0 0c 00 00 00 	mov    $0xc,%rax$/;"	l
ee	obj/user/rm.asm	/^  ee:	48 c7 c0 0c 00 00 00 	mov    $0xc,%rax$/;"	l
ee0	obj/user/sh.asm	/^     ee0:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ee4	obj/user/sh.asm	/^     ee4:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)$/;"	l
ee8	obj/user/sh.asm	/^     ee8:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)$/;"	l
eec	obj/user/sh.asm	/^     eec:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)$/;"	l
ef	obj/user/ln.asm	/^  ef:	cd 30                	int    $0x30$/;"	l
ef0	obj/user/sh.asm	/^     ef0:	4c 89 45 f0          	mov    %r8,-0x10(%rbp)$/;"	l
ef4	obj/user/sh.asm	/^     ef4:	4c 89 4d f8          	mov    %r9,-0x8(%rbp)$/;"	l
ef8	obj/user/sh.asm	/^     ef8:	c7 45 b8 08 00 00 00 	movl   $0x8,-0x48(%rbp)$/;"	l
eff	obj/user/sh.asm	/^     eff:	48 8d 45 10          	lea    0x10(%rbp),%rax$/;"	l
efile	user/sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
eflags	obj/kern/kernel.asm	/^  eflags = readeflags();$/;"	d
ehsize	boot/elf.h	/^  uint16_t ehsize;$/;"	m	struct:elfhdr
ehsize	kern/elf.h	/^  uint16_t ehsize;$/;"	m	struct:elfhdr
elf	boot/elf.h	/^  uint8_t elf[12]; \/\/ CLASS, DATA, VERSION, OSABI, ABIVERSION, PAD$/;"	m	struct:elfhdr
elf	kern/elf.h	/^  uint8_t elf[12]; \/\/ CLASS, DATA, VERSION, OSABI, ABIVERSION, PAD$/;"	m	struct:elfhdr
elfhdr	boot/elf.h	/^struct elfhdr {$/;"	s
elfhdr	kern/elf.h	/^struct elfhdr {$/;"	s
empty	obj/kern/kernel.asm	/^  empty = 0;$/;"	d
enable_paging	boot/stage_3.S	/^enable_paging:$/;"	l
enable_paging	obj/boot/bootblock.asm	/^enable_paging:$/;"	l
end_op	kern/log.c	/^void end_op(void) {$/;"	f
entry	boot/elf.h	/^  uint64_t entry;$/;"	m	struct:elfhdr
entry	kern/elf.h	/^  uint64_t entry;$/;"	m	struct:elfhdr
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mp.h	/^  uint16_t entry;      \/\/ entry count$/;"	m	struct:mpconf
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_high_address	kern/entry.S	/^entry_high_address:$/;"	l
entry_high_address	obj/kern/kernel.asm	/^entry_high_address:$/;"	l
ep	obj/kern/kernel.asm	/^  ep = (char *)curproc->sz;$/;"	d
epa	obj/boot/bootblock.asm	/^  epa = pa + count;$/;"	d
eph	obj/boot/bootblock.asm	/^  eph = ph + elf->phnum;$/;"	d
err	kern/x86.h	/^  uint64_t err;$/;"	m	struct:trapframe
es	obj/user/sh.asm	/^  es = s + strlen(s);$/;"	d
exec	kern/exec.c	/^int exec(char *path, char **argv) {$/;"	f
execcmd	user/sh.c	/^struct cmd *execcmd(void) {$/;"	f
execcmd	user/sh.c	/^struct execcmd {$/;"	s	file:
exit	kern/initcode.S	/^exit:$/;"	l
exit	kern/proc.c	/^void exit(void) {$/;"	f
exit	obj/kern/initcode.asm	/^exit:$/;"	l
ext16mem	obj/kern/kernel.asm	/^  ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^extern char end[]; \/\/ first address after kernel loaded from ELF file$/;"	l
extern	obj/kern/kernel.asm	/^extern uintptr_t vectors[]; \/\/ in vectors.S: array of 256 entry pointers$/;"	l
extmem	obj/kern/kernel.asm	/^  extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f	/home/kim/xv6-x86_64/Makefile	/^	dd if=$(OBJDIR)\/$(BOOT_BLOCK) of=$@ conv=notrunc$/;"	m	language:Make
f	/home/kim/xv6-x86_64/Makefile	/^	dd if=$(OBJDIR)\/$(KERNEL) of=$@ seek=$(KERNEL_START_SECTOR) conv=notrunc$/;"	m	language:Make
f	obj/user/vatest.asm	/^   f:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
f	user/vatest.c	/^void f(char *fmt, ...) {$/;"	f
f0	obj/user/cat.asm	/^  f0:	49 8b 14 24          	mov    (%r12),%rdx$/;"	l
f0	obj/user/sh.asm	/^      f0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi$/;"	l
f0	obj/user/wc.asm	/^  f0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f03	obj/user/sh.asm	/^     f03:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f07	obj/user/sh.asm	/^     f07:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
f0b	obj/user/sh.asm	/^     f0b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f0f	obj/user/sh.asm	/^     f0f:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx$/;"	l
f1	obj/user/ln.asm	/^  f1:	c3                   	retq   $/;"	l
f1	obj/user/preemptiontest1.asm	/^  f1:	cd 30                	int    $0x30$/;"	l
f13	obj/user/sh.asm	/^     f13:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f18	obj/user/sh.asm	/^     f18:	e8 80 fd ff ff       	callq  c9d <do_printf>$/;"	l
f1d	obj/user/sh.asm	/^     f1d:	c9                   	leaveq $/;"	l
f1e	obj/user/sh.asm	/^     f1e:	c3                   	retq   $/;"	l
f1f	obj/user/sh.asm	/^     f1f:	f3 0f 1e fa          	endbr64 $/;"	l
f2	obj/user/ln.asm	/^  f2:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax$/;"	l
f2	obj/user/vatest.asm	/^  f2:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f23	obj/user/sh.asm	/^     f23:	55                   	push   %rbp$/;"	l
f24	obj/user/sh.asm	/^     f24:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f27	obj/user/sh.asm	/^     f27:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
f2b	obj/user/sh.asm	/^     f2b:	89 f8                	mov    %edi,%eax$/;"	l
f2d	obj/user/sh.asm	/^     f2d:	48 89 f7             	mov    %rsi,%rdi$/;"	l
f3	obj/user/fstest.asm	/^  f3:	e8 6c 04 00 00       	callq  564 <open>$/;"	l
f3	obj/user/init.asm	/^  f3:	cd 30                	int    $0x30$/;"	l
f3	obj/user/preemptiontest1.asm	/^  f3:	c3                   	retq   $/;"	l
f30	obj/user/sh.asm	/^     f30:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)$/;"	l
f34	obj/user/sh.asm	/^     f34:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)$/;"	l
f38	obj/user/sh.asm	/^     f38:	4c 89 45 f0          	mov    %r8,-0x10(%rbp)$/;"	l
f3c	obj/user/sh.asm	/^     f3c:	4c 89 4d f8          	mov    %r9,-0x8(%rbp)$/;"	l
f4	obj/user/cat.asm	/^  f4:	be e3 07 00 00       	mov    $0x7e3,%esi$/;"	l
f4	obj/user/echo.asm	/^  f4:	cd 30                	int    $0x30$/;"	l
f4	obj/user/preemptiontest1.asm	/^  f4:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax$/;"	l
f4	obj/user/preemptiontest2.asm	/^  f4:	cd 30                	int    $0x30$/;"	l
f4	obj/user/sh.asm	/^      f4:	e8 3e 0a 00 00       	callq  b37 <exec>$/;"	l
f40	obj/user/sh.asm	/^     f40:	c7 45 b8 10 00 00 00 	movl   $0x10,-0x48(%rbp)$/;"	l
f47	obj/user/sh.asm	/^     f47:	48 8d 4d 10          	lea    0x10(%rbp),%rcx$/;"	l
f4b	obj/user/sh.asm	/^     f4b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)$/;"	l
f4f	obj/user/sh.asm	/^     f4f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx$/;"	l
f5	obj/user/init.asm	/^  f5:	c3                   	retq   $/;"	l
f5	obj/user/ls.asm	/^  f5:	4c 89 e7             	mov    %r12,%rdi$/;"	l
f5	obj/user/mkdir.asm	/^  f5:	cd 30                	int    $0x30$/;"	l
f5	obj/user/rm.asm	/^  f5:	cd 30                	int    $0x30$/;"	l
f5	obj/user/wc.asm	/^  f5:	e8 c5 04 00 00       	callq  5bf <dprintf>$/;"	l
f53	obj/user/sh.asm	/^     f53:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
f57	obj/user/sh.asm	/^     f57:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx$/;"	l
f5b	obj/user/sh.asm	/^     f5b:	89 c6                	mov    %eax,%esi$/;"	l
f5d	obj/user/sh.asm	/^     f5d:	e8 3b fd ff ff       	callq  c9d <do_printf>$/;"	l
f6	obj/user/echo.asm	/^  f6:	c3                   	retq   $/;"	l
f6	obj/user/init.asm	/^  f6:	48 c7 c0 05 00 00 00 	mov    $0x5,%rax$/;"	l
f6	obj/user/preemptiontest2.asm	/^  f6:	c3                   	retq   $/;"	l
f62	obj/user/sh.asm	/^     f62:	c9                   	leaveq $/;"	l
f63	obj/user/sh.asm	/^     f63:	c3                   	retq   $/;"	l
f64	obj/user/sh.asm	/^     f64:	f3 0f 1e fa          	endbr64 $/;"	l
f68	obj/user/sh.asm	/^     f68:	55                   	push   %rbp$/;"	l
f69	obj/user/sh.asm	/^     f69:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f6c	obj/user/sh.asm	/^     f6c:	41 57                	push   %r15$/;"	l
f6e	obj/user/sh.asm	/^     f6e:	41 56                	push   %r14$/;"	l
f7	obj/user/echo.asm	/^  f7:	48 c7 c0 06 00 00 00 	mov    $0x6,%rax$/;"	l
f7	obj/user/mkdir.asm	/^  f7:	c3                   	retq   $/;"	l
f7	obj/user/preemptiontest2.asm	/^  f7:	48 c7 c0 13 00 00 00 	mov    $0x13,%rax$/;"	l
f7	obj/user/rm.asm	/^  f7:	c3                   	retq   $/;"	l
f7	obj/user/vatest.asm	/^  f7:	bf e1 07 00 00       	mov    $0x7e1,%edi$/;"	l
f70	obj/user/sh.asm	/^     f70:	41 55                	push   %r13$/;"	l
f72	obj/user/sh.asm	/^     f72:	41 54                	push   %r12$/;"	l
f74	obj/user/sh.asm	/^     f74:	53                   	push   %rbx$/;"	l
f75	obj/user/sh.asm	/^     f75:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f79	obj/user/sh.asm	/^     f79:	49 89 fe             	mov    %rdi,%r14$/;"	l
f7c	obj/user/sh.asm	/^     f7c:	41 89 f5             	mov    %esi,%r13d$/;"	l
f7f	obj/user/sh.asm	/^     f7f:	49 89 fc             	mov    %rdi,%r12$/;"	l
f8	obj/user/fstest.asm	/^  f8:	41 89 c4             	mov    %eax,%r12d$/;"	l
f8	obj/user/ls.asm	/^  f8:	e8 03 ff ff ff       	callq  0 <fmtname>$/;"	l
f8	obj/user/mkdir.asm	/^  f8:	48 c7 c0 0d 00 00 00 	mov    $0xd,%rax$/;"	l
f8	obj/user/rm.asm	/^  f8:	48 c7 c0 0d 00 00 00 	mov    $0xd,%rax$/;"	l
f82	obj/user/sh.asm	/^     f82:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f87	obj/user/sh.asm	/^     f87:	41 89 df             	mov    %ebx,%r15d$/;"	l
f8a	obj/user/sh.asm	/^     f8a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f8d	obj/user/sh.asm	/^     f8d:	44 39 eb             	cmp    %r13d,%ebx$/;"	l
f9	obj/user/cat.asm	/^  f9:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f9	obj/user/ln.asm	/^  f9:	cd 30                	int    $0x30$/;"	l
f9	obj/user/sh.asm	/^      f9:	48 8b 53 08          	mov    0x8(%rbx),%rdx$/;"	l
f90	obj/user/sh.asm	/^     f90:	7d 2e                	jge    fc0 <gets+0x5c>$/;"	l
f92	obj/user/sh.asm	/^     f92:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f97	obj/user/sh.asm	/^     f97:	48 8d 75 cf          	lea    -0x31(%rbp),%rsi$/;"	l
f9b	obj/user/sh.asm	/^     f9b:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
fa	obj/user/wc.asm	/^  fa:	e8 a6 00 00 00       	callq  1a5 <exit>$/;"	l
fa0	obj/user/sh.asm	/^     fa0:	e8 7e fb ff ff       	callq  b23 <read>$/;"	l
fa5	obj/user/sh.asm	/^     fa5:	85 c0                	test   %eax,%eax$/;"	l
fa7	obj/user/sh.asm	/^     fa7:	7e 17                	jle    fc0 <gets+0x5c>$/;"	l
fa9	obj/user/sh.asm	/^     fa9:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax$/;"	l
fad	obj/user/sh.asm	/^     fad:	41 88 04 24          	mov    %al,(%r12)$/;"	l
fb	obj/user/fstest.asm	/^  fb:	85 c0                	test   %eax,%eax$/;"	l
fb	obj/user/ln.asm	/^  fb:	c3                   	retq   $/;"	l
fb	obj/user/preemptiontest1.asm	/^  fb:	cd 30                	int    $0x30$/;"	l
fb1	obj/user/sh.asm	/^     fb1:	49 83 c4 01          	add    $0x1,%r12$/;"	l
fb5	obj/user/sh.asm	/^     fb5:	3c 0a                	cmp    $0xa,%al$/;"	l
fb7	obj/user/sh.asm	/^     fb7:	74 04                	je     fbd <gets+0x59>$/;"	l
fb9	obj/user/sh.asm	/^     fb9:	3c 0d                	cmp    $0xd,%al$/;"	l
fbb	obj/user/sh.asm	/^     fbb:	75 ca                	jne    f87 <gets+0x23>$/;"	l
fbd	obj/user/sh.asm	/^     fbd:	41 89 df             	mov    %ebx,%r15d$/;"	l
fc	obj/user/ln.asm	/^  fc:	48 c7 c0 10 00 00 00 	mov    $0x10,%rax$/;"	l
fc	obj/user/vatest.asm	/^  fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fc0	obj/user/sh.asm	/^     fc0:	4d 63 ff             	movslq %r15d,%r15$/;"	l
fc3	obj/user/sh.asm	/^     fc3:	43 c6 04 3e 00       	movb   $0x0,(%r14,%r15,1)$/;"	l
fc8	obj/user/sh.asm	/^     fc8:	4c 89 f0             	mov    %r14,%rax$/;"	l
fcb	obj/user/sh.asm	/^     fcb:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
fcf	obj/user/sh.asm	/^     fcf:	5b                   	pop    %rbx$/;"	l
fd	obj/user/cat.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/echo.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/fstest.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/fstest.asm	/^  fd:	0f 88 70 01 00 00    	js     273 <main+0x273>$/;"	l
fd	obj/user/init.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/init.asm	/^  fd:	cd 30                	int    $0x30$/;"	l
fd	obj/user/ln.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/ls.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/ls.asm	/^  fd:	48 89 c2             	mov    %rax,%rdx$/;"	l
fd	obj/user/mkdir.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/preemptiontest1.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/preemptiontest1.asm	/^  fd:	c3                   	retq   $/;"	l
fd	obj/user/preemptiontest2.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/rm.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/sh.asm	/^      fd:	be 5f 13 00 00       	mov    $0x135f,%esi$/;"	l
fd	obj/user/sh.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/vatest.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	obj/user/wc.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	user/sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd0	obj/kern/kernel.asm	/^  fd0 = -1;$/;"	d
fd0	obj/user/sh.asm	/^     fd0:	41 5c                	pop    %r12$/;"	l
fd2	obj/user/sh.asm	/^     fd2:	41 5d                	pop    %r13$/;"	l
fd4	obj/user/sh.asm	/^     fd4:	41 5e                	pop    %r14$/;"	l
fd6	obj/user/sh.asm	/^     fd6:	41 5f                	pop    %r15$/;"	l
fd8	obj/user/sh.asm	/^     fd8:	5d                   	pop    %rbp$/;"	l
fd9	obj/user/sh.asm	/^     fd9:	c3                   	retq   $/;"	l
fda	obj/user/sh.asm	/^     fda:	f3 0f 1e fa          	endbr64 $/;"	l
fdalloc	kern/sysfile.c	/^static int fdalloc(struct file *f) {$/;"	f	file:
fde	obj/user/sh.asm	/^     fde:	55                   	push   %rbp$/;"	l
fdf	obj/user/sh.asm	/^     fdf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
fe	obj/user/cat.asm	/^  fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fe	obj/user/echo.asm	/^  fe:	cd 30                	int    $0x30$/;"	l
fe	obj/user/preemptiontest1.asm	/^  fe:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax$/;"	l
fe	obj/user/preemptiontest2.asm	/^  fe:	cd 30                	int    $0x30$/;"	l
fe2	obj/user/sh.asm	/^     fe2:	41 54                	push   %r12$/;"	l
fe4	obj/user/sh.asm	/^     fe4:	53                   	push   %rbx$/;"	l
fe5	obj/user/sh.asm	/^     fe5:	49 89 f4             	mov    %rsi,%r12$/;"	l
fe8	obj/user/sh.asm	/^     fe8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
feature	kern/mp.h	/^  uint32_t feature;  \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc
fed	obj/user/sh.asm	/^     fed:	e8 8b fb ff ff       	callq  b7d <open>$/;"	l
fetchint	kern/syscall.c	/^int fetchint(uintptr_t addr, uint64_t *ip) {$/;"	f
fetchstr	kern/syscall.c	/^int fetchstr(uintptr_t addr, char **pp) {$/;"	f
ff	obj/kern/kernel.asm	/^  ff = *f;$/;"	d
ff	obj/user/init.asm	/^  ff:	c3                   	retq   $/;"	l
ff	obj/user/mkdir.asm	/^  ff:	cd 30                	int    $0x30$/;"	l
ff	obj/user/rm.asm	/^  ff:	cd 30                	int    $0x30$/;"	l
ff	obj/user/wc.asm	/^  ff:	eb b4                	jmp    b5 <wc+0xb5>$/;"	l
ff2	obj/user/sh.asm	/^     ff2:	85 c0                	test   %eax,%eax$/;"	l
ff4	obj/user/sh.asm	/^     ff4:	78 1e                	js     1014 <stat+0x3a>$/;"	l
ff6	obj/user/sh.asm	/^     ff6:	89 c3                	mov    %eax,%ebx$/;"	l
ff8	obj/user/sh.asm	/^     ff8:	4c 89 e6             	mov    %r12,%rsi$/;"	l
ffb	obj/user/sh.asm	/^     ffb:	89 c7                	mov    %eax,%edi$/;"	l
ffd	obj/user/sh.asm	/^     ffd:	e8 3f fb ff ff       	callq  b41 <fstat>$/;"	l
ffffffff80100000	obj/kern/kernel.asm	/^ffffffff80100000 <entry>:$/;"	l
ffffffff80100000	obj/kern/kernel.asm	/^ffffffff80100000:	48 c7 c2 00 00 00 80 	mov    $0xffffffff80000000,%rdx$/;"	l
ffffffff80100007	obj/kern/kernel.asm	/^ffffffff80100007:	48 8d 05 02 8d 00 00 	lea    0x8d02(%rip),%rax        # ffffffff80108d10 <stack>$/;"	l
ffffffff8010000e	obj/kern/kernel.asm	/^ffffffff8010000e:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffffffff80100014	obj/kern/kernel.asm	/^ffffffff80100014:	48 01 d0             	add    %rdx,%rax$/;"	l
ffffffff80100017	obj/kern/kernel.asm	/^ffffffff80100017:	48 89 c4             	mov    %rax,%rsp$/;"	l
ffffffff8010001a	obj/kern/kernel.asm	/^ffffffff8010001a:	48 8d 05 05 00 00 00 	lea    0x5(%rip),%rax        # ffffffff80100026 <entry_high_address>$/;"	l
ffffffff80100021	obj/kern/kernel.asm	/^ffffffff80100021:	48 01 d0             	add    %rdx,%rax$/;"	l
ffffffff80100024	obj/kern/kernel.asm	/^ffffffff80100024:	ff e0                	jmpq   *%rax$/;"	l
ffffffff80100026	obj/kern/kernel.asm	/^ffffffff80100026 <entry_high_address>:$/;"	l
ffffffff80100026	obj/kern/kernel.asm	/^ffffffff80100026:	e9 00 00 00 00       	jmpq   ffffffff8010002b <main>$/;"	l
ffffffff8010002b	obj/kern/kernel.asm	/^ffffffff8010002b <main>:$/;"	l
ffffffff8010002b	obj/kern/kernel.asm	/^ffffffff8010002b:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010002f	obj/kern/kernel.asm	/^ffffffff8010002f:	55                   	push   %rbp$/;"	l
ffffffff80100030	obj/kern/kernel.asm	/^ffffffff80100030:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100033	obj/kern/kernel.asm	/^ffffffff80100033:	53                   	push   %rbx$/;"	l
ffffffff80100034	obj/kern/kernel.asm	/^ffffffff80100034:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80100038	obj/kern/kernel.asm	/^ffffffff80100038:	48 c7 c7 c0 61 11 80 	mov    $0xffffffff801161c0,%rdi$/;"	l
ffffffff8010003f	obj/kern/kernel.asm	/^ffffffff8010003f:	e8 f4 01 00 00       	callq  ffffffff80100238 <kinit1>$/;"	l
ffffffff80100044	obj/kern/kernel.asm	/^ffffffff80100044:	e8 1b 22 00 00       	callq  ffffffff80102264 <kvmalloc>$/;"	l
ffffffff80100049	obj/kern/kernel.asm	/^ffffffff80100049:	e8 f4 0c 00 00       	callq  ffffffff80100d42 <mpinit>$/;"	l
ffffffff8010004e	obj/kern/kernel.asm	/^ffffffff8010004e:	e8 60 35 00 00       	callq  ffffffff801035b3 <lapicinit>$/;"	l
ffffffff80100053	obj/kern/kernel.asm	/^ffffffff80100053:	e8 f0 1a 00 00       	callq  ffffffff80101b48 <seginit>$/;"	l
ffffffff80100058	obj/kern/kernel.asm	/^ffffffff80100058:	e8 e1 37 00 00       	callq  ffffffff8010383e <picinit>$/;"	l
ffffffff8010005d	obj/kern/kernel.asm	/^ffffffff8010005d:	e8 f2 37 00 00       	callq  ffffffff80103854 <ioapicinit>$/;"	l
ffffffff80100062	obj/kern/kernel.asm	/^ffffffff80100062:	e8 25 0c 00 00       	callq  ffffffff80100c8c <consoleinit>$/;"	l
ffffffff80100067	obj/kern/kernel.asm	/^ffffffff80100067:	e8 10 37 00 00       	callq  ffffffff8010377c <uartinit>$/;"	l
ffffffff8010006c	obj/kern/kernel.asm	/^ffffffff8010006c:	e8 be 24 00 00       	callq  ffffffff8010252f <tvinit>$/;"	l
ffffffff80100071	obj/kern/kernel.asm	/^ffffffff80100071:	e8 c3 4a 00 00       	callq  ffffffff80104b39 <binit>$/;"	l
ffffffff80100076	obj/kern/kernel.asm	/^ffffffff80100076:	e8 ea 61 00 00       	callq  ffffffff80106265 <fileinit>$/;"	l
ffffffff8010007b	obj/kern/kernel.asm	/^ffffffff8010007b:	e8 0c 4e 00 00       	callq  ffffffff80104e8c <ideinit>$/;"	l
ffffffff80100080	obj/kern/kernel.asm	/^ffffffff80100080:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80100085	obj/kern/kernel.asm	/^ffffffff80100085:	e8 67 02 00 00       	callq  ffffffff801002f1 <kinit2>$/;"	l
ffffffff8010008a	obj/kern/kernel.asm	/^ffffffff8010008a:	e8 8e 10 00 00       	callq  ffffffff8010111d <userinit>$/;"	l
ffffffff8010008f	obj/kern/kernel.asm	/^ffffffff8010008f:	49 c7 c0 00 6b 10 80 	mov    $0xffffffff80106b00,%r8$/;"	l
ffffffff80100096	obj/kern/kernel.asm	/^ffffffff80100096:	48 c7 c1 2b 00 10 80 	mov    $0xffffffff8010002b,%rcx$/;"	l
ffffffff8010009d	obj/kern/kernel.asm	/^ffffffff8010009d:	ba 00 01 00 00       	mov    $0x100,%edx$/;"	l
ffffffff801000a2	obj/kern/kernel.asm	/^ffffffff801000a2:	be 00 01 00 00       	mov    $0x100,%esi$/;"	l
ffffffff801000a7	obj/kern/kernel.asm	/^ffffffff801000a7:	48 c7 c7 38 6b 10 80 	mov    $0xffffffff80106b38,%rdi$/;"	l
ffffffff801000ae	obj/kern/kernel.asm	/^ffffffff801000ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801000b3	obj/kern/kernel.asm	/^ffffffff801000b3:	e8 0e 08 00 00       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801000b8	obj/kern/kernel.asm	/^ffffffff801000b8:	b9 63 00 00 00       	mov    $0x63,%ecx$/;"	l
ffffffff801000bd	obj/kern/kernel.asm	/^ffffffff801000bd:	ba 62 00 00 00       	mov    $0x62,%edx$/;"	l
ffffffff801000c2	obj/kern/kernel.asm	/^ffffffff801000c2:	be 61 00 00 00       	mov    $0x61,%esi$/;"	l
ffffffff801000c7	obj/kern/kernel.asm	/^ffffffff801000c7:	48 c7 c7 68 6b 10 80 	mov    $0xffffffff80106b68,%rdi$/;"	l
ffffffff801000ce	obj/kern/kernel.asm	/^ffffffff801000ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801000d3	obj/kern/kernel.asm	/^ffffffff801000d3:	e8 ee 07 00 00       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801000d8	obj/kern/kernel.asm	/^ffffffff801000d8:	48 c7 c7 06 6b 10 80 	mov    $0xffffffff80106b06,%rdi$/;"	l
ffffffff801000df	obj/kern/kernel.asm	/^ffffffff801000df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801000e4	obj/kern/kernel.asm	/^ffffffff801000e4:	e8 dd 07 00 00       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801000e9	obj/kern/kernel.asm	/^ffffffff801000e9:	e8 db 0f 00 00       	callq  ffffffff801010c9 <cpuid>$/;"	l
ffffffff801000ee	obj/kern/kernel.asm	/^ffffffff801000ee:	89 c3                	mov    %eax,%ebx$/;"	l
ffffffff801000f0	obj/kern/kernel.asm	/^ffffffff801000f0:	e8 d4 0f 00 00       	callq  ffffffff801010c9 <cpuid>$/;"	l
ffffffff801000f5	obj/kern/kernel.asm	/^ffffffff801000f5:	89 c6                	mov    %eax,%esi$/;"	l
ffffffff801000f7	obj/kern/kernel.asm	/^ffffffff801000f7:	89 da                	mov    %ebx,%edx$/;"	l
ffffffff801000f9	obj/kern/kernel.asm	/^ffffffff801000f9:	48 c7 c7 1f 6b 10 80 	mov    $0xffffffff80106b1f,%rdi$/;"	l
ffffffff80100100	obj/kern/kernel.asm	/^ffffffff80100100:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80100105	obj/kern/kernel.asm	/^ffffffff80100105:	e8 bc 07 00 00       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff8010010a	obj/kern/kernel.asm	/^ffffffff8010010a:	e8 ed 24 00 00       	callq  ffffffff801025fc <idtinit>$/;"	l
ffffffff8010010f	obj/kern/kernel.asm	/^ffffffff8010010f:	e8 92 0f 00 00       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80100114	obj/kern/kernel.asm	/^ffffffff80100114:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff80100117	obj/kern/kernel.asm	/^ffffffff80100117:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffffffff8010011c	obj/kern/kernel.asm	/^ffffffff8010011c:	f0 87 82 b0 00 00 00 	lock xchg %eax,0xb0(%rdx)$/;"	l
ffffffff80100123	obj/kern/kernel.asm	/^ffffffff80100123:	e8 7b 12 00 00       	callq  ffffffff801013a3 <scheduler>$/;"	l
ffffffff80100128	obj/kern/kernel.asm	/^ffffffff80100128 <nvram_read>:$/;"	l
ffffffff80100128	obj/kern/kernel.asm	/^ffffffff80100128:	55                   	push   %rbp$/;"	l
ffffffff80100129	obj/kern/kernel.asm	/^ffffffff80100129:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010012c	obj/kern/kernel.asm	/^ffffffff8010012c:	41 54                	push   %r12$/;"	l
ffffffff8010012e	obj/kern/kernel.asm	/^ffffffff8010012e:	53                   	push   %rbx$/;"	l
ffffffff8010012f	obj/kern/kernel.asm	/^ffffffff8010012f:	89 fb                	mov    %edi,%ebx$/;"	l
ffffffff80100131	obj/kern/kernel.asm	/^ffffffff80100131:	e8 ce 23 00 00       	callq  ffffffff80102504 <mc146818_read>$/;"	l
ffffffff80100136	obj/kern/kernel.asm	/^ffffffff80100136:	41 89 c4             	mov    %eax,%r12d$/;"	l
ffffffff80100139	obj/kern/kernel.asm	/^ffffffff80100139:	8d 7b 01             	lea    0x1(%rbx),%edi$/;"	l
ffffffff8010013c	obj/kern/kernel.asm	/^ffffffff8010013c:	e8 c3 23 00 00       	callq  ffffffff80102504 <mc146818_read>$/;"	l
ffffffff80100141	obj/kern/kernel.asm	/^ffffffff80100141:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffffffff80100144	obj/kern/kernel.asm	/^ffffffff80100144:	44 09 e0             	or     %r12d,%eax$/;"	l
ffffffff80100147	obj/kern/kernel.asm	/^ffffffff80100147:	5b                   	pop    %rbx$/;"	l
ffffffff80100148	obj/kern/kernel.asm	/^ffffffff80100148:	41 5c                	pop    %r12$/;"	l
ffffffff8010014a	obj/kern/kernel.asm	/^ffffffff8010014a:	5d                   	pop    %rbp$/;"	l
ffffffff8010014b	obj/kern/kernel.asm	/^ffffffff8010014b:	c3                   	retq   $/;"	l
ffffffff8010014c	obj/kern/kernel.asm	/^ffffffff8010014c <kfree>:$/;"	l
ffffffff8010014c	obj/kern/kernel.asm	/^ffffffff8010014c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80100150	obj/kern/kernel.asm	/^ffffffff80100150:	55                   	push   %rbp$/;"	l
ffffffff80100151	obj/kern/kernel.asm	/^ffffffff80100151:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100154	obj/kern/kernel.asm	/^ffffffff80100154:	53                   	push   %rbx$/;"	l
ffffffff80100155	obj/kern/kernel.asm	/^ffffffff80100155:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80100159	obj/kern/kernel.asm	/^ffffffff80100159:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff8010015c	obj/kern/kernel.asm	/^ffffffff8010015c:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
ffffffff80100162	obj/kern/kernel.asm	/^ffffffff80100162:	75 53                	jne    ffffffff801001b7 <kfree+0x6b>$/;"	l
ffffffff80100164	obj/kern/kernel.asm	/^ffffffff80100164:	48 81 ff c0 61 11 80 	cmp    $0xffffffff801161c0,%rdi$/;"	l
ffffffff8010016b	obj/kern/kernel.asm	/^ffffffff8010016b:	72 4a                	jb     ffffffff801001b7 <kfree+0x6b>$/;"	l
ffffffff8010016d	obj/kern/kernel.asm	/^ffffffff8010016d:	b8 00 00 00 80       	mov    $0x80000000,%eax$/;"	l
ffffffff80100172	obj/kern/kernel.asm	/^ffffffff80100172:	48 01 f8             	add    %rdi,%rax$/;"	l
ffffffff80100175	obj/kern/kernel.asm	/^ffffffff80100175:	48 3b 05 cc 9b 00 00 	cmp    0x9bcc(%rip),%rax        # ffffffff80109d48 <phys_top>$/;"	l
ffffffff8010017c	obj/kern/kernel.asm	/^ffffffff8010017c:	73 39                	jae    ffffffff801001b7 <kfree+0x6b>$/;"	l
ffffffff8010017e	obj/kern/kernel.asm	/^ffffffff8010017e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffffffff80100183	obj/kern/kernel.asm	/^ffffffff80100183:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffffffff80100188	obj/kern/kernel.asm	/^ffffffff80100188:	e8 e8 67 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff8010018d	obj/kern/kernel.asm	/^ffffffff8010018d:	83 3d a4 9b 00 00 00 	cmpl   $0x0,0x9ba4(%rip)        # ffffffff80109d38 <kmem+0x18>$/;"	l
ffffffff80100194	obj/kern/kernel.asm	/^ffffffff80100194:	75 41                	jne    ffffffff801001d7 <kfree+0x8b>$/;"	l
ffffffff80100196	obj/kern/kernel.asm	/^ffffffff80100196:	48 8b 05 a3 9b 00 00 	mov    0x9ba3(%rip),%rax        # ffffffff80109d40 <kmem+0x20>$/;"	l
ffffffff8010019d	obj/kern/kernel.asm	/^ffffffff8010019d:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffffffff801001a0	obj/kern/kernel.asm	/^ffffffff801001a0:	48 89 1d 99 9b 00 00 	mov    %rbx,0x9b99(%rip)        # ffffffff80109d40 <kmem+0x20>$/;"	l
ffffffff801001a7	obj/kern/kernel.asm	/^ffffffff801001a7:	83 3d 8a 9b 00 00 00 	cmpl   $0x0,0x9b8a(%rip)        # ffffffff80109d38 <kmem+0x18>$/;"	l
ffffffff801001ae	obj/kern/kernel.asm	/^ffffffff801001ae:	75 35                	jne    ffffffff801001e5 <kfree+0x99>$/;"	l
ffffffff801001b0	obj/kern/kernel.asm	/^ffffffff801001b0:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801001b4	obj/kern/kernel.asm	/^ffffffff801001b4:	5b                   	pop    %rbx$/;"	l
ffffffff801001b5	obj/kern/kernel.asm	/^ffffffff801001b5:	5d                   	pop    %rbp$/;"	l
ffffffff801001b6	obj/kern/kernel.asm	/^ffffffff801001b6:	c3                   	retq   $/;"	l
ffffffff801001b7	obj/kern/kernel.asm	/^ffffffff801001b7:	48 89 de             	mov    %rbx,%rsi$/;"	l
ffffffff801001ba	obj/kern/kernel.asm	/^ffffffff801001ba:	48 c7 c7 88 6b 10 80 	mov    $0xffffffff80106b88,%rdi$/;"	l
ffffffff801001c1	obj/kern/kernel.asm	/^ffffffff801001c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801001c6	obj/kern/kernel.asm	/^ffffffff801001c6:	e8 fb 06 00 00       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801001cb	obj/kern/kernel.asm	/^ffffffff801001cb:	48 c7 c7 a0 6b 10 80 	mov    $0xffffffff80106ba0,%rdi$/;"	l
ffffffff801001d2	obj/kern/kernel.asm	/^ffffffff801001d2:	e8 4c 04 00 00       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801001d7	obj/kern/kernel.asm	/^ffffffff801001d7:	48 c7 c7 20 9d 10 80 	mov    $0xffffffff80109d20,%rdi$/;"	l
ffffffff801001de	obj/kern/kernel.asm	/^ffffffff801001de:	e8 bc 02 00 00       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801001e3	obj/kern/kernel.asm	/^ffffffff801001e3:	eb b1                	jmp    ffffffff80100196 <kfree+0x4a>$/;"	l
ffffffff801001e5	obj/kern/kernel.asm	/^ffffffff801001e5:	48 c7 c7 20 9d 10 80 	mov    $0xffffffff80109d20,%rdi$/;"	l
ffffffff801001ec	obj/kern/kernel.asm	/^ffffffff801001ec:	e8 fc 02 00 00       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801001f1	obj/kern/kernel.asm	/^ffffffff801001f1:	eb bd                	jmp    ffffffff801001b0 <kfree+0x64>$/;"	l
ffffffff801001f3	obj/kern/kernel.asm	/^ffffffff801001f3 <freerange>:$/;"	l
ffffffff801001f3	obj/kern/kernel.asm	/^ffffffff801001f3:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801001f7	obj/kern/kernel.asm	/^ffffffff801001f7:	55                   	push   %rbp$/;"	l
ffffffff801001f8	obj/kern/kernel.asm	/^ffffffff801001f8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801001fb	obj/kern/kernel.asm	/^ffffffff801001fb:	41 54                	push   %r12$/;"	l
ffffffff801001fd	obj/kern/kernel.asm	/^ffffffff801001fd:	53                   	push   %rbx$/;"	l
ffffffff801001fe	obj/kern/kernel.asm	/^ffffffff801001fe:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff80100201	obj/kern/kernel.asm	/^ffffffff80100201:	48 81 c7 ff 0f 00 00 	add    $0xfff,%rdi$/;"	l
ffffffff80100208	obj/kern/kernel.asm	/^ffffffff80100208:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi$/;"	l
ffffffff8010020f	obj/kern/kernel.asm	/^ffffffff8010020f:	48 8d 9f 00 10 00 00 	lea    0x1000(%rdi),%rbx$/;"	l
ffffffff80100216	obj/kern/kernel.asm	/^ffffffff80100216:	48 39 de             	cmp    %rbx,%rsi$/;"	l
ffffffff80100219	obj/kern/kernel.asm	/^ffffffff80100219:	72 18                	jb     ffffffff80100233 <freerange+0x40>$/;"	l
ffffffff8010021b	obj/kern/kernel.asm	/^ffffffff8010021b:	48 8d bb 00 f0 ff ff 	lea    -0x1000(%rbx),%rdi$/;"	l
ffffffff80100222	obj/kern/kernel.asm	/^ffffffff80100222:	e8 25 ff ff ff       	callq  ffffffff8010014c <kfree>$/;"	l
ffffffff80100227	obj/kern/kernel.asm	/^ffffffff80100227:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx$/;"	l
ffffffff8010022e	obj/kern/kernel.asm	/^ffffffff8010022e:	4c 39 e3             	cmp    %r12,%rbx$/;"	l
ffffffff80100231	obj/kern/kernel.asm	/^ffffffff80100231:	76 e8                	jbe    ffffffff8010021b <freerange+0x28>$/;"	l
ffffffff80100233	obj/kern/kernel.asm	/^ffffffff80100233:	5b                   	pop    %rbx$/;"	l
ffffffff80100234	obj/kern/kernel.asm	/^ffffffff80100234:	41 5c                	pop    %r12$/;"	l
ffffffff80100236	obj/kern/kernel.asm	/^ffffffff80100236:	5d                   	pop    %rbp$/;"	l
ffffffff80100237	obj/kern/kernel.asm	/^ffffffff80100237:	c3                   	retq   $/;"	l
ffffffff80100238	obj/kern/kernel.asm	/^ffffffff80100238 <kinit1>:$/;"	l
ffffffff80100238	obj/kern/kernel.asm	/^ffffffff80100238:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010023c	obj/kern/kernel.asm	/^ffffffff8010023c:	55                   	push   %rbp$/;"	l
ffffffff8010023d	obj/kern/kernel.asm	/^ffffffff8010023d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100240	obj/kern/kernel.asm	/^ffffffff80100240:	41 56                	push   %r14$/;"	l
ffffffff80100242	obj/kern/kernel.asm	/^ffffffff80100242:	41 55                	push   %r13$/;"	l
ffffffff80100244	obj/kern/kernel.asm	/^ffffffff80100244:	41 54                	push   %r12$/;"	l
ffffffff80100246	obj/kern/kernel.asm	/^ffffffff80100246:	53                   	push   %rbx$/;"	l
ffffffff80100247	obj/kern/kernel.asm	/^ffffffff80100247:	49 89 fc             	mov    %rdi,%r12$/;"	l
ffffffff8010024a	obj/kern/kernel.asm	/^ffffffff8010024a:	48 c7 c6 a6 6b 10 80 	mov    $0xffffffff80106ba6,%rsi$/;"	l
ffffffff80100251	obj/kern/kernel.asm	/^ffffffff80100251:	48 c7 c7 20 9d 10 80 	mov    $0xffffffff80109d20,%rdi$/;"	l
ffffffff80100258	obj/kern/kernel.asm	/^ffffffff80100258:	e8 46 01 00 00       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff8010025d	obj/kern/kernel.asm	/^ffffffff8010025d:	c7 05 d1 9a 00 00 00 	movl   $0x0,0x9ad1(%rip)        # ffffffff80109d38 <kmem+0x18>$/;"	l
ffffffff80100264	obj/kern/kernel.asm	/^ffffffff80100264:	00 00 00 $/;"	l
ffffffff80100267	obj/kern/kernel.asm	/^ffffffff80100267:	bf 15 00 00 00       	mov    $0x15,%edi$/;"	l
ffffffff8010026c	obj/kern/kernel.asm	/^ffffffff8010026c:	e8 b7 fe ff ff       	callq  ffffffff80100128 <nvram_read>$/;"	l
ffffffff80100271	obj/kern/kernel.asm	/^ffffffff80100271:	41 89 c6             	mov    %eax,%r14d$/;"	l
ffffffff80100274	obj/kern/kernel.asm	/^ffffffff80100274:	bf 17 00 00 00       	mov    $0x17,%edi$/;"	l
ffffffff80100279	obj/kern/kernel.asm	/^ffffffff80100279:	e8 aa fe ff ff       	callq  ffffffff80100128 <nvram_read>$/;"	l
ffffffff8010027e	obj/kern/kernel.asm	/^ffffffff8010027e:	41 89 c5             	mov    %eax,%r13d$/;"	l
ffffffff80100281	obj/kern/kernel.asm	/^ffffffff80100281:	bf 34 00 00 00       	mov    $0x34,%edi$/;"	l
ffffffff80100286	obj/kern/kernel.asm	/^ffffffff80100286:	e8 9d fe ff ff       	callq  ffffffff80100128 <nvram_read>$/;"	l
ffffffff8010028b	obj/kern/kernel.asm	/^ffffffff8010028b:	c1 e0 06             	shl    $0x6,%eax$/;"	l
ffffffff8010028e	obj/kern/kernel.asm	/^ffffffff8010028e:	48 63 d8             	movslq %eax,%rbx$/;"	l
ffffffff80100291	obj/kern/kernel.asm	/^ffffffff80100291:	48 85 db             	test   %rbx,%rbx$/;"	l
ffffffff80100294	obj/kern/kernel.asm	/^ffffffff80100294:	74 45                	je     ffffffff801002db <kinit1+0xa3>$/;"	l
ffffffff80100296	obj/kern/kernel.asm	/^ffffffff80100296:	48 81 c3 00 40 00 00 	add    $0x4000,%rbx$/;"	l
ffffffff8010029d	obj/kern/kernel.asm	/^ffffffff8010029d:	48 89 de             	mov    %rbx,%rsi$/;"	l
ffffffff801002a0	obj/kern/kernel.asm	/^ffffffff801002a0:	48 c7 c7 ab 6b 10 80 	mov    $0xffffffff80106bab,%rdi$/;"	l
ffffffff801002a7	obj/kern/kernel.asm	/^ffffffff801002a7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801002ac	obj/kern/kernel.asm	/^ffffffff801002ac:	e8 15 06 00 00       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801002b1	obj/kern/kernel.asm	/^ffffffff801002b1:	48 c1 e3 0a          	shl    $0xa,%rbx$/;"	l
ffffffff801002b5	obj/kern/kernel.asm	/^ffffffff801002b5:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx$/;"	l
ffffffff801002bc	obj/kern/kernel.asm	/^ffffffff801002bc:	48 89 1d 85 9a 00 00 	mov    %rbx,0x9a85(%rip)        # ffffffff80109d48 <phys_top>$/;"	l
ffffffff801002c3	obj/kern/kernel.asm	/^ffffffff801002c3:	48 c7 c6 00 00 40 80 	mov    $0xffffffff80400000,%rsi$/;"	l
ffffffff801002ca	obj/kern/kernel.asm	/^ffffffff801002ca:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801002cd	obj/kern/kernel.asm	/^ffffffff801002cd:	e8 21 ff ff ff       	callq  ffffffff801001f3 <freerange>$/;"	l
ffffffff801002d2	obj/kern/kernel.asm	/^ffffffff801002d2:	5b                   	pop    %rbx$/;"	l
ffffffff801002d3	obj/kern/kernel.asm	/^ffffffff801002d3:	41 5c                	pop    %r12$/;"	l
ffffffff801002d5	obj/kern/kernel.asm	/^ffffffff801002d5:	41 5d                	pop    %r13$/;"	l
ffffffff801002d7	obj/kern/kernel.asm	/^ffffffff801002d7:	41 5e                	pop    %r14$/;"	l
ffffffff801002d9	obj/kern/kernel.asm	/^ffffffff801002d9:	5d                   	pop    %rbp$/;"	l
ffffffff801002da	obj/kern/kernel.asm	/^ffffffff801002da:	c3                   	retq   $/;"	l
ffffffff801002db	obj/kern/kernel.asm	/^ffffffff801002db:	4d 63 ed             	movslq %r13d,%r13$/;"	l
ffffffff801002de	obj/kern/kernel.asm	/^ffffffff801002de:	4d 63 f6             	movslq %r14d,%r14$/;"	l
ffffffff801002e1	obj/kern/kernel.asm	/^ffffffff801002e1:	49 8d 9d 00 04 00 00 	lea    0x400(%r13),%rbx$/;"	l
ffffffff801002e8	obj/kern/kernel.asm	/^ffffffff801002e8:	4d 85 ed             	test   %r13,%r13$/;"	l
ffffffff801002eb	obj/kern/kernel.asm	/^ffffffff801002eb:	49 0f 44 de          	cmove  %r14,%rbx$/;"	l
ffffffff801002ef	obj/kern/kernel.asm	/^ffffffff801002ef:	eb ac                	jmp    ffffffff8010029d <kinit1+0x65>$/;"	l
ffffffff801002f1	obj/kern/kernel.asm	/^ffffffff801002f1 <kinit2>:$/;"	l
ffffffff801002f1	obj/kern/kernel.asm	/^ffffffff801002f1:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801002f5	obj/kern/kernel.asm	/^ffffffff801002f5:	55                   	push   %rbp$/;"	l
ffffffff801002f6	obj/kern/kernel.asm	/^ffffffff801002f6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801002f9	obj/kern/kernel.asm	/^ffffffff801002f9:	48 8b 15 48 9a 00 00 	mov    0x9a48(%rip),%rdx        # ffffffff80109d48 <phys_top>$/;"	l
ffffffff80100300	obj/kern/kernel.asm	/^ffffffff80100300:	be 00 00 40 00       	mov    $0x400000,%esi$/;"	l
ffffffff80100305	obj/kern/kernel.asm	/^ffffffff80100305:	48 c7 c7 d0 6b 10 80 	mov    $0xffffffff80106bd0,%rdi$/;"	l
ffffffff8010030c	obj/kern/kernel.asm	/^ffffffff8010030c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80100311	obj/kern/kernel.asm	/^ffffffff80100311:	e8 b0 05 00 00       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80100316	obj/kern/kernel.asm	/^ffffffff80100316:	48 8b 05 2b 9a 00 00 	mov    0x9a2b(%rip),%rax        # ffffffff80109d48 <phys_top>$/;"	l
ffffffff8010031d	obj/kern/kernel.asm	/^ffffffff8010031d:	48 8d b0 00 00 00 80 	lea    -0x80000000(%rax),%rsi$/;"	l
ffffffff80100324	obj/kern/kernel.asm	/^ffffffff80100324:	48 c7 c7 00 00 40 80 	mov    $0xffffffff80400000,%rdi$/;"	l
ffffffff8010032b	obj/kern/kernel.asm	/^ffffffff8010032b:	e8 c3 fe ff ff       	callq  ffffffff801001f3 <freerange>$/;"	l
ffffffff80100330	obj/kern/kernel.asm	/^ffffffff80100330:	c7 05 fe 99 00 00 01 	movl   $0x1,0x99fe(%rip)        # ffffffff80109d38 <kmem+0x18>$/;"	l
ffffffff80100337	obj/kern/kernel.asm	/^ffffffff80100337:	00 00 00 $/;"	l
ffffffff8010033a	obj/kern/kernel.asm	/^ffffffff8010033a:	5d                   	pop    %rbp$/;"	l
ffffffff8010033b	obj/kern/kernel.asm	/^ffffffff8010033b:	c3                   	retq   $/;"	l
ffffffff8010033c	obj/kern/kernel.asm	/^ffffffff8010033c <kalloc>:$/;"	l
ffffffff8010033c	obj/kern/kernel.asm	/^ffffffff8010033c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80100340	obj/kern/kernel.asm	/^ffffffff80100340:	55                   	push   %rbp$/;"	l
ffffffff80100341	obj/kern/kernel.asm	/^ffffffff80100341:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100344	obj/kern/kernel.asm	/^ffffffff80100344:	53                   	push   %rbx$/;"	l
ffffffff80100345	obj/kern/kernel.asm	/^ffffffff80100345:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80100349	obj/kern/kernel.asm	/^ffffffff80100349:	83 3d e8 99 00 00 00 	cmpl   $0x0,0x99e8(%rip)        # ffffffff80109d38 <kmem+0x18>$/;"	l
ffffffff80100350	obj/kern/kernel.asm	/^ffffffff80100350:	75 29                	jne    ffffffff8010037b <kalloc+0x3f>$/;"	l
ffffffff80100352	obj/kern/kernel.asm	/^ffffffff80100352:	48 8b 1d e7 99 00 00 	mov    0x99e7(%rip),%rbx        # ffffffff80109d40 <kmem+0x20>$/;"	l
ffffffff80100359	obj/kern/kernel.asm	/^ffffffff80100359:	48 85 db             	test   %rbx,%rbx$/;"	l
ffffffff8010035c	obj/kern/kernel.asm	/^ffffffff8010035c:	74 13                	je     ffffffff80100371 <kalloc+0x35>$/;"	l
ffffffff8010035e	obj/kern/kernel.asm	/^ffffffff8010035e:	48 8b 03             	mov    (%rbx),%rax$/;"	l
ffffffff80100361	obj/kern/kernel.asm	/^ffffffff80100361:	48 89 05 d8 99 00 00 	mov    %rax,0x99d8(%rip)        # ffffffff80109d40 <kmem+0x20>$/;"	l
ffffffff80100368	obj/kern/kernel.asm	/^ffffffff80100368:	83 3d c9 99 00 00 00 	cmpl   $0x0,0x99c9(%rip)        # ffffffff80109d38 <kmem+0x18>$/;"	l
ffffffff8010036f	obj/kern/kernel.asm	/^ffffffff8010036f:	75 24                	jne    ffffffff80100395 <kalloc+0x59>$/;"	l
ffffffff80100371	obj/kern/kernel.asm	/^ffffffff80100371:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff80100374	obj/kern/kernel.asm	/^ffffffff80100374:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80100378	obj/kern/kernel.asm	/^ffffffff80100378:	5b                   	pop    %rbx$/;"	l
ffffffff80100379	obj/kern/kernel.asm	/^ffffffff80100379:	5d                   	pop    %rbp$/;"	l
ffffffff8010037a	obj/kern/kernel.asm	/^ffffffff8010037a:	c3                   	retq   $/;"	l
ffffffff8010037b	obj/kern/kernel.asm	/^ffffffff8010037b:	48 c7 c7 20 9d 10 80 	mov    $0xffffffff80109d20,%rdi$/;"	l
ffffffff80100382	obj/kern/kernel.asm	/^ffffffff80100382:	e8 18 01 00 00       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80100387	obj/kern/kernel.asm	/^ffffffff80100387:	48 8b 1d b2 99 00 00 	mov    0x99b2(%rip),%rbx        # ffffffff80109d40 <kmem+0x20>$/;"	l
ffffffff8010038e	obj/kern/kernel.asm	/^ffffffff8010038e:	48 85 db             	test   %rbx,%rbx$/;"	l
ffffffff80100391	obj/kern/kernel.asm	/^ffffffff80100391:	75 cb                	jne    ffffffff8010035e <kalloc+0x22>$/;"	l
ffffffff80100393	obj/kern/kernel.asm	/^ffffffff80100393:	eb d3                	jmp    ffffffff80100368 <kalloc+0x2c>$/;"	l
ffffffff80100395	obj/kern/kernel.asm	/^ffffffff80100395:	48 c7 c7 20 9d 10 80 	mov    $0xffffffff80109d20,%rdi$/;"	l
ffffffff8010039c	obj/kern/kernel.asm	/^ffffffff8010039c:	e8 4c 01 00 00       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801003a1	obj/kern/kernel.asm	/^ffffffff801003a1:	eb ce                	jmp    ffffffff80100371 <kalloc+0x35>$/;"	l
ffffffff801003a3	obj/kern/kernel.asm	/^ffffffff801003a3 <initlock>:$/;"	l
ffffffff801003a3	obj/kern/kernel.asm	/^ffffffff801003a3:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801003a7	obj/kern/kernel.asm	/^ffffffff801003a7:	48 89 77 08          	mov    %rsi,0x8(%rdi)$/;"	l
ffffffff801003ab	obj/kern/kernel.asm	/^ffffffff801003ab:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)$/;"	l
ffffffff801003b1	obj/kern/kernel.asm	/^ffffffff801003b1:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)$/;"	l
ffffffff801003b8	obj/kern/kernel.asm	/^ffffffff801003b8:	00 $/;"	l
ffffffff801003b9	obj/kern/kernel.asm	/^ffffffff801003b9:	c3                   	retq   $/;"	l
ffffffff801003ba	obj/kern/kernel.asm	/^ffffffff801003ba <pushcli>:$/;"	l
ffffffff801003ba	obj/kern/kernel.asm	/^ffffffff801003ba:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801003be	obj/kern/kernel.asm	/^ffffffff801003be:	55                   	push   %rbp$/;"	l
ffffffff801003bf	obj/kern/kernel.asm	/^ffffffff801003bf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801003c2	obj/kern/kernel.asm	/^ffffffff801003c2:	53                   	push   %rbx$/;"	l
ffffffff801003c3	obj/kern/kernel.asm	/^ffffffff801003c3:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801003c7	obj/kern/kernel.asm	/^ffffffff801003c7:	9c                   	pushfq $/;"	l
ffffffff801003c8	obj/kern/kernel.asm	/^ffffffff801003c8:	5b                   	pop    %rbx$/;"	l
ffffffff801003c9	obj/kern/kernel.asm	/^ffffffff801003c9:	fa                   	cli    $/;"	l
ffffffff801003ca	obj/kern/kernel.asm	/^ffffffff801003ca:	e8 d7 0c 00 00       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff801003cf	obj/kern/kernel.asm	/^ffffffff801003cf:	83 b8 b4 00 00 00 00 	cmpl   $0x0,0xb4(%rax)$/;"	l
ffffffff801003d6	obj/kern/kernel.asm	/^ffffffff801003d6:	74 13                	je     ffffffff801003eb <pushcli+0x31>$/;"	l
ffffffff801003d8	obj/kern/kernel.asm	/^ffffffff801003d8:	e8 c9 0c 00 00       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff801003dd	obj/kern/kernel.asm	/^ffffffff801003dd:	83 80 b4 00 00 00 01 	addl   $0x1,0xb4(%rax)$/;"	l
ffffffff801003e4	obj/kern/kernel.asm	/^ffffffff801003e4:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801003e8	obj/kern/kernel.asm	/^ffffffff801003e8:	5b                   	pop    %rbx$/;"	l
ffffffff801003e9	obj/kern/kernel.asm	/^ffffffff801003e9:	5d                   	pop    %rbp$/;"	l
ffffffff801003ea	obj/kern/kernel.asm	/^ffffffff801003ea:	c3                   	retq   $/;"	l
ffffffff801003eb	obj/kern/kernel.asm	/^ffffffff801003eb:	e8 b6 0c 00 00       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff801003f0	obj/kern/kernel.asm	/^ffffffff801003f0:	81 e3 00 02 00 00    	and    $0x200,%ebx$/;"	l
ffffffff801003f6	obj/kern/kernel.asm	/^ffffffff801003f6:	89 98 b8 00 00 00    	mov    %ebx,0xb8(%rax)$/;"	l
ffffffff801003fc	obj/kern/kernel.asm	/^ffffffff801003fc:	eb da                	jmp    ffffffff801003d8 <pushcli+0x1e>$/;"	l
ffffffff801003fe	obj/kern/kernel.asm	/^ffffffff801003fe <popcli>:$/;"	l
ffffffff801003fe	obj/kern/kernel.asm	/^ffffffff801003fe:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80100402	obj/kern/kernel.asm	/^ffffffff80100402:	55                   	push   %rbp$/;"	l
ffffffff80100403	obj/kern/kernel.asm	/^ffffffff80100403:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100406	obj/kern/kernel.asm	/^ffffffff80100406:	9c                   	pushfq $/;"	l
ffffffff80100407	obj/kern/kernel.asm	/^ffffffff80100407:	58                   	pop    %rax$/;"	l
ffffffff80100408	obj/kern/kernel.asm	/^ffffffff80100408:	f6 c4 02             	test   $0x2,%ah$/;"	l
ffffffff8010040b	obj/kern/kernel.asm	/^ffffffff8010040b:	75 28                	jne    ffffffff80100435 <popcli+0x37>$/;"	l
ffffffff8010040d	obj/kern/kernel.asm	/^ffffffff8010040d:	e8 94 0c 00 00       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80100412	obj/kern/kernel.asm	/^ffffffff80100412:	8b 88 b4 00 00 00    	mov    0xb4(%rax),%ecx$/;"	l
ffffffff80100418	obj/kern/kernel.asm	/^ffffffff80100418:	8d 51 ff             	lea    -0x1(%rcx),%edx$/;"	l
ffffffff8010041b	obj/kern/kernel.asm	/^ffffffff8010041b:	89 90 b4 00 00 00    	mov    %edx,0xb4(%rax)$/;"	l
ffffffff80100421	obj/kern/kernel.asm	/^ffffffff80100421:	85 d2                	test   %edx,%edx$/;"	l
ffffffff80100423	obj/kern/kernel.asm	/^ffffffff80100423:	78 1c                	js     ffffffff80100441 <popcli+0x43>$/;"	l
ffffffff80100425	obj/kern/kernel.asm	/^ffffffff80100425:	e8 7c 0c 00 00       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff8010042a	obj/kern/kernel.asm	/^ffffffff8010042a:	83 b8 b4 00 00 00 00 	cmpl   $0x0,0xb4(%rax)$/;"	l
ffffffff80100431	obj/kern/kernel.asm	/^ffffffff80100431:	74 1a                	je     ffffffff8010044d <popcli+0x4f>$/;"	l
ffffffff80100433	obj/kern/kernel.asm	/^ffffffff80100433:	5d                   	pop    %rbp$/;"	l
ffffffff80100434	obj/kern/kernel.asm	/^ffffffff80100434:	c3                   	retq   $/;"	l
ffffffff80100435	obj/kern/kernel.asm	/^ffffffff80100435:	48 c7 c7 f3 6b 10 80 	mov    $0xffffffff80106bf3,%rdi$/;"	l
ffffffff8010043c	obj/kern/kernel.asm	/^ffffffff8010043c:	e8 e2 01 00 00       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80100441	obj/kern/kernel.asm	/^ffffffff80100441:	48 c7 c7 0a 6c 10 80 	mov    $0xffffffff80106c0a,%rdi$/;"	l
ffffffff80100448	obj/kern/kernel.asm	/^ffffffff80100448:	e8 d6 01 00 00       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010044d	obj/kern/kernel.asm	/^ffffffff8010044d:	e8 54 0c 00 00       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80100452	obj/kern/kernel.asm	/^ffffffff80100452:	83 b8 b8 00 00 00 00 	cmpl   $0x0,0xb8(%rax)$/;"	l
ffffffff80100459	obj/kern/kernel.asm	/^ffffffff80100459:	74 d8                	je     ffffffff80100433 <popcli+0x35>$/;"	l
ffffffff8010045b	obj/kern/kernel.asm	/^ffffffff8010045b:	fb                   	sti    $/;"	l
ffffffff8010045c	obj/kern/kernel.asm	/^ffffffff8010045c:	eb d5                	jmp    ffffffff80100433 <popcli+0x35>$/;"	l
ffffffff8010045e	obj/kern/kernel.asm	/^ffffffff8010045e <holding>:$/;"	l
ffffffff8010045e	obj/kern/kernel.asm	/^ffffffff8010045e:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80100462	obj/kern/kernel.asm	/^ffffffff80100462:	55                   	push   %rbp$/;"	l
ffffffff80100463	obj/kern/kernel.asm	/^ffffffff80100463:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100466	obj/kern/kernel.asm	/^ffffffff80100466:	41 54                	push   %r12$/;"	l
ffffffff80100468	obj/kern/kernel.asm	/^ffffffff80100468:	53                   	push   %rbx$/;"	l
ffffffff80100469	obj/kern/kernel.asm	/^ffffffff80100469:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff8010046c	obj/kern/kernel.asm	/^ffffffff8010046c:	e8 49 ff ff ff       	callq  ffffffff801003ba <pushcli>$/;"	l
ffffffff80100471	obj/kern/kernel.asm	/^ffffffff80100471:	41 bc 00 00 00 00    	mov    $0x0,%r12d$/;"	l
ffffffff80100477	obj/kern/kernel.asm	/^ffffffff80100477:	83 3b 00             	cmpl   $0x0,(%rbx)$/;"	l
ffffffff8010047a	obj/kern/kernel.asm	/^ffffffff8010047a:	75 0d                	jne    ffffffff80100489 <holding+0x2b>$/;"	l
ffffffff8010047c	obj/kern/kernel.asm	/^ffffffff8010047c:	e8 7d ff ff ff       	callq  ffffffff801003fe <popcli>$/;"	l
ffffffff80100481	obj/kern/kernel.asm	/^ffffffff80100481:	44 89 e0             	mov    %r12d,%eax$/;"	l
ffffffff80100484	obj/kern/kernel.asm	/^ffffffff80100484:	5b                   	pop    %rbx$/;"	l
ffffffff80100485	obj/kern/kernel.asm	/^ffffffff80100485:	41 5c                	pop    %r12$/;"	l
ffffffff80100487	obj/kern/kernel.asm	/^ffffffff80100487:	5d                   	pop    %rbp$/;"	l
ffffffff80100488	obj/kern/kernel.asm	/^ffffffff80100488:	c3                   	retq   $/;"	l
ffffffff80100489	obj/kern/kernel.asm	/^ffffffff80100489:	48 8b 5b 10          	mov    0x10(%rbx),%rbx$/;"	l
ffffffff8010048d	obj/kern/kernel.asm	/^ffffffff8010048d:	e8 14 0c 00 00       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80100492	obj/kern/kernel.asm	/^ffffffff80100492:	48 39 c3             	cmp    %rax,%rbx$/;"	l
ffffffff80100495	obj/kern/kernel.asm	/^ffffffff80100495:	41 0f 94 c4          	sete   %r12b$/;"	l
ffffffff80100499	obj/kern/kernel.asm	/^ffffffff80100499:	45 0f b6 e4          	movzbl %r12b,%r12d$/;"	l
ffffffff8010049d	obj/kern/kernel.asm	/^ffffffff8010049d:	eb dd                	jmp    ffffffff8010047c <holding+0x1e>$/;"	l
ffffffff8010049f	obj/kern/kernel.asm	/^ffffffff8010049f <acquire>:$/;"	l
ffffffff8010049f	obj/kern/kernel.asm	/^ffffffff8010049f:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801004a3	obj/kern/kernel.asm	/^ffffffff801004a3:	55                   	push   %rbp$/;"	l
ffffffff801004a4	obj/kern/kernel.asm	/^ffffffff801004a4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801004a7	obj/kern/kernel.asm	/^ffffffff801004a7:	53                   	push   %rbx$/;"	l
ffffffff801004a8	obj/kern/kernel.asm	/^ffffffff801004a8:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801004ac	obj/kern/kernel.asm	/^ffffffff801004ac:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff801004af	obj/kern/kernel.asm	/^ffffffff801004af:	e8 06 ff ff ff       	callq  ffffffff801003ba <pushcli>$/;"	l
ffffffff801004b4	obj/kern/kernel.asm	/^ffffffff801004b4:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801004b7	obj/kern/kernel.asm	/^ffffffff801004b7:	e8 a2 ff ff ff       	callq  ffffffff8010045e <holding>$/;"	l
ffffffff801004bc	obj/kern/kernel.asm	/^ffffffff801004bc:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801004be	obj/kern/kernel.asm	/^ffffffff801004be:	75 21                	jne    ffffffff801004e1 <acquire+0x42>$/;"	l
ffffffff801004c0	obj/kern/kernel.asm	/^ffffffff801004c0:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffffffff801004c5	obj/kern/kernel.asm	/^ffffffff801004c5:	89 d0                	mov    %edx,%eax$/;"	l
ffffffff801004c7	obj/kern/kernel.asm	/^ffffffff801004c7:	f0 87 03             	lock xchg %eax,(%rbx)$/;"	l
ffffffff801004ca	obj/kern/kernel.asm	/^ffffffff801004ca:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801004cc	obj/kern/kernel.asm	/^ffffffff801004cc:	75 f7                	jne    ffffffff801004c5 <acquire+0x26>$/;"	l
ffffffff801004ce	obj/kern/kernel.asm	/^ffffffff801004ce:	0f ae f0             	mfence $/;"	l
ffffffff801004d1	obj/kern/kernel.asm	/^ffffffff801004d1:	e8 d0 0b 00 00       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff801004d6	obj/kern/kernel.asm	/^ffffffff801004d6:	48 89 43 10          	mov    %rax,0x10(%rbx)$/;"	l
ffffffff801004da	obj/kern/kernel.asm	/^ffffffff801004da:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801004de	obj/kern/kernel.asm	/^ffffffff801004de:	5b                   	pop    %rbx$/;"	l
ffffffff801004df	obj/kern/kernel.asm	/^ffffffff801004df:	5d                   	pop    %rbp$/;"	l
ffffffff801004e0	obj/kern/kernel.asm	/^ffffffff801004e0:	c3                   	retq   $/;"	l
ffffffff801004e1	obj/kern/kernel.asm	/^ffffffff801004e1:	48 c7 c7 11 6c 10 80 	mov    $0xffffffff80106c11,%rdi$/;"	l
ffffffff801004e8	obj/kern/kernel.asm	/^ffffffff801004e8:	e8 36 01 00 00       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801004ed	obj/kern/kernel.asm	/^ffffffff801004ed <release>:$/;"	l
ffffffff801004ed	obj/kern/kernel.asm	/^ffffffff801004ed:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801004f1	obj/kern/kernel.asm	/^ffffffff801004f1:	55                   	push   %rbp$/;"	l
ffffffff801004f2	obj/kern/kernel.asm	/^ffffffff801004f2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801004f5	obj/kern/kernel.asm	/^ffffffff801004f5:	53                   	push   %rbx$/;"	l
ffffffff801004f6	obj/kern/kernel.asm	/^ffffffff801004f6:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801004fa	obj/kern/kernel.asm	/^ffffffff801004fa:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff801004fd	obj/kern/kernel.asm	/^ffffffff801004fd:	e8 5c ff ff ff       	callq  ffffffff8010045e <holding>$/;"	l
ffffffff80100502	obj/kern/kernel.asm	/^ffffffff80100502:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80100504	obj/kern/kernel.asm	/^ffffffff80100504:	74 1d                	je     ffffffff80100523 <release+0x36>$/;"	l
ffffffff80100506	obj/kern/kernel.asm	/^ffffffff80100506:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)$/;"	l
ffffffff8010050d	obj/kern/kernel.asm	/^ffffffff8010050d:	00 $/;"	l
ffffffff8010050e	obj/kern/kernel.asm	/^ffffffff8010050e:	0f ae f0             	mfence $/;"	l
ffffffff80100511	obj/kern/kernel.asm	/^ffffffff80100511:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)$/;"	l
ffffffff80100517	obj/kern/kernel.asm	/^ffffffff80100517:	e8 e2 fe ff ff       	callq  ffffffff801003fe <popcli>$/;"	l
ffffffff8010051c	obj/kern/kernel.asm	/^ffffffff8010051c:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80100520	obj/kern/kernel.asm	/^ffffffff80100520:	5b                   	pop    %rbx$/;"	l
ffffffff80100521	obj/kern/kernel.asm	/^ffffffff80100521:	5d                   	pop    %rbp$/;"	l
ffffffff80100522	obj/kern/kernel.asm	/^ffffffff80100522:	c3                   	retq   $/;"	l
ffffffff80100523	obj/kern/kernel.asm	/^ffffffff80100523:	48 c7 c7 19 6c 10 80 	mov    $0xffffffff80106c19,%rdi$/;"	l
ffffffff8010052a	obj/kern/kernel.asm	/^ffffffff8010052a:	e8 f4 00 00 00       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010052f	obj/kern/kernel.asm	/^ffffffff8010052f <consoleread>:$/;"	l
ffffffff8010052f	obj/kern/kernel.asm	/^ffffffff8010052f:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80100533	obj/kern/kernel.asm	/^ffffffff80100533:	55                   	push   %rbp$/;"	l
ffffffff80100534	obj/kern/kernel.asm	/^ffffffff80100534:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100537	obj/kern/kernel.asm	/^ffffffff80100537:	41 57                	push   %r15$/;"	l
ffffffff80100539	obj/kern/kernel.asm	/^ffffffff80100539:	41 56                	push   %r14$/;"	l
ffffffff8010053b	obj/kern/kernel.asm	/^ffffffff8010053b:	41 55                	push   %r13$/;"	l
ffffffff8010053d	obj/kern/kernel.asm	/^ffffffff8010053d:	41 54                	push   %r12$/;"	l
ffffffff8010053f	obj/kern/kernel.asm	/^ffffffff8010053f:	53                   	push   %rbx$/;"	l
ffffffff80100540	obj/kern/kernel.asm	/^ffffffff80100540:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80100544	obj/kern/kernel.asm	/^ffffffff80100544:	49 89 fe             	mov    %rdi,%r14$/;"	l
ffffffff80100547	obj/kern/kernel.asm	/^ffffffff80100547:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff8010054a	obj/kern/kernel.asm	/^ffffffff8010054a:	41 89 d5             	mov    %edx,%r13d$/;"	l
ffffffff8010054d	obj/kern/kernel.asm	/^ffffffff8010054d:	e8 dd 51 00 00       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff80100552	obj/kern/kernel.asm	/^ffffffff80100552:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff80100559	obj/kern/kernel.asm	/^ffffffff80100559:	e8 41 ff ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff8010055e	obj/kern/kernel.asm	/^ffffffff8010055e:	45 89 ef             	mov    %r13d,%r15d$/;"	l
ffffffff80100561	obj/kern/kernel.asm	/^ffffffff80100561:	48 c7 c3 60 9d 10 80 	mov    $0xffffffff80109d60,%rbx$/;"	l
ffffffff80100568	obj/kern/kernel.asm	/^ffffffff80100568:	45 85 ff             	test   %r15d,%r15d$/;"	l
ffffffff8010056b	obj/kern/kernel.asm	/^ffffffff8010056b:	7e 65                	jle    ffffffff801005d2 <consoleread+0xa3>$/;"	l
ffffffff8010056d	obj/kern/kernel.asm	/^ffffffff8010056d:	8b 83 80 00 00 00    	mov    0x80(%rbx),%eax$/;"	l
ffffffff80100573	obj/kern/kernel.asm	/^ffffffff80100573:	3b 83 84 00 00 00    	cmp    0x84(%rbx),%eax$/;"	l
ffffffff80100579	obj/kern/kernel.asm	/^ffffffff80100579:	75 2c                	jne    ffffffff801005a7 <consoleread+0x78>$/;"	l
ffffffff8010057b	obj/kern/kernel.asm	/^ffffffff8010057b:	e8 70 0b 00 00       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80100580	obj/kern/kernel.asm	/^ffffffff80100580:	83 78 40 00          	cmpl   $0x0,0x40(%rax)$/;"	l
ffffffff80100584	obj/kern/kernel.asm	/^ffffffff80100584:	75 68                	jne    ffffffff801005ee <consoleread+0xbf>$/;"	l
ffffffff80100586	obj/kern/kernel.asm	/^ffffffff80100586:	48 c7 c6 60 8b 10 80 	mov    $0xffffffff80108b60,%rsi$/;"	l
ffffffff8010058d	obj/kern/kernel.asm	/^ffffffff8010058d:	48 c7 c7 e0 9d 10 80 	mov    $0xffffffff80109de0,%rdi$/;"	l
ffffffff80100594	obj/kern/kernel.asm	/^ffffffff80100594:	e8 0b 11 00 00       	callq  ffffffff801016a4 <sleep>$/;"	l
ffffffff80100599	obj/kern/kernel.asm	/^ffffffff80100599:	8b 83 80 00 00 00    	mov    0x80(%rbx),%eax$/;"	l
ffffffff8010059f	obj/kern/kernel.asm	/^ffffffff8010059f:	3b 83 84 00 00 00    	cmp    0x84(%rbx),%eax$/;"	l
ffffffff801005a5	obj/kern/kernel.asm	/^ffffffff801005a5:	74 d4                	je     ffffffff8010057b <consoleread+0x4c>$/;"	l
ffffffff801005a7	obj/kern/kernel.asm	/^ffffffff801005a7:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffffffff801005aa	obj/kern/kernel.asm	/^ffffffff801005aa:	89 93 80 00 00 00    	mov    %edx,0x80(%rbx)$/;"	l
ffffffff801005b0	obj/kern/kernel.asm	/^ffffffff801005b0:	89 c2                	mov    %eax,%edx$/;"	l
ffffffff801005b2	obj/kern/kernel.asm	/^ffffffff801005b2:	83 e2 7f             	and    $0x7f,%edx$/;"	l
ffffffff801005b5	obj/kern/kernel.asm	/^ffffffff801005b5:	0f b6 14 13          	movzbl (%rbx,%rdx,1),%edx$/;"	l
ffffffff801005b9	obj/kern/kernel.asm	/^ffffffff801005b9:	0f be ca             	movsbl %dl,%ecx$/;"	l
ffffffff801005bc	obj/kern/kernel.asm	/^ffffffff801005bc:	80 fa 04             	cmp    $0x4,%dl$/;"	l
ffffffff801005bf	obj/kern/kernel.asm	/^ffffffff801005bf:	74 55                	je     ffffffff80100616 <consoleread+0xe7>$/;"	l
ffffffff801005c1	obj/kern/kernel.asm	/^ffffffff801005c1:	41 88 14 24          	mov    %dl,(%r12)$/;"	l
ffffffff801005c5	obj/kern/kernel.asm	/^ffffffff801005c5:	41 83 ef 01          	sub    $0x1,%r15d$/;"	l
ffffffff801005c9	obj/kern/kernel.asm	/^ffffffff801005c9:	49 83 c4 01          	add    $0x1,%r12$/;"	l
ffffffff801005cd	obj/kern/kernel.asm	/^ffffffff801005cd:	83 f9 0a             	cmp    $0xa,%ecx$/;"	l
ffffffff801005d0	obj/kern/kernel.asm	/^ffffffff801005d0:	75 96                	jne    ffffffff80100568 <consoleread+0x39>$/;"	l
ffffffff801005d2	obj/kern/kernel.asm	/^ffffffff801005d2:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff801005d9	obj/kern/kernel.asm	/^ffffffff801005d9:	e8 0f ff ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801005de	obj/kern/kernel.asm	/^ffffffff801005de:	4c 89 f7             	mov    %r14,%rdi$/;"	l
ffffffff801005e1	obj/kern/kernel.asm	/^ffffffff801005e1:	e8 8e 50 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff801005e6	obj/kern/kernel.asm	/^ffffffff801005e6:	44 89 e8             	mov    %r13d,%eax$/;"	l
ffffffff801005e9	obj/kern/kernel.asm	/^ffffffff801005e9:	44 29 f8             	sub    %r15d,%eax$/;"	l
ffffffff801005ec	obj/kern/kernel.asm	/^ffffffff801005ec:	eb 19                	jmp    ffffffff80100607 <consoleread+0xd8>$/;"	l
ffffffff801005ee	obj/kern/kernel.asm	/^ffffffff801005ee:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff801005f5	obj/kern/kernel.asm	/^ffffffff801005f5:	e8 f3 fe ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801005fa	obj/kern/kernel.asm	/^ffffffff801005fa:	4c 89 f7             	mov    %r14,%rdi$/;"	l
ffffffff801005fd	obj/kern/kernel.asm	/^ffffffff801005fd:	e8 72 50 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80100602	obj/kern/kernel.asm	/^ffffffff80100602:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80100607	obj/kern/kernel.asm	/^ffffffff80100607:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff8010060b	obj/kern/kernel.asm	/^ffffffff8010060b:	5b                   	pop    %rbx$/;"	l
ffffffff8010060c	obj/kern/kernel.asm	/^ffffffff8010060c:	41 5c                	pop    %r12$/;"	l
ffffffff8010060e	obj/kern/kernel.asm	/^ffffffff8010060e:	41 5d                	pop    %r13$/;"	l
ffffffff80100610	obj/kern/kernel.asm	/^ffffffff80100610:	41 5e                	pop    %r14$/;"	l
ffffffff80100612	obj/kern/kernel.asm	/^ffffffff80100612:	41 5f                	pop    %r15$/;"	l
ffffffff80100614	obj/kern/kernel.asm	/^ffffffff80100614:	5d                   	pop    %rbp$/;"	l
ffffffff80100615	obj/kern/kernel.asm	/^ffffffff80100615:	c3                   	retq   $/;"	l
ffffffff80100616	obj/kern/kernel.asm	/^ffffffff80100616:	45 39 ef             	cmp    %r13d,%r15d$/;"	l
ffffffff80100619	obj/kern/kernel.asm	/^ffffffff80100619:	7d b7                	jge    ffffffff801005d2 <consoleread+0xa3>$/;"	l
ffffffff8010061b	obj/kern/kernel.asm	/^ffffffff8010061b:	89 05 bf 97 00 00    	mov    %eax,0x97bf(%rip)        # ffffffff80109de0 <input+0x80>$/;"	l
ffffffff80100621	obj/kern/kernel.asm	/^ffffffff80100621:	eb af                	jmp    ffffffff801005d2 <consoleread+0xa3>$/;"	l
ffffffff80100623	obj/kern/kernel.asm	/^ffffffff80100623 <panic>:$/;"	l
ffffffff80100623	obj/kern/kernel.asm	/^ffffffff80100623:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80100627	obj/kern/kernel.asm	/^ffffffff80100627:	55                   	push   %rbp$/;"	l
ffffffff80100628	obj/kern/kernel.asm	/^ffffffff80100628:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010062b	obj/kern/kernel.asm	/^ffffffff8010062b:	53                   	push   %rbx$/;"	l
ffffffff8010062c	obj/kern/kernel.asm	/^ffffffff8010062c:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80100630	obj/kern/kernel.asm	/^ffffffff80100630:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80100633	obj/kern/kernel.asm	/^ffffffff80100633:	fa                   	cli    $/;"	l
ffffffff80100634	obj/kern/kernel.asm	/^ffffffff80100634:	c7 05 3a 85 00 00 00 	movl   $0x0,0x853a(%rip)        # ffffffff80108b78 <cons+0x18>$/;"	l
ffffffff8010063b	obj/kern/kernel.asm	/^ffffffff8010063b:	00 00 00 $/;"	l
ffffffff8010063e	obj/kern/kernel.asm	/^ffffffff8010063e:	e8 79 30 00 00       	callq  ffffffff801036bc <lapicid>$/;"	l
ffffffff80100643	obj/kern/kernel.asm	/^ffffffff80100643:	89 c6                	mov    %eax,%esi$/;"	l
ffffffff80100645	obj/kern/kernel.asm	/^ffffffff80100645:	48 89 da             	mov    %rbx,%rdx$/;"	l
ffffffff80100648	obj/kern/kernel.asm	/^ffffffff80100648:	48 c7 c7 28 6c 10 80 	mov    $0xffffffff80106c28,%rdi$/;"	l
ffffffff8010064f	obj/kern/kernel.asm	/^ffffffff8010064f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80100654	obj/kern/kernel.asm	/^ffffffff80100654:	e8 6d 02 00 00       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80100659	obj/kern/kernel.asm	/^ffffffff80100659:	c7 05 1d 85 00 00 01 	movl   $0x1,0x851d(%rip)        # ffffffff80108b80 <panicked>$/;"	l
ffffffff80100660	obj/kern/kernel.asm	/^ffffffff80100660:	00 00 00 $/;"	l
ffffffff80100663	obj/kern/kernel.asm	/^ffffffff80100663:	f4                   	hlt    $/;"	l
ffffffff80100664	obj/kern/kernel.asm	/^ffffffff80100664:	eb fd                	jmp    ffffffff80100663 <panic+0x40>$/;"	l
ffffffff80100666	obj/kern/kernel.asm	/^ffffffff80100666 <consputc>:$/;"	l
ffffffff80100666	obj/kern/kernel.asm	/^ffffffff80100666:	83 3d 13 85 00 00 00 	cmpl   $0x0,0x8513(%rip)        # ffffffff80108b80 <panicked>$/;"	l
ffffffff8010066d	obj/kern/kernel.asm	/^ffffffff8010066d:	74 03                	je     ffffffff80100672 <consputc+0xc>$/;"	l
ffffffff8010066f	obj/kern/kernel.asm	/^ffffffff8010066f:	fa                   	cli    $/;"	l
ffffffff80100670	obj/kern/kernel.asm	/^ffffffff80100670:	eb fe                	jmp    ffffffff80100670 <consputc+0xa>$/;"	l
ffffffff80100672	obj/kern/kernel.asm	/^ffffffff80100672:	55                   	push   %rbp$/;"	l
ffffffff80100673	obj/kern/kernel.asm	/^ffffffff80100673:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100676	obj/kern/kernel.asm	/^ffffffff80100676:	41 54                	push   %r12$/;"	l
ffffffff80100678	obj/kern/kernel.asm	/^ffffffff80100678:	53                   	push   %rbx$/;"	l
ffffffff80100679	obj/kern/kernel.asm	/^ffffffff80100679:	41 89 fc             	mov    %edi,%r12d$/;"	l
ffffffff8010067c	obj/kern/kernel.asm	/^ffffffff8010067c:	81 ff 00 01 00 00    	cmp    $0x100,%edi$/;"	l
ffffffff80100682	obj/kern/kernel.asm	/^ffffffff80100682:	0f 84 ad 00 00 00    	je     ffffffff80100735 <consputc+0xcf>$/;"	l
ffffffff80100688	obj/kern/kernel.asm	/^ffffffff80100688:	e8 87 30 00 00       	callq  ffffffff80103714 <uartputc>$/;"	l
ffffffff8010068d	obj/kern/kernel.asm	/^ffffffff8010068d:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffffffff80100692	obj/kern/kernel.asm	/^ffffffff80100692:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
ffffffff80100697	obj/kern/kernel.asm	/^ffffffff80100697:	89 fa                	mov    %edi,%edx$/;"	l
ffffffff80100699	obj/kern/kernel.asm	/^ffffffff80100699:	ee                   	out    %al,(%dx)$/;"	l
ffffffff8010069a	obj/kern/kernel.asm	/^ffffffff8010069a:	bb d5 03 00 00       	mov    $0x3d5,%ebx$/;"	l
ffffffff8010069f	obj/kern/kernel.asm	/^ffffffff8010069f:	89 da                	mov    %ebx,%edx$/;"	l
ffffffff801006a1	obj/kern/kernel.asm	/^ffffffff801006a1:	ec                   	in     (%dx),%al$/;"	l
ffffffff801006a2	obj/kern/kernel.asm	/^ffffffff801006a2:	0f b6 f0             	movzbl %al,%esi$/;"	l
ffffffff801006a5	obj/kern/kernel.asm	/^ffffffff801006a5:	c1 e6 08             	shl    $0x8,%esi$/;"	l
ffffffff801006a8	obj/kern/kernel.asm	/^ffffffff801006a8:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
ffffffff801006ad	obj/kern/kernel.asm	/^ffffffff801006ad:	89 fa                	mov    %edi,%edx$/;"	l
ffffffff801006af	obj/kern/kernel.asm	/^ffffffff801006af:	ee                   	out    %al,(%dx)$/;"	l
ffffffff801006b0	obj/kern/kernel.asm	/^ffffffff801006b0:	89 da                	mov    %ebx,%edx$/;"	l
ffffffff801006b2	obj/kern/kernel.asm	/^ffffffff801006b2:	ec                   	in     (%dx),%al$/;"	l
ffffffff801006b3	obj/kern/kernel.asm	/^ffffffff801006b3:	0f b6 d8             	movzbl %al,%ebx$/;"	l
ffffffff801006b6	obj/kern/kernel.asm	/^ffffffff801006b6:	09 f3                	or     %esi,%ebx$/;"	l
ffffffff801006b8	obj/kern/kernel.asm	/^ffffffff801006b8:	41 83 fc 0a          	cmp    $0xa,%r12d$/;"	l
ffffffff801006bc	obj/kern/kernel.asm	/^ffffffff801006bc:	0f 84 96 00 00 00    	je     ffffffff80100758 <consputc+0xf2>$/;"	l
ffffffff801006c2	obj/kern/kernel.asm	/^ffffffff801006c2:	41 81 fc 00 01 00 00 	cmp    $0x100,%r12d$/;"	l
ffffffff801006c9	obj/kern/kernel.asm	/^ffffffff801006c9:	0f 84 a5 00 00 00    	je     ffffffff80100774 <consputc+0x10e>$/;"	l
ffffffff801006cf	obj/kern/kernel.asm	/^ffffffff801006cf:	48 63 d3             	movslq %ebx,%rdx$/;"	l
ffffffff801006d2	obj/kern/kernel.asm	/^ffffffff801006d2:	41 0f b6 c4          	movzbl %r12b,%eax$/;"	l
ffffffff801006d6	obj/kern/kernel.asm	/^ffffffff801006d6:	80 cc 07             	or     $0x7,%ah$/;"	l
ffffffff801006d9	obj/kern/kernel.asm	/^ffffffff801006d9:	66 89 84 12 00 80 0b 	mov    %ax,-0x7ff48000(%rdx,%rdx,1)$/;"	l
ffffffff801006e0	obj/kern/kernel.asm	/^ffffffff801006e0:	80 $/;"	l
ffffffff801006e1	obj/kern/kernel.asm	/^ffffffff801006e1:	8d 5b 01             	lea    0x1(%rbx),%ebx$/;"	l
ffffffff801006e4	obj/kern/kernel.asm	/^ffffffff801006e4:	81 fb d0 07 00 00    	cmp    $0x7d0,%ebx$/;"	l
ffffffff801006ea	obj/kern/kernel.asm	/^ffffffff801006ea:	0f 87 93 00 00 00    	ja     ffffffff80100783 <consputc+0x11d>$/;"	l
ffffffff801006f0	obj/kern/kernel.asm	/^ffffffff801006f0:	81 fb 7f 07 00 00    	cmp    $0x77f,%ebx$/;"	l
ffffffff801006f6	obj/kern/kernel.asm	/^ffffffff801006f6:	0f 8f 93 00 00 00    	jg     ffffffff8010078f <consputc+0x129>$/;"	l
ffffffff801006fc	obj/kern/kernel.asm	/^ffffffff801006fc:	be d4 03 00 00       	mov    $0x3d4,%esi$/;"	l
ffffffff80100701	obj/kern/kernel.asm	/^ffffffff80100701:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
ffffffff80100706	obj/kern/kernel.asm	/^ffffffff80100706:	89 f2                	mov    %esi,%edx$/;"	l
ffffffff80100708	obj/kern/kernel.asm	/^ffffffff80100708:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80100709	obj/kern/kernel.asm	/^ffffffff80100709:	89 d8                	mov    %ebx,%eax$/;"	l
ffffffff8010070b	obj/kern/kernel.asm	/^ffffffff8010070b:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffffffff8010070e	obj/kern/kernel.asm	/^ffffffff8010070e:	b9 d5 03 00 00       	mov    $0x3d5,%ecx$/;"	l
ffffffff80100713	obj/kern/kernel.asm	/^ffffffff80100713:	89 ca                	mov    %ecx,%edx$/;"	l
ffffffff80100715	obj/kern/kernel.asm	/^ffffffff80100715:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80100716	obj/kern/kernel.asm	/^ffffffff80100716:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
ffffffff8010071b	obj/kern/kernel.asm	/^ffffffff8010071b:	89 f2                	mov    %esi,%edx$/;"	l
ffffffff8010071d	obj/kern/kernel.asm	/^ffffffff8010071d:	ee                   	out    %al,(%dx)$/;"	l
ffffffff8010071e	obj/kern/kernel.asm	/^ffffffff8010071e:	89 d8                	mov    %ebx,%eax$/;"	l
ffffffff80100720	obj/kern/kernel.asm	/^ffffffff80100720:	89 ca                	mov    %ecx,%edx$/;"	l
ffffffff80100722	obj/kern/kernel.asm	/^ffffffff80100722:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80100723	obj/kern/kernel.asm	/^ffffffff80100723:	48 63 db             	movslq %ebx,%rbx$/;"	l
ffffffff80100726	obj/kern/kernel.asm	/^ffffffff80100726:	66 c7 84 1b 00 80 0b 	movw   $0x720,-0x7ff48000(%rbx,%rbx,1)$/;"	l
ffffffff8010072d	obj/kern/kernel.asm	/^ffffffff8010072d:	80 20 07 $/;"	l
ffffffff80100730	obj/kern/kernel.asm	/^ffffffff80100730:	5b                   	pop    %rbx$/;"	l
ffffffff80100731	obj/kern/kernel.asm	/^ffffffff80100731:	41 5c                	pop    %r12$/;"	l
ffffffff80100733	obj/kern/kernel.asm	/^ffffffff80100733:	5d                   	pop    %rbp$/;"	l
ffffffff80100734	obj/kern/kernel.asm	/^ffffffff80100734:	c3                   	retq   $/;"	l
ffffffff80100735	obj/kern/kernel.asm	/^ffffffff80100735:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffffffff8010073a	obj/kern/kernel.asm	/^ffffffff8010073a:	e8 d5 2f 00 00       	callq  ffffffff80103714 <uartputc>$/;"	l
ffffffff8010073f	obj/kern/kernel.asm	/^ffffffff8010073f:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
ffffffff80100744	obj/kern/kernel.asm	/^ffffffff80100744:	e8 cb 2f 00 00       	callq  ffffffff80103714 <uartputc>$/;"	l
ffffffff80100749	obj/kern/kernel.asm	/^ffffffff80100749:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffffffff8010074e	obj/kern/kernel.asm	/^ffffffff8010074e:	e8 c1 2f 00 00       	callq  ffffffff80103714 <uartputc>$/;"	l
ffffffff80100753	obj/kern/kernel.asm	/^ffffffff80100753:	e9 35 ff ff ff       	jmpq   ffffffff8010068d <consputc+0x27>$/;"	l
ffffffff80100758	obj/kern/kernel.asm	/^ffffffff80100758:	48 63 c3             	movslq %ebx,%rax$/;"	l
ffffffff8010075b	obj/kern/kernel.asm	/^ffffffff8010075b:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax$/;"	l
ffffffff80100762	obj/kern/kernel.asm	/^ffffffff80100762:	48 c1 f8 25          	sar    $0x25,%rax$/;"	l
ffffffff80100766	obj/kern/kernel.asm	/^ffffffff80100766:	8d 04 80             	lea    (%rax,%rax,4),%eax$/;"	l
ffffffff80100769	obj/kern/kernel.asm	/^ffffffff80100769:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffffffff8010076c	obj/kern/kernel.asm	/^ffffffff8010076c:	8d 58 50             	lea    0x50(%rax),%ebx$/;"	l
ffffffff8010076f	obj/kern/kernel.asm	/^ffffffff8010076f:	e9 70 ff ff ff       	jmpq   ffffffff801006e4 <consputc+0x7e>$/;"	l
ffffffff80100774	obj/kern/kernel.asm	/^ffffffff80100774:	85 db                	test   %ebx,%ebx$/;"	l
ffffffff80100776	obj/kern/kernel.asm	/^ffffffff80100776:	0f 9f c0             	setg   %al$/;"	l
ffffffff80100779	obj/kern/kernel.asm	/^ffffffff80100779:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffffffff8010077c	obj/kern/kernel.asm	/^ffffffff8010077c:	29 c3                	sub    %eax,%ebx$/;"	l
ffffffff8010077e	obj/kern/kernel.asm	/^ffffffff8010077e:	e9 61 ff ff ff       	jmpq   ffffffff801006e4 <consputc+0x7e>$/;"	l
ffffffff80100783	obj/kern/kernel.asm	/^ffffffff80100783:	48 c7 c7 4d 6c 10 80 	mov    $0xffffffff80106c4d,%rdi$/;"	l
ffffffff8010078a	obj/kern/kernel.asm	/^ffffffff8010078a:	e8 94 fe ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010078f	obj/kern/kernel.asm	/^ffffffff8010078f:	ba 60 0e 00 00       	mov    $0xe60,%edx$/;"	l
ffffffff80100794	obj/kern/kernel.asm	/^ffffffff80100794:	48 c7 c6 a0 80 0b 80 	mov    $0xffffffff800b80a0,%rsi$/;"	l
ffffffff8010079b	obj/kern/kernel.asm	/^ffffffff8010079b:	48 c7 c7 00 80 0b 80 	mov    $0xffffffff800b8000,%rdi$/;"	l
ffffffff801007a2	obj/kern/kernel.asm	/^ffffffff801007a2:	e8 e0 61 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff801007a7	obj/kern/kernel.asm	/^ffffffff801007a7:	83 eb 50             	sub    $0x50,%ebx$/;"	l
ffffffff801007aa	obj/kern/kernel.asm	/^ffffffff801007aa:	ba 80 07 00 00       	mov    $0x780,%edx$/;"	l
ffffffff801007af	obj/kern/kernel.asm	/^ffffffff801007af:	29 da                	sub    %ebx,%edx$/;"	l
ffffffff801007b1	obj/kern/kernel.asm	/^ffffffff801007b1:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffffffff801007b4	obj/kern/kernel.asm	/^ffffffff801007b4:	48 01 d2             	add    %rdx,%rdx$/;"	l
ffffffff801007b7	obj/kern/kernel.asm	/^ffffffff801007b7:	48 63 c3             	movslq %ebx,%rax$/;"	l
ffffffff801007ba	obj/kern/kernel.asm	/^ffffffff801007ba:	48 8d bc 00 00 80 0b 	lea    -0x7ff48000(%rax,%rax,1),%rdi$/;"	l
ffffffff801007c1	obj/kern/kernel.asm	/^ffffffff801007c1:	80 $/;"	l
ffffffff801007c2	obj/kern/kernel.asm	/^ffffffff801007c2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff801007c7	obj/kern/kernel.asm	/^ffffffff801007c7:	e8 a9 61 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff801007cc	obj/kern/kernel.asm	/^ffffffff801007cc:	e9 2b ff ff ff       	jmpq   ffffffff801006fc <consputc+0x96>$/;"	l
ffffffff801007d1	obj/kern/kernel.asm	/^ffffffff801007d1 <printint>:$/;"	l
ffffffff801007d1	obj/kern/kernel.asm	/^ffffffff801007d1:	55                   	push   %rbp$/;"	l
ffffffff801007d2	obj/kern/kernel.asm	/^ffffffff801007d2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801007d5	obj/kern/kernel.asm	/^ffffffff801007d5:	53                   	push   %rbx$/;"	l
ffffffff801007d6	obj/kern/kernel.asm	/^ffffffff801007d6:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff801007da	obj/kern/kernel.asm	/^ffffffff801007da:	85 d2                	test   %edx,%edx$/;"	l
ffffffff801007dc	obj/kern/kernel.asm	/^ffffffff801007dc:	74 05                	je     ffffffff801007e3 <printint+0x12>$/;"	l
ffffffff801007de	obj/kern/kernel.asm	/^ffffffff801007de:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff801007e1	obj/kern/kernel.asm	/^ffffffff801007e1:	78 6d                	js     ffffffff80100850 <printint+0x7f>$/;"	l
ffffffff801007e3	obj/kern/kernel.asm	/^ffffffff801007e3:	41 b9 00 00 00 00    	mov    $0x0,%r9d$/;"	l
ffffffff801007e9	obj/kern/kernel.asm	/^ffffffff801007e9:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx$/;"	l
ffffffff801007ed	obj/kern/kernel.asm	/^ffffffff801007ed:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff801007f2	obj/kern/kernel.asm	/^ffffffff801007f2:	48 63 f6             	movslq %esi,%rsi$/;"	l
ffffffff801007f5	obj/kern/kernel.asm	/^ffffffff801007f5:	41 89 d8             	mov    %ebx,%r8d$/;"	l
ffffffff801007f8	obj/kern/kernel.asm	/^ffffffff801007f8:	83 c3 01             	add    $0x1,%ebx$/;"	l
ffffffff801007fb	obj/kern/kernel.asm	/^ffffffff801007fb:	48 89 f8             	mov    %rdi,%rax$/;"	l
ffffffff801007fe	obj/kern/kernel.asm	/^ffffffff801007fe:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80100803	obj/kern/kernel.asm	/^ffffffff80100803:	48 f7 f6             	div    %rsi$/;"	l
ffffffff80100806	obj/kern/kernel.asm	/^ffffffff80100806:	0f b6 92 30 6d 10 80 	movzbl -0x7fef92d0(%rdx),%edx$/;"	l
ffffffff8010080d	obj/kern/kernel.asm	/^ffffffff8010080d:	88 11                	mov    %dl,(%rcx)$/;"	l
ffffffff8010080f	obj/kern/kernel.asm	/^ffffffff8010080f:	48 89 fa             	mov    %rdi,%rdx$/;"	l
ffffffff80100812	obj/kern/kernel.asm	/^ffffffff80100812:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80100815	obj/kern/kernel.asm	/^ffffffff80100815:	48 83 c1 01          	add    $0x1,%rcx$/;"	l
ffffffff80100819	obj/kern/kernel.asm	/^ffffffff80100819:	48 39 d6             	cmp    %rdx,%rsi$/;"	l
ffffffff8010081c	obj/kern/kernel.asm	/^ffffffff8010081c:	76 d7                	jbe    ffffffff801007f5 <printint+0x24>$/;"	l
ffffffff8010081e	obj/kern/kernel.asm	/^ffffffff8010081e:	45 85 c9             	test   %r9d,%r9d$/;"	l
ffffffff80100821	obj/kern/kernel.asm	/^ffffffff80100821:	74 0c                	je     ffffffff8010082f <printint+0x5e>$/;"	l
ffffffff80100823	obj/kern/kernel.asm	/^ffffffff80100823:	48 63 db             	movslq %ebx,%rbx$/;"	l
ffffffff80100826	obj/kern/kernel.asm	/^ffffffff80100826:	c6 44 1d e0 2d       	movb   $0x2d,-0x20(%rbp,%rbx,1)$/;"	l
ffffffff8010082b	obj/kern/kernel.asm	/^ffffffff8010082b:	41 8d 58 02          	lea    0x2(%r8),%ebx$/;"	l
ffffffff8010082f	obj/kern/kernel.asm	/^ffffffff8010082f:	83 eb 01             	sub    $0x1,%ebx$/;"	l
ffffffff80100832	obj/kern/kernel.asm	/^ffffffff80100832:	78 15                	js     ffffffff80100849 <printint+0x78>$/;"	l
ffffffff80100834	obj/kern/kernel.asm	/^ffffffff80100834:	48 63 db             	movslq %ebx,%rbx$/;"	l
ffffffff80100837	obj/kern/kernel.asm	/^ffffffff80100837:	0f be 7c 2b e0       	movsbl -0x20(%rbx,%rbp,1),%edi$/;"	l
ffffffff8010083c	obj/kern/kernel.asm	/^ffffffff8010083c:	e8 25 fe ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100841	obj/kern/kernel.asm	/^ffffffff80100841:	48 83 eb 01          	sub    $0x1,%rbx$/;"	l
ffffffff80100845	obj/kern/kernel.asm	/^ffffffff80100845:	85 db                	test   %ebx,%ebx$/;"	l
ffffffff80100847	obj/kern/kernel.asm	/^ffffffff80100847:	79 ee                	jns    ffffffff80100837 <printint+0x66>$/;"	l
ffffffff80100849	obj/kern/kernel.asm	/^ffffffff80100849:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff8010084d	obj/kern/kernel.asm	/^ffffffff8010084d:	5b                   	pop    %rbx$/;"	l
ffffffff8010084e	obj/kern/kernel.asm	/^ffffffff8010084e:	5d                   	pop    %rbp$/;"	l
ffffffff8010084f	obj/kern/kernel.asm	/^ffffffff8010084f:	c3                   	retq   $/;"	l
ffffffff80100850	obj/kern/kernel.asm	/^ffffffff80100850:	48 f7 df             	neg    %rdi$/;"	l
ffffffff80100853	obj/kern/kernel.asm	/^ffffffff80100853:	41 b9 01 00 00 00    	mov    $0x1,%r9d$/;"	l
ffffffff80100859	obj/kern/kernel.asm	/^ffffffff80100859:	eb 8e                	jmp    ffffffff801007e9 <printint+0x18>$/;"	l
ffffffff8010085b	obj/kern/kernel.asm	/^ffffffff8010085b <consolewrite>:$/;"	l
ffffffff8010085b	obj/kern/kernel.asm	/^ffffffff8010085b:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010085f	obj/kern/kernel.asm	/^ffffffff8010085f:	55                   	push   %rbp$/;"	l
ffffffff80100860	obj/kern/kernel.asm	/^ffffffff80100860:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100863	obj/kern/kernel.asm	/^ffffffff80100863:	41 56                	push   %r14$/;"	l
ffffffff80100865	obj/kern/kernel.asm	/^ffffffff80100865:	41 55                	push   %r13$/;"	l
ffffffff80100867	obj/kern/kernel.asm	/^ffffffff80100867:	41 54                	push   %r12$/;"	l
ffffffff80100869	obj/kern/kernel.asm	/^ffffffff80100869:	53                   	push   %rbx$/;"	l
ffffffff8010086a	obj/kern/kernel.asm	/^ffffffff8010086a:	49 89 fe             	mov    %rdi,%r14$/;"	l
ffffffff8010086d	obj/kern/kernel.asm	/^ffffffff8010086d:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff80100870	obj/kern/kernel.asm	/^ffffffff80100870:	41 89 d5             	mov    %edx,%r13d$/;"	l
ffffffff80100873	obj/kern/kernel.asm	/^ffffffff80100873:	e8 b7 4e 00 00       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff80100878	obj/kern/kernel.asm	/^ffffffff80100878:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff8010087f	obj/kern/kernel.asm	/^ffffffff8010087f:	e8 1b fc ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80100884	obj/kern/kernel.asm	/^ffffffff80100884:	45 85 ed             	test   %r13d,%r13d$/;"	l
ffffffff80100887	obj/kern/kernel.asm	/^ffffffff80100887:	7e 1d                	jle    ffffffff801008a6 <consolewrite+0x4b>$/;"	l
ffffffff80100889	obj/kern/kernel.asm	/^ffffffff80100889:	4c 89 e3             	mov    %r12,%rbx$/;"	l
ffffffff8010088c	obj/kern/kernel.asm	/^ffffffff8010088c:	41 8d 45 ff          	lea    -0x1(%r13),%eax$/;"	l
ffffffff80100890	obj/kern/kernel.asm	/^ffffffff80100890:	4d 8d 64 04 01       	lea    0x1(%r12,%rax,1),%r12$/;"	l
ffffffff80100895	obj/kern/kernel.asm	/^ffffffff80100895:	0f b6 3b             	movzbl (%rbx),%edi$/;"	l
ffffffff80100898	obj/kern/kernel.asm	/^ffffffff80100898:	e8 c9 fd ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff8010089d	obj/kern/kernel.asm	/^ffffffff8010089d:	48 83 c3 01          	add    $0x1,%rbx$/;"	l
ffffffff801008a1	obj/kern/kernel.asm	/^ffffffff801008a1:	4c 39 e3             	cmp    %r12,%rbx$/;"	l
ffffffff801008a4	obj/kern/kernel.asm	/^ffffffff801008a4:	75 ef                	jne    ffffffff80100895 <consolewrite+0x3a>$/;"	l
ffffffff801008a6	obj/kern/kernel.asm	/^ffffffff801008a6:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff801008ad	obj/kern/kernel.asm	/^ffffffff801008ad:	e8 3b fc ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801008b2	obj/kern/kernel.asm	/^ffffffff801008b2:	4c 89 f7             	mov    %r14,%rdi$/;"	l
ffffffff801008b5	obj/kern/kernel.asm	/^ffffffff801008b5:	e8 ba 4d 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff801008ba	obj/kern/kernel.asm	/^ffffffff801008ba:	44 89 e8             	mov    %r13d,%eax$/;"	l
ffffffff801008bd	obj/kern/kernel.asm	/^ffffffff801008bd:	5b                   	pop    %rbx$/;"	l
ffffffff801008be	obj/kern/kernel.asm	/^ffffffff801008be:	41 5c                	pop    %r12$/;"	l
ffffffff801008c0	obj/kern/kernel.asm	/^ffffffff801008c0:	41 5d                	pop    %r13$/;"	l
ffffffff801008c2	obj/kern/kernel.asm	/^ffffffff801008c2:	41 5e                	pop    %r14$/;"	l
ffffffff801008c4	obj/kern/kernel.asm	/^ffffffff801008c4:	5d                   	pop    %rbp$/;"	l
ffffffff801008c5	obj/kern/kernel.asm	/^ffffffff801008c5:	c3                   	retq   $/;"	l
ffffffff801008c6	obj/kern/kernel.asm	/^ffffffff801008c6 <cprintf>:$/;"	l
ffffffff801008c6	obj/kern/kernel.asm	/^ffffffff801008c6:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801008ca	obj/kern/kernel.asm	/^ffffffff801008ca:	55                   	push   %rbp$/;"	l
ffffffff801008cb	obj/kern/kernel.asm	/^ffffffff801008cb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801008ce	obj/kern/kernel.asm	/^ffffffff801008ce:	41 57                	push   %r15$/;"	l
ffffffff801008d0	obj/kern/kernel.asm	/^ffffffff801008d0:	41 56                	push   %r14$/;"	l
ffffffff801008d2	obj/kern/kernel.asm	/^ffffffff801008d2:	41 55                	push   %r13$/;"	l
ffffffff801008d4	obj/kern/kernel.asm	/^ffffffff801008d4:	41 54                	push   %r12$/;"	l
ffffffff801008d6	obj/kern/kernel.asm	/^ffffffff801008d6:	53                   	push   %rbx$/;"	l
ffffffff801008d7	obj/kern/kernel.asm	/^ffffffff801008d7:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
ffffffff801008db	obj/kern/kernel.asm	/^ffffffff801008db:	49 89 fd             	mov    %rdi,%r13$/;"	l
ffffffff801008de	obj/kern/kernel.asm	/^ffffffff801008de:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)$/;"	l
ffffffff801008e2	obj/kern/kernel.asm	/^ffffffff801008e2:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)$/;"	l
ffffffff801008e6	obj/kern/kernel.asm	/^ffffffff801008e6:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)$/;"	l
ffffffff801008ea	obj/kern/kernel.asm	/^ffffffff801008ea:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)$/;"	l
ffffffff801008ee	obj/kern/kernel.asm	/^ffffffff801008ee:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)$/;"	l
ffffffff801008f2	obj/kern/kernel.asm	/^ffffffff801008f2:	44 8b 35 7f 82 00 00 	mov    0x827f(%rip),%r14d        # ffffffff80108b78 <cons+0x18>$/;"	l
ffffffff801008f9	obj/kern/kernel.asm	/^ffffffff801008f9:	45 85 f6             	test   %r14d,%r14d$/;"	l
ffffffff801008fc	obj/kern/kernel.asm	/^ffffffff801008fc:	75 36                	jne    ffffffff80100934 <cprintf+0x6e>$/;"	l
ffffffff801008fe	obj/kern/kernel.asm	/^ffffffff801008fe:	4d 85 ed             	test   %r13,%r13$/;"	l
ffffffff80100901	obj/kern/kernel.asm	/^ffffffff80100901:	74 3f                	je     ffffffff80100942 <cprintf+0x7c>$/;"	l
ffffffff80100903	obj/kern/kernel.asm	/^ffffffff80100903:	c7 45 88 08 00 00 00 	movl   $0x8,-0x78(%rbp)$/;"	l
ffffffff8010090a	obj/kern/kernel.asm	/^ffffffff8010090a:	48 8d 45 10          	lea    0x10(%rbp),%rax$/;"	l
ffffffff8010090e	obj/kern/kernel.asm	/^ffffffff8010090e:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
ffffffff80100912	obj/kern/kernel.asm	/^ffffffff80100912:	48 8d 45 a0          	lea    -0x60(%rbp),%rax$/;"	l
ffffffff80100916	obj/kern/kernel.asm	/^ffffffff80100916:	48 89 45 98          	mov    %rax,-0x68(%rbp)$/;"	l
ffffffff8010091a	obj/kern/kernel.asm	/^ffffffff8010091a:	41 0f b6 7d 00       	movzbl 0x0(%r13),%edi$/;"	l
ffffffff8010091f	obj/kern/kernel.asm	/^ffffffff8010091f:	85 ff                	test   %edi,%edi$/;"	l
ffffffff80100921	obj/kern/kernel.asm	/^ffffffff80100921:	0f 84 a6 01 00 00    	je     ffffffff80100acd <cprintf+0x207>$/;"	l
ffffffff80100927	obj/kern/kernel.asm	/^ffffffff80100927:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff8010092c	obj/kern/kernel.asm	/^ffffffff8010092c:	41 bf 28 00 00 00    	mov    $0x28,%r15d$/;"	l
ffffffff80100932	obj/kern/kernel.asm	/^ffffffff80100932:	eb 33                	jmp    ffffffff80100967 <cprintf+0xa1>$/;"	l
ffffffff80100934	obj/kern/kernel.asm	/^ffffffff80100934:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff8010093b	obj/kern/kernel.asm	/^ffffffff8010093b:	e8 5f fb ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80100940	obj/kern/kernel.asm	/^ffffffff80100940:	eb bc                	jmp    ffffffff801008fe <cprintf+0x38>$/;"	l
ffffffff80100942	obj/kern/kernel.asm	/^ffffffff80100942:	48 c7 c7 67 6c 10 80 	mov    $0xffffffff80106c67,%rdi$/;"	l
ffffffff80100949	obj/kern/kernel.asm	/^ffffffff80100949:	e8 d5 fc ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010094e	obj/kern/kernel.asm	/^ffffffff8010094e:	e8 13 fd ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100953	obj/kern/kernel.asm	/^ffffffff80100953:	83 c3 01             	add    $0x1,%ebx$/;"	l
ffffffff80100956	obj/kern/kernel.asm	/^ffffffff80100956:	48 63 c3             	movslq %ebx,%rax$/;"	l
ffffffff80100959	obj/kern/kernel.asm	/^ffffffff80100959:	41 0f b6 7c 05 00    	movzbl 0x0(%r13,%rax,1),%edi$/;"	l
ffffffff8010095f	obj/kern/kernel.asm	/^ffffffff8010095f:	85 ff                	test   %edi,%edi$/;"	l
ffffffff80100961	obj/kern/kernel.asm	/^ffffffff80100961:	0f 84 66 01 00 00    	je     ffffffff80100acd <cprintf+0x207>$/;"	l
ffffffff80100967	obj/kern/kernel.asm	/^ffffffff80100967:	83 ff 25             	cmp    $0x25,%edi$/;"	l
ffffffff8010096a	obj/kern/kernel.asm	/^ffffffff8010096a:	75 e2                	jne    ffffffff8010094e <cprintf+0x88>$/;"	l
ffffffff8010096c	obj/kern/kernel.asm	/^ffffffff8010096c:	83 c3 01             	add    $0x1,%ebx$/;"	l
ffffffff8010096f	obj/kern/kernel.asm	/^ffffffff8010096f:	48 63 c3             	movslq %ebx,%rax$/;"	l
ffffffff80100972	obj/kern/kernel.asm	/^ffffffff80100972:	45 0f b6 64 05 00    	movzbl 0x0(%r13,%rax,1),%r12d$/;"	l
ffffffff80100978	obj/kern/kernel.asm	/^ffffffff80100978:	45 85 e4             	test   %r12d,%r12d$/;"	l
ffffffff8010097b	obj/kern/kernel.asm	/^ffffffff8010097b:	0f 84 4c 01 00 00    	je     ffffffff80100acd <cprintf+0x207>$/;"	l
ffffffff80100981	obj/kern/kernel.asm	/^ffffffff80100981:	41 83 fc 25          	cmp    $0x25,%r12d$/;"	l
ffffffff80100985	obj/kern/kernel.asm	/^ffffffff80100985:	0f 84 1c 01 00 00    	je     ffffffff80100aa7 <cprintf+0x1e1>$/;"	l
ffffffff8010098b	obj/kern/kernel.asm	/^ffffffff8010098b:	41 8d 44 24 9d       	lea    -0x63(%r12),%eax$/;"	l
ffffffff80100990	obj/kern/kernel.asm	/^ffffffff80100990:	83 f8 15             	cmp    $0x15,%eax$/;"	l
ffffffff80100993	obj/kern/kernel.asm	/^ffffffff80100993:	0f 87 1d 01 00 00    	ja     ffffffff80100ab6 <cprintf+0x1f0>$/;"	l
ffffffff80100999	obj/kern/kernel.asm	/^ffffffff80100999:	0f 87 17 01 00 00    	ja     ffffffff80100ab6 <cprintf+0x1f0>$/;"	l
ffffffff8010099f	obj/kern/kernel.asm	/^ffffffff8010099f:	89 c0                	mov    %eax,%eax$/;"	l
ffffffff801009a1	obj/kern/kernel.asm	/^ffffffff801009a1:	3e ff 24 c5 80 6c 10 	notrack jmpq *-0x7fef9380(,%rax,8)$/;"	l
ffffffff801009a8	obj/kern/kernel.asm	/^ffffffff801009a8:	80 $/;"	l
ffffffff801009a9	obj/kern/kernel.asm	/^ffffffff801009a9:	8b 45 88             	mov    -0x78(%rbp),%eax$/;"	l
ffffffff801009ac	obj/kern/kernel.asm	/^ffffffff801009ac:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
ffffffff801009af	obj/kern/kernel.asm	/^ffffffff801009af:	77 16                	ja     ffffffff801009c7 <cprintf+0x101>$/;"	l
ffffffff801009b1	obj/kern/kernel.asm	/^ffffffff801009b1:	89 c2                	mov    %eax,%edx$/;"	l
ffffffff801009b3	obj/kern/kernel.asm	/^ffffffff801009b3:	48 03 55 98          	add    -0x68(%rbp),%rdx$/;"	l
ffffffff801009b7	obj/kern/kernel.asm	/^ffffffff801009b7:	83 c0 08             	add    $0x8,%eax$/;"	l
ffffffff801009ba	obj/kern/kernel.asm	/^ffffffff801009ba:	89 45 88             	mov    %eax,-0x78(%rbp)$/;"	l
ffffffff801009bd	obj/kern/kernel.asm	/^ffffffff801009bd:	0f be 3a             	movsbl (%rdx),%edi$/;"	l
ffffffff801009c0	obj/kern/kernel.asm	/^ffffffff801009c0:	e8 a1 fc ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff801009c5	obj/kern/kernel.asm	/^ffffffff801009c5:	eb 8c                	jmp    ffffffff80100953 <cprintf+0x8d>$/;"	l
ffffffff801009c7	obj/kern/kernel.asm	/^ffffffff801009c7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx$/;"	l
ffffffff801009cb	obj/kern/kernel.asm	/^ffffffff801009cb:	48 8d 42 08          	lea    0x8(%rdx),%rax$/;"	l
ffffffff801009cf	obj/kern/kernel.asm	/^ffffffff801009cf:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
ffffffff801009d3	obj/kern/kernel.asm	/^ffffffff801009d3:	eb e8                	jmp    ffffffff801009bd <cprintf+0xf7>$/;"	l
ffffffff801009d5	obj/kern/kernel.asm	/^ffffffff801009d5:	8b 45 88             	mov    -0x78(%rbp),%eax$/;"	l
ffffffff801009d8	obj/kern/kernel.asm	/^ffffffff801009d8:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
ffffffff801009db	obj/kern/kernel.asm	/^ffffffff801009db:	77 23                	ja     ffffffff80100a00 <cprintf+0x13a>$/;"	l
ffffffff801009dd	obj/kern/kernel.asm	/^ffffffff801009dd:	89 c2                	mov    %eax,%edx$/;"	l
ffffffff801009df	obj/kern/kernel.asm	/^ffffffff801009df:	48 03 55 98          	add    -0x68(%rbp),%rdx$/;"	l
ffffffff801009e3	obj/kern/kernel.asm	/^ffffffff801009e3:	83 c0 08             	add    $0x8,%eax$/;"	l
ffffffff801009e6	obj/kern/kernel.asm	/^ffffffff801009e6:	89 45 88             	mov    %eax,-0x78(%rbp)$/;"	l
ffffffff801009e9	obj/kern/kernel.asm	/^ffffffff801009e9:	48 63 3a             	movslq (%rdx),%rdi$/;"	l
ffffffff801009ec	obj/kern/kernel.asm	/^ffffffff801009ec:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffffffff801009f1	obj/kern/kernel.asm	/^ffffffff801009f1:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
ffffffff801009f6	obj/kern/kernel.asm	/^ffffffff801009f6:	e8 d6 fd ff ff       	callq  ffffffff801007d1 <printint>$/;"	l
ffffffff801009fb	obj/kern/kernel.asm	/^ffffffff801009fb:	e9 53 ff ff ff       	jmpq   ffffffff80100953 <cprintf+0x8d>$/;"	l
ffffffff80100a00	obj/kern/kernel.asm	/^ffffffff80100a00:	48 8b 55 90          	mov    -0x70(%rbp),%rdx$/;"	l
ffffffff80100a04	obj/kern/kernel.asm	/^ffffffff80100a04:	48 8d 42 08          	lea    0x8(%rdx),%rax$/;"	l
ffffffff80100a08	obj/kern/kernel.asm	/^ffffffff80100a08:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
ffffffff80100a0c	obj/kern/kernel.asm	/^ffffffff80100a0c:	eb db                	jmp    ffffffff801009e9 <cprintf+0x123>$/;"	l
ffffffff80100a0e	obj/kern/kernel.asm	/^ffffffff80100a0e:	8b 45 88             	mov    -0x78(%rbp),%eax$/;"	l
ffffffff80100a11	obj/kern/kernel.asm	/^ffffffff80100a11:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
ffffffff80100a14	obj/kern/kernel.asm	/^ffffffff80100a14:	77 23                	ja     ffffffff80100a39 <cprintf+0x173>$/;"	l
ffffffff80100a16	obj/kern/kernel.asm	/^ffffffff80100a16:	89 c1                	mov    %eax,%ecx$/;"	l
ffffffff80100a18	obj/kern/kernel.asm	/^ffffffff80100a18:	48 03 4d 98          	add    -0x68(%rbp),%rcx$/;"	l
ffffffff80100a1c	obj/kern/kernel.asm	/^ffffffff80100a1c:	83 c0 08             	add    $0x8,%eax$/;"	l
ffffffff80100a1f	obj/kern/kernel.asm	/^ffffffff80100a1f:	89 45 88             	mov    %eax,-0x78(%rbp)$/;"	l
ffffffff80100a22	obj/kern/kernel.asm	/^ffffffff80100a22:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80100a27	obj/kern/kernel.asm	/^ffffffff80100a27:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
ffffffff80100a2c	obj/kern/kernel.asm	/^ffffffff80100a2c:	48 8b 39             	mov    (%rcx),%rdi$/;"	l
ffffffff80100a2f	obj/kern/kernel.asm	/^ffffffff80100a2f:	e8 9d fd ff ff       	callq  ffffffff801007d1 <printint>$/;"	l
ffffffff80100a34	obj/kern/kernel.asm	/^ffffffff80100a34:	e9 1a ff ff ff       	jmpq   ffffffff80100953 <cprintf+0x8d>$/;"	l
ffffffff80100a39	obj/kern/kernel.asm	/^ffffffff80100a39:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx$/;"	l
ffffffff80100a3d	obj/kern/kernel.asm	/^ffffffff80100a3d:	48 8d 41 08          	lea    0x8(%rcx),%rax$/;"	l
ffffffff80100a41	obj/kern/kernel.asm	/^ffffffff80100a41:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
ffffffff80100a45	obj/kern/kernel.asm	/^ffffffff80100a45:	eb db                	jmp    ffffffff80100a22 <cprintf+0x15c>$/;"	l
ffffffff80100a47	obj/kern/kernel.asm	/^ffffffff80100a47:	8b 45 88             	mov    -0x78(%rbp),%eax$/;"	l
ffffffff80100a4a	obj/kern/kernel.asm	/^ffffffff80100a4a:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
ffffffff80100a4d	obj/kern/kernel.asm	/^ffffffff80100a4d:	77 3e                	ja     ffffffff80100a8d <cprintf+0x1c7>$/;"	l
ffffffff80100a4f	obj/kern/kernel.asm	/^ffffffff80100a4f:	89 c2                	mov    %eax,%edx$/;"	l
ffffffff80100a51	obj/kern/kernel.asm	/^ffffffff80100a51:	48 03 55 98          	add    -0x68(%rbp),%rdx$/;"	l
ffffffff80100a55	obj/kern/kernel.asm	/^ffffffff80100a55:	83 c0 08             	add    $0x8,%eax$/;"	l
ffffffff80100a58	obj/kern/kernel.asm	/^ffffffff80100a58:	89 45 88             	mov    %eax,-0x78(%rbp)$/;"	l
ffffffff80100a5b	obj/kern/kernel.asm	/^ffffffff80100a5b:	4c 8b 22             	mov    (%rdx),%r12$/;"	l
ffffffff80100a5e	obj/kern/kernel.asm	/^ffffffff80100a5e:	4d 85 e4             	test   %r12,%r12$/;"	l
ffffffff80100a61	obj/kern/kernel.asm	/^ffffffff80100a61:	74 38                	je     ffffffff80100a9b <cprintf+0x1d5>$/;"	l
ffffffff80100a63	obj/kern/kernel.asm	/^ffffffff80100a63:	41 0f b6 3c 24       	movzbl (%r12),%edi$/;"	l
ffffffff80100a68	obj/kern/kernel.asm	/^ffffffff80100a68:	40 84 ff             	test   %dil,%dil$/;"	l
ffffffff80100a6b	obj/kern/kernel.asm	/^ffffffff80100a6b:	0f 84 e2 fe ff ff    	je     ffffffff80100953 <cprintf+0x8d>$/;"	l
ffffffff80100a71	obj/kern/kernel.asm	/^ffffffff80100a71:	40 0f be ff          	movsbl %dil,%edi$/;"	l
ffffffff80100a75	obj/kern/kernel.asm	/^ffffffff80100a75:	e8 ec fb ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100a7a	obj/kern/kernel.asm	/^ffffffff80100a7a:	49 83 c4 01          	add    $0x1,%r12$/;"	l
ffffffff80100a7e	obj/kern/kernel.asm	/^ffffffff80100a7e:	41 0f b6 3c 24       	movzbl (%r12),%edi$/;"	l
ffffffff80100a83	obj/kern/kernel.asm	/^ffffffff80100a83:	40 84 ff             	test   %dil,%dil$/;"	l
ffffffff80100a86	obj/kern/kernel.asm	/^ffffffff80100a86:	75 e9                	jne    ffffffff80100a71 <cprintf+0x1ab>$/;"	l
ffffffff80100a88	obj/kern/kernel.asm	/^ffffffff80100a88:	e9 c6 fe ff ff       	jmpq   ffffffff80100953 <cprintf+0x8d>$/;"	l
ffffffff80100a8d	obj/kern/kernel.asm	/^ffffffff80100a8d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx$/;"	l
ffffffff80100a91	obj/kern/kernel.asm	/^ffffffff80100a91:	48 8d 42 08          	lea    0x8(%rdx),%rax$/;"	l
ffffffff80100a95	obj/kern/kernel.asm	/^ffffffff80100a95:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
ffffffff80100a99	obj/kern/kernel.asm	/^ffffffff80100a99:	eb c0                	jmp    ffffffff80100a5b <cprintf+0x195>$/;"	l
ffffffff80100a9b	obj/kern/kernel.asm	/^ffffffff80100a9b:	49 c7 c4 60 6c 10 80 	mov    $0xffffffff80106c60,%r12$/;"	l
ffffffff80100aa2	obj/kern/kernel.asm	/^ffffffff80100aa2:	44 89 ff             	mov    %r15d,%edi$/;"	l
ffffffff80100aa5	obj/kern/kernel.asm	/^ffffffff80100aa5:	eb ca                	jmp    ffffffff80100a71 <cprintf+0x1ab>$/;"	l
ffffffff80100aa7	obj/kern/kernel.asm	/^ffffffff80100aa7:	bf 25 00 00 00       	mov    $0x25,%edi$/;"	l
ffffffff80100aac	obj/kern/kernel.asm	/^ffffffff80100aac:	e8 b5 fb ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100ab1	obj/kern/kernel.asm	/^ffffffff80100ab1:	e9 9d fe ff ff       	jmpq   ffffffff80100953 <cprintf+0x8d>$/;"	l
ffffffff80100ab6	obj/kern/kernel.asm	/^ffffffff80100ab6:	bf 25 00 00 00       	mov    $0x25,%edi$/;"	l
ffffffff80100abb	obj/kern/kernel.asm	/^ffffffff80100abb:	e8 a6 fb ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100ac0	obj/kern/kernel.asm	/^ffffffff80100ac0:	44 89 e7             	mov    %r12d,%edi$/;"	l
ffffffff80100ac3	obj/kern/kernel.asm	/^ffffffff80100ac3:	e8 9e fb ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100ac8	obj/kern/kernel.asm	/^ffffffff80100ac8:	e9 86 fe ff ff       	jmpq   ffffffff80100953 <cprintf+0x8d>$/;"	l
ffffffff80100acd	obj/kern/kernel.asm	/^ffffffff80100acd:	45 85 f6             	test   %r14d,%r14d$/;"	l
ffffffff80100ad0	obj/kern/kernel.asm	/^ffffffff80100ad0:	75 0f                	jne    ffffffff80100ae1 <cprintf+0x21b>$/;"	l
ffffffff80100ad2	obj/kern/kernel.asm	/^ffffffff80100ad2:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
ffffffff80100ad6	obj/kern/kernel.asm	/^ffffffff80100ad6:	5b                   	pop    %rbx$/;"	l
ffffffff80100ad7	obj/kern/kernel.asm	/^ffffffff80100ad7:	41 5c                	pop    %r12$/;"	l
ffffffff80100ad9	obj/kern/kernel.asm	/^ffffffff80100ad9:	41 5d                	pop    %r13$/;"	l
ffffffff80100adb	obj/kern/kernel.asm	/^ffffffff80100adb:	41 5e                	pop    %r14$/;"	l
ffffffff80100add	obj/kern/kernel.asm	/^ffffffff80100add:	41 5f                	pop    %r15$/;"	l
ffffffff80100adf	obj/kern/kernel.asm	/^ffffffff80100adf:	5d                   	pop    %rbp$/;"	l
ffffffff80100ae0	obj/kern/kernel.asm	/^ffffffff80100ae0:	c3                   	retq   $/;"	l
ffffffff80100ae1	obj/kern/kernel.asm	/^ffffffff80100ae1:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff80100ae8	obj/kern/kernel.asm	/^ffffffff80100ae8:	e8 00 fa ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80100aed	obj/kern/kernel.asm	/^ffffffff80100aed:	eb e3                	jmp    ffffffff80100ad2 <cprintf+0x20c>$/;"	l
ffffffff80100aef	obj/kern/kernel.asm	/^ffffffff80100aef <consoleintr>:$/;"	l
ffffffff80100aef	obj/kern/kernel.asm	/^ffffffff80100aef:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80100af3	obj/kern/kernel.asm	/^ffffffff80100af3:	55                   	push   %rbp$/;"	l
ffffffff80100af4	obj/kern/kernel.asm	/^ffffffff80100af4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100af7	obj/kern/kernel.asm	/^ffffffff80100af7:	41 56                	push   %r14$/;"	l
ffffffff80100af9	obj/kern/kernel.asm	/^ffffffff80100af9:	41 55                	push   %r13$/;"	l
ffffffff80100afb	obj/kern/kernel.asm	/^ffffffff80100afb:	41 54                	push   %r12$/;"	l
ffffffff80100afd	obj/kern/kernel.asm	/^ffffffff80100afd:	53                   	push   %rbx$/;"	l
ffffffff80100afe	obj/kern/kernel.asm	/^ffffffff80100afe:	49 89 fc             	mov    %rdi,%r12$/;"	l
ffffffff80100b01	obj/kern/kernel.asm	/^ffffffff80100b01:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff80100b08	obj/kern/kernel.asm	/^ffffffff80100b08:	e8 92 f9 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80100b0d	obj/kern/kernel.asm	/^ffffffff80100b0d:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
ffffffff80100b13	obj/kern/kernel.asm	/^ffffffff80100b13:	48 c7 c3 60 9d 10 80 	mov    $0xffffffff80109d60,%rbx$/;"	l
ffffffff80100b1a	obj/kern/kernel.asm	/^ffffffff80100b1a:	eb 1a                	jmp    ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100b1c	obj/kern/kernel.asm	/^ffffffff80100b1c:	41 83 fe 08          	cmp    $0x8,%r14d$/;"	l
ffffffff80100b20	obj/kern/kernel.asm	/^ffffffff80100b20:	0f 84 d6 00 00 00    	je     ffffffff80100bfc <consoleintr+0x10d>$/;"	l
ffffffff80100b26	obj/kern/kernel.asm	/^ffffffff80100b26:	41 83 fe 10          	cmp    $0x10,%r14d$/;"	l
ffffffff80100b2a	obj/kern/kernel.asm	/^ffffffff80100b2a:	0f 85 f6 00 00 00    	jne    ffffffff80100c26 <consoleintr+0x137>$/;"	l
ffffffff80100b30	obj/kern/kernel.asm	/^ffffffff80100b30:	41 bd 01 00 00 00    	mov    $0x1,%r13d$/;"	l
ffffffff80100b36	obj/kern/kernel.asm	/^ffffffff80100b36:	41 ff d4             	callq  *%r12$/;"	l
ffffffff80100b39	obj/kern/kernel.asm	/^ffffffff80100b39:	41 89 c6             	mov    %eax,%r14d$/;"	l
ffffffff80100b3c	obj/kern/kernel.asm	/^ffffffff80100b3c:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80100b3e	obj/kern/kernel.asm	/^ffffffff80100b3e:	0f 88 f0 00 00 00    	js     ffffffff80100c34 <consoleintr+0x145>$/;"	l
ffffffff80100b44	obj/kern/kernel.asm	/^ffffffff80100b44:	41 83 fe 15          	cmp    $0x15,%r14d$/;"	l
ffffffff80100b48	obj/kern/kernel.asm	/^ffffffff80100b48:	74 6b                	je     ffffffff80100bb5 <consoleintr+0xc6>$/;"	l
ffffffff80100b4a	obj/kern/kernel.asm	/^ffffffff80100b4a:	7e d0                	jle    ffffffff80100b1c <consoleintr+0x2d>$/;"	l
ffffffff80100b4c	obj/kern/kernel.asm	/^ffffffff80100b4c:	41 83 fe 7f          	cmp    $0x7f,%r14d$/;"	l
ffffffff80100b50	obj/kern/kernel.asm	/^ffffffff80100b50:	0f 84 a6 00 00 00    	je     ffffffff80100bfc <consoleintr+0x10d>$/;"	l
ffffffff80100b56	obj/kern/kernel.asm	/^ffffffff80100b56:	8b 83 88 00 00 00    	mov    0x88(%rbx),%eax$/;"	l
ffffffff80100b5c	obj/kern/kernel.asm	/^ffffffff80100b5c:	89 c2                	mov    %eax,%edx$/;"	l
ffffffff80100b5e	obj/kern/kernel.asm	/^ffffffff80100b5e:	2b 93 80 00 00 00    	sub    0x80(%rbx),%edx$/;"	l
ffffffff80100b64	obj/kern/kernel.asm	/^ffffffff80100b64:	83 fa 7f             	cmp    $0x7f,%edx$/;"	l
ffffffff80100b67	obj/kern/kernel.asm	/^ffffffff80100b67:	77 cd                	ja     ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100b69	obj/kern/kernel.asm	/^ffffffff80100b69:	41 83 fe 0d          	cmp    $0xd,%r14d$/;"	l
ffffffff80100b6d	obj/kern/kernel.asm	/^ffffffff80100b6d:	0f 84 e2 00 00 00    	je     ffffffff80100c55 <consoleintr+0x166>$/;"	l
ffffffff80100b73	obj/kern/kernel.asm	/^ffffffff80100b73:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffffffff80100b76	obj/kern/kernel.asm	/^ffffffff80100b76:	89 93 88 00 00 00    	mov    %edx,0x88(%rbx)$/;"	l
ffffffff80100b7c	obj/kern/kernel.asm	/^ffffffff80100b7c:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffffffff80100b7f	obj/kern/kernel.asm	/^ffffffff80100b7f:	44 88 34 03          	mov    %r14b,(%rbx,%rax,1)$/;"	l
ffffffff80100b83	obj/kern/kernel.asm	/^ffffffff80100b83:	44 89 f7             	mov    %r14d,%edi$/;"	l
ffffffff80100b86	obj/kern/kernel.asm	/^ffffffff80100b86:	e8 db fa ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100b8b	obj/kern/kernel.asm	/^ffffffff80100b8b:	41 83 fe 0a          	cmp    $0xa,%r14d$/;"	l
ffffffff80100b8f	obj/kern/kernel.asm	/^ffffffff80100b8f:	0f 84 da 00 00 00    	je     ffffffff80100c6f <consoleintr+0x180>$/;"	l
ffffffff80100b95	obj/kern/kernel.asm	/^ffffffff80100b95:	41 83 fe 04          	cmp    $0x4,%r14d$/;"	l
ffffffff80100b99	obj/kern/kernel.asm	/^ffffffff80100b99:	0f 84 d0 00 00 00    	je     ffffffff80100c6f <consoleintr+0x180>$/;"	l
ffffffff80100b9f	obj/kern/kernel.asm	/^ffffffff80100b9f:	8b 83 80 00 00 00    	mov    0x80(%rbx),%eax$/;"	l
ffffffff80100ba5	obj/kern/kernel.asm	/^ffffffff80100ba5:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
ffffffff80100ba8	obj/kern/kernel.asm	/^ffffffff80100ba8:	39 83 88 00 00 00    	cmp    %eax,0x88(%rbx)$/;"	l
ffffffff80100bae	obj/kern/kernel.asm	/^ffffffff80100bae:	75 86                	jne    ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100bb0	obj/kern/kernel.asm	/^ffffffff80100bb0:	e9 ba 00 00 00       	jmpq   ffffffff80100c6f <consoleintr+0x180>$/;"	l
ffffffff80100bb5	obj/kern/kernel.asm	/^ffffffff80100bb5:	8b 83 88 00 00 00    	mov    0x88(%rbx),%eax$/;"	l
ffffffff80100bbb	obj/kern/kernel.asm	/^ffffffff80100bbb:	3b 83 84 00 00 00    	cmp    0x84(%rbx),%eax$/;"	l
ffffffff80100bc1	obj/kern/kernel.asm	/^ffffffff80100bc1:	0f 84 6f ff ff ff    	je     ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100bc7	obj/kern/kernel.asm	/^ffffffff80100bc7:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffffffff80100bca	obj/kern/kernel.asm	/^ffffffff80100bca:	89 c2                	mov    %eax,%edx$/;"	l
ffffffff80100bcc	obj/kern/kernel.asm	/^ffffffff80100bcc:	83 e2 7f             	and    $0x7f,%edx$/;"	l
ffffffff80100bcf	obj/kern/kernel.asm	/^ffffffff80100bcf:	80 3c 13 0a          	cmpb   $0xa,(%rbx,%rdx,1)$/;"	l
ffffffff80100bd3	obj/kern/kernel.asm	/^ffffffff80100bd3:	0f 84 5d ff ff ff    	je     ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100bd9	obj/kern/kernel.asm	/^ffffffff80100bd9:	89 83 88 00 00 00    	mov    %eax,0x88(%rbx)$/;"	l
ffffffff80100bdf	obj/kern/kernel.asm	/^ffffffff80100bdf:	bf 00 01 00 00       	mov    $0x100,%edi$/;"	l
ffffffff80100be4	obj/kern/kernel.asm	/^ffffffff80100be4:	e8 7d fa ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100be9	obj/kern/kernel.asm	/^ffffffff80100be9:	8b 83 88 00 00 00    	mov    0x88(%rbx),%eax$/;"	l
ffffffff80100bef	obj/kern/kernel.asm	/^ffffffff80100bef:	3b 83 84 00 00 00    	cmp    0x84(%rbx),%eax$/;"	l
ffffffff80100bf5	obj/kern/kernel.asm	/^ffffffff80100bf5:	75 d0                	jne    ffffffff80100bc7 <consoleintr+0xd8>$/;"	l
ffffffff80100bf7	obj/kern/kernel.asm	/^ffffffff80100bf7:	e9 3a ff ff ff       	jmpq   ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100bfc	obj/kern/kernel.asm	/^ffffffff80100bfc:	8b 83 88 00 00 00    	mov    0x88(%rbx),%eax$/;"	l
ffffffff80100c02	obj/kern/kernel.asm	/^ffffffff80100c02:	3b 83 84 00 00 00    	cmp    0x84(%rbx),%eax$/;"	l
ffffffff80100c08	obj/kern/kernel.asm	/^ffffffff80100c08:	0f 84 28 ff ff ff    	je     ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100c0e	obj/kern/kernel.asm	/^ffffffff80100c0e:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffffffff80100c11	obj/kern/kernel.asm	/^ffffffff80100c11:	89 83 88 00 00 00    	mov    %eax,0x88(%rbx)$/;"	l
ffffffff80100c17	obj/kern/kernel.asm	/^ffffffff80100c17:	bf 00 01 00 00       	mov    $0x100,%edi$/;"	l
ffffffff80100c1c	obj/kern/kernel.asm	/^ffffffff80100c1c:	e8 45 fa ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100c21	obj/kern/kernel.asm	/^ffffffff80100c21:	e9 10 ff ff ff       	jmpq   ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100c26	obj/kern/kernel.asm	/^ffffffff80100c26:	45 85 f6             	test   %r14d,%r14d$/;"	l
ffffffff80100c29	obj/kern/kernel.asm	/^ffffffff80100c29:	0f 84 07 ff ff ff    	je     ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100c2f	obj/kern/kernel.asm	/^ffffffff80100c2f:	e9 22 ff ff ff       	jmpq   ffffffff80100b56 <consoleintr+0x67>$/;"	l
ffffffff80100c34	obj/kern/kernel.asm	/^ffffffff80100c34:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff80100c3b	obj/kern/kernel.asm	/^ffffffff80100c3b:	e8 ad f8 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80100c40	obj/kern/kernel.asm	/^ffffffff80100c40:	45 85 ed             	test   %r13d,%r13d$/;"	l
ffffffff80100c43	obj/kern/kernel.asm	/^ffffffff80100c43:	75 09                	jne    ffffffff80100c4e <consoleintr+0x15f>$/;"	l
ffffffff80100c45	obj/kern/kernel.asm	/^ffffffff80100c45:	5b                   	pop    %rbx$/;"	l
ffffffff80100c46	obj/kern/kernel.asm	/^ffffffff80100c46:	41 5c                	pop    %r12$/;"	l
ffffffff80100c48	obj/kern/kernel.asm	/^ffffffff80100c48:	41 5d                	pop    %r13$/;"	l
ffffffff80100c4a	obj/kern/kernel.asm	/^ffffffff80100c4a:	41 5e                	pop    %r14$/;"	l
ffffffff80100c4c	obj/kern/kernel.asm	/^ffffffff80100c4c:	5d                   	pop    %rbp$/;"	l
ffffffff80100c4d	obj/kern/kernel.asm	/^ffffffff80100c4d:	c3                   	retq   $/;"	l
ffffffff80100c4e	obj/kern/kernel.asm	/^ffffffff80100c4e:	e8 ed 0b 00 00       	callq  ffffffff80101840 <procdump>$/;"	l
ffffffff80100c53	obj/kern/kernel.asm	/^ffffffff80100c53:	eb f0                	jmp    ffffffff80100c45 <consoleintr+0x156>$/;"	l
ffffffff80100c55	obj/kern/kernel.asm	/^ffffffff80100c55:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffffffff80100c58	obj/kern/kernel.asm	/^ffffffff80100c58:	89 93 88 00 00 00    	mov    %edx,0x88(%rbx)$/;"	l
ffffffff80100c5e	obj/kern/kernel.asm	/^ffffffff80100c5e:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffffffff80100c61	obj/kern/kernel.asm	/^ffffffff80100c61:	c6 04 03 0a          	movb   $0xa,(%rbx,%rax,1)$/;"	l
ffffffff80100c65	obj/kern/kernel.asm	/^ffffffff80100c65:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffffffff80100c6a	obj/kern/kernel.asm	/^ffffffff80100c6a:	e8 f7 f9 ff ff       	callq  ffffffff80100666 <consputc>$/;"	l
ffffffff80100c6f	obj/kern/kernel.asm	/^ffffffff80100c6f:	8b 83 88 00 00 00    	mov    0x88(%rbx),%eax$/;"	l
ffffffff80100c75	obj/kern/kernel.asm	/^ffffffff80100c75:	89 83 84 00 00 00    	mov    %eax,0x84(%rbx)$/;"	l
ffffffff80100c7b	obj/kern/kernel.asm	/^ffffffff80100c7b:	48 c7 c7 e0 9d 10 80 	mov    $0xffffffff80109de0,%rdi$/;"	l
ffffffff80100c82	obj/kern/kernel.asm	/^ffffffff80100c82:	e8 70 09 00 00       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff80100c87	obj/kern/kernel.asm	/^ffffffff80100c87:	e9 aa fe ff ff       	jmpq   ffffffff80100b36 <consoleintr+0x47>$/;"	l
ffffffff80100c8c	obj/kern/kernel.asm	/^ffffffff80100c8c <consoleinit>:$/;"	l
ffffffff80100c8c	obj/kern/kernel.asm	/^ffffffff80100c8c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80100c90	obj/kern/kernel.asm	/^ffffffff80100c90:	55                   	push   %rbp$/;"	l
ffffffff80100c91	obj/kern/kernel.asm	/^ffffffff80100c91:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100c94	obj/kern/kernel.asm	/^ffffffff80100c94:	48 c7 c6 70 6c 10 80 	mov    $0xffffffff80106c70,%rsi$/;"	l
ffffffff80100c9b	obj/kern/kernel.asm	/^ffffffff80100c9b:	48 c7 c7 60 8b 10 80 	mov    $0xffffffff80108b60,%rdi$/;"	l
ffffffff80100ca2	obj/kern/kernel.asm	/^ffffffff80100ca2:	e8 fc f6 ff ff       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff80100ca7	obj/kern/kernel.asm	/^ffffffff80100ca7:	48 c7 05 86 54 01 00 	movq   $0xffffffff8010085b,0x15486(%rip)        # ffffffff80116138 <devsw+0x18>$/;"	l
ffffffff80100cae	obj/kern/kernel.asm	/^ffffffff80100cae:	5b 08 10 80 $/;"	l
ffffffff80100cb2	obj/kern/kernel.asm	/^ffffffff80100cb2:	48 c7 05 73 54 01 00 	movq   $0xffffffff8010052f,0x15473(%rip)        # ffffffff80116130 <devsw+0x10>$/;"	l
ffffffff80100cb9	obj/kern/kernel.asm	/^ffffffff80100cb9:	2f 05 10 80 $/;"	l
ffffffff80100cbd	obj/kern/kernel.asm	/^ffffffff80100cbd:	c7 05 b1 7e 00 00 01 	movl   $0x1,0x7eb1(%rip)        # ffffffff80108b78 <cons+0x18>$/;"	l
ffffffff80100cc4	obj/kern/kernel.asm	/^ffffffff80100cc4:	00 00 00 $/;"	l
ffffffff80100cc7	obj/kern/kernel.asm	/^ffffffff80100cc7:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80100ccc	obj/kern/kernel.asm	/^ffffffff80100ccc:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff80100cd1	obj/kern/kernel.asm	/^ffffffff80100cd1:	e8 4e 2c 00 00       	callq  ffffffff80103924 <ioapicenable>$/;"	l
ffffffff80100cd6	obj/kern/kernel.asm	/^ffffffff80100cd6:	5d                   	pop    %rbp$/;"	l
ffffffff80100cd7	obj/kern/kernel.asm	/^ffffffff80100cd7:	c3                   	retq   $/;"	l
ffffffff80100cd8	obj/kern/kernel.asm	/^ffffffff80100cd8 <mpsearch1>:$/;"	l
ffffffff80100cd8	obj/kern/kernel.asm	/^ffffffff80100cd8:	55                   	push   %rbp$/;"	l
ffffffff80100cd9	obj/kern/kernel.asm	/^ffffffff80100cd9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100cdc	obj/kern/kernel.asm	/^ffffffff80100cdc:	41 54                	push   %r12$/;"	l
ffffffff80100cde	obj/kern/kernel.asm	/^ffffffff80100cde:	53                   	push   %rbx$/;"	l
ffffffff80100cdf	obj/kern/kernel.asm	/^ffffffff80100cdf:	48 8d 9f 00 00 00 80 	lea    -0x80000000(%rdi),%rbx$/;"	l
ffffffff80100ce6	obj/kern/kernel.asm	/^ffffffff80100ce6:	48 63 f6             	movslq %esi,%rsi$/;"	l
ffffffff80100ce9	obj/kern/kernel.asm	/^ffffffff80100ce9:	4c 8d 24 33          	lea    (%rbx,%rsi,1),%r12$/;"	l
ffffffff80100ced	obj/kern/kernel.asm	/^ffffffff80100ced:	4c 39 e3             	cmp    %r12,%rbx$/;"	l
ffffffff80100cf0	obj/kern/kernel.asm	/^ffffffff80100cf0:	72 14                	jb     ffffffff80100d06 <mpsearch1+0x2e>$/;"	l
ffffffff80100cf2	obj/kern/kernel.asm	/^ffffffff80100cf2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80100cf7	obj/kern/kernel.asm	/^ffffffff80100cf7:	eb 41                	jmp    ffffffff80100d3a <mpsearch1+0x62>$/;"	l
ffffffff80100cf9	obj/kern/kernel.asm	/^ffffffff80100cf9:	84 c0                	test   %al,%al$/;"	l
ffffffff80100cfb	obj/kern/kernel.asm	/^ffffffff80100cfb:	74 3d                	je     ffffffff80100d3a <mpsearch1+0x62>$/;"	l
ffffffff80100cfd	obj/kern/kernel.asm	/^ffffffff80100cfd:	48 83 c3 10          	add    $0x10,%rbx$/;"	l
ffffffff80100d01	obj/kern/kernel.asm	/^ffffffff80100d01:	49 39 dc             	cmp    %rbx,%r12$/;"	l
ffffffff80100d04	obj/kern/kernel.asm	/^ffffffff80100d04:	76 2f                	jbe    ffffffff80100d35 <mpsearch1+0x5d>$/;"	l
ffffffff80100d06	obj/kern/kernel.asm	/^ffffffff80100d06:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
ffffffff80100d0b	obj/kern/kernel.asm	/^ffffffff80100d0b:	48 c7 c6 41 6d 10 80 	mov    $0xffffffff80106d41,%rsi$/;"	l
ffffffff80100d12	obj/kern/kernel.asm	/^ffffffff80100d12:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80100d15	obj/kern/kernel.asm	/^ffffffff80100d15:	e8 1f 5c 00 00       	callq  ffffffff80106939 <memcmp>$/;"	l
ffffffff80100d1a	obj/kern/kernel.asm	/^ffffffff80100d1a:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80100d1c	obj/kern/kernel.asm	/^ffffffff80100d1c:	75 df                	jne    ffffffff80100cfd <mpsearch1+0x25>$/;"	l
ffffffff80100d1e	obj/kern/kernel.asm	/^ffffffff80100d1e:	48 89 da             	mov    %rbx,%rdx$/;"	l
ffffffff80100d21	obj/kern/kernel.asm	/^ffffffff80100d21:	48 8d 73 10          	lea    0x10(%rbx),%rsi$/;"	l
ffffffff80100d25	obj/kern/kernel.asm	/^ffffffff80100d25:	0f b6 0a             	movzbl (%rdx),%ecx$/;"	l
ffffffff80100d28	obj/kern/kernel.asm	/^ffffffff80100d28:	01 c8                	add    %ecx,%eax$/;"	l
ffffffff80100d2a	obj/kern/kernel.asm	/^ffffffff80100d2a:	48 83 c2 01          	add    $0x1,%rdx$/;"	l
ffffffff80100d2e	obj/kern/kernel.asm	/^ffffffff80100d2e:	48 39 f2             	cmp    %rsi,%rdx$/;"	l
ffffffff80100d31	obj/kern/kernel.asm	/^ffffffff80100d31:	75 f2                	jne    ffffffff80100d25 <mpsearch1+0x4d>$/;"	l
ffffffff80100d33	obj/kern/kernel.asm	/^ffffffff80100d33:	eb c4                	jmp    ffffffff80100cf9 <mpsearch1+0x21>$/;"	l
ffffffff80100d35	obj/kern/kernel.asm	/^ffffffff80100d35:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80100d3a	obj/kern/kernel.asm	/^ffffffff80100d3a:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff80100d3d	obj/kern/kernel.asm	/^ffffffff80100d3d:	5b                   	pop    %rbx$/;"	l
ffffffff80100d3e	obj/kern/kernel.asm	/^ffffffff80100d3e:	41 5c                	pop    %r12$/;"	l
ffffffff80100d40	obj/kern/kernel.asm	/^ffffffff80100d40:	5d                   	pop    %rbp$/;"	l
ffffffff80100d41	obj/kern/kernel.asm	/^ffffffff80100d41:	c3                   	retq   $/;"	l
ffffffff80100d42	obj/kern/kernel.asm	/^ffffffff80100d42 <mpinit>:$/;"	l
ffffffff80100d42	obj/kern/kernel.asm	/^ffffffff80100d42:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80100d46	obj/kern/kernel.asm	/^ffffffff80100d46:	55                   	push   %rbp$/;"	l
ffffffff80100d47	obj/kern/kernel.asm	/^ffffffff80100d47:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100d4a	obj/kern/kernel.asm	/^ffffffff80100d4a:	41 56                	push   %r14$/;"	l
ffffffff80100d4c	obj/kern/kernel.asm	/^ffffffff80100d4c:	41 55                	push   %r13$/;"	l
ffffffff80100d4e	obj/kern/kernel.asm	/^ffffffff80100d4e:	41 54                	push   %r12$/;"	l
ffffffff80100d50	obj/kern/kernel.asm	/^ffffffff80100d50:	53                   	push   %rbx$/;"	l
ffffffff80100d51	obj/kern/kernel.asm	/^ffffffff80100d51:	0f b6 04 25 0f 04 00 	movzbl 0xffffffff8000040f,%eax$/;"	l
ffffffff80100d58	obj/kern/kernel.asm	/^ffffffff80100d58:	80 $/;"	l
ffffffff80100d59	obj/kern/kernel.asm	/^ffffffff80100d59:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffffffff80100d5c	obj/kern/kernel.asm	/^ffffffff80100d5c:	0f b6 14 25 0e 04 00 	movzbl 0xffffffff8000040e,%edx$/;"	l
ffffffff80100d63	obj/kern/kernel.asm	/^ffffffff80100d63:	80 $/;"	l
ffffffff80100d64	obj/kern/kernel.asm	/^ffffffff80100d64:	09 d0                	or     %edx,%eax$/;"	l
ffffffff80100d66	obj/kern/kernel.asm	/^ffffffff80100d66:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffffffff80100d69	obj/kern/kernel.asm	/^ffffffff80100d69:	0f 84 dc 00 00 00    	je     ffffffff80100e4b <mpinit+0x109>$/;"	l
ffffffff80100d6f	obj/kern/kernel.asm	/^ffffffff80100d6f:	89 c7                	mov    %eax,%edi$/;"	l
ffffffff80100d71	obj/kern/kernel.asm	/^ffffffff80100d71:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
ffffffff80100d76	obj/kern/kernel.asm	/^ffffffff80100d76:	e8 5d ff ff ff       	callq  ffffffff80100cd8 <mpsearch1>$/;"	l
ffffffff80100d7b	obj/kern/kernel.asm	/^ffffffff80100d7b:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80100d7e	obj/kern/kernel.asm	/^ffffffff80100d7e:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80100d81	obj/kern/kernel.asm	/^ffffffff80100d81:	75 1b                	jne    ffffffff80100d9e <mpinit+0x5c>$/;"	l
ffffffff80100d83	obj/kern/kernel.asm	/^ffffffff80100d83:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffffffff80100d88	obj/kern/kernel.asm	/^ffffffff80100d88:	bf 00 00 0f 00       	mov    $0xf0000,%edi$/;"	l
ffffffff80100d8d	obj/kern/kernel.asm	/^ffffffff80100d8d:	e8 46 ff ff ff       	callq  ffffffff80100cd8 <mpsearch1>$/;"	l
ffffffff80100d92	obj/kern/kernel.asm	/^ffffffff80100d92:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80100d95	obj/kern/kernel.asm	/^ffffffff80100d95:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80100d98	obj/kern/kernel.asm	/^ffffffff80100d98:	0f 84 c6 01 00 00    	je     ffffffff80100f64 <mpinit+0x222>$/;"	l
ffffffff80100d9e	obj/kern/kernel.asm	/^ffffffff80100d9e:	41 8b 44 24 04       	mov    0x4(%r12),%eax$/;"	l
ffffffff80100da3	obj/kern/kernel.asm	/^ffffffff80100da3:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80100da5	obj/kern/kernel.asm	/^ffffffff80100da5:	0f 84 b9 01 00 00    	je     ffffffff80100f64 <mpinit+0x222>$/;"	l
ffffffff80100dab	obj/kern/kernel.asm	/^ffffffff80100dab:	41 89 c6             	mov    %eax,%r14d$/;"	l
ffffffff80100dae	obj/kern/kernel.asm	/^ffffffff80100dae:	49 8d 9e 00 00 00 80 	lea    -0x80000000(%r14),%rbx$/;"	l
ffffffff80100db5	obj/kern/kernel.asm	/^ffffffff80100db5:	49 89 dd             	mov    %rbx,%r13$/;"	l
ffffffff80100db8	obj/kern/kernel.asm	/^ffffffff80100db8:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
ffffffff80100dbd	obj/kern/kernel.asm	/^ffffffff80100dbd:	48 c7 c6 46 6d 10 80 	mov    $0xffffffff80106d46,%rsi$/;"	l
ffffffff80100dc4	obj/kern/kernel.asm	/^ffffffff80100dc4:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80100dc7	obj/kern/kernel.asm	/^ffffffff80100dc7:	e8 6d 5b 00 00       	callq  ffffffff80106939 <memcmp>$/;"	l
ffffffff80100dcc	obj/kern/kernel.asm	/^ffffffff80100dcc:	89 c6                	mov    %eax,%esi$/;"	l
ffffffff80100dce	obj/kern/kernel.asm	/^ffffffff80100dce:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80100dd0	obj/kern/kernel.asm	/^ffffffff80100dd0:	0f 85 8e 01 00 00    	jne    ffffffff80100f64 <mpinit+0x222>$/;"	l
ffffffff80100dd6	obj/kern/kernel.asm	/^ffffffff80100dd6:	0f b6 43 06          	movzbl 0x6(%rbx),%eax$/;"	l
ffffffff80100dda	obj/kern/kernel.asm	/^ffffffff80100dda:	3c 01                	cmp    $0x1,%al$/;"	l
ffffffff80100ddc	obj/kern/kernel.asm	/^ffffffff80100ddc:	74 08                	je     ffffffff80100de6 <mpinit+0xa4>$/;"	l
ffffffff80100dde	obj/kern/kernel.asm	/^ffffffff80100dde:	3c 04                	cmp    $0x4,%al$/;"	l
ffffffff80100de0	obj/kern/kernel.asm	/^ffffffff80100de0:	0f 85 7e 01 00 00    	jne    ffffffff80100f64 <mpinit+0x222>$/;"	l
ffffffff80100de6	obj/kern/kernel.asm	/^ffffffff80100de6:	41 0f b7 45 04       	movzwl 0x4(%r13),%eax$/;"	l
ffffffff80100deb	obj/kern/kernel.asm	/^ffffffff80100deb:	66 85 c0             	test   %ax,%ax$/;"	l
ffffffff80100dee	obj/kern/kernel.asm	/^ffffffff80100dee:	74 26                	je     ffffffff80100e16 <mpinit+0xd4>$/;"	l
ffffffff80100df0	obj/kern/kernel.asm	/^ffffffff80100df0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
ffffffff80100df3	obj/kern/kernel.asm	/^ffffffff80100df3:	8d 40 ff             	lea    -0x1(%rax),%eax$/;"	l
ffffffff80100df6	obj/kern/kernel.asm	/^ffffffff80100df6:	49 8d bc 06 01 00 00 	lea    -0x7fffffff(%r14,%rax,1),%rdi$/;"	l
ffffffff80100dfd	obj/kern/kernel.asm	/^ffffffff80100dfd:	80 $/;"	l
ffffffff80100dfe	obj/kern/kernel.asm	/^ffffffff80100dfe:	89 f2                	mov    %esi,%edx$/;"	l
ffffffff80100e00	obj/kern/kernel.asm	/^ffffffff80100e00:	0f b6 0b             	movzbl (%rbx),%ecx$/;"	l
ffffffff80100e03	obj/kern/kernel.asm	/^ffffffff80100e03:	01 ca                	add    %ecx,%edx$/;"	l
ffffffff80100e05	obj/kern/kernel.asm	/^ffffffff80100e05:	48 83 c3 01          	add    $0x1,%rbx$/;"	l
ffffffff80100e09	obj/kern/kernel.asm	/^ffffffff80100e09:	48 39 fb             	cmp    %rdi,%rbx$/;"	l
ffffffff80100e0c	obj/kern/kernel.asm	/^ffffffff80100e0c:	75 f2                	jne    ffffffff80100e00 <mpinit+0xbe>$/;"	l
ffffffff80100e0e	obj/kern/kernel.asm	/^ffffffff80100e0e:	84 d2                	test   %dl,%dl$/;"	l
ffffffff80100e10	obj/kern/kernel.asm	/^ffffffff80100e10:	0f 85 4e 01 00 00    	jne    ffffffff80100f64 <mpinit+0x222>$/;"	l
ffffffff80100e16	obj/kern/kernel.asm	/^ffffffff80100e16:	41 8b 7d 24          	mov    0x24(%r13),%edi$/;"	l
ffffffff80100e1a	obj/kern/kernel.asm	/^ffffffff80100e1a:	48 b9 00 00 00 00 ff 	movabs $0xffffffff00000000,%rcx$/;"	l
ffffffff80100e21	obj/kern/kernel.asm	/^ffffffff80100e21:	ff ff ff $/;"	l
ffffffff80100e24	obj/kern/kernel.asm	/^ffffffff80100e24:	48 01 cf             	add    %rcx,%rdi$/;"	l
ffffffff80100e27	obj/kern/kernel.asm	/^ffffffff80100e27:	48 89 3d 7a de 00 00 	mov    %rdi,0xde7a(%rip)        # ffffffff8010eca8 <lapic>$/;"	l
ffffffff80100e2e	obj/kern/kernel.asm	/^ffffffff80100e2e:	49 8d 55 2c          	lea    0x2c(%r13),%rdx$/;"	l
ffffffff80100e32	obj/kern/kernel.asm	/^ffffffff80100e32:	41 0f b7 4d 04       	movzwl 0x4(%r13),%ecx$/;"	l
ffffffff80100e37	obj/kern/kernel.asm	/^ffffffff80100e37:	4c 01 e9             	add    %r13,%rcx$/;"	l
ffffffff80100e3a	obj/kern/kernel.asm	/^ffffffff80100e3a:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
ffffffff80100e3f	obj/kern/kernel.asm	/^ffffffff80100e3f:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8$/;"	l
ffffffff80100e46	obj/kern/kernel.asm	/^ffffffff80100e46:	ff ff ff $/;"	l
ffffffff80100e49	obj/kern/kernel.asm	/^ffffffff80100e49:	eb 44                	jmp    ffffffff80100e8f <mpinit+0x14d>$/;"	l
ffffffff80100e4b	obj/kern/kernel.asm	/^ffffffff80100e4b:	0f b6 3c 25 14 04 00 	movzbl 0xffffffff80000414,%edi$/;"	l
ffffffff80100e52	obj/kern/kernel.asm	/^ffffffff80100e52:	80 $/;"	l
ffffffff80100e53	obj/kern/kernel.asm	/^ffffffff80100e53:	c1 e7 08             	shl    $0x8,%edi$/;"	l
ffffffff80100e56	obj/kern/kernel.asm	/^ffffffff80100e56:	0f b6 04 25 13 04 00 	movzbl 0xffffffff80000413,%eax$/;"	l
ffffffff80100e5d	obj/kern/kernel.asm	/^ffffffff80100e5d:	80 $/;"	l
ffffffff80100e5e	obj/kern/kernel.asm	/^ffffffff80100e5e:	09 c7                	or     %eax,%edi$/;"	l
ffffffff80100e60	obj/kern/kernel.asm	/^ffffffff80100e60:	c1 e7 0a             	shl    $0xa,%edi$/;"	l
ffffffff80100e63	obj/kern/kernel.asm	/^ffffffff80100e63:	81 ef 00 04 00 00    	sub    $0x400,%edi$/;"	l
ffffffff80100e69	obj/kern/kernel.asm	/^ffffffff80100e69:	89 ff                	mov    %edi,%edi$/;"	l
ffffffff80100e6b	obj/kern/kernel.asm	/^ffffffff80100e6b:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
ffffffff80100e70	obj/kern/kernel.asm	/^ffffffff80100e70:	e8 63 fe ff ff       	callq  ffffffff80100cd8 <mpsearch1>$/;"	l
ffffffff80100e75	obj/kern/kernel.asm	/^ffffffff80100e75:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80100e78	obj/kern/kernel.asm	/^ffffffff80100e78:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80100e7b	obj/kern/kernel.asm	/^ffffffff80100e7b:	0f 85 1d ff ff ff    	jne    ffffffff80100d9e <mpinit+0x5c>$/;"	l
ffffffff80100e81	obj/kern/kernel.asm	/^ffffffff80100e81:	e9 fd fe ff ff       	jmpq   ffffffff80100d83 <mpinit+0x41>$/;"	l
ffffffff80100e86	obj/kern/kernel.asm	/^ffffffff80100e86:	83 e8 03             	sub    $0x3,%eax$/;"	l
ffffffff80100e89	obj/kern/kernel.asm	/^ffffffff80100e89:	3c 01                	cmp    $0x1,%al$/;"	l
ffffffff80100e8b	obj/kern/kernel.asm	/^ffffffff80100e8b:	76 14                	jbe    ffffffff80100ea1 <mpinit+0x15f>$/;"	l
ffffffff80100e8d	obj/kern/kernel.asm	/^ffffffff80100e8d:	89 f3                	mov    %esi,%ebx$/;"	l
ffffffff80100e8f	obj/kern/kernel.asm	/^ffffffff80100e8f:	48 39 ca             	cmp    %rcx,%rdx$/;"	l
ffffffff80100e92	obj/kern/kernel.asm	/^ffffffff80100e92:	73 62                	jae    ffffffff80100ef6 <mpinit+0x1b4>$/;"	l
ffffffff80100e94	obj/kern/kernel.asm	/^ffffffff80100e94:	0f b6 02             	movzbl (%rdx),%eax$/;"	l
ffffffff80100e97	obj/kern/kernel.asm	/^ffffffff80100e97:	3c 02                	cmp    $0x2,%al$/;"	l
ffffffff80100e99	obj/kern/kernel.asm	/^ffffffff80100e99:	74 3e                	je     ffffffff80100ed9 <mpinit+0x197>$/;"	l
ffffffff80100e9b	obj/kern/kernel.asm	/^ffffffff80100e9b:	77 e9                	ja     ffffffff80100e86 <mpinit+0x144>$/;"	l
ffffffff80100e9d	obj/kern/kernel.asm	/^ffffffff80100e9d:	84 c0                	test   %al,%al$/;"	l
ffffffff80100e9f	obj/kern/kernel.asm	/^ffffffff80100e9f:	74 06                	je     ffffffff80100ea7 <mpinit+0x165>$/;"	l
ffffffff80100ea1	obj/kern/kernel.asm	/^ffffffff80100ea1:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffffffff80100ea5	obj/kern/kernel.asm	/^ffffffff80100ea5:	eb e8                	jmp    ffffffff80100e8f <mpinit+0x14d>$/;"	l
ffffffff80100ea7	obj/kern/kernel.asm	/^ffffffff80100ea7:	8b 05 93 95 00 00    	mov    0x9593(%rip),%eax        # ffffffff8010a440 <ncpu>$/;"	l
ffffffff80100ead	obj/kern/kernel.asm	/^ffffffff80100ead:	83 f8 07             	cmp    $0x7,%eax$/;"	l
ffffffff80100eb0	obj/kern/kernel.asm	/^ffffffff80100eb0:	7f 21                	jg     ffffffff80100ed3 <mpinit+0x191>$/;"	l
ffffffff80100eb2	obj/kern/kernel.asm	/^ffffffff80100eb2:	44 0f b6 52 01       	movzbl 0x1(%rdx),%r10d$/;"	l
ffffffff80100eb7	obj/kern/kernel.asm	/^ffffffff80100eb7:	4c 63 c8             	movslq %eax,%r9$/;"	l
ffffffff80100eba	obj/kern/kernel.asm	/^ffffffff80100eba:	4f 8d 0c 89          	lea    (%r9,%r9,4),%r9$/;"	l
ffffffff80100ebe	obj/kern/kernel.asm	/^ffffffff80100ebe:	4f 8d 0c 89          	lea    (%r9,%r9,4),%r9$/;"	l
ffffffff80100ec2	obj/kern/kernel.asm	/^ffffffff80100ec2:	46 88 14 cd 00 9e 10 	mov    %r10b,-0x7fef6200(,%r9,8)$/;"	l
ffffffff80100ec9	obj/kern/kernel.asm	/^ffffffff80100ec9:	80 $/;"	l
ffffffff80100eca	obj/kern/kernel.asm	/^ffffffff80100eca:	83 c0 01             	add    $0x1,%eax$/;"	l
ffffffff80100ecd	obj/kern/kernel.asm	/^ffffffff80100ecd:	89 05 6d 95 00 00    	mov    %eax,0x956d(%rip)        # ffffffff8010a440 <ncpu>$/;"	l
ffffffff80100ed3	obj/kern/kernel.asm	/^ffffffff80100ed3:	48 83 c2 14          	add    $0x14,%rdx$/;"	l
ffffffff80100ed7	obj/kern/kernel.asm	/^ffffffff80100ed7:	eb b6                	jmp    ffffffff80100e8f <mpinit+0x14d>$/;"	l
ffffffff80100ed9	obj/kern/kernel.asm	/^ffffffff80100ed9:	0f b6 42 01          	movzbl 0x1(%rdx),%eax$/;"	l
ffffffff80100edd	obj/kern/kernel.asm	/^ffffffff80100edd:	88 05 cd dd 00 00    	mov    %al,0xddcd(%rip)        # ffffffff8010ecb0 <ioapicid>$/;"	l
ffffffff80100ee3	obj/kern/kernel.asm	/^ffffffff80100ee3:	8b 42 04             	mov    0x4(%rdx),%eax$/;"	l
ffffffff80100ee6	obj/kern/kernel.asm	/^ffffffff80100ee6:	4c 01 c0             	add    %r8,%rax$/;"	l
ffffffff80100ee9	obj/kern/kernel.asm	/^ffffffff80100ee9:	48 89 05 c8 dd 00 00 	mov    %rax,0xddc8(%rip)        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff80100ef0	obj/kern/kernel.asm	/^ffffffff80100ef0:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffffffff80100ef4	obj/kern/kernel.asm	/^ffffffff80100ef4:	eb 99                	jmp    ffffffff80100e8f <mpinit+0x14d>$/;"	l
ffffffff80100ef6	obj/kern/kernel.asm	/^ffffffff80100ef6:	4c 8b 05 bb dd 00 00 	mov    0xddbb(%rip),%r8        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff80100efd	obj/kern/kernel.asm	/^ffffffff80100efd:	48 89 f9             	mov    %rdi,%rcx$/;"	l
ffffffff80100f00	obj/kern/kernel.asm	/^ffffffff80100f00:	4c 89 ea             	mov    %r13,%rdx$/;"	l
ffffffff80100f03	obj/kern/kernel.asm	/^ffffffff80100f03:	4c 89 e6             	mov    %r12,%rsi$/;"	l
ffffffff80100f06	obj/kern/kernel.asm	/^ffffffff80100f06:	48 c7 c7 70 6d 10 80 	mov    $0xffffffff80106d70,%rdi$/;"	l
ffffffff80100f0d	obj/kern/kernel.asm	/^ffffffff80100f0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80100f12	obj/kern/kernel.asm	/^ffffffff80100f12:	e8 af f9 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80100f17	obj/kern/kernel.asm	/^ffffffff80100f17:	8b 35 23 95 00 00    	mov    0x9523(%rip),%esi        # ffffffff8010a440 <ncpu>$/;"	l
ffffffff80100f1d	obj/kern/kernel.asm	/^ffffffff80100f1d:	48 c7 c7 4b 6d 10 80 	mov    $0xffffffff80106d4b,%rdi$/;"	l
ffffffff80100f24	obj/kern/kernel.asm	/^ffffffff80100f24:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80100f29	obj/kern/kernel.asm	/^ffffffff80100f29:	e8 98 f9 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80100f2e	obj/kern/kernel.asm	/^ffffffff80100f2e:	85 db                	test   %ebx,%ebx$/;"	l
ffffffff80100f30	obj/kern/kernel.asm	/^ffffffff80100f30:	74 26                	je     ffffffff80100f58 <mpinit+0x216>$/;"	l
ffffffff80100f32	obj/kern/kernel.asm	/^ffffffff80100f32:	41 80 7c 24 0c 00    	cmpb   $0x0,0xc(%r12)$/;"	l
ffffffff80100f38	obj/kern/kernel.asm	/^ffffffff80100f38:	74 15                	je     ffffffff80100f4f <mpinit+0x20d>$/;"	l
ffffffff80100f3a	obj/kern/kernel.asm	/^ffffffff80100f3a:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
ffffffff80100f3f	obj/kern/kernel.asm	/^ffffffff80100f3f:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
ffffffff80100f44	obj/kern/kernel.asm	/^ffffffff80100f44:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80100f45	obj/kern/kernel.asm	/^ffffffff80100f45:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
ffffffff80100f4a	obj/kern/kernel.asm	/^ffffffff80100f4a:	ec                   	in     (%dx),%al$/;"	l
ffffffff80100f4b	obj/kern/kernel.asm	/^ffffffff80100f4b:	83 c8 01             	or     $0x1,%eax$/;"	l
ffffffff80100f4e	obj/kern/kernel.asm	/^ffffffff80100f4e:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80100f4f	obj/kern/kernel.asm	/^ffffffff80100f4f:	5b                   	pop    %rbx$/;"	l
ffffffff80100f50	obj/kern/kernel.asm	/^ffffffff80100f50:	41 5c                	pop    %r12$/;"	l
ffffffff80100f52	obj/kern/kernel.asm	/^ffffffff80100f52:	41 5d                	pop    %r13$/;"	l
ffffffff80100f54	obj/kern/kernel.asm	/^ffffffff80100f54:	41 5e                	pop    %r14$/;"	l
ffffffff80100f56	obj/kern/kernel.asm	/^ffffffff80100f56:	5d                   	pop    %rbp$/;"	l
ffffffff80100f57	obj/kern/kernel.asm	/^ffffffff80100f57:	c3                   	retq   $/;"	l
ffffffff80100f58	obj/kern/kernel.asm	/^ffffffff80100f58:	48 c7 c7 a8 6d 10 80 	mov    $0xffffffff80106da8,%rdi$/;"	l
ffffffff80100f5f	obj/kern/kernel.asm	/^ffffffff80100f5f:	e8 bf f6 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80100f64	obj/kern/kernel.asm	/^ffffffff80100f64:	48 c7 c7 56 6d 10 80 	mov    $0xffffffff80106d56,%rdi$/;"	l
ffffffff80100f6b	obj/kern/kernel.asm	/^ffffffff80100f6b:	e8 b3 f6 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80100f70	obj/kern/kernel.asm	/^ffffffff80100f70 <wakeup1>:$/;"	l
ffffffff80100f70	obj/kern/kernel.asm	/^ffffffff80100f70:	48 c7 c0 78 a4 10 80 	mov    $0xffffffff8010a478,%rax$/;"	l
ffffffff80100f77	obj/kern/kernel.asm	/^ffffffff80100f77:	eb 15                	jmp    ffffffff80100f8e <wakeup1+0x1e>$/;"	l
ffffffff80100f79	obj/kern/kernel.asm	/^ffffffff80100f79:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffffffff80100f80	obj/kern/kernel.asm	/^ffffffff80100f80:	48 05 e0 00 00 00    	add    $0xe0,%rax$/;"	l
ffffffff80100f86	obj/kern/kernel.asm	/^ffffffff80100f86:	48 3d 78 dc 10 80    	cmp    $0xffffffff8010dc78,%rax$/;"	l
ffffffff80100f8c	obj/kern/kernel.asm	/^ffffffff80100f8c:	74 0e                	je     ffffffff80100f9c <wakeup1+0x2c>$/;"	l
ffffffff80100f8e	obj/kern/kernel.asm	/^ffffffff80100f8e:	83 78 18 02          	cmpl   $0x2,0x18(%rax)$/;"	l
ffffffff80100f92	obj/kern/kernel.asm	/^ffffffff80100f92:	75 ec                	jne    ffffffff80100f80 <wakeup1+0x10>$/;"	l
ffffffff80100f94	obj/kern/kernel.asm	/^ffffffff80100f94:	48 39 78 38          	cmp    %rdi,0x38(%rax)$/;"	l
ffffffff80100f98	obj/kern/kernel.asm	/^ffffffff80100f98:	75 e6                	jne    ffffffff80100f80 <wakeup1+0x10>$/;"	l
ffffffff80100f9a	obj/kern/kernel.asm	/^ffffffff80100f9a:	eb dd                	jmp    ffffffff80100f79 <wakeup1+0x9>$/;"	l
ffffffff80100f9c	obj/kern/kernel.asm	/^ffffffff80100f9c:	c3                   	retq   $/;"	l
ffffffff80100f9d	obj/kern/kernel.asm	/^ffffffff80100f9d <allocproc>:$/;"	l
ffffffff80100f9d	obj/kern/kernel.asm	/^ffffffff80100f9d:	55                   	push   %rbp$/;"	l
ffffffff80100f9e	obj/kern/kernel.asm	/^ffffffff80100f9e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80100fa1	obj/kern/kernel.asm	/^ffffffff80100fa1:	53                   	push   %rbx$/;"	l
ffffffff80100fa2	obj/kern/kernel.asm	/^ffffffff80100fa2:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80100fa6	obj/kern/kernel.asm	/^ffffffff80100fa6:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80100fad	obj/kern/kernel.asm	/^ffffffff80100fad:	e8 ed f4 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80100fb2	obj/kern/kernel.asm	/^ffffffff80100fb2:	48 c7 c3 78 a4 10 80 	mov    $0xffffffff8010a478,%rbx$/;"	l
ffffffff80100fb9	obj/kern/kernel.asm	/^ffffffff80100fb9:	83 7b 18 00          	cmpl   $0x0,0x18(%rbx)$/;"	l
ffffffff80100fbd	obj/kern/kernel.asm	/^ffffffff80100fbd:	74 23                	je     ffffffff80100fe2 <allocproc+0x45>$/;"	l
ffffffff80100fbf	obj/kern/kernel.asm	/^ffffffff80100fbf:	48 81 c3 e0 00 00 00 	add    $0xe0,%rbx$/;"	l
ffffffff80100fc6	obj/kern/kernel.asm	/^ffffffff80100fc6:	48 81 fb 78 dc 10 80 	cmp    $0xffffffff8010dc78,%rbx$/;"	l
ffffffff80100fcd	obj/kern/kernel.asm	/^ffffffff80100fcd:	75 ea                	jne    ffffffff80100fb9 <allocproc+0x1c>$/;"	l
ffffffff80100fcf	obj/kern/kernel.asm	/^ffffffff80100fcf:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80100fd6	obj/kern/kernel.asm	/^ffffffff80100fd6:	e8 12 f5 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80100fdb	obj/kern/kernel.asm	/^ffffffff80100fdb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80100fe0	obj/kern/kernel.asm	/^ffffffff80100fe0:	eb 6f                	jmp    ffffffff80101051 <allocproc+0xb4>$/;"	l
ffffffff80100fe2	obj/kern/kernel.asm	/^ffffffff80100fe2:	c7 43 18 01 00 00 00 	movl   $0x1,0x18(%rbx)$/;"	l
ffffffff80100fe9	obj/kern/kernel.asm	/^ffffffff80100fe9:	8b 05 15 70 00 00    	mov    0x7015(%rip),%eax        # ffffffff80108004 <nextpid>$/;"	l
ffffffff80100fef	obj/kern/kernel.asm	/^ffffffff80100fef:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffffffff80100ff2	obj/kern/kernel.asm	/^ffffffff80100ff2:	89 15 0c 70 00 00    	mov    %edx,0x700c(%rip)        # ffffffff80108004 <nextpid>$/;"	l
ffffffff80100ff8	obj/kern/kernel.asm	/^ffffffff80100ff8:	89 43 1c             	mov    %eax,0x1c(%rbx)$/;"	l
ffffffff80100ffb	obj/kern/kernel.asm	/^ffffffff80100ffb:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101002	obj/kern/kernel.asm	/^ffffffff80101002:	e8 e6 f4 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80101007	obj/kern/kernel.asm	/^ffffffff80101007:	e8 30 f3 ff ff       	callq  ffffffff8010033c <kalloc>$/;"	l
ffffffff8010100c	obj/kern/kernel.asm	/^ffffffff8010100c:	48 89 43 10          	mov    %rax,0x10(%rbx)$/;"	l
ffffffff80101010	obj/kern/kernel.asm	/^ffffffff80101010:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80101013	obj/kern/kernel.asm	/^ffffffff80101013:	74 46                	je     ffffffff8010105b <allocproc+0xbe>$/;"	l
ffffffff80101015	obj/kern/kernel.asm	/^ffffffff80101015:	48 8d 90 50 0f 00 00 	lea    0xf50(%rax),%rdx$/;"	l
ffffffff8010101c	obj/kern/kernel.asm	/^ffffffff8010101c:	48 89 53 28          	mov    %rdx,0x28(%rbx)$/;"	l
ffffffff80101020	obj/kern/kernel.asm	/^ffffffff80101020:	48 c7 80 48 0f 00 00 	movq   $0xffffffff801024df,0xf48(%rax)$/;"	l
ffffffff80101027	obj/kern/kernel.asm	/^ffffffff80101027:	df 24 10 80 $/;"	d
ffffffff8010102b	obj/kern/kernel.asm	/^ffffffff8010102b:	48 8d b8 00 0f 00 00 	lea    0xf00(%rax),%rdi$/;"	l
ffffffff80101032	obj/kern/kernel.asm	/^ffffffff80101032:	48 89 7b 30          	mov    %rdi,0x30(%rbx)$/;"	l
ffffffff80101036	obj/kern/kernel.asm	/^ffffffff80101036:	ba 48 00 00 00       	mov    $0x48,%edx$/;"	l
ffffffff8010103b	obj/kern/kernel.asm	/^ffffffff8010103b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80101040	obj/kern/kernel.asm	/^ffffffff80101040:	e8 30 59 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff80101045	obj/kern/kernel.asm	/^ffffffff80101045:	48 8b 43 30          	mov    0x30(%rbx),%rax$/;"	l
ffffffff80101049	obj/kern/kernel.asm	/^ffffffff80101049:	48 c7 40 40 67 10 10 	movq   $0xffffffff80101067,0x40(%rax)$/;"	l
ffffffff80101050	obj/kern/kernel.asm	/^ffffffff80101050:	80 $/;"	l
ffffffff80101051	obj/kern/kernel.asm	/^ffffffff80101051:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff80101054	obj/kern/kernel.asm	/^ffffffff80101054:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80101058	obj/kern/kernel.asm	/^ffffffff80101058:	5b                   	pop    %rbx$/;"	l
ffffffff80101059	obj/kern/kernel.asm	/^ffffffff80101059:	5d                   	pop    %rbp$/;"	l
ffffffff8010105a	obj/kern/kernel.asm	/^ffffffff8010105a:	c3                   	retq   $/;"	l
ffffffff8010105b	obj/kern/kernel.asm	/^ffffffff8010105b:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)$/;"	l
ffffffff80101062	obj/kern/kernel.asm	/^ffffffff80101062:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80101065	obj/kern/kernel.asm	/^ffffffff80101065:	eb ea                	jmp    ffffffff80101051 <allocproc+0xb4>$/;"	l
ffffffff80101067	obj/kern/kernel.asm	/^ffffffff80101067 <forkret>:$/;"	l
ffffffff80101067	obj/kern/kernel.asm	/^ffffffff80101067:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010106b	obj/kern/kernel.asm	/^ffffffff8010106b:	55                   	push   %rbp$/;"	l
ffffffff8010106c	obj/kern/kernel.asm	/^ffffffff8010106c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010106f	obj/kern/kernel.asm	/^ffffffff8010106f:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101076	obj/kern/kernel.asm	/^ffffffff80101076:	e8 72 f4 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010107b	obj/kern/kernel.asm	/^ffffffff8010107b:	83 3d 7e 6f 00 00 00 	cmpl   $0x0,0x6f7e(%rip)        # ffffffff80108000 <first.1685>$/;"	l
ffffffff80101082	obj/kern/kernel.asm	/^ffffffff80101082:	75 02                	jne    ffffffff80101086 <forkret+0x1f>$/;"	l
ffffffff80101084	obj/kern/kernel.asm	/^ffffffff80101084:	5d                   	pop    %rbp$/;"	l
ffffffff80101085	obj/kern/kernel.asm	/^ffffffff80101085:	c3                   	retq   $/;"	l
ffffffff80101086	obj/kern/kernel.asm	/^ffffffff80101086:	c7 05 70 6f 00 00 00 	movl   $0x0,0x6f70(%rip)        # ffffffff80108000 <first.1685>$/;"	l
ffffffff8010108d	obj/kern/kernel.asm	/^ffffffff8010108d:	00 00 00 $/;"	l
ffffffff80101090	obj/kern/kernel.asm	/^ffffffff80101090:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff80101095	obj/kern/kernel.asm	/^ffffffff80101095:	e8 c0 43 00 00       	callq  ffffffff8010545a <iinit>$/;"	l
ffffffff8010109a	obj/kern/kernel.asm	/^ffffffff8010109a:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff8010109f	obj/kern/kernel.asm	/^ffffffff8010109f:	e8 ba 4e 00 00       	callq  ffffffff80105f5e <initlog>$/;"	l
ffffffff801010a4	obj/kern/kernel.asm	/^ffffffff801010a4:	eb de                	jmp    ffffffff80101084 <forkret+0x1d>$/;"	l
ffffffff801010a6	obj/kern/kernel.asm	/^ffffffff801010a6 <mycpu>:$/;"	l
ffffffff801010a6	obj/kern/kernel.asm	/^ffffffff801010a6:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801010aa	obj/kern/kernel.asm	/^ffffffff801010aa:	9c                   	pushfq $/;"	l
ffffffff801010ab	obj/kern/kernel.asm	/^ffffffff801010ab:	58                   	pop    %rax$/;"	l
ffffffff801010ac	obj/kern/kernel.asm	/^ffffffff801010ac:	f6 c4 02             	test   $0x2,%ah$/;"	l
ffffffff801010af	obj/kern/kernel.asm	/^ffffffff801010af:	75 08                	jne    ffffffff801010b9 <mycpu+0x13>$/;"	l
ffffffff801010b1	obj/kern/kernel.asm	/^ffffffff801010b1:	48 c7 c0 00 9e 10 80 	mov    $0xffffffff80109e00,%rax$/;"	l
ffffffff801010b8	obj/kern/kernel.asm	/^ffffffff801010b8:	c3                   	retq   $/;"	l
ffffffff801010b9	obj/kern/kernel.asm	/^ffffffff801010b9:	55                   	push   %rbp$/;"	l
ffffffff801010ba	obj/kern/kernel.asm	/^ffffffff801010ba:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801010bd	obj/kern/kernel.asm	/^ffffffff801010bd:	48 c7 c7 c8 6d 10 80 	mov    $0xffffffff80106dc8,%rdi$/;"	l
ffffffff801010c4	obj/kern/kernel.asm	/^ffffffff801010c4:	e8 5a f5 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801010c9	obj/kern/kernel.asm	/^ffffffff801010c9 <cpuid>:$/;"	l
ffffffff801010c9	obj/kern/kernel.asm	/^ffffffff801010c9:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801010cd	obj/kern/kernel.asm	/^ffffffff801010cd:	55                   	push   %rbp$/;"	l
ffffffff801010ce	obj/kern/kernel.asm	/^ffffffff801010ce:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801010d1	obj/kern/kernel.asm	/^ffffffff801010d1:	e8 d0 ff ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff801010d6	obj/kern/kernel.asm	/^ffffffff801010d6:	48 2d 00 9e 10 80    	sub    $0xffffffff80109e00,%rax$/;"	l
ffffffff801010dc	obj/kern/kernel.asm	/^ffffffff801010dc:	48 c1 f8 03          	sar    $0x3,%rax$/;"	l
ffffffff801010e0	obj/kern/kernel.asm	/^ffffffff801010e0:	48 ba 29 5c 8f c2 f5 	movabs $0x8f5c28f5c28f5c29,%rdx$/;"	l
ffffffff801010e7	obj/kern/kernel.asm	/^ffffffff801010e7:	28 5c 8f $/;"	l
ffffffff801010ea	obj/kern/kernel.asm	/^ffffffff801010ea:	48 0f af c2          	imul   %rdx,%rax$/;"	l
ffffffff801010ee	obj/kern/kernel.asm	/^ffffffff801010ee:	5d                   	pop    %rbp$/;"	l
ffffffff801010ef	obj/kern/kernel.asm	/^ffffffff801010ef:	c3                   	retq   $/;"	l
ffffffff801010f0	obj/kern/kernel.asm	/^ffffffff801010f0 <myproc>:$/;"	l
ffffffff801010f0	obj/kern/kernel.asm	/^ffffffff801010f0:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801010f4	obj/kern/kernel.asm	/^ffffffff801010f4:	55                   	push   %rbp$/;"	l
ffffffff801010f5	obj/kern/kernel.asm	/^ffffffff801010f5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801010f8	obj/kern/kernel.asm	/^ffffffff801010f8:	53                   	push   %rbx$/;"	l
ffffffff801010f9	obj/kern/kernel.asm	/^ffffffff801010f9:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801010fd	obj/kern/kernel.asm	/^ffffffff801010fd:	e8 b8 f2 ff ff       	callq  ffffffff801003ba <pushcli>$/;"	l
ffffffff80101102	obj/kern/kernel.asm	/^ffffffff80101102:	e8 9f ff ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101107	obj/kern/kernel.asm	/^ffffffff80101107:	48 8b 98 c0 00 00 00 	mov    0xc0(%rax),%rbx$/;"	l
ffffffff8010110e	obj/kern/kernel.asm	/^ffffffff8010110e:	e8 eb f2 ff ff       	callq  ffffffff801003fe <popcli>$/;"	l
ffffffff80101113	obj/kern/kernel.asm	/^ffffffff80101113:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff80101116	obj/kern/kernel.asm	/^ffffffff80101116:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff8010111a	obj/kern/kernel.asm	/^ffffffff8010111a:	5b                   	pop    %rbx$/;"	l
ffffffff8010111b	obj/kern/kernel.asm	/^ffffffff8010111b:	5d                   	pop    %rbp$/;"	l
ffffffff8010111c	obj/kern/kernel.asm	/^ffffffff8010111c:	c3                   	retq   $/;"	l
ffffffff8010111d	obj/kern/kernel.asm	/^ffffffff8010111d <userinit>:$/;"	l
ffffffff8010111d	obj/kern/kernel.asm	/^ffffffff8010111d:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101121	obj/kern/kernel.asm	/^ffffffff80101121:	55                   	push   %rbp$/;"	l
ffffffff80101122	obj/kern/kernel.asm	/^ffffffff80101122:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101125	obj/kern/kernel.asm	/^ffffffff80101125:	53                   	push   %rbx$/;"	l
ffffffff80101126	obj/kern/kernel.asm	/^ffffffff80101126:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010112a	obj/kern/kernel.asm	/^ffffffff8010112a:	e8 6e fe ff ff       	callq  ffffffff80100f9d <allocproc>$/;"	l
ffffffff8010112f	obj/kern/kernel.asm	/^ffffffff8010112f:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80101132	obj/kern/kernel.asm	/^ffffffff80101132:	48 89 05 4f 7a 00 00 	mov    %rax,0x7a4f(%rip)        # ffffffff80108b88 <initproc>$/;"	l
ffffffff80101139	obj/kern/kernel.asm	/^ffffffff80101139:	e8 7f 10 00 00       	callq  ffffffff801021bd <setupkvm>$/;"	l
ffffffff8010113e	obj/kern/kernel.asm	/^ffffffff8010113e:	48 89 43 08          	mov    %rax,0x8(%rbx)$/;"	l
ffffffff80101142	obj/kern/kernel.asm	/^ffffffff80101142:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80101145	obj/kern/kernel.asm	/^ffffffff80101145:	0f 84 c8 00 00 00    	je     ffffffff80101213 <userinit+0xf6>$/;"	l
ffffffff8010114b	obj/kern/kernel.asm	/^ffffffff8010114b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff8010114e	obj/kern/kernel.asm	/^ffffffff8010114e:	48 c7 c2 38 00 00 00 	mov    $0x38,%rdx$/;"	l
ffffffff80101155	obj/kern/kernel.asm	/^ffffffff80101155:	48 c7 c6 20 8b 10 80 	mov    $0xffffffff80108b20,%rsi$/;"	l
ffffffff8010115c	obj/kern/kernel.asm	/^ffffffff8010115c:	e8 64 0c 00 00       	callq  ffffffff80101dc5 <inituvm>$/;"	l
ffffffff80101161	obj/kern/kernel.asm	/^ffffffff80101161:	48 c7 03 00 10 00 00 	movq   $0x1000,(%rbx)$/;"	l
ffffffff80101168	obj/kern/kernel.asm	/^ffffffff80101168:	48 8b 7b 28          	mov    0x28(%rbx),%rdi$/;"	l
ffffffff8010116c	obj/kern/kernel.asm	/^ffffffff8010116c:	ba b0 00 00 00       	mov    $0xb0,%edx$/;"	l
ffffffff80101171	obj/kern/kernel.asm	/^ffffffff80101171:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80101176	obj/kern/kernel.asm	/^ffffffff80101176:	e8 fa 57 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff8010117b	obj/kern/kernel.asm	/^ffffffff8010117b:	48 8b 43 28          	mov    0x28(%rbx),%rax$/;"	l
ffffffff8010117f	obj/kern/kernel.asm	/^ffffffff8010117f:	66 c7 80 90 00 00 00 	movw   $0x1b,0x90(%rax)$/;"	l
ffffffff80101186	obj/kern/kernel.asm	/^ffffffff80101186:	1b 00 $/;"	l
ffffffff80101188	obj/kern/kernel.asm	/^ffffffff80101188:	48 8b 43 28          	mov    0x28(%rbx),%rax$/;"	l
ffffffff8010118c	obj/kern/kernel.asm	/^ffffffff8010118c:	66 c7 80 a8 00 00 00 	movw   $0x23,0xa8(%rax)$/;"	l
ffffffff80101193	obj/kern/kernel.asm	/^ffffffff80101193:	23 00 $/;"	l
ffffffff80101195	obj/kern/kernel.asm	/^ffffffff80101195:	48 8b 43 28          	mov    0x28(%rbx),%rax$/;"	l
ffffffff80101199	obj/kern/kernel.asm	/^ffffffff80101199:	48 c7 80 98 00 00 00 	movq   $0x200,0x98(%rax)$/;"	l
ffffffff801011a0	obj/kern/kernel.asm	/^ffffffff801011a0:	00 02 00 00 $/;"	l
ffffffff801011a4	obj/kern/kernel.asm	/^ffffffff801011a4:	48 8b 43 28          	mov    0x28(%rbx),%rax$/;"	l
ffffffff801011a8	obj/kern/kernel.asm	/^ffffffff801011a8:	48 c7 80 a0 00 00 00 	movq   $0x1000,0xa0(%rax)$/;"	l
ffffffff801011af	obj/kern/kernel.asm	/^ffffffff801011af:	00 10 00 00 $/;"	l
ffffffff801011b3	obj/kern/kernel.asm	/^ffffffff801011b3:	48 8b 43 28          	mov    0x28(%rbx),%rax$/;"	l
ffffffff801011b7	obj/kern/kernel.asm	/^ffffffff801011b7:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)$/;"	l
ffffffff801011be	obj/kern/kernel.asm	/^ffffffff801011be:	00 00 00 00 $/;"	l
ffffffff801011c2	obj/kern/kernel.asm	/^ffffffff801011c2:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi$/;"	l
ffffffff801011c9	obj/kern/kernel.asm	/^ffffffff801011c9:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffffffff801011ce	obj/kern/kernel.asm	/^ffffffff801011ce:	48 c7 c6 07 6e 10 80 	mov    $0xffffffff80106e07,%rsi$/;"	l
ffffffff801011d5	obj/kern/kernel.asm	/^ffffffff801011d5:	e8 8d 58 00 00       	callq  ffffffff80106a67 <safestrcpy>$/;"	l
ffffffff801011da	obj/kern/kernel.asm	/^ffffffff801011da:	48 c7 c7 10 6e 10 80 	mov    $0xffffffff80106e10,%rdi$/;"	l
ffffffff801011e1	obj/kern/kernel.asm	/^ffffffff801011e1:	e8 5c 4c 00 00       	callq  ffffffff80105e42 <namei>$/;"	l
ffffffff801011e6	obj/kern/kernel.asm	/^ffffffff801011e6:	48 89 83 c8 00 00 00 	mov    %rax,0xc8(%rbx)$/;"	l
ffffffff801011ed	obj/kern/kernel.asm	/^ffffffff801011ed:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff801011f4	obj/kern/kernel.asm	/^ffffffff801011f4:	e8 a6 f2 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801011f9	obj/kern/kernel.asm	/^ffffffff801011f9:	c7 43 18 03 00 00 00 	movl   $0x3,0x18(%rbx)$/;"	l
ffffffff80101200	obj/kern/kernel.asm	/^ffffffff80101200:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101207	obj/kern/kernel.asm	/^ffffffff80101207:	e8 e1 f2 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010120c	obj/kern/kernel.asm	/^ffffffff8010120c:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80101210	obj/kern/kernel.asm	/^ffffffff80101210:	5b                   	pop    %rbx$/;"	l
ffffffff80101211	obj/kern/kernel.asm	/^ffffffff80101211:	5d                   	pop    %rbp$/;"	l
ffffffff80101212	obj/kern/kernel.asm	/^ffffffff80101212:	c3                   	retq   $/;"	l
ffffffff80101213	obj/kern/kernel.asm	/^ffffffff80101213:	48 c7 c7 ee 6d 10 80 	mov    $0xffffffff80106dee,%rdi$/;"	l
ffffffff8010121a	obj/kern/kernel.asm	/^ffffffff8010121a:	e8 04 f4 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010121f	obj/kern/kernel.asm	/^ffffffff8010121f <growproc>:$/;"	l
ffffffff8010121f	obj/kern/kernel.asm	/^ffffffff8010121f:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101223	obj/kern/kernel.asm	/^ffffffff80101223:	55                   	push   %rbp$/;"	l
ffffffff80101224	obj/kern/kernel.asm	/^ffffffff80101224:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101227	obj/kern/kernel.asm	/^ffffffff80101227:	41 54                	push   %r12$/;"	l
ffffffff80101229	obj/kern/kernel.asm	/^ffffffff80101229:	53                   	push   %rbx$/;"	l
ffffffff8010122a	obj/kern/kernel.asm	/^ffffffff8010122a:	41 89 fc             	mov    %edi,%r12d$/;"	l
ffffffff8010122d	obj/kern/kernel.asm	/^ffffffff8010122d:	e8 be fe ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80101232	obj/kern/kernel.asm	/^ffffffff80101232:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80101235	obj/kern/kernel.asm	/^ffffffff80101235:	48 8b 30             	mov    (%rax),%rsi$/;"	l
ffffffff80101238	obj/kern/kernel.asm	/^ffffffff80101238:	45 85 e4             	test   %r12d,%r12d$/;"	l
ffffffff8010123b	obj/kern/kernel.asm	/^ffffffff8010123b:	7f 1b                	jg     ffffffff80101258 <growproc+0x39>$/;"	l
ffffffff8010123d	obj/kern/kernel.asm	/^ffffffff8010123d:	89 f0                	mov    %esi,%eax$/;"	l
ffffffff8010123f	obj/kern/kernel.asm	/^ffffffff8010123f:	78 31                	js     ffffffff80101272 <growproc+0x53>$/;"	l
ffffffff80101241	obj/kern/kernel.asm	/^ffffffff80101241:	89 c0                	mov    %eax,%eax$/;"	l
ffffffff80101243	obj/kern/kernel.asm	/^ffffffff80101243:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffffffff80101246	obj/kern/kernel.asm	/^ffffffff80101246:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80101249	obj/kern/kernel.asm	/^ffffffff80101249:	e8 3a 0a 00 00       	callq  ffffffff80101c88 <switchuvm>$/;"	l
ffffffff8010124e	obj/kern/kernel.asm	/^ffffffff8010124e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80101253	obj/kern/kernel.asm	/^ffffffff80101253:	5b                   	pop    %rbx$/;"	l
ffffffff80101254	obj/kern/kernel.asm	/^ffffffff80101254:	41 5c                	pop    %r12$/;"	l
ffffffff80101256	obj/kern/kernel.asm	/^ffffffff80101256:	5d                   	pop    %rbp$/;"	l
ffffffff80101257	obj/kern/kernel.asm	/^ffffffff80101257:	c3                   	retq   $/;"	l
ffffffff80101258	obj/kern/kernel.asm	/^ffffffff80101258:	41 8d 14 34          	lea    (%r12,%rsi,1),%edx$/;"	l
ffffffff8010125c	obj/kern/kernel.asm	/^ffffffff8010125c:	89 f6                	mov    %esi,%esi$/;"	l
ffffffff8010125e	obj/kern/kernel.asm	/^ffffffff8010125e:	48 8b 78 08          	mov    0x8(%rax),%rdi$/;"	l
ffffffff80101262	obj/kern/kernel.asm	/^ffffffff80101262:	e8 70 0d 00 00       	callq  ffffffff80101fd7 <allocuvm>$/;"	l
ffffffff80101267	obj/kern/kernel.asm	/^ffffffff80101267:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80101269	obj/kern/kernel.asm	/^ffffffff80101269:	75 d6                	jne    ffffffff80101241 <growproc+0x22>$/;"	l
ffffffff8010126b	obj/kern/kernel.asm	/^ffffffff8010126b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80101270	obj/kern/kernel.asm	/^ffffffff80101270:	eb e1                	jmp    ffffffff80101253 <growproc+0x34>$/;"	l
ffffffff80101272	obj/kern/kernel.asm	/^ffffffff80101272:	41 8d 14 34          	lea    (%r12,%rsi,1),%edx$/;"	l
ffffffff80101276	obj/kern/kernel.asm	/^ffffffff80101276:	89 f6                	mov    %esi,%esi$/;"	l
ffffffff80101278	obj/kern/kernel.asm	/^ffffffff80101278:	48 8b 7b 08          	mov    0x8(%rbx),%rdi$/;"	l
ffffffff8010127c	obj/kern/kernel.asm	/^ffffffff8010127c:	e8 a8 0c 00 00       	callq  ffffffff80101f29 <deallocuvm>$/;"	l
ffffffff80101281	obj/kern/kernel.asm	/^ffffffff80101281:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80101283	obj/kern/kernel.asm	/^ffffffff80101283:	75 bc                	jne    ffffffff80101241 <growproc+0x22>$/;"	l
ffffffff80101285	obj/kern/kernel.asm	/^ffffffff80101285:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff8010128a	obj/kern/kernel.asm	/^ffffffff8010128a:	eb c7                	jmp    ffffffff80101253 <growproc+0x34>$/;"	l
ffffffff8010128c	obj/kern/kernel.asm	/^ffffffff8010128c <fork>:$/;"	l
ffffffff8010128c	obj/kern/kernel.asm	/^ffffffff8010128c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101290	obj/kern/kernel.asm	/^ffffffff80101290:	55                   	push   %rbp$/;"	l
ffffffff80101291	obj/kern/kernel.asm	/^ffffffff80101291:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101294	obj/kern/kernel.asm	/^ffffffff80101294:	41 55                	push   %r13$/;"	l
ffffffff80101296	obj/kern/kernel.asm	/^ffffffff80101296:	41 54                	push   %r12$/;"	l
ffffffff80101298	obj/kern/kernel.asm	/^ffffffff80101298:	53                   	push   %rbx$/;"	l
ffffffff80101299	obj/kern/kernel.asm	/^ffffffff80101299:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010129d	obj/kern/kernel.asm	/^ffffffff8010129d:	e8 4e fe ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801012a2	obj/kern/kernel.asm	/^ffffffff801012a2:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801012a5	obj/kern/kernel.asm	/^ffffffff801012a5:	e8 f3 fc ff ff       	callq  ffffffff80100f9d <allocproc>$/;"	l
ffffffff801012aa	obj/kern/kernel.asm	/^ffffffff801012aa:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801012ad	obj/kern/kernel.asm	/^ffffffff801012ad:	0f 84 e9 00 00 00    	je     ffffffff8010139c <fork+0x110>$/;"	l
ffffffff801012b3	obj/kern/kernel.asm	/^ffffffff801012b3:	49 89 c5             	mov    %rax,%r13$/;"	l
ffffffff801012b6	obj/kern/kernel.asm	/^ffffffff801012b6:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi$/;"	l
ffffffff801012bb	obj/kern/kernel.asm	/^ffffffff801012bb:	49 8b 34 24          	mov    (%r12),%rsi$/;"	l
ffffffff801012bf	obj/kern/kernel.asm	/^ffffffff801012bf:	e8 c0 0f 00 00       	callq  ffffffff80102284 <copyuvm>$/;"	l
ffffffff801012c4	obj/kern/kernel.asm	/^ffffffff801012c4:	49 89 45 08          	mov    %rax,0x8(%r13)$/;"	l
ffffffff801012c8	obj/kern/kernel.asm	/^ffffffff801012c8:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801012cb	obj/kern/kernel.asm	/^ffffffff801012cb:	74 2f                	je     ffffffff801012fc <fork+0x70>$/;"	l
ffffffff801012cd	obj/kern/kernel.asm	/^ffffffff801012cd:	49 8b 04 24          	mov    (%r12),%rax$/;"	l
ffffffff801012d1	obj/kern/kernel.asm	/^ffffffff801012d1:	49 89 45 00          	mov    %rax,0x0(%r13)$/;"	l
ffffffff801012d5	obj/kern/kernel.asm	/^ffffffff801012d5:	4d 89 65 20          	mov    %r12,0x20(%r13)$/;"	l
ffffffff801012d9	obj/kern/kernel.asm	/^ffffffff801012d9:	49 8b 74 24 28       	mov    0x28(%r12),%rsi$/;"	l
ffffffff801012de	obj/kern/kernel.asm	/^ffffffff801012de:	b9 16 00 00 00       	mov    $0x16,%ecx$/;"	l
ffffffff801012e3	obj/kern/kernel.asm	/^ffffffff801012e3:	49 8b 7d 28          	mov    0x28(%r13),%rdi$/;"	l
ffffffff801012e7	obj/kern/kernel.asm	/^ffffffff801012e7:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)$/;"	l
ffffffff801012ea	obj/kern/kernel.asm	/^ffffffff801012ea:	49 8b 45 28          	mov    0x28(%r13),%rax$/;"	l
ffffffff801012ee	obj/kern/kernel.asm	/^ffffffff801012ee:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffffffff801012f5	obj/kern/kernel.asm	/^ffffffff801012f5:	bb 48 00 00 00       	mov    $0x48,%ebx$/;"	l
ffffffff801012fa	obj/kern/kernel.asm	/^ffffffff801012fa:	eb 37                	jmp    ffffffff80101333 <fork+0xa7>$/;"	l
ffffffff801012fc	obj/kern/kernel.asm	/^ffffffff801012fc:	49 8b 7d 10          	mov    0x10(%r13),%rdi$/;"	l
ffffffff80101300	obj/kern/kernel.asm	/^ffffffff80101300:	e8 47 ee ff ff       	callq  ffffffff8010014c <kfree>$/;"	l
ffffffff80101305	obj/kern/kernel.asm	/^ffffffff80101305:	49 c7 45 10 00 00 00 	movq   $0x0,0x10(%r13)$/;"	l
ffffffff8010130c	obj/kern/kernel.asm	/^ffffffff8010130c:	00 $/;"	l
ffffffff8010130d	obj/kern/kernel.asm	/^ffffffff8010130d:	41 c7 45 18 00 00 00 	movl   $0x0,0x18(%r13)$/;"	l
ffffffff80101314	obj/kern/kernel.asm	/^ffffffff80101314:	00 $/;"	l
ffffffff80101315	obj/kern/kernel.asm	/^ffffffff80101315:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
ffffffff8010131a	obj/kern/kernel.asm	/^ffffffff8010131a:	eb 73                	jmp    ffffffff8010138f <fork+0x103>$/;"	l
ffffffff8010131c	obj/kern/kernel.asm	/^ffffffff8010131c:	e8 c4 4f 00 00       	callq  ffffffff801062e5 <filedup>$/;"	l
ffffffff80101321	obj/kern/kernel.asm	/^ffffffff80101321:	49 89 44 1d 00       	mov    %rax,0x0(%r13,%rbx,1)$/;"	l
ffffffff80101326	obj/kern/kernel.asm	/^ffffffff80101326:	48 83 c3 08          	add    $0x8,%rbx$/;"	l
ffffffff8010132a	obj/kern/kernel.asm	/^ffffffff8010132a:	48 81 fb c8 00 00 00 	cmp    $0xc8,%rbx$/;"	l
ffffffff80101331	obj/kern/kernel.asm	/^ffffffff80101331:	74 0b                	je     ffffffff8010133e <fork+0xb2>$/;"	l
ffffffff80101333	obj/kern/kernel.asm	/^ffffffff80101333:	49 8b 3c 1c          	mov    (%r12,%rbx,1),%rdi$/;"	l
ffffffff80101337	obj/kern/kernel.asm	/^ffffffff80101337:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff8010133a	obj/kern/kernel.asm	/^ffffffff8010133a:	75 e0                	jne    ffffffff8010131c <fork+0x90>$/;"	l
ffffffff8010133c	obj/kern/kernel.asm	/^ffffffff8010133c:	eb e8                	jmp    ffffffff80101326 <fork+0x9a>$/;"	l
ffffffff8010133e	obj/kern/kernel.asm	/^ffffffff8010133e:	49 8b bc 24 c8 00 00 	mov    0xc8(%r12),%rdi$/;"	l
ffffffff80101345	obj/kern/kernel.asm	/^ffffffff80101345:	00 $/;"	l
ffffffff80101346	obj/kern/kernel.asm	/^ffffffff80101346:	e8 f3 42 00 00       	callq  ffffffff8010563e <idup>$/;"	l
ffffffff8010134b	obj/kern/kernel.asm	/^ffffffff8010134b:	49 89 85 c8 00 00 00 	mov    %rax,0xc8(%r13)$/;"	l
ffffffff80101352	obj/kern/kernel.asm	/^ffffffff80101352:	49 8d b4 24 d0 00 00 	lea    0xd0(%r12),%rsi$/;"	l
ffffffff80101359	obj/kern/kernel.asm	/^ffffffff80101359:	00 $/;"	l
ffffffff8010135a	obj/kern/kernel.asm	/^ffffffff8010135a:	49 8d bd d0 00 00 00 	lea    0xd0(%r13),%rdi$/;"	l
ffffffff80101361	obj/kern/kernel.asm	/^ffffffff80101361:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffffffff80101366	obj/kern/kernel.asm	/^ffffffff80101366:	e8 fc 56 00 00       	callq  ffffffff80106a67 <safestrcpy>$/;"	l
ffffffff8010136b	obj/kern/kernel.asm	/^ffffffff8010136b:	41 8b 5d 1c          	mov    0x1c(%r13),%ebx$/;"	l
ffffffff8010136f	obj/kern/kernel.asm	/^ffffffff8010136f:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101376	obj/kern/kernel.asm	/^ffffffff80101376:	e8 24 f1 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff8010137b	obj/kern/kernel.asm	/^ffffffff8010137b:	41 c7 45 18 03 00 00 	movl   $0x3,0x18(%r13)$/;"	l
ffffffff80101382	obj/kern/kernel.asm	/^ffffffff80101382:	00 $/;"	l
ffffffff80101383	obj/kern/kernel.asm	/^ffffffff80101383:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff8010138a	obj/kern/kernel.asm	/^ffffffff8010138a:	e8 5e f1 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010138f	obj/kern/kernel.asm	/^ffffffff8010138f:	89 d8                	mov    %ebx,%eax$/;"	l
ffffffff80101391	obj/kern/kernel.asm	/^ffffffff80101391:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80101395	obj/kern/kernel.asm	/^ffffffff80101395:	5b                   	pop    %rbx$/;"	l
ffffffff80101396	obj/kern/kernel.asm	/^ffffffff80101396:	41 5c                	pop    %r12$/;"	l
ffffffff80101398	obj/kern/kernel.asm	/^ffffffff80101398:	41 5d                	pop    %r13$/;"	l
ffffffff8010139a	obj/kern/kernel.asm	/^ffffffff8010139a:	5d                   	pop    %rbp$/;"	l
ffffffff8010139b	obj/kern/kernel.asm	/^ffffffff8010139b:	c3                   	retq   $/;"	l
ffffffff8010139c	obj/kern/kernel.asm	/^ffffffff8010139c:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
ffffffff801013a1	obj/kern/kernel.asm	/^ffffffff801013a1:	eb ec                	jmp    ffffffff8010138f <fork+0x103>$/;"	l
ffffffff801013a3	obj/kern/kernel.asm	/^ffffffff801013a3 <scheduler>:$/;"	l
ffffffff801013a3	obj/kern/kernel.asm	/^ffffffff801013a3:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801013a7	obj/kern/kernel.asm	/^ffffffff801013a7:	55                   	push   %rbp$/;"	l
ffffffff801013a8	obj/kern/kernel.asm	/^ffffffff801013a8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801013ab	obj/kern/kernel.asm	/^ffffffff801013ab:	41 55                	push   %r13$/;"	l
ffffffff801013ad	obj/kern/kernel.asm	/^ffffffff801013ad:	41 54                	push   %r12$/;"	l
ffffffff801013af	obj/kern/kernel.asm	/^ffffffff801013af:	53                   	push   %rbx$/;"	l
ffffffff801013b0	obj/kern/kernel.asm	/^ffffffff801013b0:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801013b4	obj/kern/kernel.asm	/^ffffffff801013b4:	e8 ed fc ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff801013b9	obj/kern/kernel.asm	/^ffffffff801013b9:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801013bc	obj/kern/kernel.asm	/^ffffffff801013bc:	48 c7 80 c0 00 00 00 	movq   $0x0,0xc0(%rax)$/;"	l
ffffffff801013c3	obj/kern/kernel.asm	/^ffffffff801013c3:	00 00 00 00 $/;"	l
ffffffff801013c7	obj/kern/kernel.asm	/^ffffffff801013c7:	4c 8d 68 08          	lea    0x8(%rax),%r13$/;"	l
ffffffff801013cb	obj/kern/kernel.asm	/^ffffffff801013cb:	eb 58                	jmp    ffffffff80101425 <scheduler+0x82>$/;"	l
ffffffff801013cd	obj/kern/kernel.asm	/^ffffffff801013cd:	48 81 c3 e0 00 00 00 	add    $0xe0,%rbx$/;"	l
ffffffff801013d4	obj/kern/kernel.asm	/^ffffffff801013d4:	48 81 fb 78 dc 10 80 	cmp    $0xffffffff8010dc78,%rbx$/;"	l
ffffffff801013db	obj/kern/kernel.asm	/^ffffffff801013db:	74 3c                	je     ffffffff80101419 <scheduler+0x76>$/;"	l
ffffffff801013dd	obj/kern/kernel.asm	/^ffffffff801013dd:	83 7b 18 03          	cmpl   $0x3,0x18(%rbx)$/;"	l
ffffffff801013e1	obj/kern/kernel.asm	/^ffffffff801013e1:	75 ea                	jne    ffffffff801013cd <scheduler+0x2a>$/;"	l
ffffffff801013e3	obj/kern/kernel.asm	/^ffffffff801013e3:	49 89 9c 24 c0 00 00 	mov    %rbx,0xc0(%r12)$/;"	l
ffffffff801013ea	obj/kern/kernel.asm	/^ffffffff801013ea:	00 $/;"	l
ffffffff801013eb	obj/kern/kernel.asm	/^ffffffff801013eb:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801013ee	obj/kern/kernel.asm	/^ffffffff801013ee:	e8 95 08 00 00       	callq  ffffffff80101c88 <switchuvm>$/;"	l
ffffffff801013f3	obj/kern/kernel.asm	/^ffffffff801013f3:	c7 43 18 04 00 00 00 	movl   $0x4,0x18(%rbx)$/;"	l
ffffffff801013fa	obj/kern/kernel.asm	/^ffffffff801013fa:	48 8b 73 30          	mov    0x30(%rbx),%rsi$/;"	l
ffffffff801013fe	obj/kern/kernel.asm	/^ffffffff801013fe:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80101401	obj/kern/kernel.asm	/^ffffffff80101401:	e8 8d 10 00 00       	callq  ffffffff80102493 <swtch>$/;"	l
ffffffff80101406	obj/kern/kernel.asm	/^ffffffff80101406:	e8 69 08 00 00       	callq  ffffffff80101c74 <switchkvm>$/;"	l
ffffffff8010140b	obj/kern/kernel.asm	/^ffffffff8010140b:	49 c7 84 24 c0 00 00 	movq   $0x0,0xc0(%r12)$/;"	l
ffffffff80101412	obj/kern/kernel.asm	/^ffffffff80101412:	00 00 00 00 00 $/;"	l
ffffffff80101417	obj/kern/kernel.asm	/^ffffffff80101417:	eb b4                	jmp    ffffffff801013cd <scheduler+0x2a>$/;"	l
ffffffff80101419	obj/kern/kernel.asm	/^ffffffff80101419:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101420	obj/kern/kernel.asm	/^ffffffff80101420:	e8 c8 f0 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80101425	obj/kern/kernel.asm	/^ffffffff80101425:	fb                   	sti    $/;"	l
ffffffff80101426	obj/kern/kernel.asm	/^ffffffff80101426:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff8010142d	obj/kern/kernel.asm	/^ffffffff8010142d:	e8 6d f0 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80101432	obj/kern/kernel.asm	/^ffffffff80101432:	48 c7 c3 78 a4 10 80 	mov    $0xffffffff8010a478,%rbx$/;"	l
ffffffff80101439	obj/kern/kernel.asm	/^ffffffff80101439:	eb a2                	jmp    ffffffff801013dd <scheduler+0x3a>$/;"	l
ffffffff8010143b	obj/kern/kernel.asm	/^ffffffff8010143b <sched>:$/;"	l
ffffffff8010143b	obj/kern/kernel.asm	/^ffffffff8010143b:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010143f	obj/kern/kernel.asm	/^ffffffff8010143f:	55                   	push   %rbp$/;"	l
ffffffff80101440	obj/kern/kernel.asm	/^ffffffff80101440:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101443	obj/kern/kernel.asm	/^ffffffff80101443:	41 54                	push   %r12$/;"	l
ffffffff80101445	obj/kern/kernel.asm	/^ffffffff80101445:	53                   	push   %rbx$/;"	l
ffffffff80101446	obj/kern/kernel.asm	/^ffffffff80101446:	e8 a5 fc ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff8010144b	obj/kern/kernel.asm	/^ffffffff8010144b:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff8010144e	obj/kern/kernel.asm	/^ffffffff8010144e:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101455	obj/kern/kernel.asm	/^ffffffff80101455:	e8 04 f0 ff ff       	callq  ffffffff8010045e <holding>$/;"	l
ffffffff8010145a	obj/kern/kernel.asm	/^ffffffff8010145a:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010145c	obj/kern/kernel.asm	/^ffffffff8010145c:	74 4a                	je     ffffffff801014a8 <sched+0x6d>$/;"	l
ffffffff8010145e	obj/kern/kernel.asm	/^ffffffff8010145e:	e8 43 fc ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101463	obj/kern/kernel.asm	/^ffffffff80101463:	83 b8 b4 00 00 00 01 	cmpl   $0x1,0xb4(%rax)$/;"	l
ffffffff8010146a	obj/kern/kernel.asm	/^ffffffff8010146a:	75 48                	jne    ffffffff801014b4 <sched+0x79>$/;"	l
ffffffff8010146c	obj/kern/kernel.asm	/^ffffffff8010146c:	83 7b 18 04          	cmpl   $0x4,0x18(%rbx)$/;"	l
ffffffff80101470	obj/kern/kernel.asm	/^ffffffff80101470:	74 4e                	je     ffffffff801014c0 <sched+0x85>$/;"	l
ffffffff80101472	obj/kern/kernel.asm	/^ffffffff80101472:	9c                   	pushfq $/;"	l
ffffffff80101473	obj/kern/kernel.asm	/^ffffffff80101473:	58                   	pop    %rax$/;"	l
ffffffff80101474	obj/kern/kernel.asm	/^ffffffff80101474:	f6 c4 02             	test   $0x2,%ah$/;"	l
ffffffff80101477	obj/kern/kernel.asm	/^ffffffff80101477:	75 53                	jne    ffffffff801014cc <sched+0x91>$/;"	l
ffffffff80101479	obj/kern/kernel.asm	/^ffffffff80101479:	e8 28 fc ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff8010147e	obj/kern/kernel.asm	/^ffffffff8010147e:	44 8b a0 b8 00 00 00 	mov    0xb8(%rax),%r12d$/;"	l
ffffffff80101485	obj/kern/kernel.asm	/^ffffffff80101485:	e8 1c fc ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff8010148a	obj/kern/kernel.asm	/^ffffffff8010148a:	48 8b 70 08          	mov    0x8(%rax),%rsi$/;"	l
ffffffff8010148e	obj/kern/kernel.asm	/^ffffffff8010148e:	48 8d 7b 30          	lea    0x30(%rbx),%rdi$/;"	l
ffffffff80101492	obj/kern/kernel.asm	/^ffffffff80101492:	e8 fc 0f 00 00       	callq  ffffffff80102493 <swtch>$/;"	l
ffffffff80101497	obj/kern/kernel.asm	/^ffffffff80101497:	e8 0a fc ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff8010149c	obj/kern/kernel.asm	/^ffffffff8010149c:	44 89 a0 b8 00 00 00 	mov    %r12d,0xb8(%rax)$/;"	l
ffffffff801014a3	obj/kern/kernel.asm	/^ffffffff801014a3:	5b                   	pop    %rbx$/;"	l
ffffffff801014a4	obj/kern/kernel.asm	/^ffffffff801014a4:	41 5c                	pop    %r12$/;"	l
ffffffff801014a6	obj/kern/kernel.asm	/^ffffffff801014a6:	5d                   	pop    %rbp$/;"	l
ffffffff801014a7	obj/kern/kernel.asm	/^ffffffff801014a7:	c3                   	retq   $/;"	l
ffffffff801014a8	obj/kern/kernel.asm	/^ffffffff801014a8:	48 c7 c7 12 6e 10 80 	mov    $0xffffffff80106e12,%rdi$/;"	l
ffffffff801014af	obj/kern/kernel.asm	/^ffffffff801014af:	e8 6f f1 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801014b4	obj/kern/kernel.asm	/^ffffffff801014b4:	48 c7 c7 24 6e 10 80 	mov    $0xffffffff80106e24,%rdi$/;"	l
ffffffff801014bb	obj/kern/kernel.asm	/^ffffffff801014bb:	e8 63 f1 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801014c0	obj/kern/kernel.asm	/^ffffffff801014c0:	48 c7 c7 30 6e 10 80 	mov    $0xffffffff80106e30,%rdi$/;"	l
ffffffff801014c7	obj/kern/kernel.asm	/^ffffffff801014c7:	e8 57 f1 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801014cc	obj/kern/kernel.asm	/^ffffffff801014cc:	48 c7 c7 3e 6e 10 80 	mov    $0xffffffff80106e3e,%rdi$/;"	l
ffffffff801014d3	obj/kern/kernel.asm	/^ffffffff801014d3:	e8 4b f1 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801014d8	obj/kern/kernel.asm	/^ffffffff801014d8 <exit>:$/;"	l
ffffffff801014d8	obj/kern/kernel.asm	/^ffffffff801014d8:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801014dc	obj/kern/kernel.asm	/^ffffffff801014dc:	55                   	push   %rbp$/;"	l
ffffffff801014dd	obj/kern/kernel.asm	/^ffffffff801014dd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801014e0	obj/kern/kernel.asm	/^ffffffff801014e0:	41 55                	push   %r13$/;"	l
ffffffff801014e2	obj/kern/kernel.asm	/^ffffffff801014e2:	41 54                	push   %r12$/;"	l
ffffffff801014e4	obj/kern/kernel.asm	/^ffffffff801014e4:	53                   	push   %rbx$/;"	l
ffffffff801014e5	obj/kern/kernel.asm	/^ffffffff801014e5:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801014e9	obj/kern/kernel.asm	/^ffffffff801014e9:	e8 02 fc ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801014ee	obj/kern/kernel.asm	/^ffffffff801014ee:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801014f1	obj/kern/kernel.asm	/^ffffffff801014f1:	48 8d 58 48          	lea    0x48(%rax),%rbx$/;"	l
ffffffff801014f5	obj/kern/kernel.asm	/^ffffffff801014f5:	4c 8d a8 c8 00 00 00 	lea    0xc8(%rax),%r13$/;"	l
ffffffff801014fc	obj/kern/kernel.asm	/^ffffffff801014fc:	48 39 05 85 76 00 00 	cmp    %rax,0x7685(%rip)        # ffffffff80108b88 <initproc>$/;"	l
ffffffff80101503	obj/kern/kernel.asm	/^ffffffff80101503:	75 21                	jne    ffffffff80101526 <exit+0x4e>$/;"	l
ffffffff80101505	obj/kern/kernel.asm	/^ffffffff80101505:	48 c7 c7 52 6e 10 80 	mov    $0xffffffff80106e52,%rdi$/;"	l
ffffffff8010150c	obj/kern/kernel.asm	/^ffffffff8010150c:	e8 12 f1 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101511	obj/kern/kernel.asm	/^ffffffff80101511:	e8 1a 4e 00 00       	callq  ffffffff80106330 <fileclose>$/;"	l
ffffffff80101516	obj/kern/kernel.asm	/^ffffffff80101516:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)$/;"	l
ffffffff8010151d	obj/kern/kernel.asm	/^ffffffff8010151d:	48 83 c3 08          	add    $0x8,%rbx$/;"	l
ffffffff80101521	obj/kern/kernel.asm	/^ffffffff80101521:	4c 39 eb             	cmp    %r13,%rbx$/;"	l
ffffffff80101524	obj/kern/kernel.asm	/^ffffffff80101524:	74 0a                	je     ffffffff80101530 <exit+0x58>$/;"	l
ffffffff80101526	obj/kern/kernel.asm	/^ffffffff80101526:	48 8b 3b             	mov    (%rbx),%rdi$/;"	l
ffffffff80101529	obj/kern/kernel.asm	/^ffffffff80101529:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff8010152c	obj/kern/kernel.asm	/^ffffffff8010152c:	75 e3                	jne    ffffffff80101511 <exit+0x39>$/;"	l
ffffffff8010152e	obj/kern/kernel.asm	/^ffffffff8010152e:	eb ed                	jmp    ffffffff8010151d <exit+0x45>$/;"	l
ffffffff80101530	obj/kern/kernel.asm	/^ffffffff80101530:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80101535	obj/kern/kernel.asm	/^ffffffff80101535:	e8 bf 4a 00 00       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff8010153a	obj/kern/kernel.asm	/^ffffffff8010153a:	49 8b bc 24 c8 00 00 	mov    0xc8(%r12),%rdi$/;"	l
ffffffff80101541	obj/kern/kernel.asm	/^ffffffff80101541:	00 $/;"	l
ffffffff80101542	obj/kern/kernel.asm	/^ffffffff80101542:	e8 2a 42 00 00       	callq  ffffffff80105771 <iput>$/;"	l
ffffffff80101547	obj/kern/kernel.asm	/^ffffffff80101547:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010154c	obj/kern/kernel.asm	/^ffffffff8010154c:	e8 15 4b 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80101551	obj/kern/kernel.asm	/^ffffffff80101551:	49 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%r12)$/;"	l
ffffffff80101558	obj/kern/kernel.asm	/^ffffffff80101558:	00 00 00 00 00 $/;"	l
ffffffff8010155d	obj/kern/kernel.asm	/^ffffffff8010155d:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101564	obj/kern/kernel.asm	/^ffffffff80101564:	e8 36 ef ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80101569	obj/kern/kernel.asm	/^ffffffff80101569:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi$/;"	l
ffffffff8010156e	obj/kern/kernel.asm	/^ffffffff8010156e:	e8 fd f9 ff ff       	callq  ffffffff80100f70 <wakeup1>$/;"	l
ffffffff80101573	obj/kern/kernel.asm	/^ffffffff80101573:	48 c7 c3 78 a4 10 80 	mov    $0xffffffff8010a478,%rbx$/;"	l
ffffffff8010157a	obj/kern/kernel.asm	/^ffffffff8010157a:	eb 10                	jmp    ffffffff8010158c <exit+0xb4>$/;"	l
ffffffff8010157c	obj/kern/kernel.asm	/^ffffffff8010157c:	48 81 c3 e0 00 00 00 	add    $0xe0,%rbx$/;"	l
ffffffff80101583	obj/kern/kernel.asm	/^ffffffff80101583:	48 81 fb 78 dc 10 80 	cmp    $0xffffffff8010dc78,%rbx$/;"	l
ffffffff8010158a	obj/kern/kernel.asm	/^ffffffff8010158a:	74 1e                	je     ffffffff801015aa <exit+0xd2>$/;"	l
ffffffff8010158c	obj/kern/kernel.asm	/^ffffffff8010158c:	4c 39 63 20          	cmp    %r12,0x20(%rbx)$/;"	l
ffffffff80101590	obj/kern/kernel.asm	/^ffffffff80101590:	75 ea                	jne    ffffffff8010157c <exit+0xa4>$/;"	l
ffffffff80101592	obj/kern/kernel.asm	/^ffffffff80101592:	48 8b 3d ef 75 00 00 	mov    0x75ef(%rip),%rdi        # ffffffff80108b88 <initproc>$/;"	l
ffffffff80101599	obj/kern/kernel.asm	/^ffffffff80101599:	48 89 7b 20          	mov    %rdi,0x20(%rbx)$/;"	l
ffffffff8010159d	obj/kern/kernel.asm	/^ffffffff8010159d:	83 7b 18 05          	cmpl   $0x5,0x18(%rbx)$/;"	l
ffffffff801015a1	obj/kern/kernel.asm	/^ffffffff801015a1:	75 d9                	jne    ffffffff8010157c <exit+0xa4>$/;"	l
ffffffff801015a3	obj/kern/kernel.asm	/^ffffffff801015a3:	e8 c8 f9 ff ff       	callq  ffffffff80100f70 <wakeup1>$/;"	l
ffffffff801015a8	obj/kern/kernel.asm	/^ffffffff801015a8:	eb d2                	jmp    ffffffff8010157c <exit+0xa4>$/;"	l
ffffffff801015aa	obj/kern/kernel.asm	/^ffffffff801015aa:	41 c7 44 24 18 05 00 	movl   $0x5,0x18(%r12)$/;"	l
ffffffff801015b1	obj/kern/kernel.asm	/^ffffffff801015b1:	00 00 $/;"	l
ffffffff801015b3	obj/kern/kernel.asm	/^ffffffff801015b3:	e8 83 fe ff ff       	callq  ffffffff8010143b <sched>$/;"	l
ffffffff801015b8	obj/kern/kernel.asm	/^ffffffff801015b8:	48 c7 c7 5f 6e 10 80 	mov    $0xffffffff80106e5f,%rdi$/;"	l
ffffffff801015bf	obj/kern/kernel.asm	/^ffffffff801015bf:	e8 5f f0 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801015c4	obj/kern/kernel.asm	/^ffffffff801015c4 <yield>:$/;"	l
ffffffff801015c4	obj/kern/kernel.asm	/^ffffffff801015c4:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801015c8	obj/kern/kernel.asm	/^ffffffff801015c8:	55                   	push   %rbp$/;"	l
ffffffff801015c9	obj/kern/kernel.asm	/^ffffffff801015c9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801015cc	obj/kern/kernel.asm	/^ffffffff801015cc:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff801015d3	obj/kern/kernel.asm	/^ffffffff801015d3:	e8 c7 ee ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801015d8	obj/kern/kernel.asm	/^ffffffff801015d8:	e8 13 fb ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801015dd	obj/kern/kernel.asm	/^ffffffff801015dd:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffffffff801015e4	obj/kern/kernel.asm	/^ffffffff801015e4:	e8 52 fe ff ff       	callq  ffffffff8010143b <sched>$/;"	l
ffffffff801015e9	obj/kern/kernel.asm	/^ffffffff801015e9:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff801015f0	obj/kern/kernel.asm	/^ffffffff801015f0:	e8 f8 ee ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801015f5	obj/kern/kernel.asm	/^ffffffff801015f5:	5d                   	pop    %rbp$/;"	l
ffffffff801015f6	obj/kern/kernel.asm	/^ffffffff801015f6:	c3                   	retq   $/;"	l
ffffffff801015f7	obj/kern/kernel.asm	/^ffffffff801015f7 <wakeup>:$/;"	l
ffffffff801015f7	obj/kern/kernel.asm	/^ffffffff801015f7:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801015fb	obj/kern/kernel.asm	/^ffffffff801015fb:	55                   	push   %rbp$/;"	l
ffffffff801015fc	obj/kern/kernel.asm	/^ffffffff801015fc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801015ff	obj/kern/kernel.asm	/^ffffffff801015ff:	53                   	push   %rbx$/;"	l
ffffffff80101600	obj/kern/kernel.asm	/^ffffffff80101600:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80101604	obj/kern/kernel.asm	/^ffffffff80101604:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80101607	obj/kern/kernel.asm	/^ffffffff80101607:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff8010160e	obj/kern/kernel.asm	/^ffffffff8010160e:	e8 8c ee ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80101613	obj/kern/kernel.asm	/^ffffffff80101613:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80101616	obj/kern/kernel.asm	/^ffffffff80101616:	e8 55 f9 ff ff       	callq  ffffffff80100f70 <wakeup1>$/;"	l
ffffffff8010161b	obj/kern/kernel.asm	/^ffffffff8010161b:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101622	obj/kern/kernel.asm	/^ffffffff80101622:	e8 c6 ee ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80101627	obj/kern/kernel.asm	/^ffffffff80101627:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff8010162b	obj/kern/kernel.asm	/^ffffffff8010162b:	5b                   	pop    %rbx$/;"	l
ffffffff8010162c	obj/kern/kernel.asm	/^ffffffff8010162c:	5d                   	pop    %rbp$/;"	l
ffffffff8010162d	obj/kern/kernel.asm	/^ffffffff8010162d:	c3                   	retq   $/;"	l
ffffffff8010162e	obj/kern/kernel.asm	/^ffffffff8010162e <kill>:$/;"	l
ffffffff8010162e	obj/kern/kernel.asm	/^ffffffff8010162e:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101632	obj/kern/kernel.asm	/^ffffffff80101632:	55                   	push   %rbp$/;"	l
ffffffff80101633	obj/kern/kernel.asm	/^ffffffff80101633:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101636	obj/kern/kernel.asm	/^ffffffff80101636:	53                   	push   %rbx$/;"	l
ffffffff80101637	obj/kern/kernel.asm	/^ffffffff80101637:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010163b	obj/kern/kernel.asm	/^ffffffff8010163b:	89 fb                	mov    %edi,%ebx$/;"	l
ffffffff8010163d	obj/kern/kernel.asm	/^ffffffff8010163d:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101644	obj/kern/kernel.asm	/^ffffffff80101644:	e8 56 ee ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80101649	obj/kern/kernel.asm	/^ffffffff80101649:	48 c7 c0 78 a4 10 80 	mov    $0xffffffff8010a478,%rax$/;"	l
ffffffff80101650	obj/kern/kernel.asm	/^ffffffff80101650:	39 58 1c             	cmp    %ebx,0x1c(%rax)$/;"	l
ffffffff80101653	obj/kern/kernel.asm	/^ffffffff80101653:	74 21                	je     ffffffff80101676 <kill+0x48>$/;"	l
ffffffff80101655	obj/kern/kernel.asm	/^ffffffff80101655:	48 05 e0 00 00 00    	add    $0xe0,%rax$/;"	l
ffffffff8010165b	obj/kern/kernel.asm	/^ffffffff8010165b:	48 3d 78 dc 10 80    	cmp    $0xffffffff8010dc78,%rax$/;"	l
ffffffff80101661	obj/kern/kernel.asm	/^ffffffff80101661:	75 ed                	jne    ffffffff80101650 <kill+0x22>$/;"	l
ffffffff80101663	obj/kern/kernel.asm	/^ffffffff80101663:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff8010166a	obj/kern/kernel.asm	/^ffffffff8010166a:	e8 7e ee ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010166f	obj/kern/kernel.asm	/^ffffffff8010166f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80101674	obj/kern/kernel.asm	/^ffffffff80101674:	eb 1e                	jmp    ffffffff80101694 <kill+0x66>$/;"	l
ffffffff80101676	obj/kern/kernel.asm	/^ffffffff80101676:	c7 40 40 01 00 00 00 	movl   $0x1,0x40(%rax)$/;"	l
ffffffff8010167d	obj/kern/kernel.asm	/^ffffffff8010167d:	83 78 18 02          	cmpl   $0x2,0x18(%rax)$/;"	l
ffffffff80101681	obj/kern/kernel.asm	/^ffffffff80101681:	74 18                	je     ffffffff8010169b <kill+0x6d>$/;"	l
ffffffff80101683	obj/kern/kernel.asm	/^ffffffff80101683:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff8010168a	obj/kern/kernel.asm	/^ffffffff8010168a:	e8 5e ee ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010168f	obj/kern/kernel.asm	/^ffffffff8010168f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80101694	obj/kern/kernel.asm	/^ffffffff80101694:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80101698	obj/kern/kernel.asm	/^ffffffff80101698:	5b                   	pop    %rbx$/;"	l
ffffffff80101699	obj/kern/kernel.asm	/^ffffffff80101699:	5d                   	pop    %rbp$/;"	l
ffffffff8010169a	obj/kern/kernel.asm	/^ffffffff8010169a:	c3                   	retq   $/;"	l
ffffffff8010169b	obj/kern/kernel.asm	/^ffffffff8010169b:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffffffff801016a2	obj/kern/kernel.asm	/^ffffffff801016a2:	eb df                	jmp    ffffffff80101683 <kill+0x55>$/;"	l
ffffffff801016a4	obj/kern/kernel.asm	/^ffffffff801016a4 <sleep>:$/;"	l
ffffffff801016a4	obj/kern/kernel.asm	/^ffffffff801016a4:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801016a8	obj/kern/kernel.asm	/^ffffffff801016a8:	55                   	push   %rbp$/;"	l
ffffffff801016a9	obj/kern/kernel.asm	/^ffffffff801016a9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801016ac	obj/kern/kernel.asm	/^ffffffff801016ac:	41 55                	push   %r13$/;"	l
ffffffff801016ae	obj/kern/kernel.asm	/^ffffffff801016ae:	41 54                	push   %r12$/;"	l
ffffffff801016b0	obj/kern/kernel.asm	/^ffffffff801016b0:	53                   	push   %rbx$/;"	l
ffffffff801016b1	obj/kern/kernel.asm	/^ffffffff801016b1:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801016b5	obj/kern/kernel.asm	/^ffffffff801016b5:	49 89 fd             	mov    %rdi,%r13$/;"	l
ffffffff801016b8	obj/kern/kernel.asm	/^ffffffff801016b8:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff801016bb	obj/kern/kernel.asm	/^ffffffff801016bb:	e8 30 fa ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801016c0	obj/kern/kernel.asm	/^ffffffff801016c0:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801016c3	obj/kern/kernel.asm	/^ffffffff801016c3:	74 5c                	je     ffffffff80101721 <sleep+0x7d>$/;"	l
ffffffff801016c5	obj/kern/kernel.asm	/^ffffffff801016c5:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff801016c8	obj/kern/kernel.asm	/^ffffffff801016c8:	4d 85 e4             	test   %r12,%r12$/;"	l
ffffffff801016cb	obj/kern/kernel.asm	/^ffffffff801016cb:	74 60                	je     ffffffff8010172d <sleep+0x89>$/;"	l
ffffffff801016cd	obj/kern/kernel.asm	/^ffffffff801016cd:	49 81 fc 60 a4 10 80 	cmp    $0xffffffff8010a460,%r12$/;"	l
ffffffff801016d4	obj/kern/kernel.asm	/^ffffffff801016d4:	74 63                	je     ffffffff80101739 <sleep+0x95>$/;"	l
ffffffff801016d6	obj/kern/kernel.asm	/^ffffffff801016d6:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff801016dd	obj/kern/kernel.asm	/^ffffffff801016dd:	e8 bd ed ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801016e2	obj/kern/kernel.asm	/^ffffffff801016e2:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801016e5	obj/kern/kernel.asm	/^ffffffff801016e5:	e8 03 ee ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801016ea	obj/kern/kernel.asm	/^ffffffff801016ea:	4c 89 6b 38          	mov    %r13,0x38(%rbx)$/;"	l
ffffffff801016ee	obj/kern/kernel.asm	/^ffffffff801016ee:	c7 43 18 02 00 00 00 	movl   $0x2,0x18(%rbx)$/;"	l
ffffffff801016f5	obj/kern/kernel.asm	/^ffffffff801016f5:	e8 41 fd ff ff       	callq  ffffffff8010143b <sched>$/;"	l
ffffffff801016fa	obj/kern/kernel.asm	/^ffffffff801016fa:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)$/;"	l
ffffffff80101701	obj/kern/kernel.asm	/^ffffffff80101701:	00 $/;"	l
ffffffff80101702	obj/kern/kernel.asm	/^ffffffff80101702:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101709	obj/kern/kernel.asm	/^ffffffff80101709:	e8 df ed ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010170e	obj/kern/kernel.asm	/^ffffffff8010170e:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80101711	obj/kern/kernel.asm	/^ffffffff80101711:	e8 89 ed ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80101716	obj/kern/kernel.asm	/^ffffffff80101716:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff8010171a	obj/kern/kernel.asm	/^ffffffff8010171a:	5b                   	pop    %rbx$/;"	l
ffffffff8010171b	obj/kern/kernel.asm	/^ffffffff8010171b:	41 5c                	pop    %r12$/;"	l
ffffffff8010171d	obj/kern/kernel.asm	/^ffffffff8010171d:	41 5d                	pop    %r13$/;"	l
ffffffff8010171f	obj/kern/kernel.asm	/^ffffffff8010171f:	5d                   	pop    %rbp$/;"	l
ffffffff80101720	obj/kern/kernel.asm	/^ffffffff80101720:	c3                   	retq   $/;"	l
ffffffff80101721	obj/kern/kernel.asm	/^ffffffff80101721:	48 c7 c7 6b 6e 10 80 	mov    $0xffffffff80106e6b,%rdi$/;"	l
ffffffff80101728	obj/kern/kernel.asm	/^ffffffff80101728:	e8 f6 ee ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010172d	obj/kern/kernel.asm	/^ffffffff8010172d:	48 c7 c7 71 6e 10 80 	mov    $0xffffffff80106e71,%rdi$/;"	l
ffffffff80101734	obj/kern/kernel.asm	/^ffffffff80101734:	e8 ea ee ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101739	obj/kern/kernel.asm	/^ffffffff80101739:	4c 89 68 38          	mov    %r13,0x38(%rax)$/;"	l
ffffffff8010173d	obj/kern/kernel.asm	/^ffffffff8010173d:	c7 40 18 02 00 00 00 	movl   $0x2,0x18(%rax)$/;"	l
ffffffff80101744	obj/kern/kernel.asm	/^ffffffff80101744:	e8 f2 fc ff ff       	callq  ffffffff8010143b <sched>$/;"	l
ffffffff80101749	obj/kern/kernel.asm	/^ffffffff80101749:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)$/;"	l
ffffffff80101750	obj/kern/kernel.asm	/^ffffffff80101750:	00 $/;"	l
ffffffff80101751	obj/kern/kernel.asm	/^ffffffff80101751:	eb c3                	jmp    ffffffff80101716 <sleep+0x72>$/;"	l
ffffffff80101753	obj/kern/kernel.asm	/^ffffffff80101753 <wait>:$/;"	l
ffffffff80101753	obj/kern/kernel.asm	/^ffffffff80101753:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101757	obj/kern/kernel.asm	/^ffffffff80101757:	55                   	push   %rbp$/;"	l
ffffffff80101758	obj/kern/kernel.asm	/^ffffffff80101758:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010175b	obj/kern/kernel.asm	/^ffffffff8010175b:	41 55                	push   %r13$/;"	l
ffffffff8010175d	obj/kern/kernel.asm	/^ffffffff8010175d:	41 54                	push   %r12$/;"	l
ffffffff8010175f	obj/kern/kernel.asm	/^ffffffff8010175f:	53                   	push   %rbx$/;"	l
ffffffff80101760	obj/kern/kernel.asm	/^ffffffff80101760:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80101764	obj/kern/kernel.asm	/^ffffffff80101764:	e8 87 f9 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80101769	obj/kern/kernel.asm	/^ffffffff80101769:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff8010176c	obj/kern/kernel.asm	/^ffffffff8010176c:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff80101773	obj/kern/kernel.asm	/^ffffffff80101773:	e8 27 ed ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80101778	obj/kern/kernel.asm	/^ffffffff80101778:	41 bd 01 00 00 00    	mov    $0x1,%r13d$/;"	l
ffffffff8010177e	obj/kern/kernel.asm	/^ffffffff8010177e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80101783	obj/kern/kernel.asm	/^ffffffff80101783:	48 c7 c3 78 a4 10 80 	mov    $0xffffffff8010a478,%rbx$/;"	l
ffffffff8010178a	obj/kern/kernel.asm	/^ffffffff8010178a:	eb 6f                	jmp    ffffffff801017fb <wait+0xa8>$/;"	l
ffffffff8010178c	obj/kern/kernel.asm	/^ffffffff8010178c:	44 8b 63 1c          	mov    0x1c(%rbx),%r12d$/;"	l
ffffffff80101790	obj/kern/kernel.asm	/^ffffffff80101790:	48 8b 7b 10          	mov    0x10(%rbx),%rdi$/;"	l
ffffffff80101794	obj/kern/kernel.asm	/^ffffffff80101794:	e8 b3 e9 ff ff       	callq  ffffffff8010014c <kfree>$/;"	l
ffffffff80101799	obj/kern/kernel.asm	/^ffffffff80101799:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)$/;"	l
ffffffff801017a0	obj/kern/kernel.asm	/^ffffffff801017a0:	00 $/;"	l
ffffffff801017a1	obj/kern/kernel.asm	/^ffffffff801017a1:	48 8b 7b 08          	mov    0x8(%rbx),%rdi$/;"	l
ffffffff801017a5	obj/kern/kernel.asm	/^ffffffff801017a5:	48 8b 33             	mov    (%rbx),%rsi$/;"	l
ffffffff801017a8	obj/kern/kernel.asm	/^ffffffff801017a8:	e8 d1 09 00 00       	callq  ffffffff8010217e <freevm>$/;"	l
ffffffff801017ad	obj/kern/kernel.asm	/^ffffffff801017ad:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%rbx)$/;"	l
ffffffff801017b4	obj/kern/kernel.asm	/^ffffffff801017b4:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)$/;"	l
ffffffff801017bb	obj/kern/kernel.asm	/^ffffffff801017bb:	00 $/;"	l
ffffffff801017bc	obj/kern/kernel.asm	/^ffffffff801017bc:	c6 83 d0 00 00 00 00 	movb   $0x0,0xd0(%rbx)$/;"	l
ffffffff801017c3	obj/kern/kernel.asm	/^ffffffff801017c3:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%rbx)$/;"	l
ffffffff801017ca	obj/kern/kernel.asm	/^ffffffff801017ca:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)$/;"	l
ffffffff801017d1	obj/kern/kernel.asm	/^ffffffff801017d1:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff801017d8	obj/kern/kernel.asm	/^ffffffff801017d8:	e8 10 ed ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801017dd	obj/kern/kernel.asm	/^ffffffff801017dd:	44 89 e0             	mov    %r12d,%eax$/;"	l
ffffffff801017e0	obj/kern/kernel.asm	/^ffffffff801017e0:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801017e4	obj/kern/kernel.asm	/^ffffffff801017e4:	5b                   	pop    %rbx$/;"	l
ffffffff801017e5	obj/kern/kernel.asm	/^ffffffff801017e5:	41 5c                	pop    %r12$/;"	l
ffffffff801017e7	obj/kern/kernel.asm	/^ffffffff801017e7:	41 5d                	pop    %r13$/;"	l
ffffffff801017e9	obj/kern/kernel.asm	/^ffffffff801017e9:	5d                   	pop    %rbp$/;"	l
ffffffff801017ea	obj/kern/kernel.asm	/^ffffffff801017ea:	c3                   	retq   $/;"	l
ffffffff801017eb	obj/kern/kernel.asm	/^ffffffff801017eb:	48 81 c3 e0 00 00 00 	add    $0xe0,%rbx$/;"	l
ffffffff801017f2	obj/kern/kernel.asm	/^ffffffff801017f2:	48 81 fb 78 dc 10 80 	cmp    $0xffffffff8010dc78,%rbx$/;"	l
ffffffff801017f9	obj/kern/kernel.asm	/^ffffffff801017f9:	74 11                	je     ffffffff8010180c <wait+0xb9>$/;"	l
ffffffff801017fb	obj/kern/kernel.asm	/^ffffffff801017fb:	4c 39 63 20          	cmp    %r12,0x20(%rbx)$/;"	l
ffffffff801017ff	obj/kern/kernel.asm	/^ffffffff801017ff:	75 ea                	jne    ffffffff801017eb <wait+0x98>$/;"	l
ffffffff80101801	obj/kern/kernel.asm	/^ffffffff80101801:	83 7b 18 05          	cmpl   $0x5,0x18(%rbx)$/;"	l
ffffffff80101805	obj/kern/kernel.asm	/^ffffffff80101805:	74 85                	je     ffffffff8010178c <wait+0x39>$/;"	l
ffffffff80101807	obj/kern/kernel.asm	/^ffffffff80101807:	44 89 e8             	mov    %r13d,%eax$/;"	l
ffffffff8010180a	obj/kern/kernel.asm	/^ffffffff8010180a:	eb df                	jmp    ffffffff801017eb <wait+0x98>$/;"	l
ffffffff8010180c	obj/kern/kernel.asm	/^ffffffff8010180c:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010180e	obj/kern/kernel.asm	/^ffffffff8010180e:	74 08                	je     ffffffff80101818 <wait+0xc5>$/;"	l
ffffffff80101810	obj/kern/kernel.asm	/^ffffffff80101810:	41 83 7c 24 40 00    	cmpl   $0x0,0x40(%r12)$/;"	l
ffffffff80101816	obj/kern/kernel.asm	/^ffffffff80101816:	74 14                	je     ffffffff8010182c <wait+0xd9>$/;"	l
ffffffff80101818	obj/kern/kernel.asm	/^ffffffff80101818:	48 c7 c7 60 a4 10 80 	mov    $0xffffffff8010a460,%rdi$/;"	l
ffffffff8010181f	obj/kern/kernel.asm	/^ffffffff8010181f:	e8 c9 ec ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80101824	obj/kern/kernel.asm	/^ffffffff80101824:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d$/;"	l
ffffffff8010182a	obj/kern/kernel.asm	/^ffffffff8010182a:	eb b1                	jmp    ffffffff801017dd <wait+0x8a>$/;"	l
ffffffff8010182c	obj/kern/kernel.asm	/^ffffffff8010182c:	48 c7 c6 60 a4 10 80 	mov    $0xffffffff8010a460,%rsi$/;"	l
ffffffff80101833	obj/kern/kernel.asm	/^ffffffff80101833:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80101836	obj/kern/kernel.asm	/^ffffffff80101836:	e8 69 fe ff ff       	callq  ffffffff801016a4 <sleep>$/;"	l
ffffffff8010183b	obj/kern/kernel.asm	/^ffffffff8010183b:	e9 3e ff ff ff       	jmpq   ffffffff8010177e <wait+0x2b>$/;"	l
ffffffff80101840	obj/kern/kernel.asm	/^ffffffff80101840 <procdump>:$/;"	l
ffffffff80101840	obj/kern/kernel.asm	/^ffffffff80101840:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101844	obj/kern/kernel.asm	/^ffffffff80101844:	55                   	push   %rbp$/;"	l
ffffffff80101845	obj/kern/kernel.asm	/^ffffffff80101845:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101848	obj/kern/kernel.asm	/^ffffffff80101848:	41 55                	push   %r13$/;"	l
ffffffff8010184a	obj/kern/kernel.asm	/^ffffffff8010184a:	41 54                	push   %r12$/;"	l
ffffffff8010184c	obj/kern/kernel.asm	/^ffffffff8010184c:	53                   	push   %rbx$/;"	l
ffffffff8010184d	obj/kern/kernel.asm	/^ffffffff8010184d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80101851	obj/kern/kernel.asm	/^ffffffff80101851:	48 c7 c3 48 a5 10 80 	mov    $0xffffffff8010a548,%rbx$/;"	l
ffffffff80101858	obj/kern/kernel.asm	/^ffffffff80101858:	49 c7 c4 48 dd 10 80 	mov    $0xffffffff8010dd48,%r12$/;"	l
ffffffff8010185f	obj/kern/kernel.asm	/^ffffffff8010185f:	49 c7 c5 82 6e 10 80 	mov    $0xffffffff80106e82,%r13$/;"	l
ffffffff80101866	obj/kern/kernel.asm	/^ffffffff80101866:	eb 34                	jmp    ffffffff8010189c <procdump+0x5c>$/;"	l
ffffffff80101868	obj/kern/kernel.asm	/^ffffffff80101868:	8b b1 4c ff ff ff    	mov    -0xb4(%rcx),%esi$/;"	l
ffffffff8010186e	obj/kern/kernel.asm	/^ffffffff8010186e:	48 c7 c7 86 6e 10 80 	mov    $0xffffffff80106e86,%rdi$/;"	l
ffffffff80101875	obj/kern/kernel.asm	/^ffffffff80101875:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010187a	obj/kern/kernel.asm	/^ffffffff8010187a:	e8 47 f0 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff8010187f	obj/kern/kernel.asm	/^ffffffff8010187f:	48 c7 c7 aa 6f 10 80 	mov    $0xffffffff80106faa,%rdi$/;"	l
ffffffff80101886	obj/kern/kernel.asm	/^ffffffff80101886:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010188b	obj/kern/kernel.asm	/^ffffffff8010188b:	e8 36 f0 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80101890	obj/kern/kernel.asm	/^ffffffff80101890:	48 81 c3 e0 00 00 00 	add    $0xe0,%rbx$/;"	l
ffffffff80101897	obj/kern/kernel.asm	/^ffffffff80101897:	4c 39 e3             	cmp    %r12,%rbx$/;"	l
ffffffff8010189a	obj/kern/kernel.asm	/^ffffffff8010189a:	74 2c                	je     ffffffff801018c8 <procdump+0x88>$/;"	l
ffffffff8010189c	obj/kern/kernel.asm	/^ffffffff8010189c:	48 89 d9             	mov    %rbx,%rcx$/;"	l
ffffffff8010189f	obj/kern/kernel.asm	/^ffffffff8010189f:	8b 83 48 ff ff ff    	mov    -0xb8(%rbx),%eax$/;"	l
ffffffff801018a5	obj/kern/kernel.asm	/^ffffffff801018a5:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801018a7	obj/kern/kernel.asm	/^ffffffff801018a7:	74 e7                	je     ffffffff80101890 <procdump+0x50>$/;"	l
ffffffff801018a9	obj/kern/kernel.asm	/^ffffffff801018a9:	48 c7 c2 82 6e 10 80 	mov    $0xffffffff80106e82,%rdx$/;"	l
ffffffff801018b0	obj/kern/kernel.asm	/^ffffffff801018b0:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffffffff801018b3	obj/kern/kernel.asm	/^ffffffff801018b3:	77 b3                	ja     ffffffff80101868 <procdump+0x28>$/;"	l
ffffffff801018b5	obj/kern/kernel.asm	/^ffffffff801018b5:	89 c0                	mov    %eax,%eax$/;"	l
ffffffff801018b7	obj/kern/kernel.asm	/^ffffffff801018b7:	48 8b 14 c5 c0 6e 10 	mov    -0x7fef9140(,%rax,8),%rdx$/;"	l
ffffffff801018be	obj/kern/kernel.asm	/^ffffffff801018be:	80 $/;"	l
ffffffff801018bf	obj/kern/kernel.asm	/^ffffffff801018bf:	48 85 d2             	test   %rdx,%rdx$/;"	l
ffffffff801018c2	obj/kern/kernel.asm	/^ffffffff801018c2:	49 0f 44 d5          	cmove  %r13,%rdx$/;"	l
ffffffff801018c6	obj/kern/kernel.asm	/^ffffffff801018c6:	eb a0                	jmp    ffffffff80101868 <procdump+0x28>$/;"	l
ffffffff801018c8	obj/kern/kernel.asm	/^ffffffff801018c8:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801018cc	obj/kern/kernel.asm	/^ffffffff801018cc:	5b                   	pop    %rbx$/;"	l
ffffffff801018cd	obj/kern/kernel.asm	/^ffffffff801018cd:	41 5c                	pop    %r12$/;"	l
ffffffff801018cf	obj/kern/kernel.asm	/^ffffffff801018cf:	41 5d                	pop    %r13$/;"	l
ffffffff801018d1	obj/kern/kernel.asm	/^ffffffff801018d1:	5d                   	pop    %rbp$/;"	l
ffffffff801018d2	obj/kern/kernel.asm	/^ffffffff801018d2:	c3                   	retq   $/;"	l
ffffffff801018d3	obj/kern/kernel.asm	/^ffffffff801018d3 <ptx>:$/;"	l
ffffffff801018d3	obj/kern/kernel.asm	/^ffffffff801018d3:	48 89 f8             	mov    %rdi,%rax$/;"	l
ffffffff801018d6	obj/kern/kernel.asm	/^ffffffff801018d6:	83 fe 03             	cmp    $0x3,%esi$/;"	l
ffffffff801018d9	obj/kern/kernel.asm	/^ffffffff801018d9:	74 31                	je     ffffffff8010190c <ptx+0x39>$/;"	l
ffffffff801018db	obj/kern/kernel.asm	/^ffffffff801018db:	7f 1a                	jg     ffffffff801018f7 <ptx+0x24>$/;"	l
ffffffff801018dd	obj/kern/kernel.asm	/^ffffffff801018dd:	83 fe 01             	cmp    $0x1,%esi$/;"	l
ffffffff801018e0	obj/kern/kernel.asm	/^ffffffff801018e0:	74 34                	je     ffffffff80101916 <ptx+0x43>$/;"	l
ffffffff801018e2	obj/kern/kernel.asm	/^ffffffff801018e2:	83 fe 02             	cmp    $0x2,%esi$/;"	l
ffffffff801018e5	obj/kern/kernel.asm	/^ffffffff801018e5:	75 0a                	jne    ffffffff801018f1 <ptx+0x1e>$/;"	l
ffffffff801018e7	obj/kern/kernel.asm	/^ffffffff801018e7:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
ffffffff801018eb	obj/kern/kernel.asm	/^ffffffff801018eb:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffffffff801018f0	obj/kern/kernel.asm	/^ffffffff801018f0:	c3                   	retq   $/;"	l
ffffffff801018f1	obj/kern/kernel.asm	/^ffffffff801018f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801018f6	obj/kern/kernel.asm	/^ffffffff801018f6:	c3                   	retq   $/;"	l
ffffffff801018f7	obj/kern/kernel.asm	/^ffffffff801018f7:	48 c1 e8 27          	shr    $0x27,%rax$/;"	l
ffffffff801018fb	obj/kern/kernel.asm	/^ffffffff801018fb:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffffffff80101900	obj/kern/kernel.asm	/^ffffffff80101900:	83 fe 04             	cmp    $0x4,%esi$/;"	l
ffffffff80101903	obj/kern/kernel.asm	/^ffffffff80101903:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
ffffffff80101908	obj/kern/kernel.asm	/^ffffffff80101908:	0f 45 c7             	cmovne %edi,%eax$/;"	l
ffffffff8010190b	obj/kern/kernel.asm	/^ffffffff8010190b:	c3                   	retq   $/;"	l
ffffffff8010190c	obj/kern/kernel.asm	/^ffffffff8010190c:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
ffffffff80101910	obj/kern/kernel.asm	/^ffffffff80101910:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffffffff80101915	obj/kern/kernel.asm	/^ffffffff80101915:	c3                   	retq   $/;"	l
ffffffff80101916	obj/kern/kernel.asm	/^ffffffff80101916:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
ffffffff8010191a	obj/kern/kernel.asm	/^ffffffff8010191a:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffffffff8010191f	obj/kern/kernel.asm	/^ffffffff8010191f:	c3                   	retq   $/;"	l
ffffffff80101920	obj/kern/kernel.asm	/^ffffffff80101920 <do_walk>:$/;"	l
ffffffff80101920	obj/kern/kernel.asm	/^ffffffff80101920:	55                   	push   %rbp$/;"	l
ffffffff80101921	obj/kern/kernel.asm	/^ffffffff80101921:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101924	obj/kern/kernel.asm	/^ffffffff80101924:	41 57                	push   %r15$/;"	l
ffffffff80101926	obj/kern/kernel.asm	/^ffffffff80101926:	41 56                	push   %r14$/;"	l
ffffffff80101928	obj/kern/kernel.asm	/^ffffffff80101928:	41 55                	push   %r13$/;"	l
ffffffff8010192a	obj/kern/kernel.asm	/^ffffffff8010192a:	41 54                	push   %r12$/;"	l
ffffffff8010192c	obj/kern/kernel.asm	/^ffffffff8010192c:	53                   	push   %rbx$/;"	l
ffffffff8010192d	obj/kern/kernel.asm	/^ffffffff8010192d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80101931	obj/kern/kernel.asm	/^ffffffff80101931:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80101934	obj/kern/kernel.asm	/^ffffffff80101934:	49 89 f5             	mov    %rsi,%r13$/;"	l
ffffffff80101937	obj/kern/kernel.asm	/^ffffffff80101937:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
ffffffff8010193a	obj/kern/kernel.asm	/^ffffffff8010193a:	74 5a                	je     ffffffff80101996 <do_walk+0x76>$/;"	l
ffffffff8010193c	obj/kern/kernel.asm	/^ffffffff8010193c:	41 89 d6             	mov    %edx,%r14d$/;"	l
ffffffff8010193f	obj/kern/kernel.asm	/^ffffffff8010193f:	41 89 cc             	mov    %ecx,%r12d$/;"	l
ffffffff80101942	obj/kern/kernel.asm	/^ffffffff80101942:	89 ce                	mov    %ecx,%esi$/;"	l
ffffffff80101944	obj/kern/kernel.asm	/^ffffffff80101944:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80101947	obj/kern/kernel.asm	/^ffffffff80101947:	e8 87 ff ff ff       	callq  ffffffff801018d3 <ptx>$/;"	l
ffffffff8010194c	obj/kern/kernel.asm	/^ffffffff8010194c:	89 c0                	mov    %eax,%eax$/;"	l
ffffffff8010194e	obj/kern/kernel.asm	/^ffffffff8010194e:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15$/;"	l
ffffffff80101952	obj/kern/kernel.asm	/^ffffffff80101952:	49 8b 1f             	mov    (%r15),%rbx$/;"	l
ffffffff80101955	obj/kern/kernel.asm	/^ffffffff80101955:	f6 c3 01             	test   $0x1,%bl$/;"	l
ffffffff80101958	obj/kern/kernel.asm	/^ffffffff80101958:	74 51                	je     ffffffff801019ab <do_walk+0x8b>$/;"	l
ffffffff8010195a	obj/kern/kernel.asm	/^ffffffff8010195a:	48 b8 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rax$/;"	l
ffffffff80101961	obj/kern/kernel.asm	/^ffffffff80101961:	ff ff 0f $/;"	l
ffffffff80101964	obj/kern/kernel.asm	/^ffffffff80101964:	48 21 c3             	and    %rax,%rbx$/;"	l
ffffffff80101967	obj/kern/kernel.asm	/^ffffffff80101967:	48 81 c3 00 00 00 80 	add    $0xffffffff80000000,%rbx$/;"	l
ffffffff8010196e	obj/kern/kernel.asm	/^ffffffff8010196e:	41 8d 4c 24 ff       	lea    -0x1(%r12),%ecx$/;"	l
ffffffff80101973	obj/kern/kernel.asm	/^ffffffff80101973:	44 89 f2             	mov    %r14d,%edx$/;"	l
ffffffff80101976	obj/kern/kernel.asm	/^ffffffff80101976:	4c 89 ee             	mov    %r13,%rsi$/;"	l
ffffffff80101979	obj/kern/kernel.asm	/^ffffffff80101979:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010197c	obj/kern/kernel.asm	/^ffffffff8010197c:	e8 9f ff ff ff       	callq  ffffffff80101920 <do_walk>$/;"	l
ffffffff80101981	obj/kern/kernel.asm	/^ffffffff80101981:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80101984	obj/kern/kernel.asm	/^ffffffff80101984:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff80101987	obj/kern/kernel.asm	/^ffffffff80101987:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff8010198b	obj/kern/kernel.asm	/^ffffffff8010198b:	5b                   	pop    %rbx$/;"	l
ffffffff8010198c	obj/kern/kernel.asm	/^ffffffff8010198c:	41 5c                	pop    %r12$/;"	l
ffffffff8010198e	obj/kern/kernel.asm	/^ffffffff8010198e:	41 5d                	pop    %r13$/;"	l
ffffffff80101990	obj/kern/kernel.asm	/^ffffffff80101990:	41 5e                	pop    %r14$/;"	l
ffffffff80101992	obj/kern/kernel.asm	/^ffffffff80101992:	41 5f                	pop    %r15$/;"	l
ffffffff80101994	obj/kern/kernel.asm	/^ffffffff80101994:	5d                   	pop    %rbp$/;"	l
ffffffff80101995	obj/kern/kernel.asm	/^ffffffff80101995:	c3                   	retq   $/;"	l
ffffffff80101996	obj/kern/kernel.asm	/^ffffffff80101996:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffffffff8010199b	obj/kern/kernel.asm	/^ffffffff8010199b:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff8010199e	obj/kern/kernel.asm	/^ffffffff8010199e:	e8 30 ff ff ff       	callq  ffffffff801018d3 <ptx>$/;"	l
ffffffff801019a3	obj/kern/kernel.asm	/^ffffffff801019a3:	89 c0                	mov    %eax,%eax$/;"	l
ffffffff801019a5	obj/kern/kernel.asm	/^ffffffff801019a5:	48 8d 1c c3          	lea    (%rbx,%rax,8),%rbx$/;"	l
ffffffff801019a9	obj/kern/kernel.asm	/^ffffffff801019a9:	eb d9                	jmp    ffffffff80101984 <do_walk+0x64>$/;"	l
ffffffff801019ab	obj/kern/kernel.asm	/^ffffffff801019ab:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff801019b0	obj/kern/kernel.asm	/^ffffffff801019b0:	45 85 f6             	test   %r14d,%r14d$/;"	l
ffffffff801019b3	obj/kern/kernel.asm	/^ffffffff801019b3:	74 cf                	je     ffffffff80101984 <do_walk+0x64>$/;"	l
ffffffff801019b5	obj/kern/kernel.asm	/^ffffffff801019b5:	e8 82 e9 ff ff       	callq  ffffffff8010033c <kalloc>$/;"	l
ffffffff801019ba	obj/kern/kernel.asm	/^ffffffff801019ba:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff801019bd	obj/kern/kernel.asm	/^ffffffff801019bd:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801019c0	obj/kern/kernel.asm	/^ffffffff801019c0:	74 c2                	je     ffffffff80101984 <do_walk+0x64>$/;"	l
ffffffff801019c2	obj/kern/kernel.asm	/^ffffffff801019c2:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffffffff801019c7	obj/kern/kernel.asm	/^ffffffff801019c7:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff801019cc	obj/kern/kernel.asm	/^ffffffff801019cc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff801019cf	obj/kern/kernel.asm	/^ffffffff801019cf:	e8 a1 4f 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff801019d4	obj/kern/kernel.asm	/^ffffffff801019d4:	b8 00 00 00 80       	mov    $0x80000000,%eax$/;"	l
ffffffff801019d9	obj/kern/kernel.asm	/^ffffffff801019d9:	48 01 d8             	add    %rbx,%rax$/;"	l
ffffffff801019dc	obj/kern/kernel.asm	/^ffffffff801019dc:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffffffff801019e0	obj/kern/kernel.asm	/^ffffffff801019e0:	49 89 07             	mov    %rax,(%r15)$/;"	l
ffffffff801019e3	obj/kern/kernel.asm	/^ffffffff801019e3:	eb 89                	jmp    ffffffff8010196e <do_walk+0x4e>$/;"	l
ffffffff801019e5	obj/kern/kernel.asm	/^ffffffff801019e5 <walkpgdir>:$/;"	l
ffffffff801019e5	obj/kern/kernel.asm	/^ffffffff801019e5:	55                   	push   %rbp$/;"	l
ffffffff801019e6	obj/kern/kernel.asm	/^ffffffff801019e6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801019e9	obj/kern/kernel.asm	/^ffffffff801019e9:	b9 04 00 00 00       	mov    $0x4,%ecx$/;"	l
ffffffff801019ee	obj/kern/kernel.asm	/^ffffffff801019ee:	e8 2d ff ff ff       	callq  ffffffff80101920 <do_walk>$/;"	l
ffffffff801019f3	obj/kern/kernel.asm	/^ffffffff801019f3:	5d                   	pop    %rbp$/;"	l
ffffffff801019f4	obj/kern/kernel.asm	/^ffffffff801019f4:	c3                   	retq   $/;"	l
ffffffff801019f5	obj/kern/kernel.asm	/^ffffffff801019f5 <mappages>:$/;"	l
ffffffff801019f5	obj/kern/kernel.asm	/^ffffffff801019f5:	55                   	push   %rbp$/;"	l
ffffffff801019f6	obj/kern/kernel.asm	/^ffffffff801019f6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801019f9	obj/kern/kernel.asm	/^ffffffff801019f9:	41 57                	push   %r15$/;"	l
ffffffff801019fb	obj/kern/kernel.asm	/^ffffffff801019fb:	41 56                	push   %r14$/;"	l
ffffffff801019fd	obj/kern/kernel.asm	/^ffffffff801019fd:	41 55                	push   %r13$/;"	l
ffffffff801019ff	obj/kern/kernel.asm	/^ffffffff801019ff:	41 54                	push   %r12$/;"	l
ffffffff80101a01	obj/kern/kernel.asm	/^ffffffff80101a01:	53                   	push   %rbx$/;"	l
ffffffff80101a02	obj/kern/kernel.asm	/^ffffffff80101a02:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80101a06	obj/kern/kernel.asm	/^ffffffff80101a06:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffffffff80101a0a	obj/kern/kernel.asm	/^ffffffff80101a0a:	45 89 c7             	mov    %r8d,%r15d$/;"	l
ffffffff80101a0d	obj/kern/kernel.asm	/^ffffffff80101a0d:	48 89 f0             	mov    %rsi,%rax$/;"	l
ffffffff80101a10	obj/kern/kernel.asm	/^ffffffff80101a10:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffffffff80101a16	obj/kern/kernel.asm	/^ffffffff80101a16:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80101a19	obj/kern/kernel.asm	/^ffffffff80101a19:	89 d2                	mov    %edx,%edx$/;"	l
ffffffff80101a1b	obj/kern/kernel.asm	/^ffffffff80101a1b:	4c 8d 74 16 ff       	lea    -0x1(%rsi,%rdx,1),%r14$/;"	l
ffffffff80101a20	obj/kern/kernel.asm	/^ffffffff80101a20:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14$/;"	l
ffffffff80101a27	obj/kern/kernel.asm	/^ffffffff80101a27:	48 29 c1             	sub    %rax,%rcx$/;"	l
ffffffff80101a2a	obj/kern/kernel.asm	/^ffffffff80101a2a:	49 89 cd             	mov    %rcx,%r13$/;"	l
ffffffff80101a2d	obj/kern/kernel.asm	/^ffffffff80101a2d:	4e 8d 24 2b          	lea    (%rbx,%r13,1),%r12$/;"	l
ffffffff80101a31	obj/kern/kernel.asm	/^ffffffff80101a31:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffffffff80101a36	obj/kern/kernel.asm	/^ffffffff80101a36:	48 89 de             	mov    %rbx,%rsi$/;"	l
ffffffff80101a39	obj/kern/kernel.asm	/^ffffffff80101a39:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi$/;"	l
ffffffff80101a3d	obj/kern/kernel.asm	/^ffffffff80101a3d:	e8 a3 ff ff ff       	callq  ffffffff801019e5 <walkpgdir>$/;"	l
ffffffff80101a42	obj/kern/kernel.asm	/^ffffffff80101a42:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80101a45	obj/kern/kernel.asm	/^ffffffff80101a45:	74 2c                	je     ffffffff80101a73 <mappages+0x7e>$/;"	l
ffffffff80101a47	obj/kern/kernel.asm	/^ffffffff80101a47:	f6 00 01             	testb  $0x1,(%rax)$/;"	l
ffffffff80101a4a	obj/kern/kernel.asm	/^ffffffff80101a4a:	75 1b                	jne    ffffffff80101a67 <mappages+0x72>$/;"	l
ffffffff80101a4c	obj/kern/kernel.asm	/^ffffffff80101a4c:	49 63 d7             	movslq %r15d,%rdx$/;"	l
ffffffff80101a4f	obj/kern/kernel.asm	/^ffffffff80101a4f:	49 09 d4             	or     %rdx,%r12$/;"	l
ffffffff80101a52	obj/kern/kernel.asm	/^ffffffff80101a52:	49 83 cc 01          	or     $0x1,%r12$/;"	l
ffffffff80101a56	obj/kern/kernel.asm	/^ffffffff80101a56:	4c 89 20             	mov    %r12,(%rax)$/;"	l
ffffffff80101a59	obj/kern/kernel.asm	/^ffffffff80101a59:	4c 39 f3             	cmp    %r14,%rbx$/;"	l
ffffffff80101a5c	obj/kern/kernel.asm	/^ffffffff80101a5c:	74 29                	je     ffffffff80101a87 <mappages+0x92>$/;"	l
ffffffff80101a5e	obj/kern/kernel.asm	/^ffffffff80101a5e:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx$/;"	l
ffffffff80101a65	obj/kern/kernel.asm	/^ffffffff80101a65:	eb c6                	jmp    ffffffff80101a2d <mappages+0x38>$/;"	l
ffffffff80101a67	obj/kern/kernel.asm	/^ffffffff80101a67:	48 c7 c7 f0 6e 10 80 	mov    $0xffffffff80106ef0,%rdi$/;"	l
ffffffff80101a6e	obj/kern/kernel.asm	/^ffffffff80101a6e:	e8 b0 eb ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101a73	obj/kern/kernel.asm	/^ffffffff80101a73:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80101a78	obj/kern/kernel.asm	/^ffffffff80101a78:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff80101a7c	obj/kern/kernel.asm	/^ffffffff80101a7c:	5b                   	pop    %rbx$/;"	l
ffffffff80101a7d	obj/kern/kernel.asm	/^ffffffff80101a7d:	41 5c                	pop    %r12$/;"	l
ffffffff80101a7f	obj/kern/kernel.asm	/^ffffffff80101a7f:	41 5d                	pop    %r13$/;"	l
ffffffff80101a81	obj/kern/kernel.asm	/^ffffffff80101a81:	41 5e                	pop    %r14$/;"	l
ffffffff80101a83	obj/kern/kernel.asm	/^ffffffff80101a83:	41 5f                	pop    %r15$/;"	l
ffffffff80101a85	obj/kern/kernel.asm	/^ffffffff80101a85:	5d                   	pop    %rbp$/;"	l
ffffffff80101a86	obj/kern/kernel.asm	/^ffffffff80101a86:	c3                   	retq   $/;"	l
ffffffff80101a87	obj/kern/kernel.asm	/^ffffffff80101a87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80101a8c	obj/kern/kernel.asm	/^ffffffff80101a8c:	eb ea                	jmp    ffffffff80101a78 <mappages+0x83>$/;"	l
ffffffff80101a8e	obj/kern/kernel.asm	/^ffffffff80101a8e <init_kmap>:$/;"	l
ffffffff80101a8e	obj/kern/kernel.asm	/^ffffffff80101a8e:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101a92	obj/kern/kernel.asm	/^ffffffff80101a92:	48 c7 05 03 71 00 00 	movq   $0xffffffff80000000,0x7103(%rip)        # ffffffff80108ba0 <kmap>$/;"	l
ffffffff80101a99	obj/kern/kernel.asm	/^ffffffff80101a99:	00 00 00 80 $/;"	l
ffffffff80101a9d	obj/kern/kernel.asm	/^ffffffff80101a9d:	48 c7 05 00 71 00 00 	movq   $0x0,0x7100(%rip)        # ffffffff80108ba8 <kmap+0x8>$/;"	l
ffffffff80101aa4	obj/kern/kernel.asm	/^ffffffff80101aa4:	00 00 00 00 $/;"	l
ffffffff80101aa8	obj/kern/kernel.asm	/^ffffffff80101aa8:	48 c7 05 fd 70 00 00 	movq   $0x100000,0x70fd(%rip)        # ffffffff80108bb0 <kmap+0x10>$/;"	l
ffffffff80101aaf	obj/kern/kernel.asm	/^ffffffff80101aaf:	00 00 10 00 $/;"	l
ffffffff80101ab3	obj/kern/kernel.asm	/^ffffffff80101ab3:	c7 05 fb 70 00 00 02 	movl   $0x2,0x70fb(%rip)        # ffffffff80108bb8 <kmap+0x18>$/;"	l
ffffffff80101aba	obj/kern/kernel.asm	/^ffffffff80101aba:	00 00 00 $/;"	l
ffffffff80101abd	obj/kern/kernel.asm	/^ffffffff80101abd:	48 c7 05 f8 70 00 00 	movq   $0xffffffff80100000,0x70f8(%rip)        # ffffffff80108bc0 <kmap+0x20>$/;"	l
ffffffff80101ac4	obj/kern/kernel.asm	/^ffffffff80101ac4:	00 00 10 80 $/;"	l
ffffffff80101ac8	obj/kern/kernel.asm	/^ffffffff80101ac8:	48 c7 05 f5 70 00 00 	movq   $0x100000,0x70f5(%rip)        # ffffffff80108bc8 <kmap+0x28>$/;"	l
ffffffff80101acf	obj/kern/kernel.asm	/^ffffffff80101acf:	00 00 10 00 $/;"	l
ffffffff80101ad3	obj/kern/kernel.asm	/^ffffffff80101ad3:	48 b8 00 80 10 00 00 	movabs $0x108000,%rax$/;"	l
ffffffff80101ada	obj/kern/kernel.asm	/^ffffffff80101ada:	00 00 00 $/;"	l
ffffffff80101add	obj/kern/kernel.asm	/^ffffffff80101add:	48 89 05 ec 70 00 00 	mov    %rax,0x70ec(%rip)        # ffffffff80108bd0 <kmap+0x30>$/;"	l
ffffffff80101ae4	obj/kern/kernel.asm	/^ffffffff80101ae4:	c7 05 ea 70 00 00 00 	movl   $0x0,0x70ea(%rip)        # ffffffff80108bd8 <kmap+0x38>$/;"	l
ffffffff80101aeb	obj/kern/kernel.asm	/^ffffffff80101aeb:	00 00 00 $/;"	l
ffffffff80101aee	obj/kern/kernel.asm	/^ffffffff80101aee:	48 c7 05 e7 70 00 00 	movq   $0xffffffff80108000,0x70e7(%rip)        # ffffffff80108be0 <kmap+0x40>$/;"	l
ffffffff80101af5	obj/kern/kernel.asm	/^ffffffff80101af5:	00 80 10 80 $/;"	l
ffffffff80101af9	obj/kern/kernel.asm	/^ffffffff80101af9:	48 89 05 e8 70 00 00 	mov    %rax,0x70e8(%rip)        # ffffffff80108be8 <kmap+0x48>$/;"	l
ffffffff80101b00	obj/kern/kernel.asm	/^ffffffff80101b00:	48 8b 05 41 82 00 00 	mov    0x8241(%rip),%rax        # ffffffff80109d48 <phys_top>$/;"	l
ffffffff80101b07	obj/kern/kernel.asm	/^ffffffff80101b07:	48 89 05 e2 70 00 00 	mov    %rax,0x70e2(%rip)        # ffffffff80108bf0 <kmap+0x50>$/;"	l
ffffffff80101b0e	obj/kern/kernel.asm	/^ffffffff80101b0e:	c7 05 e0 70 00 00 02 	movl   $0x2,0x70e0(%rip)        # ffffffff80108bf8 <kmap+0x58>$/;"	l
ffffffff80101b15	obj/kern/kernel.asm	/^ffffffff80101b15:	00 00 00 $/;"	l
ffffffff80101b18	obj/kern/kernel.asm	/^ffffffff80101b18:	48 c7 05 dd 70 00 00 	movq   $0xfffffffffe000000,0x70dd(%rip)        # ffffffff80108c00 <kmap+0x60>$/;"	l
ffffffff80101b1f	obj/kern/kernel.asm	/^ffffffff80101b1f:	00 00 00 fe $/;"	l
ffffffff80101b23	obj/kern/kernel.asm	/^ffffffff80101b23:	b8 00 00 00 fe       	mov    $0xfe000000,%eax$/;"	l
ffffffff80101b28	obj/kern/kernel.asm	/^ffffffff80101b28:	48 89 05 d9 70 00 00 	mov    %rax,0x70d9(%rip)        # ffffffff80108c08 <kmap+0x68>$/;"	l
ffffffff80101b2f	obj/kern/kernel.asm	/^ffffffff80101b2f:	48 8d 80 00 00 00 02 	lea    0x2000000(%rax),%rax$/;"	l
ffffffff80101b36	obj/kern/kernel.asm	/^ffffffff80101b36:	48 89 05 d3 70 00 00 	mov    %rax,0x70d3(%rip)        # ffffffff80108c10 <kmap+0x70>$/;"	l
ffffffff80101b3d	obj/kern/kernel.asm	/^ffffffff80101b3d:	c7 05 d1 70 00 00 02 	movl   $0x2,0x70d1(%rip)        # ffffffff80108c18 <kmap+0x78>$/;"	l
ffffffff80101b44	obj/kern/kernel.asm	/^ffffffff80101b44:	00 00 00 $/;"	l
ffffffff80101b47	obj/kern/kernel.asm	/^ffffffff80101b47:	c3                   	retq   $/;"	l
ffffffff80101b48	obj/kern/kernel.asm	/^ffffffff80101b48 <seginit>:$/;"	l
ffffffff80101b48	obj/kern/kernel.asm	/^ffffffff80101b48:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101b4c	obj/kern/kernel.asm	/^ffffffff80101b4c:	55                   	push   %rbp$/;"	l
ffffffff80101b4d	obj/kern/kernel.asm	/^ffffffff80101b4d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101b50	obj/kern/kernel.asm	/^ffffffff80101b50:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff80101b54	obj/kern/kernel.asm	/^ffffffff80101b54:	e8 70 f5 ff ff       	callq  ffffffff801010c9 <cpuid>$/;"	l
ffffffff80101b59	obj/kern/kernel.asm	/^ffffffff80101b59:	48 98                	cltq   $/;"	l
ffffffff80101b5b	obj/kern/kernel.asm	/^ffffffff80101b5b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax$/;"	l
ffffffff80101b5f	obj/kern/kernel.asm	/^ffffffff80101b5f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffffffff80101b66	obj/kern/kernel.asm	/^ffffffff80101b66:	00 $/;"	l
ffffffff80101b67	obj/kern/kernel.asm	/^ffffffff80101b67:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx$/;"	l
ffffffff80101b6b	obj/kern/kernel.asm	/^ffffffff80101b6b:	66 c7 04 cd 80 9e 10 	movw   $0xffff,-0x7fef6180(,%rcx,8)$/;"	l
ffffffff80101b72	obj/kern/kernel.asm	/^ffffffff80101b72:	80 ff ff $/;"	l
ffffffff80101b75	obj/kern/kernel.asm	/^ffffffff80101b75:	66 c7 04 cd 82 9e 10 	movw   $0x0,-0x7fef617e(,%rcx,8)$/;"	l
ffffffff80101b7c	obj/kern/kernel.asm	/^ffffffff80101b7c:	80 00 00 $/;"	l
ffffffff80101b7f	obj/kern/kernel.asm	/^ffffffff80101b7f:	c6 04 cd 84 9e 10 80 	movb   $0x0,-0x7fef617c(,%rcx,8)$/;"	l
ffffffff80101b86	obj/kern/kernel.asm	/^ffffffff80101b86:	00 $/;"	l
ffffffff80101b87	obj/kern/kernel.asm	/^ffffffff80101b87:	c6 04 cd 85 9e 10 80 	movb   $0x9a,-0x7fef617b(,%rcx,8)$/;"	l
ffffffff80101b8e	obj/kern/kernel.asm	/^ffffffff80101b8e:	9a $/;"	l
ffffffff80101b8f	obj/kern/kernel.asm	/^ffffffff80101b8f:	c6 04 cd 86 9e 10 80 	movb   $0xaf,-0x7fef617a(,%rcx,8)$/;"	l
ffffffff80101b96	obj/kern/kernel.asm	/^ffffffff80101b96:	af $/;"	l
ffffffff80101b97	obj/kern/kernel.asm	/^ffffffff80101b97:	c6 04 cd 87 9e 10 80 	movb   $0x0,-0x7fef6179(,%rcx,8)$/;"	l
ffffffff80101b9e	obj/kern/kernel.asm	/^ffffffff80101b9e:	00 $/;"	l
ffffffff80101b9f	obj/kern/kernel.asm	/^ffffffff80101b9f:	66 c7 04 cd 88 9e 10 	movw   $0xffff,-0x7fef6178(,%rcx,8)$/;"	l
ffffffff80101ba6	obj/kern/kernel.asm	/^ffffffff80101ba6:	80 ff ff $/;"	l
ffffffff80101ba9	obj/kern/kernel.asm	/^ffffffff80101ba9:	66 c7 04 cd 8a 9e 10 	movw   $0x0,-0x7fef6176(,%rcx,8)$/;"	l
ffffffff80101bb0	obj/kern/kernel.asm	/^ffffffff80101bb0:	80 00 00 $/;"	l
ffffffff80101bb3	obj/kern/kernel.asm	/^ffffffff80101bb3:	c6 04 cd 8c 9e 10 80 	movb   $0x0,-0x7fef6174(,%rcx,8)$/;"	l
ffffffff80101bba	obj/kern/kernel.asm	/^ffffffff80101bba:	00 $/;"	l
ffffffff80101bbb	obj/kern/kernel.asm	/^ffffffff80101bbb:	c6 04 cd 8d 9e 10 80 	movb   $0x92,-0x7fef6173(,%rcx,8)$/;"	l
ffffffff80101bc2	obj/kern/kernel.asm	/^ffffffff80101bc2:	92 $/;"	l
ffffffff80101bc3	obj/kern/kernel.asm	/^ffffffff80101bc3:	c6 04 cd 8e 9e 10 80 	movb   $0xaf,-0x7fef6172(,%rcx,8)$/;"	l
ffffffff80101bca	obj/kern/kernel.asm	/^ffffffff80101bca:	af $/;"	l
ffffffff80101bcb	obj/kern/kernel.asm	/^ffffffff80101bcb:	c6 04 cd 8f 9e 10 80 	movb   $0x0,-0x7fef6171(,%rcx,8)$/;"	l
ffffffff80101bd2	obj/kern/kernel.asm	/^ffffffff80101bd2:	00 $/;"	l
ffffffff80101bd3	obj/kern/kernel.asm	/^ffffffff80101bd3:	66 c7 04 cd 90 9e 10 	movw   $0xffff,-0x7fef6170(,%rcx,8)$/;"	l
ffffffff80101bda	obj/kern/kernel.asm	/^ffffffff80101bda:	80 ff ff $/;"	l
ffffffff80101bdd	obj/kern/kernel.asm	/^ffffffff80101bdd:	66 c7 04 cd 92 9e 10 	movw   $0x0,-0x7fef616e(,%rcx,8)$/;"	l
ffffffff80101be4	obj/kern/kernel.asm	/^ffffffff80101be4:	80 00 00 $/;"	l
ffffffff80101be7	obj/kern/kernel.asm	/^ffffffff80101be7:	c6 04 cd 94 9e 10 80 	movb   $0x0,-0x7fef616c(,%rcx,8)$/;"	l
ffffffff80101bee	obj/kern/kernel.asm	/^ffffffff80101bee:	00 $/;"	l
ffffffff80101bef	obj/kern/kernel.asm	/^ffffffff80101bef:	c6 04 cd 95 9e 10 80 	movb   $0xfa,-0x7fef616b(,%rcx,8)$/;"	l
ffffffff80101bf6	obj/kern/kernel.asm	/^ffffffff80101bf6:	fa $/;"	l
ffffffff80101bf7	obj/kern/kernel.asm	/^ffffffff80101bf7:	c6 04 cd 96 9e 10 80 	movb   $0xaf,-0x7fef616a(,%rcx,8)$/;"	l
ffffffff80101bfe	obj/kern/kernel.asm	/^ffffffff80101bfe:	af $/;"	l
ffffffff80101bff	obj/kern/kernel.asm	/^ffffffff80101bff:	c6 04 cd 97 9e 10 80 	movb   $0x0,-0x7fef6169(,%rcx,8)$/;"	l
ffffffff80101c06	obj/kern/kernel.asm	/^ffffffff80101c06:	00 $/;"	l
ffffffff80101c07	obj/kern/kernel.asm	/^ffffffff80101c07:	66 c7 04 cd 98 9e 10 	movw   $0xffff,-0x7fef6168(,%rcx,8)$/;"	l
ffffffff80101c0e	obj/kern/kernel.asm	/^ffffffff80101c0e:	80 ff ff $/;"	l
ffffffff80101c11	obj/kern/kernel.asm	/^ffffffff80101c11:	66 c7 04 cd 9a 9e 10 	movw   $0x0,-0x7fef6166(,%rcx,8)$/;"	l
ffffffff80101c18	obj/kern/kernel.asm	/^ffffffff80101c18:	80 00 00 $/;"	l
ffffffff80101c1b	obj/kern/kernel.asm	/^ffffffff80101c1b:	c6 04 cd 9c 9e 10 80 	movb   $0x0,-0x7fef6164(,%rcx,8)$/;"	l
ffffffff80101c22	obj/kern/kernel.asm	/^ffffffff80101c22:	00 $/;"	l
ffffffff80101c23	obj/kern/kernel.asm	/^ffffffff80101c23:	c6 04 cd 9d 9e 10 80 	movb   $0xf2,-0x7fef6163(,%rcx,8)$/;"	l
ffffffff80101c2a	obj/kern/kernel.asm	/^ffffffff80101c2a:	f2 $/;"	l
ffffffff80101c2b	obj/kern/kernel.asm	/^ffffffff80101c2b:	c6 04 cd 9e 9e 10 80 	movb   $0xaf,-0x7fef6162(,%rcx,8)$/;"	l
ffffffff80101c32	obj/kern/kernel.asm	/^ffffffff80101c32:	af $/;"	l
ffffffff80101c33	obj/kern/kernel.asm	/^ffffffff80101c33:	c6 04 cd 9f 9e 10 80 	movb   $0x0,-0x7fef6161(,%rcx,8)$/;"	l
ffffffff80101c3a	obj/kern/kernel.asm	/^ffffffff80101c3a:	00 $/;"	l
ffffffff80101c3b	obj/kern/kernel.asm	/^ffffffff80101c3b:	48 8d 04 cd 78 9e 10 	lea    -0x7fef6188(,%rcx,8),%rax$/;"	l
ffffffff80101c42	obj/kern/kernel.asm	/^ffffffff80101c42:	80 $/;"	l
ffffffff80101c43	obj/kern/kernel.asm	/^ffffffff80101c43:	66 c7 45 f6 37 00    	movw   $0x37,-0xa(%rbp)$/;"	l
ffffffff80101c49	obj/kern/kernel.asm	/^ffffffff80101c49:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffffffff80101c4d	obj/kern/kernel.asm	/^ffffffff80101c4d:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff80101c50	obj/kern/kernel.asm	/^ffffffff80101c50:	48 c1 ea 10          	shr    $0x10,%rdx$/;"	l
ffffffff80101c54	obj/kern/kernel.asm	/^ffffffff80101c54:	66 89 55 fa          	mov    %dx,-0x6(%rbp)$/;"	l
ffffffff80101c58	obj/kern/kernel.asm	/^ffffffff80101c58:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff80101c5b	obj/kern/kernel.asm	/^ffffffff80101c5b:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffffffff80101c5f	obj/kern/kernel.asm	/^ffffffff80101c5f:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffffffff80101c63	obj/kern/kernel.asm	/^ffffffff80101c63:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffffffff80101c67	obj/kern/kernel.asm	/^ffffffff80101c67:	66 89 45 fe          	mov    %ax,-0x2(%rbp)$/;"	l
ffffffff80101c6b	obj/kern/kernel.asm	/^ffffffff80101c6b:	48 8d 45 f6          	lea    -0xa(%rbp),%rax$/;"	l
ffffffff80101c6f	obj/kern/kernel.asm	/^ffffffff80101c6f:	0f 01 10             	lgdt   (%rax)$/;"	l
ffffffff80101c72	obj/kern/kernel.asm	/^ffffffff80101c72:	c9                   	leaveq $/;"	l
ffffffff80101c73	obj/kern/kernel.asm	/^ffffffff80101c73:	c3                   	retq   $/;"	l
ffffffff80101c74	obj/kern/kernel.asm	/^ffffffff80101c74 <switchkvm>:$/;"	l
ffffffff80101c74	obj/kern/kernel.asm	/^ffffffff80101c74:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101c78	obj/kern/kernel.asm	/^ffffffff80101c78:	b8 00 00 00 80       	mov    $0x80000000,%eax$/;"	l
ffffffff80101c7d	obj/kern/kernel.asm	/^ffffffff80101c7d:	48 03 05 f4 bf 00 00 	add    0xbff4(%rip),%rax        # ffffffff8010dc78 <kpgdir>$/;"	l
ffffffff80101c84	obj/kern/kernel.asm	/^ffffffff80101c84:	0f 22 d8             	mov    %rax,%cr3$/;"	l
ffffffff80101c87	obj/kern/kernel.asm	/^ffffffff80101c87:	c3                   	retq   $/;"	l
ffffffff80101c88	obj/kern/kernel.asm	/^ffffffff80101c88 <switchuvm>:$/;"	l
ffffffff80101c88	obj/kern/kernel.asm	/^ffffffff80101c88:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101c8c	obj/kern/kernel.asm	/^ffffffff80101c8c:	55                   	push   %rbp$/;"	l
ffffffff80101c8d	obj/kern/kernel.asm	/^ffffffff80101c8d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101c90	obj/kern/kernel.asm	/^ffffffff80101c90:	41 57                	push   %r15$/;"	l
ffffffff80101c92	obj/kern/kernel.asm	/^ffffffff80101c92:	41 56                	push   %r14$/;"	l
ffffffff80101c94	obj/kern/kernel.asm	/^ffffffff80101c94:	41 55                	push   %r13$/;"	l
ffffffff80101c96	obj/kern/kernel.asm	/^ffffffff80101c96:	41 54                	push   %r12$/;"	l
ffffffff80101c98	obj/kern/kernel.asm	/^ffffffff80101c98:	53                   	push   %rbx$/;"	l
ffffffff80101c99	obj/kern/kernel.asm	/^ffffffff80101c99:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80101c9d	obj/kern/kernel.asm	/^ffffffff80101c9d:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff80101ca0	obj/kern/kernel.asm	/^ffffffff80101ca0:	0f 84 fb 00 00 00    	je     ffffffff80101da1 <switchuvm+0x119>$/;"	l
ffffffff80101ca6	obj/kern/kernel.asm	/^ffffffff80101ca6:	49 89 fc             	mov    %rdi,%r12$/;"	l
ffffffff80101ca9	obj/kern/kernel.asm	/^ffffffff80101ca9:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)$/;"	l
ffffffff80101cae	obj/kern/kernel.asm	/^ffffffff80101cae:	0f 84 f9 00 00 00    	je     ffffffff80101dad <switchuvm+0x125>$/;"	l
ffffffff80101cb4	obj/kern/kernel.asm	/^ffffffff80101cb4:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)$/;"	l
ffffffff80101cb9	obj/kern/kernel.asm	/^ffffffff80101cb9:	0f 84 fa 00 00 00    	je     ffffffff80101db9 <switchuvm+0x131>$/;"	l
ffffffff80101cbf	obj/kern/kernel.asm	/^ffffffff80101cbf:	e8 f6 e6 ff ff       	callq  ffffffff801003ba <pushcli>$/;"	l
ffffffff80101cc4	obj/kern/kernel.asm	/^ffffffff80101cc4:	e8 dd f3 ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101cc9	obj/kern/kernel.asm	/^ffffffff80101cc9:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80101ccc	obj/kern/kernel.asm	/^ffffffff80101ccc:	e8 d5 f3 ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101cd1	obj/kern/kernel.asm	/^ffffffff80101cd1:	49 89 c7             	mov    %rax,%r15$/;"	l
ffffffff80101cd4	obj/kern/kernel.asm	/^ffffffff80101cd4:	e8 cd f3 ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101cd9	obj/kern/kernel.asm	/^ffffffff80101cd9:	49 89 c6             	mov    %rax,%r14$/;"	l
ffffffff80101cdc	obj/kern/kernel.asm	/^ffffffff80101cdc:	e8 c5 f3 ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101ce1	obj/kern/kernel.asm	/^ffffffff80101ce1:	49 89 c5             	mov    %rax,%r13$/;"	l
ffffffff80101ce4	obj/kern/kernel.asm	/^ffffffff80101ce4:	e8 bd f3 ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101ce9	obj/kern/kernel.asm	/^ffffffff80101ce9:	66 c7 83 a0 00 00 00 	movw   $0x67,0xa0(%rbx)$/;"	l
ffffffff80101cf0	obj/kern/kernel.asm	/^ffffffff80101cf0:	67 00 $/;"	l
ffffffff80101cf2	obj/kern/kernel.asm	/^ffffffff80101cf2:	49 83 c7 10          	add    $0x10,%r15$/;"	l
ffffffff80101cf6	obj/kern/kernel.asm	/^ffffffff80101cf6:	66 44 89 bb a2 00 00 	mov    %r15w,0xa2(%rbx)$/;"	l
ffffffff80101cfd	obj/kern/kernel.asm	/^ffffffff80101cfd:	00 $/;"	l
ffffffff80101cfe	obj/kern/kernel.asm	/^ffffffff80101cfe:	49 83 c6 10          	add    $0x10,%r14$/;"	l
ffffffff80101d02	obj/kern/kernel.asm	/^ffffffff80101d02:	49 c1 ee 10          	shr    $0x10,%r14$/;"	l
ffffffff80101d06	obj/kern/kernel.asm	/^ffffffff80101d06:	44 88 b3 a4 00 00 00 	mov    %r14b,0xa4(%rbx)$/;"	l
ffffffff80101d0d	obj/kern/kernel.asm	/^ffffffff80101d0d:	c6 83 a5 00 00 00 89 	movb   $0x89,0xa5(%rbx)$/;"	l
ffffffff80101d14	obj/kern/kernel.asm	/^ffffffff80101d14:	c6 83 a6 00 00 00 00 	movb   $0x0,0xa6(%rbx)$/;"	l
ffffffff80101d1b	obj/kern/kernel.asm	/^ffffffff80101d1b:	49 83 c5 10          	add    $0x10,%r13$/;"	l
ffffffff80101d1f	obj/kern/kernel.asm	/^ffffffff80101d1f:	49 c1 ed 18          	shr    $0x18,%r13$/;"	l
ffffffff80101d23	obj/kern/kernel.asm	/^ffffffff80101d23:	44 88 ab a7 00 00 00 	mov    %r13b,0xa7(%rbx)$/;"	l
ffffffff80101d2a	obj/kern/kernel.asm	/^ffffffff80101d2a:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffffffff80101d2e	obj/kern/kernel.asm	/^ffffffff80101d2e:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffffffff80101d32	obj/kern/kernel.asm	/^ffffffff80101d32:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)$/;"	l
ffffffff80101d38	obj/kern/kernel.asm	/^ffffffff80101d38:	c7 83 ac 00 00 00 00 	movl   $0x0,0xac(%rbx)$/;"	l
ffffffff80101d3f	obj/kern/kernel.asm	/^ffffffff80101d3f:	00 00 00 $/;"	l
ffffffff80101d42	obj/kern/kernel.asm	/^ffffffff80101d42:	49 8b 5c 24 10       	mov    0x10(%r12),%rbx$/;"	l
ffffffff80101d47	obj/kern/kernel.asm	/^ffffffff80101d47:	e8 5a f3 ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101d4c	obj/kern/kernel.asm	/^ffffffff80101d4c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
ffffffff80101d52	obj/kern/kernel.asm	/^ffffffff80101d52:	89 58 14             	mov    %ebx,0x14(%rax)$/;"	l
ffffffff80101d55	obj/kern/kernel.asm	/^ffffffff80101d55:	49 8b 44 24 10       	mov    0x10(%r12),%rax$/;"	l
ffffffff80101d5a	obj/kern/kernel.asm	/^ffffffff80101d5a:	48 8d 98 00 10 00 00 	lea    0x1000(%rax),%rbx$/;"	l
ffffffff80101d61	obj/kern/kernel.asm	/^ffffffff80101d61:	48 c1 eb 20          	shr    $0x20,%rbx$/;"	l
ffffffff80101d65	obj/kern/kernel.asm	/^ffffffff80101d65:	e8 3c f3 ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101d6a	obj/kern/kernel.asm	/^ffffffff80101d6a:	89 58 18             	mov    %ebx,0x18(%rax)$/;"	l
ffffffff80101d6d	obj/kern/kernel.asm	/^ffffffff80101d6d:	e8 34 f3 ff ff       	callq  ffffffff801010a6 <mycpu>$/;"	l
ffffffff80101d72	obj/kern/kernel.asm	/^ffffffff80101d72:	66 c7 40 76 00 00    	movw   $0x0,0x76(%rax)$/;"	l
ffffffff80101d78	obj/kern/kernel.asm	/^ffffffff80101d78:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
ffffffff80101d7d	obj/kern/kernel.asm	/^ffffffff80101d7d:	0f 00 d8             	ltr    %ax$/;"	l
ffffffff80101d80	obj/kern/kernel.asm	/^ffffffff80101d80:	b8 00 00 00 80       	mov    $0x80000000,%eax$/;"	l
ffffffff80101d85	obj/kern/kernel.asm	/^ffffffff80101d85:	49 03 44 24 08       	add    0x8(%r12),%rax$/;"	l
ffffffff80101d8a	obj/kern/kernel.asm	/^ffffffff80101d8a:	0f 22 d8             	mov    %rax,%cr3$/;"	l
ffffffff80101d8d	obj/kern/kernel.asm	/^ffffffff80101d8d:	e8 6c e6 ff ff       	callq  ffffffff801003fe <popcli>$/;"	l
ffffffff80101d92	obj/kern/kernel.asm	/^ffffffff80101d92:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80101d96	obj/kern/kernel.asm	/^ffffffff80101d96:	5b                   	pop    %rbx$/;"	l
ffffffff80101d97	obj/kern/kernel.asm	/^ffffffff80101d97:	41 5c                	pop    %r12$/;"	l
ffffffff80101d99	obj/kern/kernel.asm	/^ffffffff80101d99:	41 5d                	pop    %r13$/;"	l
ffffffff80101d9b	obj/kern/kernel.asm	/^ffffffff80101d9b:	41 5e                	pop    %r14$/;"	l
ffffffff80101d9d	obj/kern/kernel.asm	/^ffffffff80101d9d:	41 5f                	pop    %r15$/;"	l
ffffffff80101d9f	obj/kern/kernel.asm	/^ffffffff80101d9f:	5d                   	pop    %rbp$/;"	l
ffffffff80101da0	obj/kern/kernel.asm	/^ffffffff80101da0:	c3                   	retq   $/;"	l
ffffffff80101da1	obj/kern/kernel.asm	/^ffffffff80101da1:	48 c7 c7 f6 6e 10 80 	mov    $0xffffffff80106ef6,%rdi$/;"	l
ffffffff80101da8	obj/kern/kernel.asm	/^ffffffff80101da8:	e8 76 e8 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101dad	obj/kern/kernel.asm	/^ffffffff80101dad:	48 c7 c7 0c 6f 10 80 	mov    $0xffffffff80106f0c,%rdi$/;"	l
ffffffff80101db4	obj/kern/kernel.asm	/^ffffffff80101db4:	e8 6a e8 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101db9	obj/kern/kernel.asm	/^ffffffff80101db9:	48 c7 c7 21 6f 10 80 	mov    $0xffffffff80106f21,%rdi$/;"	l
ffffffff80101dc0	obj/kern/kernel.asm	/^ffffffff80101dc0:	e8 5e e8 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101dc5	obj/kern/kernel.asm	/^ffffffff80101dc5 <inituvm>:$/;"	l
ffffffff80101dc5	obj/kern/kernel.asm	/^ffffffff80101dc5:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101dc9	obj/kern/kernel.asm	/^ffffffff80101dc9:	55                   	push   %rbp$/;"	l
ffffffff80101dca	obj/kern/kernel.asm	/^ffffffff80101dca:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101dcd	obj/kern/kernel.asm	/^ffffffff80101dcd:	41 56                	push   %r14$/;"	l
ffffffff80101dcf	obj/kern/kernel.asm	/^ffffffff80101dcf:	41 55                	push   %r13$/;"	l
ffffffff80101dd1	obj/kern/kernel.asm	/^ffffffff80101dd1:	41 54                	push   %r12$/;"	l
ffffffff80101dd3	obj/kern/kernel.asm	/^ffffffff80101dd3:	53                   	push   %rbx$/;"	l
ffffffff80101dd4	obj/kern/kernel.asm	/^ffffffff80101dd4:	48 81 fa ff 0f 00 00 	cmp    $0xfff,%rdx$/;"	l
ffffffff80101ddb	obj/kern/kernel.asm	/^ffffffff80101ddb:	77 5a                	ja     ffffffff80101e37 <inituvm+0x72>$/;"	l
ffffffff80101ddd	obj/kern/kernel.asm	/^ffffffff80101ddd:	49 89 fe             	mov    %rdi,%r14$/;"	l
ffffffff80101de0	obj/kern/kernel.asm	/^ffffffff80101de0:	49 89 f5             	mov    %rsi,%r13$/;"	l
ffffffff80101de3	obj/kern/kernel.asm	/^ffffffff80101de3:	49 89 d4             	mov    %rdx,%r12$/;"	l
ffffffff80101de6	obj/kern/kernel.asm	/^ffffffff80101de6:	e8 51 e5 ff ff       	callq  ffffffff8010033c <kalloc>$/;"	l
ffffffff80101deb	obj/kern/kernel.asm	/^ffffffff80101deb:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80101dee	obj/kern/kernel.asm	/^ffffffff80101dee:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffffffff80101df3	obj/kern/kernel.asm	/^ffffffff80101df3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80101df8	obj/kern/kernel.asm	/^ffffffff80101df8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80101dfb	obj/kern/kernel.asm	/^ffffffff80101dfb:	e8 75 4b 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff80101e00	obj/kern/kernel.asm	/^ffffffff80101e00:	b9 00 00 00 80       	mov    $0x80000000,%ecx$/;"	l
ffffffff80101e05	obj/kern/kernel.asm	/^ffffffff80101e05:	48 01 d9             	add    %rbx,%rcx$/;"	l
ffffffff80101e08	obj/kern/kernel.asm	/^ffffffff80101e08:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffffffff80101e0e	obj/kern/kernel.asm	/^ffffffff80101e0e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffffffff80101e13	obj/kern/kernel.asm	/^ffffffff80101e13:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80101e18	obj/kern/kernel.asm	/^ffffffff80101e18:	4c 89 f7             	mov    %r14,%rdi$/;"	l
ffffffff80101e1b	obj/kern/kernel.asm	/^ffffffff80101e1b:	e8 d5 fb ff ff       	callq  ffffffff801019f5 <mappages>$/;"	l
ffffffff80101e20	obj/kern/kernel.asm	/^ffffffff80101e20:	4c 89 e2             	mov    %r12,%rdx$/;"	l
ffffffff80101e23	obj/kern/kernel.asm	/^ffffffff80101e23:	4c 89 ee             	mov    %r13,%rsi$/;"	l
ffffffff80101e26	obj/kern/kernel.asm	/^ffffffff80101e26:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80101e29	obj/kern/kernel.asm	/^ffffffff80101e29:	e8 59 4b 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff80101e2e	obj/kern/kernel.asm	/^ffffffff80101e2e:	5b                   	pop    %rbx$/;"	l
ffffffff80101e2f	obj/kern/kernel.asm	/^ffffffff80101e2f:	41 5c                	pop    %r12$/;"	l
ffffffff80101e31	obj/kern/kernel.asm	/^ffffffff80101e31:	41 5d                	pop    %r13$/;"	l
ffffffff80101e33	obj/kern/kernel.asm	/^ffffffff80101e33:	41 5e                	pop    %r14$/;"	l
ffffffff80101e35	obj/kern/kernel.asm	/^ffffffff80101e35:	5d                   	pop    %rbp$/;"	l
ffffffff80101e36	obj/kern/kernel.asm	/^ffffffff80101e36:	c3                   	retq   $/;"	l
ffffffff80101e37	obj/kern/kernel.asm	/^ffffffff80101e37:	48 c7 c7 35 6f 10 80 	mov    $0xffffffff80106f35,%rdi$/;"	l
ffffffff80101e3e	obj/kern/kernel.asm	/^ffffffff80101e3e:	e8 e0 e7 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101e43	obj/kern/kernel.asm	/^ffffffff80101e43 <loaduvm>:$/;"	l
ffffffff80101e43	obj/kern/kernel.asm	/^ffffffff80101e43:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101e47	obj/kern/kernel.asm	/^ffffffff80101e47:	55                   	push   %rbp$/;"	l
ffffffff80101e48	obj/kern/kernel.asm	/^ffffffff80101e48:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101e4b	obj/kern/kernel.asm	/^ffffffff80101e4b:	41 57                	push   %r15$/;"	l
ffffffff80101e4d	obj/kern/kernel.asm	/^ffffffff80101e4d:	41 56                	push   %r14$/;"	l
ffffffff80101e4f	obj/kern/kernel.asm	/^ffffffff80101e4f:	41 55                	push   %r13$/;"	l
ffffffff80101e51	obj/kern/kernel.asm	/^ffffffff80101e51:	41 54                	push   %r12$/;"	l
ffffffff80101e53	obj/kern/kernel.asm	/^ffffffff80101e53:	53                   	push   %rbx$/;"	l
ffffffff80101e54	obj/kern/kernel.asm	/^ffffffff80101e54:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffffffff80101e58	obj/kern/kernel.asm	/^ffffffff80101e58:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)$/;"	l
ffffffff80101e5c	obj/kern/kernel.asm	/^ffffffff80101e5c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)$/;"	l
ffffffff80101e60	obj/kern/kernel.asm	/^ffffffff80101e60:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)$/;"	l
ffffffff80101e64	obj/kern/kernel.asm	/^ffffffff80101e64:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi$/;"	l
ffffffff80101e6a	obj/kern/kernel.asm	/^ffffffff80101e6a:	0f 85 8d 00 00 00    	jne    ffffffff80101efd <loaduvm+0xba>$/;"	l
ffffffff80101e70	obj/kern/kernel.asm	/^ffffffff80101e70:	41 89 ce             	mov    %ecx,%r14d$/;"	l
ffffffff80101e73	obj/kern/kernel.asm	/^ffffffff80101e73:	4d 89 c5             	mov    %r8,%r13$/;"	l
ffffffff80101e76	obj/kern/kernel.asm	/^ffffffff80101e76:	4c 89 c3             	mov    %r8,%rbx$/;"	l
ffffffff80101e79	obj/kern/kernel.asm	/^ffffffff80101e79:	49 bf 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r15$/;"	l
ffffffff80101e80	obj/kern/kernel.asm	/^ffffffff80101e80:	ff ff 0f $/;"	l
ffffffff80101e83	obj/kern/kernel.asm	/^ffffffff80101e83:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80101e88	obj/kern/kernel.asm	/^ffffffff80101e88:	4d 85 c0             	test   %r8,%r8$/;"	l
ffffffff80101e8b	obj/kern/kernel.asm	/^ffffffff80101e8b:	0f 84 89 00 00 00    	je     ffffffff80101f1a <loaduvm+0xd7>$/;"	l
ffffffff80101e91	obj/kern/kernel.asm	/^ffffffff80101e91:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffffffff80101e95	obj/kern/kernel.asm	/^ffffffff80101e95:	4a 8d 34 28          	lea    (%rax,%r13,1),%rsi$/;"	l
ffffffff80101e99	obj/kern/kernel.asm	/^ffffffff80101e99:	48 29 de             	sub    %rbx,%rsi$/;"	l
ffffffff80101e9c	obj/kern/kernel.asm	/^ffffffff80101e9c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80101ea1	obj/kern/kernel.asm	/^ffffffff80101ea1:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi$/;"	l
ffffffff80101ea5	obj/kern/kernel.asm	/^ffffffff80101ea5:	e8 3b fb ff ff       	callq  ffffffff801019e5 <walkpgdir>$/;"	l
ffffffff80101eaa	obj/kern/kernel.asm	/^ffffffff80101eaa:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80101ead	obj/kern/kernel.asm	/^ffffffff80101ead:	74 5a                	je     ffffffff80101f09 <loaduvm+0xc6>$/;"	l
ffffffff80101eaf	obj/kern/kernel.asm	/^ffffffff80101eaf:	4c 89 fe             	mov    %r15,%rsi$/;"	l
ffffffff80101eb2	obj/kern/kernel.asm	/^ffffffff80101eb2:	48 23 30             	and    (%rax),%rsi$/;"	l
ffffffff80101eb5	obj/kern/kernel.asm	/^ffffffff80101eb5:	48 81 fb ff 0f 00 00 	cmp    $0xfff,%rbx$/;"	l
ffffffff80101ebc	obj/kern/kernel.asm	/^ffffffff80101ebc:	41 bc 00 10 00 00    	mov    $0x1000,%r12d$/;"	l
ffffffff80101ec2	obj/kern/kernel.asm	/^ffffffff80101ec2:	4c 0f 46 e3          	cmovbe %rbx,%r12$/;"	l
ffffffff80101ec6	obj/kern/kernel.asm	/^ffffffff80101ec6:	43 8d 14 2e          	lea    (%r14,%r13,1),%edx$/;"	l
ffffffff80101eca	obj/kern/kernel.asm	/^ffffffff80101eca:	29 da                	sub    %ebx,%edx$/;"	l
ffffffff80101ecc	obj/kern/kernel.asm	/^ffffffff80101ecc:	48 81 c6 00 00 00 80 	add    $0xffffffff80000000,%rsi$/;"	l
ffffffff80101ed3	obj/kern/kernel.asm	/^ffffffff80101ed3:	44 89 e1             	mov    %r12d,%ecx$/;"	l
ffffffff80101ed6	obj/kern/kernel.asm	/^ffffffff80101ed6:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi$/;"	l
ffffffff80101eda	obj/kern/kernel.asm	/^ffffffff80101eda:	e8 15 3a 00 00       	callq  ffffffff801058f4 <readi>$/;"	l
ffffffff80101edf	obj/kern/kernel.asm	/^ffffffff80101edf:	44 39 e0             	cmp    %r12d,%eax$/;"	l
ffffffff80101ee2	obj/kern/kernel.asm	/^ffffffff80101ee2:	75 31                	jne    ffffffff80101f15 <loaduvm+0xd2>$/;"	l
ffffffff80101ee4	obj/kern/kernel.asm	/^ffffffff80101ee4:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx$/;"	l
ffffffff80101eeb	obj/kern/kernel.asm	/^ffffffff80101eeb:	4c 89 e8             	mov    %r13,%rax$/;"	l
ffffffff80101eee	obj/kern/kernel.asm	/^ffffffff80101eee:	48 29 d8             	sub    %rbx,%rax$/;"	l
ffffffff80101ef1	obj/kern/kernel.asm	/^ffffffff80101ef1:	49 39 c5             	cmp    %rax,%r13$/;"	l
ffffffff80101ef4	obj/kern/kernel.asm	/^ffffffff80101ef4:	77 9b                	ja     ffffffff80101e91 <loaduvm+0x4e>$/;"	l
ffffffff80101ef6	obj/kern/kernel.asm	/^ffffffff80101ef6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80101efb	obj/kern/kernel.asm	/^ffffffff80101efb:	eb 1d                	jmp    ffffffff80101f1a <loaduvm+0xd7>$/;"	l
ffffffff80101efd	obj/kern/kernel.asm	/^ffffffff80101efd:	48 c7 c7 20 70 10 80 	mov    $0xffffffff80107020,%rdi$/;"	l
ffffffff80101f04	obj/kern/kernel.asm	/^ffffffff80101f04:	e8 1a e7 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101f09	obj/kern/kernel.asm	/^ffffffff80101f09:	48 c7 c7 4f 6f 10 80 	mov    $0xffffffff80106f4f,%rdi$/;"	l
ffffffff80101f10	obj/kern/kernel.asm	/^ffffffff80101f10:	e8 0e e7 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101f15	obj/kern/kernel.asm	/^ffffffff80101f15:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80101f1a	obj/kern/kernel.asm	/^ffffffff80101f1a:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffffffff80101f1e	obj/kern/kernel.asm	/^ffffffff80101f1e:	5b                   	pop    %rbx$/;"	l
ffffffff80101f1f	obj/kern/kernel.asm	/^ffffffff80101f1f:	41 5c                	pop    %r12$/;"	l
ffffffff80101f21	obj/kern/kernel.asm	/^ffffffff80101f21:	41 5d                	pop    %r13$/;"	l
ffffffff80101f23	obj/kern/kernel.asm	/^ffffffff80101f23:	41 5e                	pop    %r14$/;"	l
ffffffff80101f25	obj/kern/kernel.asm	/^ffffffff80101f25:	41 5f                	pop    %r15$/;"	l
ffffffff80101f27	obj/kern/kernel.asm	/^ffffffff80101f27:	5d                   	pop    %rbp$/;"	l
ffffffff80101f28	obj/kern/kernel.asm	/^ffffffff80101f28:	c3                   	retq   $/;"	l
ffffffff80101f29	obj/kern/kernel.asm	/^ffffffff80101f29 <deallocuvm>:$/;"	l
ffffffff80101f29	obj/kern/kernel.asm	/^ffffffff80101f29:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101f2d	obj/kern/kernel.asm	/^ffffffff80101f2d:	55                   	push   %rbp$/;"	l
ffffffff80101f2e	obj/kern/kernel.asm	/^ffffffff80101f2e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101f31	obj/kern/kernel.asm	/^ffffffff80101f31:	41 57                	push   %r15$/;"	l
ffffffff80101f33	obj/kern/kernel.asm	/^ffffffff80101f33:	41 56                	push   %r14$/;"	l
ffffffff80101f35	obj/kern/kernel.asm	/^ffffffff80101f35:	41 55                	push   %r13$/;"	l
ffffffff80101f37	obj/kern/kernel.asm	/^ffffffff80101f37:	41 54                	push   %r12$/;"	l
ffffffff80101f39	obj/kern/kernel.asm	/^ffffffff80101f39:	53                   	push   %rbx$/;"	l
ffffffff80101f3a	obj/kern/kernel.asm	/^ffffffff80101f3a:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80101f3e	obj/kern/kernel.asm	/^ffffffff80101f3e:	49 89 f5             	mov    %rsi,%r13$/;"	l
ffffffff80101f41	obj/kern/kernel.asm	/^ffffffff80101f41:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffffffff80101f45	obj/kern/kernel.asm	/^ffffffff80101f45:	89 f0                	mov    %esi,%eax$/;"	l
ffffffff80101f47	obj/kern/kernel.asm	/^ffffffff80101f47:	48 39 f2             	cmp    %rsi,%rdx$/;"	l
ffffffff80101f4a	obj/kern/kernel.asm	/^ffffffff80101f4a:	73 7c                	jae    ffffffff80101fc8 <deallocuvm+0x9f>$/;"	l
ffffffff80101f4c	obj/kern/kernel.asm	/^ffffffff80101f4c:	49 89 fe             	mov    %rdi,%r14$/;"	l
ffffffff80101f4f	obj/kern/kernel.asm	/^ffffffff80101f4f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffffffff80101f53	obj/kern/kernel.asm	/^ffffffff80101f53:	4c 8d a0 ff 0f 00 00 	lea    0xfff(%rax),%r12$/;"	l
ffffffff80101f5a	obj/kern/kernel.asm	/^ffffffff80101f5a:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12$/;"	l
ffffffff80101f61	obj/kern/kernel.asm	/^ffffffff80101f61:	4c 39 e6             	cmp    %r12,%rsi$/;"	l
ffffffff80101f64	obj/kern/kernel.asm	/^ffffffff80101f64:	76 5f                	jbe    ffffffff80101fc5 <deallocuvm+0x9c>$/;"	l
ffffffff80101f66	obj/kern/kernel.asm	/^ffffffff80101f66:	49 bf 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r15$/;"	l
ffffffff80101f6d	obj/kern/kernel.asm	/^ffffffff80101f6d:	ff ff 0f $/;"	l
ffffffff80101f70	obj/kern/kernel.asm	/^ffffffff80101f70:	eb 18                	jmp    ffffffff80101f8a <deallocuvm+0x61>$/;"	l
ffffffff80101f72	obj/kern/kernel.asm	/^ffffffff80101f72:	48 c7 c7 6d 6f 10 80 	mov    $0xffffffff80106f6d,%rdi$/;"	l
ffffffff80101f79	obj/kern/kernel.asm	/^ffffffff80101f79:	e8 a5 e6 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80101f7e	obj/kern/kernel.asm	/^ffffffff80101f7e:	49 81 c4 00 10 00 00 	add    $0x1000,%r12$/;"	l
ffffffff80101f85	obj/kern/kernel.asm	/^ffffffff80101f85:	4d 39 e5             	cmp    %r12,%r13$/;"	l
ffffffff80101f88	obj/kern/kernel.asm	/^ffffffff80101f88:	76 3b                	jbe    ffffffff80101fc5 <deallocuvm+0x9c>$/;"	l
ffffffff80101f8a	obj/kern/kernel.asm	/^ffffffff80101f8a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80101f8f	obj/kern/kernel.asm	/^ffffffff80101f8f:	4c 89 e6             	mov    %r12,%rsi$/;"	l
ffffffff80101f92	obj/kern/kernel.asm	/^ffffffff80101f92:	4c 89 f7             	mov    %r14,%rdi$/;"	l
ffffffff80101f95	obj/kern/kernel.asm	/^ffffffff80101f95:	e8 4b fa ff ff       	callq  ffffffff801019e5 <walkpgdir>$/;"	l
ffffffff80101f9a	obj/kern/kernel.asm	/^ffffffff80101f9a:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80101f9d	obj/kern/kernel.asm	/^ffffffff80101f9d:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80101fa0	obj/kern/kernel.asm	/^ffffffff80101fa0:	74 dc                	je     ffffffff80101f7e <deallocuvm+0x55>$/;"	l
ffffffff80101fa2	obj/kern/kernel.asm	/^ffffffff80101fa2:	48 8b 38             	mov    (%rax),%rdi$/;"	l
ffffffff80101fa5	obj/kern/kernel.asm	/^ffffffff80101fa5:	40 f6 c7 01          	test   $0x1,%dil$/;"	l
ffffffff80101fa9	obj/kern/kernel.asm	/^ffffffff80101fa9:	74 d3                	je     ffffffff80101f7e <deallocuvm+0x55>$/;"	l
ffffffff80101fab	obj/kern/kernel.asm	/^ffffffff80101fab:	4c 21 ff             	and    %r15,%rdi$/;"	l
ffffffff80101fae	obj/kern/kernel.asm	/^ffffffff80101fae:	74 c2                	je     ffffffff80101f72 <deallocuvm+0x49>$/;"	l
ffffffff80101fb0	obj/kern/kernel.asm	/^ffffffff80101fb0:	48 81 c7 00 00 00 80 	add    $0xffffffff80000000,%rdi$/;"	l
ffffffff80101fb7	obj/kern/kernel.asm	/^ffffffff80101fb7:	e8 90 e1 ff ff       	callq  ffffffff8010014c <kfree>$/;"	l
ffffffff80101fbc	obj/kern/kernel.asm	/^ffffffff80101fbc:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)$/;"	l
ffffffff80101fc3	obj/kern/kernel.asm	/^ffffffff80101fc3:	eb b9                	jmp    ffffffff80101f7e <deallocuvm+0x55>$/;"	l
ffffffff80101fc5	obj/kern/kernel.asm	/^ffffffff80101fc5:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffffffff80101fc8	obj/kern/kernel.asm	/^ffffffff80101fc8:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff80101fcc	obj/kern/kernel.asm	/^ffffffff80101fcc:	5b                   	pop    %rbx$/;"	l
ffffffff80101fcd	obj/kern/kernel.asm	/^ffffffff80101fcd:	41 5c                	pop    %r12$/;"	l
ffffffff80101fcf	obj/kern/kernel.asm	/^ffffffff80101fcf:	41 5d                	pop    %r13$/;"	l
ffffffff80101fd1	obj/kern/kernel.asm	/^ffffffff80101fd1:	41 5e                	pop    %r14$/;"	l
ffffffff80101fd3	obj/kern/kernel.asm	/^ffffffff80101fd3:	41 5f                	pop    %r15$/;"	l
ffffffff80101fd5	obj/kern/kernel.asm	/^ffffffff80101fd5:	5d                   	pop    %rbp$/;"	l
ffffffff80101fd6	obj/kern/kernel.asm	/^ffffffff80101fd6:	c3                   	retq   $/;"	l
ffffffff80101fd7	obj/kern/kernel.asm	/^ffffffff80101fd7 <allocuvm>:$/;"	l
ffffffff80101fd7	obj/kern/kernel.asm	/^ffffffff80101fd7:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80101fdb	obj/kern/kernel.asm	/^ffffffff80101fdb:	55                   	push   %rbp$/;"	l
ffffffff80101fdc	obj/kern/kernel.asm	/^ffffffff80101fdc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80101fdf	obj/kern/kernel.asm	/^ffffffff80101fdf:	41 57                	push   %r15$/;"	l
ffffffff80101fe1	obj/kern/kernel.asm	/^ffffffff80101fe1:	41 56                	push   %r14$/;"	l
ffffffff80101fe3	obj/kern/kernel.asm	/^ffffffff80101fe3:	41 55                	push   %r13$/;"	l
ffffffff80101fe5	obj/kern/kernel.asm	/^ffffffff80101fe5:	41 54                	push   %r12$/;"	l
ffffffff80101fe7	obj/kern/kernel.asm	/^ffffffff80101fe7:	53                   	push   %rbx$/;"	l
ffffffff80101fe8	obj/kern/kernel.asm	/^ffffffff80101fe8:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80101fec	obj/kern/kernel.asm	/^ffffffff80101fec:	49 89 fd             	mov    %rdi,%r13$/;"	l
ffffffff80101fef	obj/kern/kernel.asm	/^ffffffff80101fef:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)$/;"	l
ffffffff80101ff3	obj/kern/kernel.asm	/^ffffffff80101ff3:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffffffff80101ff6	obj/kern/kernel.asm	/^ffffffff80101ff6:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)$/;"	l
ffffffff80101ffa	obj/kern/kernel.asm	/^ffffffff80101ffa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80101fff	obj/kern/kernel.asm	/^ffffffff80101fff:	48 ba ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rdx$/;"	l
ffffffff80102006	obj/kern/kernel.asm	/^ffffffff80102006:	ff ff ff $/;"	l
ffffffff80102009	obj/kern/kernel.asm	/^ffffffff80102009:	48 39 d7             	cmp    %rdx,%rdi$/;"	l
ffffffff8010200c	obj/kern/kernel.asm	/^ffffffff8010200c:	0f 87 90 00 00 00    	ja     ffffffff801020a2 <allocuvm+0xcb>$/;"	l
ffffffff80102012	obj/kern/kernel.asm	/^ffffffff80102012:	48 39 f7             	cmp    %rsi,%rdi$/;"	l
ffffffff80102015	obj/kern/kernel.asm	/^ffffffff80102015:	0f 82 84 00 00 00    	jb     ffffffff8010209f <allocuvm+0xc8>$/;"	l
ffffffff8010201b	obj/kern/kernel.asm	/^ffffffff8010201b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffffffff8010201f	obj/kern/kernel.asm	/^ffffffff8010201f:	4c 8d a0 ff 0f 00 00 	lea    0xfff(%rax),%r12$/;"	l
ffffffff80102026	obj/kern/kernel.asm	/^ffffffff80102026:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12$/;"	l
ffffffff8010202d	obj/kern/kernel.asm	/^ffffffff8010202d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffffffff80102031	obj/kern/kernel.asm	/^ffffffff80102031:	4c 39 e0             	cmp    %r12,%rax$/;"	l
ffffffff80102034	obj/kern/kernel.asm	/^ffffffff80102034:	76 64                	jbe    ffffffff8010209a <allocuvm+0xc3>$/;"	l
ffffffff80102036	obj/kern/kernel.asm	/^ffffffff80102036:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
ffffffff8010203a	obj/kern/kernel.asm	/^ffffffff8010203a:	4c 29 e0             	sub    %r12,%rax$/;"	l
ffffffff8010203d	obj/kern/kernel.asm	/^ffffffff8010203d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffffffff80102043	obj/kern/kernel.asm	/^ffffffff80102043:	4d 8d bc 04 00 10 00 	lea    0x1000(%r12,%rax,1),%r15$/;"	l
ffffffff8010204a	obj/kern/kernel.asm	/^ffffffff8010204a:	00 $/;"	l
ffffffff8010204b	obj/kern/kernel.asm	/^ffffffff8010204b:	41 be 00 00 00 80    	mov    $0x80000000,%r14d$/;"	l
ffffffff80102051	obj/kern/kernel.asm	/^ffffffff80102051:	e8 e6 e2 ff ff       	callq  ffffffff8010033c <kalloc>$/;"	l
ffffffff80102056	obj/kern/kernel.asm	/^ffffffff80102056:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80102059	obj/kern/kernel.asm	/^ffffffff80102059:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff8010205c	obj/kern/kernel.asm	/^ffffffff8010205c:	74 53                	je     ffffffff801020b1 <allocuvm+0xda>$/;"	l
ffffffff8010205e	obj/kern/kernel.asm	/^ffffffff8010205e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffffffff80102063	obj/kern/kernel.asm	/^ffffffff80102063:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80102068	obj/kern/kernel.asm	/^ffffffff80102068:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff8010206b	obj/kern/kernel.asm	/^ffffffff8010206b:	e8 05 49 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff80102070	obj/kern/kernel.asm	/^ffffffff80102070:	4a 8d 0c 33          	lea    (%rbx,%r14,1),%rcx$/;"	l
ffffffff80102074	obj/kern/kernel.asm	/^ffffffff80102074:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffffffff8010207a	obj/kern/kernel.asm	/^ffffffff8010207a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffffffff8010207f	obj/kern/kernel.asm	/^ffffffff8010207f:	4c 89 e6             	mov    %r12,%rsi$/;"	l
ffffffff80102082	obj/kern/kernel.asm	/^ffffffff80102082:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80102085	obj/kern/kernel.asm	/^ffffffff80102085:	e8 6b f9 ff ff       	callq  ffffffff801019f5 <mappages>$/;"	l
ffffffff8010208a	obj/kern/kernel.asm	/^ffffffff8010208a:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010208c	obj/kern/kernel.asm	/^ffffffff8010208c:	78 4b                	js     ffffffff801020d9 <allocuvm+0x102>$/;"	l
ffffffff8010208e	obj/kern/kernel.asm	/^ffffffff8010208e:	49 81 c4 00 10 00 00 	add    $0x1000,%r12$/;"	l
ffffffff80102095	obj/kern/kernel.asm	/^ffffffff80102095:	4d 39 fc             	cmp    %r15,%r12$/;"	l
ffffffff80102098	obj/kern/kernel.asm	/^ffffffff80102098:	75 b7                	jne    ffffffff80102051 <allocuvm+0x7a>$/;"	l
ffffffff8010209a	obj/kern/kernel.asm	/^ffffffff8010209a:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
ffffffff8010209d	obj/kern/kernel.asm	/^ffffffff8010209d:	eb 03                	jmp    ffffffff801020a2 <allocuvm+0xcb>$/;"	l
ffffffff8010209f	obj/kern/kernel.asm	/^ffffffff8010209f:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffffffff801020a2	obj/kern/kernel.asm	/^ffffffff801020a2:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff801020a6	obj/kern/kernel.asm	/^ffffffff801020a6:	5b                   	pop    %rbx$/;"	l
ffffffff801020a7	obj/kern/kernel.asm	/^ffffffff801020a7:	41 5c                	pop    %r12$/;"	l
ffffffff801020a9	obj/kern/kernel.asm	/^ffffffff801020a9:	41 5d                	pop    %r13$/;"	l
ffffffff801020ab	obj/kern/kernel.asm	/^ffffffff801020ab:	41 5e                	pop    %r14$/;"	l
ffffffff801020ad	obj/kern/kernel.asm	/^ffffffff801020ad:	41 5f                	pop    %r15$/;"	l
ffffffff801020af	obj/kern/kernel.asm	/^ffffffff801020af:	5d                   	pop    %rbp$/;"	l
ffffffff801020b0	obj/kern/kernel.asm	/^ffffffff801020b0:	c3                   	retq   $/;"	l
ffffffff801020b1	obj/kern/kernel.asm	/^ffffffff801020b1:	48 c7 c7 78 6f 10 80 	mov    $0xffffffff80106f78,%rdi$/;"	l
ffffffff801020b8	obj/kern/kernel.asm	/^ffffffff801020b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801020bd	obj/kern/kernel.asm	/^ffffffff801020bd:	e8 04 e8 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801020c2	obj/kern/kernel.asm	/^ffffffff801020c2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
ffffffff801020c6	obj/kern/kernel.asm	/^ffffffff801020c6:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi$/;"	l
ffffffff801020ca	obj/kern/kernel.asm	/^ffffffff801020ca:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff801020cd	obj/kern/kernel.asm	/^ffffffff801020cd:	e8 57 fe ff ff       	callq  ffffffff80101f29 <deallocuvm>$/;"	l
ffffffff801020d2	obj/kern/kernel.asm	/^ffffffff801020d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801020d7	obj/kern/kernel.asm	/^ffffffff801020d7:	eb c9                	jmp    ffffffff801020a2 <allocuvm+0xcb>$/;"	l
ffffffff801020d9	obj/kern/kernel.asm	/^ffffffff801020d9:	48 c7 c7 90 6f 10 80 	mov    $0xffffffff80106f90,%rdi$/;"	l
ffffffff801020e0	obj/kern/kernel.asm	/^ffffffff801020e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801020e5	obj/kern/kernel.asm	/^ffffffff801020e5:	e8 dc e7 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801020ea	obj/kern/kernel.asm	/^ffffffff801020ea:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
ffffffff801020ee	obj/kern/kernel.asm	/^ffffffff801020ee:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi$/;"	l
ffffffff801020f2	obj/kern/kernel.asm	/^ffffffff801020f2:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff801020f5	obj/kern/kernel.asm	/^ffffffff801020f5:	e8 2f fe ff ff       	callq  ffffffff80101f29 <deallocuvm>$/;"	l
ffffffff801020fa	obj/kern/kernel.asm	/^ffffffff801020fa:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801020fd	obj/kern/kernel.asm	/^ffffffff801020fd:	e8 4a e0 ff ff       	callq  ffffffff8010014c <kfree>$/;"	l
ffffffff80102102	obj/kern/kernel.asm	/^ffffffff80102102:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80102107	obj/kern/kernel.asm	/^ffffffff80102107:	eb 99                	jmp    ffffffff801020a2 <allocuvm+0xcb>$/;"	l
ffffffff80102109	obj/kern/kernel.asm	/^ffffffff80102109 <do_freevm>:$/;"	l
ffffffff80102109	obj/kern/kernel.asm	/^ffffffff80102109:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010210d	obj/kern/kernel.asm	/^ffffffff8010210d:	55                   	push   %rbp$/;"	l
ffffffff8010210e	obj/kern/kernel.asm	/^ffffffff8010210e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102111	obj/kern/kernel.asm	/^ffffffff80102111:	41 57                	push   %r15$/;"	l
ffffffff80102113	obj/kern/kernel.asm	/^ffffffff80102113:	41 56                	push   %r14$/;"	l
ffffffff80102115	obj/kern/kernel.asm	/^ffffffff80102115:	41 55                	push   %r13$/;"	l
ffffffff80102117	obj/kern/kernel.asm	/^ffffffff80102117:	41 54                	push   %r12$/;"	l
ffffffff80102119	obj/kern/kernel.asm	/^ffffffff80102119:	53                   	push   %rbx$/;"	l
ffffffff8010211a	obj/kern/kernel.asm	/^ffffffff8010211a:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010211e	obj/kern/kernel.asm	/^ffffffff8010211e:	49 89 ff             	mov    %rdi,%r15$/;"	l
ffffffff80102121	obj/kern/kernel.asm	/^ffffffff80102121:	41 89 f5             	mov    %esi,%r13d$/;"	l
ffffffff80102124	obj/kern/kernel.asm	/^ffffffff80102124:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80102127	obj/kern/kernel.asm	/^ffffffff80102127:	4c 8d a7 00 10 00 00 	lea    0x1000(%rdi),%r12$/;"	l
ffffffff8010212e	obj/kern/kernel.asm	/^ffffffff8010212e:	49 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r14$/;"	l
ffffffff80102135	obj/kern/kernel.asm	/^ffffffff80102135:	ff ff 0f $/;"	l
ffffffff80102138	obj/kern/kernel.asm	/^ffffffff80102138:	eb 09                	jmp    ffffffff80102143 <do_freevm+0x3a>$/;"	l
ffffffff8010213a	obj/kern/kernel.asm	/^ffffffff8010213a:	48 83 c3 08          	add    $0x8,%rbx$/;"	l
ffffffff8010213e	obj/kern/kernel.asm	/^ffffffff8010213e:	4c 39 e3             	cmp    %r12,%rbx$/;"	l
ffffffff80102141	obj/kern/kernel.asm	/^ffffffff80102141:	74 24                	je     ffffffff80102167 <do_freevm+0x5e>$/;"	l
ffffffff80102143	obj/kern/kernel.asm	/^ffffffff80102143:	48 8b 3b             	mov    (%rbx),%rdi$/;"	l
ffffffff80102146	obj/kern/kernel.asm	/^ffffffff80102146:	40 f6 c7 01          	test   $0x1,%dil$/;"	l
ffffffff8010214a	obj/kern/kernel.asm	/^ffffffff8010214a:	74 ee                	je     ffffffff8010213a <do_freevm+0x31>$/;"	l
ffffffff8010214c	obj/kern/kernel.asm	/^ffffffff8010214c:	41 83 fd 01          	cmp    $0x1,%r13d$/;"	l
ffffffff80102150	obj/kern/kernel.asm	/^ffffffff80102150:	7e e8                	jle    ffffffff8010213a <do_freevm+0x31>$/;"	l
ffffffff80102152	obj/kern/kernel.asm	/^ffffffff80102152:	41 8d 75 ff          	lea    -0x1(%r13),%esi$/;"	l
ffffffff80102156	obj/kern/kernel.asm	/^ffffffff80102156:	4c 21 f7             	and    %r14,%rdi$/;"	l
ffffffff80102159	obj/kern/kernel.asm	/^ffffffff80102159:	48 81 c7 00 00 00 80 	add    $0xffffffff80000000,%rdi$/;"	l
ffffffff80102160	obj/kern/kernel.asm	/^ffffffff80102160:	e8 a4 ff ff ff       	callq  ffffffff80102109 <do_freevm>$/;"	l
ffffffff80102165	obj/kern/kernel.asm	/^ffffffff80102165:	eb d3                	jmp    ffffffff8010213a <do_freevm+0x31>$/;"	l
ffffffff80102167	obj/kern/kernel.asm	/^ffffffff80102167:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff8010216a	obj/kern/kernel.asm	/^ffffffff8010216a:	e8 dd df ff ff       	callq  ffffffff8010014c <kfree>$/;"	l
ffffffff8010216f	obj/kern/kernel.asm	/^ffffffff8010216f:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80102173	obj/kern/kernel.asm	/^ffffffff80102173:	5b                   	pop    %rbx$/;"	l
ffffffff80102174	obj/kern/kernel.asm	/^ffffffff80102174:	41 5c                	pop    %r12$/;"	l
ffffffff80102176	obj/kern/kernel.asm	/^ffffffff80102176:	41 5d                	pop    %r13$/;"	l
ffffffff80102178	obj/kern/kernel.asm	/^ffffffff80102178:	41 5e                	pop    %r14$/;"	l
ffffffff8010217a	obj/kern/kernel.asm	/^ffffffff8010217a:	41 5f                	pop    %r15$/;"	l
ffffffff8010217c	obj/kern/kernel.asm	/^ffffffff8010217c:	5d                   	pop    %rbp$/;"	l
ffffffff8010217d	obj/kern/kernel.asm	/^ffffffff8010217d:	c3                   	retq   $/;"	l
ffffffff8010217e	obj/kern/kernel.asm	/^ffffffff8010217e <freevm>:$/;"	l
ffffffff8010217e	obj/kern/kernel.asm	/^ffffffff8010217e:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102182	obj/kern/kernel.asm	/^ffffffff80102182:	55                   	push   %rbp$/;"	l
ffffffff80102183	obj/kern/kernel.asm	/^ffffffff80102183:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102186	obj/kern/kernel.asm	/^ffffffff80102186:	53                   	push   %rbx$/;"	l
ffffffff80102187	obj/kern/kernel.asm	/^ffffffff80102187:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010218b	obj/kern/kernel.asm	/^ffffffff8010218b:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff8010218e	obj/kern/kernel.asm	/^ffffffff8010218e:	74 21                	je     ffffffff801021b1 <freevm+0x33>$/;"	l
ffffffff80102190	obj/kern/kernel.asm	/^ffffffff80102190:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80102193	obj/kern/kernel.asm	/^ffffffff80102193:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80102198	obj/kern/kernel.asm	/^ffffffff80102198:	e8 8c fd ff ff       	callq  ffffffff80101f29 <deallocuvm>$/;"	l
ffffffff8010219d	obj/kern/kernel.asm	/^ffffffff8010219d:	be 04 00 00 00       	mov    $0x4,%esi$/;"	l
ffffffff801021a2	obj/kern/kernel.asm	/^ffffffff801021a2:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801021a5	obj/kern/kernel.asm	/^ffffffff801021a5:	e8 5f ff ff ff       	callq  ffffffff80102109 <do_freevm>$/;"	l
ffffffff801021aa	obj/kern/kernel.asm	/^ffffffff801021aa:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801021ae	obj/kern/kernel.asm	/^ffffffff801021ae:	5b                   	pop    %rbx$/;"	l
ffffffff801021af	obj/kern/kernel.asm	/^ffffffff801021af:	5d                   	pop    %rbp$/;"	l
ffffffff801021b0	obj/kern/kernel.asm	/^ffffffff801021b0:	c3                   	retq   $/;"	l
ffffffff801021b1	obj/kern/kernel.asm	/^ffffffff801021b1:	48 c7 c7 ac 6f 10 80 	mov    $0xffffffff80106fac,%rdi$/;"	l
ffffffff801021b8	obj/kern/kernel.asm	/^ffffffff801021b8:	e8 66 e4 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801021bd	obj/kern/kernel.asm	/^ffffffff801021bd <setupkvm>:$/;"	l
ffffffff801021bd	obj/kern/kernel.asm	/^ffffffff801021bd:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801021c1	obj/kern/kernel.asm	/^ffffffff801021c1:	55                   	push   %rbp$/;"	l
ffffffff801021c2	obj/kern/kernel.asm	/^ffffffff801021c2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801021c5	obj/kern/kernel.asm	/^ffffffff801021c5:	41 54                	push   %r12$/;"	l
ffffffff801021c7	obj/kern/kernel.asm	/^ffffffff801021c7:	53                   	push   %rbx$/;"	l
ffffffff801021c8	obj/kern/kernel.asm	/^ffffffff801021c8:	e8 6f e1 ff ff       	callq  ffffffff8010033c <kalloc>$/;"	l
ffffffff801021cd	obj/kern/kernel.asm	/^ffffffff801021cd:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801021d0	obj/kern/kernel.asm	/^ffffffff801021d0:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801021d3	obj/kern/kernel.asm	/^ffffffff801021d3:	74 66                	je     ffffffff8010223b <setupkvm+0x7e>$/;"	l
ffffffff801021d5	obj/kern/kernel.asm	/^ffffffff801021d5:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffffffff801021da	obj/kern/kernel.asm	/^ffffffff801021da:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff801021df	obj/kern/kernel.asm	/^ffffffff801021df:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff801021e2	obj/kern/kernel.asm	/^ffffffff801021e2:	e8 8e 47 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff801021e7	obj/kern/kernel.asm	/^ffffffff801021e7:	b8 00 00 00 fe       	mov    $0xfe000000,%eax$/;"	l
ffffffff801021ec	obj/kern/kernel.asm	/^ffffffff801021ec:	48 39 05 55 7b 00 00 	cmp    %rax,0x7b55(%rip)        # ffffffff80109d48 <phys_top>$/;"	l
ffffffff801021f3	obj/kern/kernel.asm	/^ffffffff801021f3:	77 4e                	ja     ffffffff80102243 <setupkvm+0x86>$/;"	l
ffffffff801021f5	obj/kern/kernel.asm	/^ffffffff801021f5:	48 c7 c3 a0 8b 10 80 	mov    $0xffffffff80108ba0,%rbx$/;"	l
ffffffff801021fc	obj/kern/kernel.asm	/^ffffffff801021fc:	48 8b 33             	mov    (%rbx),%rsi$/;"	l
ffffffff801021ff	obj/kern/kernel.asm	/^ffffffff801021ff:	48 c7 c7 ce 6f 10 80 	mov    $0xffffffff80106fce,%rdi$/;"	l
ffffffff80102206	obj/kern/kernel.asm	/^ffffffff80102206:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010220b	obj/kern/kernel.asm	/^ffffffff8010220b:	e8 b6 e6 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80102210	obj/kern/kernel.asm	/^ffffffff80102210:	48 8b 43 08          	mov    0x8(%rbx),%rax$/;"	l
ffffffff80102214	obj/kern/kernel.asm	/^ffffffff80102214:	89 c1                	mov    %eax,%ecx$/;"	l
ffffffff80102216	obj/kern/kernel.asm	/^ffffffff80102216:	8b 53 10             	mov    0x10(%rbx),%edx$/;"	l
ffffffff80102219	obj/kern/kernel.asm	/^ffffffff80102219:	29 c2                	sub    %eax,%edx$/;"	l
ffffffff8010221b	obj/kern/kernel.asm	/^ffffffff8010221b:	44 8b 43 18          	mov    0x18(%rbx),%r8d$/;"	l
ffffffff8010221f	obj/kern/kernel.asm	/^ffffffff8010221f:	48 8b 33             	mov    (%rbx),%rsi$/;"	l
ffffffff80102222	obj/kern/kernel.asm	/^ffffffff80102222:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80102225	obj/kern/kernel.asm	/^ffffffff80102225:	e8 cb f7 ff ff       	callq  ffffffff801019f5 <mappages>$/;"	l
ffffffff8010222a	obj/kern/kernel.asm	/^ffffffff8010222a:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010222c	obj/kern/kernel.asm	/^ffffffff8010222c:	78 21                	js     ffffffff8010224f <setupkvm+0x92>$/;"	l
ffffffff8010222e	obj/kern/kernel.asm	/^ffffffff8010222e:	48 83 c3 20          	add    $0x20,%rbx$/;"	l
ffffffff80102232	obj/kern/kernel.asm	/^ffffffff80102232:	48 81 fb 20 8c 10 80 	cmp    $0xffffffff80108c20,%rbx$/;"	l
ffffffff80102239	obj/kern/kernel.asm	/^ffffffff80102239:	75 c1                	jne    ffffffff801021fc <setupkvm+0x3f>$/;"	l
ffffffff8010223b	obj/kern/kernel.asm	/^ffffffff8010223b:	4c 89 e0             	mov    %r12,%rax$/;"	l
ffffffff8010223e	obj/kern/kernel.asm	/^ffffffff8010223e:	5b                   	pop    %rbx$/;"	l
ffffffff8010223f	obj/kern/kernel.asm	/^ffffffff8010223f:	41 5c                	pop    %r12$/;"	l
ffffffff80102241	obj/kern/kernel.asm	/^ffffffff80102241:	5d                   	pop    %rbp$/;"	l
ffffffff80102242	obj/kern/kernel.asm	/^ffffffff80102242:	c3                   	retq   $/;"	l
ffffffff80102243	obj/kern/kernel.asm	/^ffffffff80102243:	48 c7 c7 bd 6f 10 80 	mov    $0xffffffff80106fbd,%rdi$/;"	l
ffffffff8010224a	obj/kern/kernel.asm	/^ffffffff8010224a:	e8 d4 e3 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010224f	obj/kern/kernel.asm	/^ffffffff8010224f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80102254	obj/kern/kernel.asm	/^ffffffff80102254:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80102257	obj/kern/kernel.asm	/^ffffffff80102257:	e8 22 ff ff ff       	callq  ffffffff8010217e <freevm>$/;"	l
ffffffff8010225c	obj/kern/kernel.asm	/^ffffffff8010225c:	41 bc 00 00 00 00    	mov    $0x0,%r12d$/;"	l
ffffffff80102262	obj/kern/kernel.asm	/^ffffffff80102262:	eb d7                	jmp    ffffffff8010223b <setupkvm+0x7e>$/;"	l
ffffffff80102264	obj/kern/kernel.asm	/^ffffffff80102264 <kvmalloc>:$/;"	l
ffffffff80102264	obj/kern/kernel.asm	/^ffffffff80102264:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102268	obj/kern/kernel.asm	/^ffffffff80102268:	55                   	push   %rbp$/;"	l
ffffffff80102269	obj/kern/kernel.asm	/^ffffffff80102269:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010226c	obj/kern/kernel.asm	/^ffffffff8010226c:	e8 1d f8 ff ff       	callq  ffffffff80101a8e <init_kmap>$/;"	l
ffffffff80102271	obj/kern/kernel.asm	/^ffffffff80102271:	e8 47 ff ff ff       	callq  ffffffff801021bd <setupkvm>$/;"	l
ffffffff80102276	obj/kern/kernel.asm	/^ffffffff80102276:	48 89 05 fb b9 00 00 	mov    %rax,0xb9fb(%rip)        # ffffffff8010dc78 <kpgdir>$/;"	l
ffffffff8010227d	obj/kern/kernel.asm	/^ffffffff8010227d:	e8 f2 f9 ff ff       	callq  ffffffff80101c74 <switchkvm>$/;"	l
ffffffff80102282	obj/kern/kernel.asm	/^ffffffff80102282:	5d                   	pop    %rbp$/;"	l
ffffffff80102283	obj/kern/kernel.asm	/^ffffffff80102283:	c3                   	retq   $/;"	l
ffffffff80102284	obj/kern/kernel.asm	/^ffffffff80102284 <copyuvm>:$/;"	l
ffffffff80102284	obj/kern/kernel.asm	/^ffffffff80102284:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102288	obj/kern/kernel.asm	/^ffffffff80102288:	55                   	push   %rbp$/;"	l
ffffffff80102289	obj/kern/kernel.asm	/^ffffffff80102289:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010228c	obj/kern/kernel.asm	/^ffffffff8010228c:	41 57                	push   %r15$/;"	l
ffffffff8010228e	obj/kern/kernel.asm	/^ffffffff8010228e:	41 56                	push   %r14$/;"	l
ffffffff80102290	obj/kern/kernel.asm	/^ffffffff80102290:	41 55                	push   %r13$/;"	l
ffffffff80102292	obj/kern/kernel.asm	/^ffffffff80102292:	41 54                	push   %r12$/;"	l
ffffffff80102294	obj/kern/kernel.asm	/^ffffffff80102294:	53                   	push   %rbx$/;"	l
ffffffff80102295	obj/kern/kernel.asm	/^ffffffff80102295:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffffffff80102299	obj/kern/kernel.asm	/^ffffffff80102299:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)$/;"	l
ffffffff8010229d	obj/kern/kernel.asm	/^ffffffff8010229d:	48 89 f3             	mov    %rsi,%rbx$/;"	l
ffffffff801022a0	obj/kern/kernel.asm	/^ffffffff801022a0:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)$/;"	l
ffffffff801022a4	obj/kern/kernel.asm	/^ffffffff801022a4:	e8 14 ff ff ff       	callq  ffffffff801021bd <setupkvm>$/;"	l
ffffffff801022a9	obj/kern/kernel.asm	/^ffffffff801022a9:	49 89 c7             	mov    %rax,%r15$/;"	l
ffffffff801022ac	obj/kern/kernel.asm	/^ffffffff801022ac:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801022af	obj/kern/kernel.asm	/^ffffffff801022af:	0f 84 cb 00 00 00    	je     ffffffff80102380 <copyuvm+0xfc>$/;"	l
ffffffff801022b5	obj/kern/kernel.asm	/^ffffffff801022b5:	48 85 db             	test   %rbx,%rbx$/;"	l
ffffffff801022b8	obj/kern/kernel.asm	/^ffffffff801022b8:	0f 84 c2 00 00 00    	je     ffffffff80102380 <copyuvm+0xfc>$/;"	l
ffffffff801022be	obj/kern/kernel.asm	/^ffffffff801022be:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
ffffffff801022c4	obj/kern/kernel.asm	/^ffffffff801022c4:	4c 89 6d c8          	mov    %r13,-0x38(%rbp)$/;"	l
ffffffff801022c8	obj/kern/kernel.asm	/^ffffffff801022c8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff801022cd	obj/kern/kernel.asm	/^ffffffff801022cd:	4c 89 ee             	mov    %r13,%rsi$/;"	l
ffffffff801022d0	obj/kern/kernel.asm	/^ffffffff801022d0:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi$/;"	l
ffffffff801022d4	obj/kern/kernel.asm	/^ffffffff801022d4:	e8 0c f7 ff ff       	callq  ffffffff801019e5 <walkpgdir>$/;"	l
ffffffff801022d9	obj/kern/kernel.asm	/^ffffffff801022d9:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801022dc	obj/kern/kernel.asm	/^ffffffff801022dc:	74 70                	je     ffffffff8010234e <copyuvm+0xca>$/;"	l
ffffffff801022de	obj/kern/kernel.asm	/^ffffffff801022de:	48 8b 18             	mov    (%rax),%rbx$/;"	l
ffffffff801022e1	obj/kern/kernel.asm	/^ffffffff801022e1:	f6 c3 01             	test   $0x1,%bl$/;"	l
ffffffff801022e4	obj/kern/kernel.asm	/^ffffffff801022e4:	74 74                	je     ffffffff8010235a <copyuvm+0xd6>$/;"	l
ffffffff801022e6	obj/kern/kernel.asm	/^ffffffff801022e6:	49 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r14$/;"	l
ffffffff801022ed	obj/kern/kernel.asm	/^ffffffff801022ed:	ff ff 0f $/;"	l
ffffffff801022f0	obj/kern/kernel.asm	/^ffffffff801022f0:	49 21 de             	and    %rbx,%r14$/;"	l
ffffffff801022f3	obj/kern/kernel.asm	/^ffffffff801022f3:	81 e3 ff 0f 00 00    	and    $0xfff,%ebx$/;"	l
ffffffff801022f9	obj/kern/kernel.asm	/^ffffffff801022f9:	e8 3e e0 ff ff       	callq  ffffffff8010033c <kalloc>$/;"	l
ffffffff801022fe	obj/kern/kernel.asm	/^ffffffff801022fe:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80102301	obj/kern/kernel.asm	/^ffffffff80102301:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80102304	obj/kern/kernel.asm	/^ffffffff80102304:	74 68                	je     ffffffff8010236e <copyuvm+0xea>$/;"	l
ffffffff80102306	obj/kern/kernel.asm	/^ffffffff80102306:	49 8d b6 00 00 00 80 	lea    -0x80000000(%r14),%rsi$/;"	l
ffffffff8010230d	obj/kern/kernel.asm	/^ffffffff8010230d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffffffff80102312	obj/kern/kernel.asm	/^ffffffff80102312:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80102315	obj/kern/kernel.asm	/^ffffffff80102315:	e8 6d 46 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff8010231a	obj/kern/kernel.asm	/^ffffffff8010231a:	b8 00 00 00 80       	mov    $0x80000000,%eax$/;"	l
ffffffff8010231f	obj/kern/kernel.asm	/^ffffffff8010231f:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx$/;"	l
ffffffff80102323	obj/kern/kernel.asm	/^ffffffff80102323:	41 89 d8             	mov    %ebx,%r8d$/;"	l
ffffffff80102326	obj/kern/kernel.asm	/^ffffffff80102326:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffffffff8010232b	obj/kern/kernel.asm	/^ffffffff8010232b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi$/;"	l
ffffffff8010232f	obj/kern/kernel.asm	/^ffffffff8010232f:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80102332	obj/kern/kernel.asm	/^ffffffff80102332:	e8 be f6 ff ff       	callq  ffffffff801019f5 <mappages>$/;"	l
ffffffff80102337	obj/kern/kernel.asm	/^ffffffff80102337:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80102339	obj/kern/kernel.asm	/^ffffffff80102339:	78 2b                	js     ffffffff80102366 <copyuvm+0xe2>$/;"	l
ffffffff8010233b	obj/kern/kernel.asm	/^ffffffff8010233b:	49 81 c5 00 10 00 00 	add    $0x1000,%r13$/;"	l
ffffffff80102342	obj/kern/kernel.asm	/^ffffffff80102342:	4c 39 6d b8          	cmp    %r13,-0x48(%rbp)$/;"	l
ffffffff80102346	obj/kern/kernel.asm	/^ffffffff80102346:	0f 87 78 ff ff ff    	ja     ffffffff801022c4 <copyuvm+0x40>$/;"	l
ffffffff8010234c	obj/kern/kernel.asm	/^ffffffff8010234c:	eb 32                	jmp    ffffffff80102380 <copyuvm+0xfc>$/;"	l
ffffffff8010234e	obj/kern/kernel.asm	/^ffffffff8010234e:	48 c7 c7 e1 6f 10 80 	mov    $0xffffffff80106fe1,%rdi$/;"	l
ffffffff80102355	obj/kern/kernel.asm	/^ffffffff80102355:	e8 c9 e2 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010235a	obj/kern/kernel.asm	/^ffffffff8010235a:	48 c7 c7 fb 6f 10 80 	mov    $0xffffffff80106ffb,%rdi$/;"	l
ffffffff80102361	obj/kern/kernel.asm	/^ffffffff80102361:	e8 bd e2 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80102366	obj/kern/kernel.asm	/^ffffffff80102366:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80102369	obj/kern/kernel.asm	/^ffffffff80102369:	e8 de dd ff ff       	callq  ffffffff8010014c <kfree>$/;"	l
ffffffff8010236e	obj/kern/kernel.asm	/^ffffffff8010236e:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi$/;"	l
ffffffff80102372	obj/kern/kernel.asm	/^ffffffff80102372:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80102375	obj/kern/kernel.asm	/^ffffffff80102375:	e8 04 fe ff ff       	callq  ffffffff8010217e <freevm>$/;"	l
ffffffff8010237a	obj/kern/kernel.asm	/^ffffffff8010237a:	41 bf 00 00 00 00    	mov    $0x0,%r15d$/;"	l
ffffffff80102380	obj/kern/kernel.asm	/^ffffffff80102380:	4c 89 f8             	mov    %r15,%rax$/;"	l
ffffffff80102383	obj/kern/kernel.asm	/^ffffffff80102383:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffffffff80102387	obj/kern/kernel.asm	/^ffffffff80102387:	5b                   	pop    %rbx$/;"	l
ffffffff80102388	obj/kern/kernel.asm	/^ffffffff80102388:	41 5c                	pop    %r12$/;"	l
ffffffff8010238a	obj/kern/kernel.asm	/^ffffffff8010238a:	41 5d                	pop    %r13$/;"	l
ffffffff8010238c	obj/kern/kernel.asm	/^ffffffff8010238c:	41 5e                	pop    %r14$/;"	l
ffffffff8010238e	obj/kern/kernel.asm	/^ffffffff8010238e:	41 5f                	pop    %r15$/;"	l
ffffffff80102390	obj/kern/kernel.asm	/^ffffffff80102390:	5d                   	pop    %rbp$/;"	l
ffffffff80102391	obj/kern/kernel.asm	/^ffffffff80102391:	c3                   	retq   $/;"	l
ffffffff80102392	obj/kern/kernel.asm	/^ffffffff80102392 <clearpteu>:$/;"	l
ffffffff80102392	obj/kern/kernel.asm	/^ffffffff80102392:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102396	obj/kern/kernel.asm	/^ffffffff80102396:	55                   	push   %rbp$/;"	l
ffffffff80102397	obj/kern/kernel.asm	/^ffffffff80102397:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010239a	obj/kern/kernel.asm	/^ffffffff8010239a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff8010239f	obj/kern/kernel.asm	/^ffffffff8010239f:	e8 41 f6 ff ff       	callq  ffffffff801019e5 <walkpgdir>$/;"	l
ffffffff801023a4	obj/kern/kernel.asm	/^ffffffff801023a4:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801023a7	obj/kern/kernel.asm	/^ffffffff801023a7:	74 06                	je     ffffffff801023af <clearpteu+0x1d>$/;"	l
ffffffff801023a9	obj/kern/kernel.asm	/^ffffffff801023a9:	48 83 20 fb          	andq   $0xfffffffffffffffb,(%rax)$/;"	l
ffffffff801023ad	obj/kern/kernel.asm	/^ffffffff801023ad:	5d                   	pop    %rbp$/;"	l
ffffffff801023ae	obj/kern/kernel.asm	/^ffffffff801023ae:	c3                   	retq   $/;"	l
ffffffff801023af	obj/kern/kernel.asm	/^ffffffff801023af:	48 c7 c7 15 70 10 80 	mov    $0xffffffff80107015,%rdi$/;"	l
ffffffff801023b6	obj/kern/kernel.asm	/^ffffffff801023b6:	e8 68 e2 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801023bb	obj/kern/kernel.asm	/^ffffffff801023bb <uva2ka>:$/;"	l
ffffffff801023bb	obj/kern/kernel.asm	/^ffffffff801023bb:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801023bf	obj/kern/kernel.asm	/^ffffffff801023bf:	55                   	push   %rbp$/;"	l
ffffffff801023c0	obj/kern/kernel.asm	/^ffffffff801023c0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801023c3	obj/kern/kernel.asm	/^ffffffff801023c3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff801023c8	obj/kern/kernel.asm	/^ffffffff801023c8:	e8 18 f6 ff ff       	callq  ffffffff801019e5 <walkpgdir>$/;"	l
ffffffff801023cd	obj/kern/kernel.asm	/^ffffffff801023cd:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffffffff801023d0	obj/kern/kernel.asm	/^ffffffff801023d0:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffffffff801023d3	obj/kern/kernel.asm	/^ffffffff801023d3:	83 e1 05             	and    $0x5,%ecx$/;"	l
ffffffff801023d6	obj/kern/kernel.asm	/^ffffffff801023d6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff801023db	obj/kern/kernel.asm	/^ffffffff801023db:	48 83 f9 05          	cmp    $0x5,%rcx$/;"	l
ffffffff801023df	obj/kern/kernel.asm	/^ffffffff801023df:	75 14                	jne    ffffffff801023f5 <uva2ka+0x3a>$/;"	l
ffffffff801023e1	obj/kern/kernel.asm	/^ffffffff801023e1:	48 ba 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdx$/;"	l
ffffffff801023e8	obj/kern/kernel.asm	/^ffffffff801023e8:	ff ff 0f $/;"	l
ffffffff801023eb	obj/kern/kernel.asm	/^ffffffff801023eb:	48 21 d0             	and    %rdx,%rax$/;"	l
ffffffff801023ee	obj/kern/kernel.asm	/^ffffffff801023ee:	48 8d 90 00 00 00 80 	lea    -0x80000000(%rax),%rdx$/;"	l
ffffffff801023f5	obj/kern/kernel.asm	/^ffffffff801023f5:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffffffff801023f8	obj/kern/kernel.asm	/^ffffffff801023f8:	5d                   	pop    %rbp$/;"	l
ffffffff801023f9	obj/kern/kernel.asm	/^ffffffff801023f9:	c3                   	retq   $/;"	l
ffffffff801023fa	obj/kern/kernel.asm	/^ffffffff801023fa <copyout>:$/;"	l
ffffffff801023fa	obj/kern/kernel.asm	/^ffffffff801023fa:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801023fe	obj/kern/kernel.asm	/^ffffffff801023fe:	55                   	push   %rbp$/;"	l
ffffffff801023ff	obj/kern/kernel.asm	/^ffffffff801023ff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102402	obj/kern/kernel.asm	/^ffffffff80102402:	41 57                	push   %r15$/;"	l
ffffffff80102404	obj/kern/kernel.asm	/^ffffffff80102404:	41 56                	push   %r14$/;"	l
ffffffff80102406	obj/kern/kernel.asm	/^ffffffff80102406:	41 55                	push   %r13$/;"	l
ffffffff80102408	obj/kern/kernel.asm	/^ffffffff80102408:	41 54                	push   %r12$/;"	l
ffffffff8010240a	obj/kern/kernel.asm	/^ffffffff8010240a:	53                   	push   %rbx$/;"	l
ffffffff8010240b	obj/kern/kernel.asm	/^ffffffff8010240b:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff8010240f	obj/kern/kernel.asm	/^ffffffff8010240f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffffffff80102413	obj/kern/kernel.asm	/^ffffffff80102413:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff80102416	obj/kern/kernel.asm	/^ffffffff80102416:	49 89 d7             	mov    %rdx,%r15$/;"	l
ffffffff80102419	obj/kern/kernel.asm	/^ffffffff80102419:	49 89 cd             	mov    %rcx,%r13$/;"	l
ffffffff8010241c	obj/kern/kernel.asm	/^ffffffff8010241c:	48 85 c9             	test   %rcx,%rcx$/;"	l
ffffffff8010241f	obj/kern/kernel.asm	/^ffffffff8010241f:	74 57                	je     ffffffff80102478 <copyout+0x7e>$/;"	l
ffffffff80102421	obj/kern/kernel.asm	/^ffffffff80102421:	4d 89 e6             	mov    %r12,%r14$/;"	l
ffffffff80102424	obj/kern/kernel.asm	/^ffffffff80102424:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14$/;"	l
ffffffff8010242b	obj/kern/kernel.asm	/^ffffffff8010242b:	4c 89 f6             	mov    %r14,%rsi$/;"	l
ffffffff8010242e	obj/kern/kernel.asm	/^ffffffff8010242e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi$/;"	l
ffffffff80102432	obj/kern/kernel.asm	/^ffffffff80102432:	e8 84 ff ff ff       	callq  ffffffff801023bb <uva2ka>$/;"	l
ffffffff80102437	obj/kern/kernel.asm	/^ffffffff80102437:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff8010243a	obj/kern/kernel.asm	/^ffffffff8010243a:	74 43                	je     ffffffff8010247f <copyout+0x85>$/;"	l
ffffffff8010243c	obj/kern/kernel.asm	/^ffffffff8010243c:	4c 89 f3             	mov    %r14,%rbx$/;"	l
ffffffff8010243f	obj/kern/kernel.asm	/^ffffffff8010243f:	4c 29 e3             	sub    %r12,%rbx$/;"	l
ffffffff80102442	obj/kern/kernel.asm	/^ffffffff80102442:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx$/;"	l
ffffffff80102449	obj/kern/kernel.asm	/^ffffffff80102449:	4c 39 eb             	cmp    %r13,%rbx$/;"	l
ffffffff8010244c	obj/kern/kernel.asm	/^ffffffff8010244c:	49 0f 47 dd          	cmova  %r13,%rbx$/;"	l
ffffffff80102450	obj/kern/kernel.asm	/^ffffffff80102450:	4d 29 f4             	sub    %r14,%r12$/;"	l
ffffffff80102453	obj/kern/kernel.asm	/^ffffffff80102453:	4a 8d 3c 20          	lea    (%rax,%r12,1),%rdi$/;"	l
ffffffff80102457	obj/kern/kernel.asm	/^ffffffff80102457:	48 89 da             	mov    %rbx,%rdx$/;"	l
ffffffff8010245a	obj/kern/kernel.asm	/^ffffffff8010245a:	4c 89 fe             	mov    %r15,%rsi$/;"	l
ffffffff8010245d	obj/kern/kernel.asm	/^ffffffff8010245d:	e8 25 45 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff80102462	obj/kern/kernel.asm	/^ffffffff80102462:	49 01 df             	add    %rbx,%r15$/;"	l
ffffffff80102465	obj/kern/kernel.asm	/^ffffffff80102465:	4d 8d a6 00 10 00 00 	lea    0x1000(%r14),%r12$/;"	l
ffffffff8010246c	obj/kern/kernel.asm	/^ffffffff8010246c:	49 29 dd             	sub    %rbx,%r13$/;"	l
ffffffff8010246f	obj/kern/kernel.asm	/^ffffffff8010246f:	75 b0                	jne    ffffffff80102421 <copyout+0x27>$/;"	l
ffffffff80102471	obj/kern/kernel.asm	/^ffffffff80102471:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80102476	obj/kern/kernel.asm	/^ffffffff80102476:	eb 0c                	jmp    ffffffff80102484 <copyout+0x8a>$/;"	l
ffffffff80102478	obj/kern/kernel.asm	/^ffffffff80102478:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010247d	obj/kern/kernel.asm	/^ffffffff8010247d:	eb 05                	jmp    ffffffff80102484 <copyout+0x8a>$/;"	l
ffffffff8010247f	obj/kern/kernel.asm	/^ffffffff8010247f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80102484	obj/kern/kernel.asm	/^ffffffff80102484:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff80102488	obj/kern/kernel.asm	/^ffffffff80102488:	5b                   	pop    %rbx$/;"	l
ffffffff80102489	obj/kern/kernel.asm	/^ffffffff80102489:	41 5c                	pop    %r12$/;"	l
ffffffff8010248b	obj/kern/kernel.asm	/^ffffffff8010248b:	41 5d                	pop    %r13$/;"	l
ffffffff8010248d	obj/kern/kernel.asm	/^ffffffff8010248d:	41 5e                	pop    %r14$/;"	l
ffffffff8010248f	obj/kern/kernel.asm	/^ffffffff8010248f:	41 5f                	pop    %r15$/;"	l
ffffffff80102491	obj/kern/kernel.asm	/^ffffffff80102491:	5d                   	pop    %rbp$/;"	l
ffffffff80102492	obj/kern/kernel.asm	/^ffffffff80102492:	c3                   	retq   $/;"	l
ffffffff80102493	obj/kern/kernel.asm	/^ffffffff80102493 <swtch>:$/;"	l
ffffffff80102493	obj/kern/kernel.asm	/^ffffffff80102493:	48 89 f8             	mov    %rdi,%rax$/;"	l
ffffffff80102496	obj/kern/kernel.asm	/^ffffffff80102496:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffffffff80102499	obj/kern/kernel.asm	/^ffffffff80102499:	55                   	push   %rbp$/;"	l
ffffffff8010249a	obj/kern/kernel.asm	/^ffffffff8010249a:	53                   	push   %rbx$/;"	l
ffffffff8010249b	obj/kern/kernel.asm	/^ffffffff8010249b:	56                   	push   %rsi$/;"	l
ffffffff8010249c	obj/kern/kernel.asm	/^ffffffff8010249c:	57                   	push   %rdi$/;"	l
ffffffff8010249d	obj/kern/kernel.asm	/^ffffffff8010249d:	41 54                	push   %r12$/;"	l
ffffffff8010249f	obj/kern/kernel.asm	/^ffffffff8010249f:	41 55                	push   %r13$/;"	l
ffffffff801024a1	obj/kern/kernel.asm	/^ffffffff801024a1:	41 56                	push   %r14$/;"	l
ffffffff801024a3	obj/kern/kernel.asm	/^ffffffff801024a3:	41 57                	push   %r15$/;"	l
ffffffff801024a5	obj/kern/kernel.asm	/^ffffffff801024a5:	48 89 20             	mov    %rsp,(%rax)$/;"	l
ffffffff801024a8	obj/kern/kernel.asm	/^ffffffff801024a8:	48 89 d4             	mov    %rdx,%rsp$/;"	l
ffffffff801024ab	obj/kern/kernel.asm	/^ffffffff801024ab:	41 5f                	pop    %r15$/;"	l
ffffffff801024ad	obj/kern/kernel.asm	/^ffffffff801024ad:	41 5e                	pop    %r14$/;"	l
ffffffff801024af	obj/kern/kernel.asm	/^ffffffff801024af:	41 5d                	pop    %r13$/;"	l
ffffffff801024b1	obj/kern/kernel.asm	/^ffffffff801024b1:	41 5c                	pop    %r12$/;"	l
ffffffff801024b3	obj/kern/kernel.asm	/^ffffffff801024b3:	5f                   	pop    %rdi$/;"	l
ffffffff801024b4	obj/kern/kernel.asm	/^ffffffff801024b4:	5e                   	pop    %rsi$/;"	l
ffffffff801024b5	obj/kern/kernel.asm	/^ffffffff801024b5:	5b                   	pop    %rbx$/;"	l
ffffffff801024b6	obj/kern/kernel.asm	/^ffffffff801024b6:	5d                   	pop    %rbp$/;"	l
ffffffff801024b7	obj/kern/kernel.asm	/^ffffffff801024b7:	c3                   	retq   $/;"	l
ffffffff801024b8	obj/kern/kernel.asm	/^ffffffff801024b8 <alltraps>:$/;"	l
ffffffff801024b8	obj/kern/kernel.asm	/^ffffffff801024b8:	41 57                	push   %r15$/;"	l
ffffffff801024ba	obj/kern/kernel.asm	/^ffffffff801024ba:	41 56                	push   %r14$/;"	l
ffffffff801024bc	obj/kern/kernel.asm	/^ffffffff801024bc:	41 55                	push   %r13$/;"	l
ffffffff801024be	obj/kern/kernel.asm	/^ffffffff801024be:	41 54                	push   %r12$/;"	l
ffffffff801024c0	obj/kern/kernel.asm	/^ffffffff801024c0:	41 53                	push   %r11$/;"	l
ffffffff801024c2	obj/kern/kernel.asm	/^ffffffff801024c2:	41 52                	push   %r10$/;"	l
ffffffff801024c4	obj/kern/kernel.asm	/^ffffffff801024c4:	41 51                	push   %r9$/;"	l
ffffffff801024c6	obj/kern/kernel.asm	/^ffffffff801024c6:	41 50                	push   %r8$/;"	l
ffffffff801024c8	obj/kern/kernel.asm	/^ffffffff801024c8:	57                   	push   %rdi$/;"	l
ffffffff801024c9	obj/kern/kernel.asm	/^ffffffff801024c9:	56                   	push   %rsi$/;"	l
ffffffff801024ca	obj/kern/kernel.asm	/^ffffffff801024ca:	55                   	push   %rbp$/;"	l
ffffffff801024cb	obj/kern/kernel.asm	/^ffffffff801024cb:	52                   	push   %rdx$/;"	l
ffffffff801024cc	obj/kern/kernel.asm	/^ffffffff801024cc:	51                   	push   %rcx$/;"	l
ffffffff801024cd	obj/kern/kernel.asm	/^ffffffff801024cd:	53                   	push   %rbx$/;"	l
ffffffff801024ce	obj/kern/kernel.asm	/^ffffffff801024ce:	50                   	push   %rax$/;"	l
ffffffff801024cf	obj/kern/kernel.asm	/^ffffffff801024cf:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
ffffffff801024d3	obj/kern/kernel.asm	/^ffffffff801024d3:	8e d8                	mov    %eax,%ds$/;"	l
ffffffff801024d5	obj/kern/kernel.asm	/^ffffffff801024d5:	8e c0                	mov    %eax,%es$/;"	l
ffffffff801024d7	obj/kern/kernel.asm	/^ffffffff801024d7:	48 89 e7             	mov    %rsp,%rdi$/;"	l
ffffffff801024da	obj/kern/kernel.asm	/^ffffffff801024da:	e8 5d 01 00 00       	callq  ffffffff8010263c <trap>$/;"	l
ffffffff801024df	obj/kern/kernel.asm	/^ffffffff801024df <trapret>:$/;"	l
ffffffff801024df	obj/kern/kernel.asm	/^ffffffff801024df:	66 b8 20 00          	mov    $0x20,%ax$/;"	l
ffffffff801024e3	obj/kern/kernel.asm	/^ffffffff801024e3:	8e d8                	mov    %eax,%ds$/;"	l
ffffffff801024e5	obj/kern/kernel.asm	/^ffffffff801024e5:	8e c0                	mov    %eax,%es$/;"	l
ffffffff801024e7	obj/kern/kernel.asm	/^ffffffff801024e7:	58                   	pop    %rax$/;"	l
ffffffff801024e8	obj/kern/kernel.asm	/^ffffffff801024e8:	5b                   	pop    %rbx$/;"	l
ffffffff801024e9	obj/kern/kernel.asm	/^ffffffff801024e9:	59                   	pop    %rcx$/;"	l
ffffffff801024ea	obj/kern/kernel.asm	/^ffffffff801024ea:	5a                   	pop    %rdx$/;"	l
ffffffff801024eb	obj/kern/kernel.asm	/^ffffffff801024eb:	5d                   	pop    %rbp$/;"	l
ffffffff801024ec	obj/kern/kernel.asm	/^ffffffff801024ec:	5e                   	pop    %rsi$/;"	l
ffffffff801024ed	obj/kern/kernel.asm	/^ffffffff801024ed:	5f                   	pop    %rdi$/;"	l
ffffffff801024ee	obj/kern/kernel.asm	/^ffffffff801024ee:	41 58                	pop    %r8$/;"	l
ffffffff801024f0	obj/kern/kernel.asm	/^ffffffff801024f0:	41 59                	pop    %r9$/;"	l
ffffffff801024f2	obj/kern/kernel.asm	/^ffffffff801024f2:	41 5a                	pop    %r10$/;"	l
ffffffff801024f4	obj/kern/kernel.asm	/^ffffffff801024f4:	41 5b                	pop    %r11$/;"	l
ffffffff801024f6	obj/kern/kernel.asm	/^ffffffff801024f6:	41 5c                	pop    %r12$/;"	l
ffffffff801024f8	obj/kern/kernel.asm	/^ffffffff801024f8:	41 5d                	pop    %r13$/;"	l
ffffffff801024fa	obj/kern/kernel.asm	/^ffffffff801024fa:	41 5e                	pop    %r14$/;"	l
ffffffff801024fc	obj/kern/kernel.asm	/^ffffffff801024fc:	41 5f                	pop    %r15$/;"	l
ffffffff801024fe	obj/kern/kernel.asm	/^ffffffff801024fe:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffffffff80102502	obj/kern/kernel.asm	/^ffffffff80102502:	48 cf                	iretq  $/;"	l
ffffffff80102504	obj/kern/kernel.asm	/^ffffffff80102504 <mc146818_read>:$/;"	l
ffffffff80102504	obj/kern/kernel.asm	/^ffffffff80102504:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102508	obj/kern/kernel.asm	/^ffffffff80102508:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
ffffffff8010250d	obj/kern/kernel.asm	/^ffffffff8010250d:	89 f8                	mov    %edi,%eax$/;"	l
ffffffff8010250f	obj/kern/kernel.asm	/^ffffffff8010250f:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80102510	obj/kern/kernel.asm	/^ffffffff80102510:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
ffffffff80102515	obj/kern/kernel.asm	/^ffffffff80102515:	ec                   	in     (%dx),%al$/;"	l
ffffffff80102516	obj/kern/kernel.asm	/^ffffffff80102516:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffffffff80102519	obj/kern/kernel.asm	/^ffffffff80102519:	c3                   	retq   $/;"	l
ffffffff8010251a	obj/kern/kernel.asm	/^ffffffff8010251a <mc146818_write>:$/;"	l
ffffffff8010251a	obj/kern/kernel.asm	/^ffffffff8010251a:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010251e	obj/kern/kernel.asm	/^ffffffff8010251e:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
ffffffff80102523	obj/kern/kernel.asm	/^ffffffff80102523:	89 f8                	mov    %edi,%eax$/;"	l
ffffffff80102525	obj/kern/kernel.asm	/^ffffffff80102525:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80102526	obj/kern/kernel.asm	/^ffffffff80102526:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
ffffffff8010252b	obj/kern/kernel.asm	/^ffffffff8010252b:	89 f0                	mov    %esi,%eax$/;"	l
ffffffff8010252d	obj/kern/kernel.asm	/^ffffffff8010252d:	ee                   	out    %al,(%dx)$/;"	l
ffffffff8010252e	obj/kern/kernel.asm	/^ffffffff8010252e:	c3                   	retq   $/;"	l
ffffffff8010252f	obj/kern/kernel.asm	/^ffffffff8010252f <tvinit>:$/;"	l
ffffffff8010252f	obj/kern/kernel.asm	/^ffffffff8010252f:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102533	obj/kern/kernel.asm	/^ffffffff80102533:	55                   	push   %rbp$/;"	l
ffffffff80102534	obj/kern/kernel.asm	/^ffffffff80102534:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102537	obj/kern/kernel.asm	/^ffffffff80102537:	48 c7 c7 a8 dc 10 80 	mov    $0xffffffff8010dca8,%rdi$/;"	l
ffffffff8010253e	obj/kern/kernel.asm	/^ffffffff8010253e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80102543	obj/kern/kernel.asm	/^ffffffff80102543:	48 8b 04 d5 08 80 10 	mov    -0x7fef7ff8(,%rdx,8),%rax$/;"	l
ffffffff8010254a	obj/kern/kernel.asm	/^ffffffff8010254a:	80 $/;"	l
ffffffff8010254b	obj/kern/kernel.asm	/^ffffffff8010254b:	48 63 f2             	movslq %edx,%rsi$/;"	l
ffffffff8010254e	obj/kern/kernel.asm	/^ffffffff8010254e:	48 c1 e6 04          	shl    $0x4,%rsi$/;"	l
ffffffff80102552	obj/kern/kernel.asm	/^ffffffff80102552:	48 8d 8e a0 dc 10 80 	lea    -0x7fef2360(%rsi),%rcx$/;"	l
ffffffff80102559	obj/kern/kernel.asm	/^ffffffff80102559:	66 89 86 a0 dc 10 80 	mov    %ax,-0x7fef2360(%rsi)$/;"	l
ffffffff80102560	obj/kern/kernel.asm	/^ffffffff80102560:	66 c7 86 a2 dc 10 80 	movw   $0x8,-0x7fef235e(%rsi)$/;"	l
ffffffff80102567	obj/kern/kernel.asm	/^ffffffff80102567:	08 00 $/;"	l
ffffffff80102569	obj/kern/kernel.asm	/^ffffffff80102569:	c6 86 a4 dc 10 80 00 	movb   $0x0,-0x7fef235c(%rsi)$/;"	l
ffffffff80102570	obj/kern/kernel.asm	/^ffffffff80102570:	c6 86 a5 dc 10 80 8e 	movb   $0x8e,-0x7fef235b(%rsi)$/;"	l
ffffffff80102577	obj/kern/kernel.asm	/^ffffffff80102577:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffffffff8010257a	obj/kern/kernel.asm	/^ffffffff8010257a:	48 c1 ee 10          	shr    $0x10,%rsi$/;"	l
ffffffff8010257e	obj/kern/kernel.asm	/^ffffffff8010257e:	66 89 71 06          	mov    %si,0x6(%rcx)$/;"	l
ffffffff80102582	obj/kern/kernel.asm	/^ffffffff80102582:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffffffff80102586	obj/kern/kernel.asm	/^ffffffff80102586:	89 07                	mov    %eax,(%rdi)$/;"	l
ffffffff80102588	obj/kern/kernel.asm	/^ffffffff80102588:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)$/;"	l
ffffffff8010258f	obj/kern/kernel.asm	/^ffffffff8010258f:	48 83 c2 01          	add    $0x1,%rdx$/;"	l
ffffffff80102593	obj/kern/kernel.asm	/^ffffffff80102593:	48 83 c7 10          	add    $0x10,%rdi$/;"	l
ffffffff80102597	obj/kern/kernel.asm	/^ffffffff80102597:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx$/;"	l
ffffffff8010259e	obj/kern/kernel.asm	/^ffffffff8010259e:	75 a3                	jne    ffffffff80102543 <tvinit+0x14>$/;"	l
ffffffff801025a0	obj/kern/kernel.asm	/^ffffffff801025a0:	48 8b 05 e1 5b 00 00 	mov    0x5be1(%rip),%rax        # ffffffff80108188 <vectors+0x180>$/;"	l
ffffffff801025a7	obj/kern/kernel.asm	/^ffffffff801025a7:	66 89 05 f2 b9 00 00 	mov    %ax,0xb9f2(%rip)        # ffffffff8010dfa0 <idt+0x300>$/;"	l
ffffffff801025ae	obj/kern/kernel.asm	/^ffffffff801025ae:	66 c7 05 eb b9 00 00 	movw   $0x8,0xb9eb(%rip)        # ffffffff8010dfa2 <idt+0x302>$/;"	l
ffffffff801025b5	obj/kern/kernel.asm	/^ffffffff801025b5:	08 00 $/;"	l
ffffffff801025b7	obj/kern/kernel.asm	/^ffffffff801025b7:	c6 05 e6 b9 00 00 00 	movb   $0x0,0xb9e6(%rip)        # ffffffff8010dfa4 <idt+0x304>$/;"	l
ffffffff801025be	obj/kern/kernel.asm	/^ffffffff801025be:	c6 05 e0 b9 00 00 ef 	movb   $0xef,0xb9e0(%rip)        # ffffffff8010dfa5 <idt+0x305>$/;"	l
ffffffff801025c5	obj/kern/kernel.asm	/^ffffffff801025c5:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff801025c8	obj/kern/kernel.asm	/^ffffffff801025c8:	48 c1 ea 10          	shr    $0x10,%rdx$/;"	l
ffffffff801025cc	obj/kern/kernel.asm	/^ffffffff801025cc:	66 89 15 d3 b9 00 00 	mov    %dx,0xb9d3(%rip)        # ffffffff8010dfa6 <idt+0x306>$/;"	l
ffffffff801025d3	obj/kern/kernel.asm	/^ffffffff801025d3:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffffffff801025d7	obj/kern/kernel.asm	/^ffffffff801025d7:	89 05 cb b9 00 00    	mov    %eax,0xb9cb(%rip)        # ffffffff8010dfa8 <idt+0x308>$/;"	l
ffffffff801025dd	obj/kern/kernel.asm	/^ffffffff801025dd:	c7 05 c5 b9 00 00 00 	movl   $0x0,0xb9c5(%rip)        # ffffffff8010dfac <idt+0x30c>$/;"	l
ffffffff801025e4	obj/kern/kernel.asm	/^ffffffff801025e4:	00 00 00 $/;"	l
ffffffff801025e7	obj/kern/kernel.asm	/^ffffffff801025e7:	48 c7 c6 43 70 10 80 	mov    $0xffffffff80107043,%rsi$/;"	l
ffffffff801025ee	obj/kern/kernel.asm	/^ffffffff801025ee:	48 c7 c7 80 dc 10 80 	mov    $0xffffffff8010dc80,%rdi$/;"	l
ffffffff801025f5	obj/kern/kernel.asm	/^ffffffff801025f5:	e8 a9 dd ff ff       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff801025fa	obj/kern/kernel.asm	/^ffffffff801025fa:	5d                   	pop    %rbp$/;"	l
ffffffff801025fb	obj/kern/kernel.asm	/^ffffffff801025fb:	c3                   	retq   $/;"	l
ffffffff801025fc	obj/kern/kernel.asm	/^ffffffff801025fc <idtinit>:$/;"	l
ffffffff801025fc	obj/kern/kernel.asm	/^ffffffff801025fc:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102600	obj/kern/kernel.asm	/^ffffffff80102600:	55                   	push   %rbp$/;"	l
ffffffff80102601	obj/kern/kernel.asm	/^ffffffff80102601:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102604	obj/kern/kernel.asm	/^ffffffff80102604:	66 c7 45 f6 ff 0f    	movw   $0xfff,-0xa(%rbp)$/;"	l
ffffffff8010260a	obj/kern/kernel.asm	/^ffffffff8010260a:	48 c7 c0 a0 dc 10 80 	mov    $0xffffffff8010dca0,%rax$/;"	l
ffffffff80102611	obj/kern/kernel.asm	/^ffffffff80102611:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffffffff80102615	obj/kern/kernel.asm	/^ffffffff80102615:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff80102618	obj/kern/kernel.asm	/^ffffffff80102618:	48 c1 ea 10          	shr    $0x10,%rdx$/;"	l
ffffffff8010261c	obj/kern/kernel.asm	/^ffffffff8010261c:	66 89 55 fa          	mov    %dx,-0x6(%rbp)$/;"	l
ffffffff80102620	obj/kern/kernel.asm	/^ffffffff80102620:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff80102623	obj/kern/kernel.asm	/^ffffffff80102623:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffffffff80102627	obj/kern/kernel.asm	/^ffffffff80102627:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffffffff8010262b	obj/kern/kernel.asm	/^ffffffff8010262b:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffffffff8010262f	obj/kern/kernel.asm	/^ffffffff8010262f:	66 89 45 fe          	mov    %ax,-0x2(%rbp)$/;"	l
ffffffff80102633	obj/kern/kernel.asm	/^ffffffff80102633:	48 8d 45 f6          	lea    -0xa(%rbp),%rax$/;"	l
ffffffff80102637	obj/kern/kernel.asm	/^ffffffff80102637:	0f 01 18             	lidt   (%rax)$/;"	l
ffffffff8010263a	obj/kern/kernel.asm	/^ffffffff8010263a:	5d                   	pop    %rbp$/;"	l
ffffffff8010263b	obj/kern/kernel.asm	/^ffffffff8010263b:	c3                   	retq   $/;"	l
ffffffff8010263c	obj/kern/kernel.asm	/^ffffffff8010263c <trap>:$/;"	l
ffffffff8010263c	obj/kern/kernel.asm	/^ffffffff8010263c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102640	obj/kern/kernel.asm	/^ffffffff80102640:	55                   	push   %rbp$/;"	l
ffffffff80102641	obj/kern/kernel.asm	/^ffffffff80102641:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102644	obj/kern/kernel.asm	/^ffffffff80102644:	41 57                	push   %r15$/;"	l
ffffffff80102646	obj/kern/kernel.asm	/^ffffffff80102646:	41 56                	push   %r14$/;"	l
ffffffff80102648	obj/kern/kernel.asm	/^ffffffff80102648:	41 55                	push   %r13$/;"	l
ffffffff8010264a	obj/kern/kernel.asm	/^ffffffff8010264a:	41 54                	push   %r12$/;"	l
ffffffff8010264c	obj/kern/kernel.asm	/^ffffffff8010264c:	53                   	push   %rbx$/;"	l
ffffffff8010264d	obj/kern/kernel.asm	/^ffffffff8010264d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80102651	obj/kern/kernel.asm	/^ffffffff80102651:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80102654	obj/kern/kernel.asm	/^ffffffff80102654:	48 8b 47 78          	mov    0x78(%rdi),%rax$/;"	l
ffffffff80102658	obj/kern/kernel.asm	/^ffffffff80102658:	48 83 f8 30          	cmp    $0x30,%rax$/;"	l
ffffffff8010265c	obj/kern/kernel.asm	/^ffffffff8010265c:	74 16                	je     ffffffff80102674 <trap+0x38>$/;"	l
ffffffff8010265e	obj/kern/kernel.asm	/^ffffffff8010265e:	48 83 e8 20          	sub    $0x20,%rax$/;"	l
ffffffff80102662	obj/kern/kernel.asm	/^ffffffff80102662:	48 83 f8 0f          	cmp    $0xf,%rax$/;"	l
ffffffff80102666	obj/kern/kernel.asm	/^ffffffff80102666:	0f 87 26 01 00 00    	ja     ffffffff80102792 <trap+0x156>$/;"	l
ffffffff8010266c	obj/kern/kernel.asm	/^ffffffff8010266c:	3e ff 24 c5 d0 70 10 	notrack jmpq *-0x7fef8f30(,%rax,8)$/;"	l
ffffffff80102673	obj/kern/kernel.asm	/^ffffffff80102673:	80 $/;"	l
ffffffff80102674	obj/kern/kernel.asm	/^ffffffff80102674:	e8 77 ea ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80102679	obj/kern/kernel.asm	/^ffffffff80102679:	83 78 40 00          	cmpl   $0x0,0x40(%rax)$/;"	l
ffffffff8010267d	obj/kern/kernel.asm	/^ffffffff8010267d:	75 27                	jne    ffffffff801026a6 <trap+0x6a>$/;"	l
ffffffff8010267f	obj/kern/kernel.asm	/^ffffffff8010267f:	e8 6c ea ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80102684	obj/kern/kernel.asm	/^ffffffff80102684:	48 89 58 28          	mov    %rbx,0x28(%rax)$/;"	l
ffffffff80102688	obj/kern/kernel.asm	/^ffffffff80102688:	e8 07 04 00 00       	callq  ffffffff80102a94 <syscall>$/;"	l
ffffffff8010268d	obj/kern/kernel.asm	/^ffffffff8010268d:	e8 5e ea ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80102692	obj/kern/kernel.asm	/^ffffffff80102692:	83 78 40 00          	cmpl   $0x0,0x40(%rax)$/;"	l
ffffffff80102696	obj/kern/kernel.asm	/^ffffffff80102696:	0f 84 8a 00 00 00    	je     ffffffff80102726 <trap+0xea>$/;"	l
ffffffff8010269c	obj/kern/kernel.asm	/^ffffffff8010269c:	e8 37 ee ff ff       	callq  ffffffff801014d8 <exit>$/;"	l
ffffffff801026a1	obj/kern/kernel.asm	/^ffffffff801026a1:	e9 80 00 00 00       	jmpq   ffffffff80102726 <trap+0xea>$/;"	l
ffffffff801026a6	obj/kern/kernel.asm	/^ffffffff801026a6:	e8 2d ee ff ff       	callq  ffffffff801014d8 <exit>$/;"	l
ffffffff801026ab	obj/kern/kernel.asm	/^ffffffff801026ab:	eb d2                	jmp    ffffffff8010267f <trap+0x43>$/;"	l
ffffffff801026ad	obj/kern/kernel.asm	/^ffffffff801026ad:	e8 17 ea ff ff       	callq  ffffffff801010c9 <cpuid>$/;"	l
ffffffff801026b2	obj/kern/kernel.asm	/^ffffffff801026b2:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801026b4	obj/kern/kernel.asm	/^ffffffff801026b4:	74 7f                	je     ffffffff80102735 <trap+0xf9>$/;"	l
ffffffff801026b6	obj/kern/kernel.asm	/^ffffffff801026b6:	e8 d4 0e 00 00       	callq  ffffffff8010358f <lapiceoi>$/;"	l
ffffffff801026bb	obj/kern/kernel.asm	/^ffffffff801026bb:	e8 30 ea ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801026c0	obj/kern/kernel.asm	/^ffffffff801026c0:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801026c3	obj/kern/kernel.asm	/^ffffffff801026c3:	74 1f                	je     ffffffff801026e4 <trap+0xa8>$/;"	l
ffffffff801026c5	obj/kern/kernel.asm	/^ffffffff801026c5:	e8 26 ea ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801026ca	obj/kern/kernel.asm	/^ffffffff801026ca:	83 78 40 00          	cmpl   $0x0,0x40(%rax)$/;"	l
ffffffff801026ce	obj/kern/kernel.asm	/^ffffffff801026ce:	74 14                	je     ffffffff801026e4 <trap+0xa8>$/;"	l
ffffffff801026d0	obj/kern/kernel.asm	/^ffffffff801026d0:	0f b7 83 90 00 00 00 	movzwl 0x90(%rbx),%eax$/;"	l
ffffffff801026d7	obj/kern/kernel.asm	/^ffffffff801026d7:	83 e0 03             	and    $0x3,%eax$/;"	l
ffffffff801026da	obj/kern/kernel.asm	/^ffffffff801026da:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
ffffffff801026de	obj/kern/kernel.asm	/^ffffffff801026de:	0f 84 6b 01 00 00    	je     ffffffff8010284f <trap+0x213>$/;"	l
ffffffff801026e4	obj/kern/kernel.asm	/^ffffffff801026e4:	e8 07 ea ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801026e9	obj/kern/kernel.asm	/^ffffffff801026e9:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801026ec	obj/kern/kernel.asm	/^ffffffff801026ec:	74 0f                	je     ffffffff801026fd <trap+0xc1>$/;"	l
ffffffff801026ee	obj/kern/kernel.asm	/^ffffffff801026ee:	e8 fd e9 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801026f3	obj/kern/kernel.asm	/^ffffffff801026f3:	83 78 18 04          	cmpl   $0x4,0x18(%rax)$/;"	l
ffffffff801026f7	obj/kern/kernel.asm	/^ffffffff801026f7:	0f 84 5c 01 00 00    	je     ffffffff80102859 <trap+0x21d>$/;"	l
ffffffff801026fd	obj/kern/kernel.asm	/^ffffffff801026fd:	e8 ee e9 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80102702	obj/kern/kernel.asm	/^ffffffff80102702:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80102705	obj/kern/kernel.asm	/^ffffffff80102705:	74 1f                	je     ffffffff80102726 <trap+0xea>$/;"	l
ffffffff80102707	obj/kern/kernel.asm	/^ffffffff80102707:	e8 e4 e9 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff8010270c	obj/kern/kernel.asm	/^ffffffff8010270c:	83 78 40 00          	cmpl   $0x0,0x40(%rax)$/;"	l
ffffffff80102710	obj/kern/kernel.asm	/^ffffffff80102710:	74 14                	je     ffffffff80102726 <trap+0xea>$/;"	l
ffffffff80102712	obj/kern/kernel.asm	/^ffffffff80102712:	0f b7 83 90 00 00 00 	movzwl 0x90(%rbx),%eax$/;"	l
ffffffff80102719	obj/kern/kernel.asm	/^ffffffff80102719:	83 e0 03             	and    $0x3,%eax$/;"	l
ffffffff8010271c	obj/kern/kernel.asm	/^ffffffff8010271c:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
ffffffff80102720	obj/kern/kernel.asm	/^ffffffff80102720:	0f 84 48 01 00 00    	je     ffffffff8010286e <trap+0x232>$/;"	l
ffffffff80102726	obj/kern/kernel.asm	/^ffffffff80102726:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff8010272a	obj/kern/kernel.asm	/^ffffffff8010272a:	5b                   	pop    %rbx$/;"	l
ffffffff8010272b	obj/kern/kernel.asm	/^ffffffff8010272b:	41 5c                	pop    %r12$/;"	l
ffffffff8010272d	obj/kern/kernel.asm	/^ffffffff8010272d:	41 5d                	pop    %r13$/;"	l
ffffffff8010272f	obj/kern/kernel.asm	/^ffffffff8010272f:	41 5e                	pop    %r14$/;"	l
ffffffff80102731	obj/kern/kernel.asm	/^ffffffff80102731:	41 5f                	pop    %r15$/;"	l
ffffffff80102733	obj/kern/kernel.asm	/^ffffffff80102733:	5d                   	pop    %rbp$/;"	l
ffffffff80102734	obj/kern/kernel.asm	/^ffffffff80102734:	c3                   	retq   $/;"	l
ffffffff80102735	obj/kern/kernel.asm	/^ffffffff80102735:	48 c7 c7 80 dc 10 80 	mov    $0xffffffff8010dc80,%rdi$/;"	l
ffffffff8010273c	obj/kern/kernel.asm	/^ffffffff8010273c:	e8 5e dd ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80102741	obj/kern/kernel.asm	/^ffffffff80102741:	83 05 58 c5 00 00 01 	addl   $0x1,0xc558(%rip)        # ffffffff8010eca0 <ticks>$/;"	l
ffffffff80102748	obj/kern/kernel.asm	/^ffffffff80102748:	48 c7 c7 a0 ec 10 80 	mov    $0xffffffff8010eca0,%rdi$/;"	l
ffffffff8010274f	obj/kern/kernel.asm	/^ffffffff8010274f:	e8 a3 ee ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff80102754	obj/kern/kernel.asm	/^ffffffff80102754:	48 c7 c7 80 dc 10 80 	mov    $0xffffffff8010dc80,%rdi$/;"	l
ffffffff8010275b	obj/kern/kernel.asm	/^ffffffff8010275b:	e8 8d dd ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80102760	obj/kern/kernel.asm	/^ffffffff80102760:	e9 51 ff ff ff       	jmpq   ffffffff801026b6 <trap+0x7a>$/;"	l
ffffffff80102765	obj/kern/kernel.asm	/^ffffffff80102765:	e8 54 28 00 00       	callq  ffffffff80104fbe <ideintr>$/;"	l
ffffffff8010276a	obj/kern/kernel.asm	/^ffffffff8010276a:	e8 20 0e 00 00       	callq  ffffffff8010358f <lapiceoi>$/;"	l
ffffffff8010276f	obj/kern/kernel.asm	/^ffffffff8010276f:	e9 47 ff ff ff       	jmpq   ffffffff801026bb <trap+0x7f>$/;"	l
ffffffff80102774	obj/kern/kernel.asm	/^ffffffff80102774:	e8 ab 12 00 00       	callq  ffffffff80103a24 <kbdintr>$/;"	l
ffffffff80102779	obj/kern/kernel.asm	/^ffffffff80102779:	e8 11 0e 00 00       	callq  ffffffff8010358f <lapiceoi>$/;"	l
ffffffff8010277e	obj/kern/kernel.asm	/^ffffffff8010277e:	e9 38 ff ff ff       	jmpq   ffffffff801026bb <trap+0x7f>$/;"	l
ffffffff80102783	obj/kern/kernel.asm	/^ffffffff80102783:	e8 a0 10 00 00       	callq  ffffffff80103828 <uartintr>$/;"	l
ffffffff80102788	obj/kern/kernel.asm	/^ffffffff80102788:	e8 02 0e 00 00       	callq  ffffffff8010358f <lapiceoi>$/;"	l
ffffffff8010278d	obj/kern/kernel.asm	/^ffffffff8010278d:	e9 29 ff ff ff       	jmpq   ffffffff801026bb <trap+0x7f>$/;"	l
ffffffff80102792	obj/kern/kernel.asm	/^ffffffff80102792:	e8 59 e9 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80102797	obj/kern/kernel.asm	/^ffffffff80102797:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff8010279a	obj/kern/kernel.asm	/^ffffffff8010279a:	74 7a                	je     ffffffff80102816 <trap+0x1da>$/;"	l
ffffffff8010279c	obj/kern/kernel.asm	/^ffffffff8010279c:	f6 83 90 00 00 00 03 	testb  $0x3,0x90(%rbx)$/;"	l
ffffffff801027a3	obj/kern/kernel.asm	/^ffffffff801027a3:	74 71                	je     ffffffff80102816 <trap+0x1da>$/;"	l
ffffffff801027a5	obj/kern/kernel.asm	/^ffffffff801027a5:	e8 1f e9 ff ff       	callq  ffffffff801010c9 <cpuid>$/;"	l
ffffffff801027aa	obj/kern/kernel.asm	/^ffffffff801027aa:	41 89 c5             	mov    %eax,%r13d$/;"	l
ffffffff801027ad	obj/kern/kernel.asm	/^ffffffff801027ad:	4c 8b bb 80 00 00 00 	mov    0x80(%rbx),%r15$/;"	l
ffffffff801027b4	obj/kern/kernel.asm	/^ffffffff801027b4:	4c 8b 73 78          	mov    0x78(%rbx),%r14$/;"	l
ffffffff801027b8	obj/kern/kernel.asm	/^ffffffff801027b8:	e8 33 e9 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801027bd	obj/kern/kernel.asm	/^ffffffff801027bd:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801027c0	obj/kern/kernel.asm	/^ffffffff801027c0:	e8 2b e9 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801027c5	obj/kern/kernel.asm	/^ffffffff801027c5:	49 8d 94 24 d0 00 00 	lea    0xd0(%r12),%rdx$/;"	l
ffffffff801027cc	obj/kern/kernel.asm	/^ffffffff801027cc:	00 $/;"	l
ffffffff801027cd	obj/kern/kernel.asm	/^ffffffff801027cd:	8b 70 1c             	mov    0x1c(%rax),%esi$/;"	l
ffffffff801027d0	obj/kern/kernel.asm	/^ffffffff801027d0:	45 89 e9             	mov    %r13d,%r9d$/;"	l
ffffffff801027d3	obj/kern/kernel.asm	/^ffffffff801027d3:	4d 89 f8             	mov    %r15,%r8$/;"	l
ffffffff801027d6	obj/kern/kernel.asm	/^ffffffff801027d6:	4c 89 f1             	mov    %r14,%rcx$/;"	l
ffffffff801027d9	obj/kern/kernel.asm	/^ffffffff801027d9:	48 c7 c7 a8 70 10 80 	mov    $0xffffffff801070a8,%rdi$/;"	l
ffffffff801027e0	obj/kern/kernel.asm	/^ffffffff801027e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801027e5	obj/kern/kernel.asm	/^ffffffff801027e5:	e8 dc e0 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801027ea	obj/kern/kernel.asm	/^ffffffff801027ea:	0f 20 d2             	mov    %cr2,%rdx$/;"	l
ffffffff801027ed	obj/kern/kernel.asm	/^ffffffff801027ed:	48 8b b3 88 00 00 00 	mov    0x88(%rbx),%rsi$/;"	l
ffffffff801027f4	obj/kern/kernel.asm	/^ffffffff801027f4:	48 c7 c7 4d 70 10 80 	mov    $0xffffffff8010704d,%rdi$/;"	l
ffffffff801027fb	obj/kern/kernel.asm	/^ffffffff801027fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80102800	obj/kern/kernel.asm	/^ffffffff80102800:	e8 c1 e0 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80102805	obj/kern/kernel.asm	/^ffffffff80102805:	e8 e6 e8 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff8010280a	obj/kern/kernel.asm	/^ffffffff8010280a:	c7 40 40 01 00 00 00 	movl   $0x1,0x40(%rax)$/;"	l
ffffffff80102811	obj/kern/kernel.asm	/^ffffffff80102811:	e9 a5 fe ff ff       	jmpq   ffffffff801026bb <trap+0x7f>$/;"	l
ffffffff80102816	obj/kern/kernel.asm	/^ffffffff80102816:	41 0f 20 d5          	mov    %cr2,%r13$/;"	l
ffffffff8010281a	obj/kern/kernel.asm	/^ffffffff8010281a:	4c 8b a3 88 00 00 00 	mov    0x88(%rbx),%r12$/;"	l
ffffffff80102821	obj/kern/kernel.asm	/^ffffffff80102821:	e8 a3 e8 ff ff       	callq  ffffffff801010c9 <cpuid>$/;"	l
ffffffff80102826	obj/kern/kernel.asm	/^ffffffff80102826:	89 c2                	mov    %eax,%edx$/;"	l
ffffffff80102828	obj/kern/kernel.asm	/^ffffffff80102828:	48 8b 73 78          	mov    0x78(%rbx),%rsi$/;"	l
ffffffff8010282c	obj/kern/kernel.asm	/^ffffffff8010282c:	4d 89 e8             	mov    %r13,%r8$/;"	l
ffffffff8010282f	obj/kern/kernel.asm	/^ffffffff8010282f:	4c 89 e1             	mov    %r12,%rcx$/;"	l
ffffffff80102832	obj/kern/kernel.asm	/^ffffffff80102832:	48 c7 c7 70 70 10 80 	mov    $0xffffffff80107070,%rdi$/;"	l
ffffffff80102839	obj/kern/kernel.asm	/^ffffffff80102839:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010283e	obj/kern/kernel.asm	/^ffffffff8010283e:	e8 83 e0 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80102843	obj/kern/kernel.asm	/^ffffffff80102843:	48 c7 c7 48 70 10 80 	mov    $0xffffffff80107048,%rdi$/;"	l
ffffffff8010284a	obj/kern/kernel.asm	/^ffffffff8010284a:	e8 d4 dd ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010284f	obj/kern/kernel.asm	/^ffffffff8010284f:	e8 84 ec ff ff       	callq  ffffffff801014d8 <exit>$/;"	l
ffffffff80102854	obj/kern/kernel.asm	/^ffffffff80102854:	e9 8b fe ff ff       	jmpq   ffffffff801026e4 <trap+0xa8>$/;"	l
ffffffff80102859	obj/kern/kernel.asm	/^ffffffff80102859:	48 83 7b 78 20       	cmpq   $0x20,0x78(%rbx)$/;"	l
ffffffff8010285e	obj/kern/kernel.asm	/^ffffffff8010285e:	0f 85 99 fe ff ff    	jne    ffffffff801026fd <trap+0xc1>$/;"	l
ffffffff80102864	obj/kern/kernel.asm	/^ffffffff80102864:	e8 5b ed ff ff       	callq  ffffffff801015c4 <yield>$/;"	l
ffffffff80102869	obj/kern/kernel.asm	/^ffffffff80102869:	e9 8f fe ff ff       	jmpq   ffffffff801026fd <trap+0xc1>$/;"	l
ffffffff8010286e	obj/kern/kernel.asm	/^ffffffff8010286e:	e8 65 ec ff ff       	callq  ffffffff801014d8 <exit>$/;"	l
ffffffff80102873	obj/kern/kernel.asm	/^ffffffff80102873:	e9 ae fe ff ff       	jmpq   ffffffff80102726 <trap+0xea>$/;"	l
ffffffff80102878	obj/kern/kernel.asm	/^ffffffff80102878 <fetchint>:$/;"	l
ffffffff80102878	obj/kern/kernel.asm	/^ffffffff80102878:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010287c	obj/kern/kernel.asm	/^ffffffff8010287c:	55                   	push   %rbp$/;"	l
ffffffff8010287d	obj/kern/kernel.asm	/^ffffffff8010287d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102880	obj/kern/kernel.asm	/^ffffffff80102880:	41 54                	push   %r12$/;"	l
ffffffff80102882	obj/kern/kernel.asm	/^ffffffff80102882:	53                   	push   %rbx$/;"	l
ffffffff80102883	obj/kern/kernel.asm	/^ffffffff80102883:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80102886	obj/kern/kernel.asm	/^ffffffff80102886:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff80102889	obj/kern/kernel.asm	/^ffffffff80102889:	e8 62 e8 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff8010288e	obj/kern/kernel.asm	/^ffffffff8010288e:	48 8b 30             	mov    (%rax),%rsi$/;"	l
ffffffff80102891	obj/kern/kernel.asm	/^ffffffff80102891:	48 39 de             	cmp    %rbx,%rsi$/;"	l
ffffffff80102894	obj/kern/kernel.asm	/^ffffffff80102894:	76 1a                	jbe    ffffffff801028b0 <fetchint+0x38>$/;"	l
ffffffff80102896	obj/kern/kernel.asm	/^ffffffff80102896:	48 8d 43 08          	lea    0x8(%rbx),%rax$/;"	l
ffffffff8010289a	obj/kern/kernel.asm	/^ffffffff8010289a:	48 39 c6             	cmp    %rax,%rsi$/;"	l
ffffffff8010289d	obj/kern/kernel.asm	/^ffffffff8010289d:	72 11                	jb     ffffffff801028b0 <fetchint+0x38>$/;"	l
ffffffff8010289f	obj/kern/kernel.asm	/^ffffffff8010289f:	48 8b 03             	mov    (%rbx),%rax$/;"	l
ffffffff801028a2	obj/kern/kernel.asm	/^ffffffff801028a2:	49 89 04 24          	mov    %rax,(%r12)$/;"	l
ffffffff801028a6	obj/kern/kernel.asm	/^ffffffff801028a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801028ab	obj/kern/kernel.asm	/^ffffffff801028ab:	5b                   	pop    %rbx$/;"	l
ffffffff801028ac	obj/kern/kernel.asm	/^ffffffff801028ac:	41 5c                	pop    %r12$/;"	l
ffffffff801028ae	obj/kern/kernel.asm	/^ffffffff801028ae:	5d                   	pop    %rbp$/;"	l
ffffffff801028af	obj/kern/kernel.asm	/^ffffffff801028af:	c3                   	retq   $/;"	l
ffffffff801028b0	obj/kern/kernel.asm	/^ffffffff801028b0:	48 89 da             	mov    %rbx,%rdx$/;"	l
ffffffff801028b3	obj/kern/kernel.asm	/^ffffffff801028b3:	48 c7 c7 50 71 10 80 	mov    $0xffffffff80107150,%rdi$/;"	l
ffffffff801028ba	obj/kern/kernel.asm	/^ffffffff801028ba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801028bf	obj/kern/kernel.asm	/^ffffffff801028bf:	e8 02 e0 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801028c4	obj/kern/kernel.asm	/^ffffffff801028c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801028c9	obj/kern/kernel.asm	/^ffffffff801028c9:	eb e0                	jmp    ffffffff801028ab <fetchint+0x33>$/;"	l
ffffffff801028cb	obj/kern/kernel.asm	/^ffffffff801028cb <fetchstr>:$/;"	l
ffffffff801028cb	obj/kern/kernel.asm	/^ffffffff801028cb:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801028cf	obj/kern/kernel.asm	/^ffffffff801028cf:	55                   	push   %rbp$/;"	l
ffffffff801028d0	obj/kern/kernel.asm	/^ffffffff801028d0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801028d3	obj/kern/kernel.asm	/^ffffffff801028d3:	41 54                	push   %r12$/;"	l
ffffffff801028d5	obj/kern/kernel.asm	/^ffffffff801028d5:	53                   	push   %rbx$/;"	l
ffffffff801028d6	obj/kern/kernel.asm	/^ffffffff801028d6:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff801028d9	obj/kern/kernel.asm	/^ffffffff801028d9:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff801028dc	obj/kern/kernel.asm	/^ffffffff801028dc:	e8 0f e8 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801028e1	obj/kern/kernel.asm	/^ffffffff801028e1:	48 39 18             	cmp    %rbx,(%rax)$/;"	l
ffffffff801028e4	obj/kern/kernel.asm	/^ffffffff801028e4:	76 2b                	jbe    ffffffff80102911 <fetchstr+0x46>$/;"	l
ffffffff801028e6	obj/kern/kernel.asm	/^ffffffff801028e6:	49 89 1c 24          	mov    %rbx,(%r12)$/;"	l
ffffffff801028ea	obj/kern/kernel.asm	/^ffffffff801028ea:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffffffff801028ed	obj/kern/kernel.asm	/^ffffffff801028ed:	48 39 d3             	cmp    %rdx,%rbx$/;"	l
ffffffff801028f0	obj/kern/kernel.asm	/^ffffffff801028f0:	73 26                	jae    ffffffff80102918 <fetchstr+0x4d>$/;"	l
ffffffff801028f2	obj/kern/kernel.asm	/^ffffffff801028f2:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff801028f5	obj/kern/kernel.asm	/^ffffffff801028f5:	80 38 00             	cmpb   $0x0,(%rax)$/;"	l
ffffffff801028f8	obj/kern/kernel.asm	/^ffffffff801028f8:	74 10                	je     ffffffff8010290a <fetchstr+0x3f>$/;"	l
ffffffff801028fa	obj/kern/kernel.asm	/^ffffffff801028fa:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffffffff801028fe	obj/kern/kernel.asm	/^ffffffff801028fe:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffffffff80102901	obj/kern/kernel.asm	/^ffffffff80102901:	77 f2                	ja     ffffffff801028f5 <fetchstr+0x2a>$/;"	l
ffffffff80102903	obj/kern/kernel.asm	/^ffffffff80102903:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80102908	obj/kern/kernel.asm	/^ffffffff80102908:	eb 02                	jmp    ffffffff8010290c <fetchstr+0x41>$/;"	l
ffffffff8010290a	obj/kern/kernel.asm	/^ffffffff8010290a:	29 d8                	sub    %ebx,%eax$/;"	l
ffffffff8010290c	obj/kern/kernel.asm	/^ffffffff8010290c:	5b                   	pop    %rbx$/;"	l
ffffffff8010290d	obj/kern/kernel.asm	/^ffffffff8010290d:	41 5c                	pop    %r12$/;"	l
ffffffff8010290f	obj/kern/kernel.asm	/^ffffffff8010290f:	5d                   	pop    %rbp$/;"	l
ffffffff80102910	obj/kern/kernel.asm	/^ffffffff80102910:	c3                   	retq   $/;"	l
ffffffff80102911	obj/kern/kernel.asm	/^ffffffff80102911:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80102916	obj/kern/kernel.asm	/^ffffffff80102916:	eb f4                	jmp    ffffffff8010290c <fetchstr+0x41>$/;"	l
ffffffff80102918	obj/kern/kernel.asm	/^ffffffff80102918:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff8010291d	obj/kern/kernel.asm	/^ffffffff8010291d:	eb ed                	jmp    ffffffff8010290c <fetchstr+0x41>$/;"	l
ffffffff8010291f	obj/kern/kernel.asm	/^ffffffff8010291f <arg>:$/;"	l
ffffffff8010291f	obj/kern/kernel.asm	/^ffffffff8010291f:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102923	obj/kern/kernel.asm	/^ffffffff80102923:	55                   	push   %rbp$/;"	l
ffffffff80102924	obj/kern/kernel.asm	/^ffffffff80102924:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102927	obj/kern/kernel.asm	/^ffffffff80102927:	53                   	push   %rbx$/;"	l
ffffffff80102928	obj/kern/kernel.asm	/^ffffffff80102928:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010292c	obj/kern/kernel.asm	/^ffffffff8010292c:	83 ff 04             	cmp    $0x4,%edi$/;"	l
ffffffff8010292f	obj/kern/kernel.asm	/^ffffffff8010292f:	77 65                	ja     ffffffff80102996 <arg+0x77>$/;"	l
ffffffff80102931	obj/kern/kernel.asm	/^ffffffff80102931:	48 89 f3             	mov    %rsi,%rbx$/;"	l
ffffffff80102934	obj/kern/kernel.asm	/^ffffffff80102934:	89 ff                	mov    %edi,%edi$/;"	l
ffffffff80102936	obj/kern/kernel.asm	/^ffffffff80102936:	3e ff 24 fd c0 71 10 	notrack jmpq *-0x7fef8e40(,%rdi,8)$/;"	l
ffffffff8010293d	obj/kern/kernel.asm	/^ffffffff8010293d:	80 $/;"	l
ffffffff8010293e	obj/kern/kernel.asm	/^ffffffff8010293e:	e8 ad e7 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80102943	obj/kern/kernel.asm	/^ffffffff80102943:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffffffff80102947	obj/kern/kernel.asm	/^ffffffff80102947:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffffffff8010294b	obj/kern/kernel.asm	/^ffffffff8010294b:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffffffff8010294e	obj/kern/kernel.asm	/^ffffffff8010294e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80102953	obj/kern/kernel.asm	/^ffffffff80102953:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80102957	obj/kern/kernel.asm	/^ffffffff80102957:	5b                   	pop    %rbx$/;"	l
ffffffff80102958	obj/kern/kernel.asm	/^ffffffff80102958:	5d                   	pop    %rbp$/;"	l
ffffffff80102959	obj/kern/kernel.asm	/^ffffffff80102959:	c3                   	retq   $/;"	l
ffffffff8010295a	obj/kern/kernel.asm	/^ffffffff8010295a:	e8 91 e7 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff8010295f	obj/kern/kernel.asm	/^ffffffff8010295f:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffffffff80102963	obj/kern/kernel.asm	/^ffffffff80102963:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffffffff80102967	obj/kern/kernel.asm	/^ffffffff80102967:	eb e2                	jmp    ffffffff8010294b <arg+0x2c>$/;"	l
ffffffff80102969	obj/kern/kernel.asm	/^ffffffff80102969:	e8 82 e7 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff8010296e	obj/kern/kernel.asm	/^ffffffff8010296e:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffffffff80102972	obj/kern/kernel.asm	/^ffffffff80102972:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffffffff80102976	obj/kern/kernel.asm	/^ffffffff80102976:	eb d3                	jmp    ffffffff8010294b <arg+0x2c>$/;"	l
ffffffff80102978	obj/kern/kernel.asm	/^ffffffff80102978:	e8 73 e7 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff8010297d	obj/kern/kernel.asm	/^ffffffff8010297d:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffffffff80102981	obj/kern/kernel.asm	/^ffffffff80102981:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffffffff80102985	obj/kern/kernel.asm	/^ffffffff80102985:	eb c4                	jmp    ffffffff8010294b <arg+0x2c>$/;"	l
ffffffff80102987	obj/kern/kernel.asm	/^ffffffff80102987:	e8 64 e7 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff8010298c	obj/kern/kernel.asm	/^ffffffff8010298c:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffffffff80102990	obj/kern/kernel.asm	/^ffffffff80102990:	48 8b 40 38          	mov    0x38(%rax),%rax$/;"	l
ffffffff80102994	obj/kern/kernel.asm	/^ffffffff80102994:	eb b5                	jmp    ffffffff8010294b <arg+0x2c>$/;"	l
ffffffff80102996	obj/kern/kernel.asm	/^ffffffff80102996:	48 c7 c7 78 71 10 80 	mov    $0xffffffff80107178,%rdi$/;"	l
ffffffff8010299d	obj/kern/kernel.asm	/^ffffffff8010299d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801029a2	obj/kern/kernel.asm	/^ffffffff801029a2:	e8 1f df ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801029a7	obj/kern/kernel.asm	/^ffffffff801029a7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801029ac	obj/kern/kernel.asm	/^ffffffff801029ac:	eb a5                	jmp    ffffffff80102953 <arg+0x34>$/;"	l
ffffffff801029ae	obj/kern/kernel.asm	/^ffffffff801029ae <argint>:$/;"	l
ffffffff801029ae	obj/kern/kernel.asm	/^ffffffff801029ae:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801029b2	obj/kern/kernel.asm	/^ffffffff801029b2:	55                   	push   %rbp$/;"	l
ffffffff801029b3	obj/kern/kernel.asm	/^ffffffff801029b3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801029b6	obj/kern/kernel.asm	/^ffffffff801029b6:	53                   	push   %rbx$/;"	l
ffffffff801029b7	obj/kern/kernel.asm	/^ffffffff801029b7:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff801029bb	obj/kern/kernel.asm	/^ffffffff801029bb:	48 89 f3             	mov    %rsi,%rbx$/;"	l
ffffffff801029be	obj/kern/kernel.asm	/^ffffffff801029be:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi$/;"	l
ffffffff801029c2	obj/kern/kernel.asm	/^ffffffff801029c2:	e8 58 ff ff ff       	callq  ffffffff8010291f <arg>$/;"	l
ffffffff801029c7	obj/kern/kernel.asm	/^ffffffff801029c7:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801029c9	obj/kern/kernel.asm	/^ffffffff801029c9:	78 12                	js     ffffffff801029dd <argint+0x2f>$/;"	l
ffffffff801029cb	obj/kern/kernel.asm	/^ffffffff801029cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffffffff801029cf	obj/kern/kernel.asm	/^ffffffff801029cf:	89 03                	mov    %eax,(%rbx)$/;"	l
ffffffff801029d1	obj/kern/kernel.asm	/^ffffffff801029d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801029d6	obj/kern/kernel.asm	/^ffffffff801029d6:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff801029da	obj/kern/kernel.asm	/^ffffffff801029da:	5b                   	pop    %rbx$/;"	l
ffffffff801029db	obj/kern/kernel.asm	/^ffffffff801029db:	5d                   	pop    %rbp$/;"	l
ffffffff801029dc	obj/kern/kernel.asm	/^ffffffff801029dc:	c3                   	retq   $/;"	l
ffffffff801029dd	obj/kern/kernel.asm	/^ffffffff801029dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801029e2	obj/kern/kernel.asm	/^ffffffff801029e2:	eb f2                	jmp    ffffffff801029d6 <argint+0x28>$/;"	l
ffffffff801029e4	obj/kern/kernel.asm	/^ffffffff801029e4 <argptr>:$/;"	l
ffffffff801029e4	obj/kern/kernel.asm	/^ffffffff801029e4:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801029e8	obj/kern/kernel.asm	/^ffffffff801029e8:	55                   	push   %rbp$/;"	l
ffffffff801029e9	obj/kern/kernel.asm	/^ffffffff801029e9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801029ec	obj/kern/kernel.asm	/^ffffffff801029ec:	41 56                	push   %r14$/;"	l
ffffffff801029ee	obj/kern/kernel.asm	/^ffffffff801029ee:	41 55                	push   %r13$/;"	l
ffffffff801029f0	obj/kern/kernel.asm	/^ffffffff801029f0:	41 54                	push   %r12$/;"	l
ffffffff801029f2	obj/kern/kernel.asm	/^ffffffff801029f2:	53                   	push   %rbx$/;"	l
ffffffff801029f3	obj/kern/kernel.asm	/^ffffffff801029f3:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff801029f7	obj/kern/kernel.asm	/^ffffffff801029f7:	41 89 fc             	mov    %edi,%r12d$/;"	l
ffffffff801029fa	obj/kern/kernel.asm	/^ffffffff801029fa:	49 89 f5             	mov    %rsi,%r13$/;"	l
ffffffff801029fd	obj/kern/kernel.asm	/^ffffffff801029fd:	89 d3                	mov    %edx,%ebx$/;"	l
ffffffff801029ff	obj/kern/kernel.asm	/^ffffffff801029ff:	e8 ec e6 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80102a04	obj/kern/kernel.asm	/^ffffffff80102a04:	49 89 c6             	mov    %rax,%r14$/;"	l
ffffffff80102a07	obj/kern/kernel.asm	/^ffffffff80102a07:	48 8d 75 d8          	lea    -0x28(%rbp),%rsi$/;"	l
ffffffff80102a0b	obj/kern/kernel.asm	/^ffffffff80102a0b:	44 89 e7             	mov    %r12d,%edi$/;"	l
ffffffff80102a0e	obj/kern/kernel.asm	/^ffffffff80102a0e:	e8 0c ff ff ff       	callq  ffffffff8010291f <arg>$/;"	l
ffffffff80102a13	obj/kern/kernel.asm	/^ffffffff80102a13:	85 db                	test   %ebx,%ebx$/;"	l
ffffffff80102a15	obj/kern/kernel.asm	/^ffffffff80102a15:	78 31                	js     ffffffff80102a48 <argptr+0x64>$/;"	l
ffffffff80102a17	obj/kern/kernel.asm	/^ffffffff80102a17:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80102a19	obj/kern/kernel.asm	/^ffffffff80102a19:	78 2d                	js     ffffffff80102a48 <argptr+0x64>$/;"	l
ffffffff80102a1b	obj/kern/kernel.asm	/^ffffffff80102a1b:	49 8b 16             	mov    (%r14),%rdx$/;"	l
ffffffff80102a1e	obj/kern/kernel.asm	/^ffffffff80102a1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffffffff80102a22	obj/kern/kernel.asm	/^ffffffff80102a22:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffffffff80102a25	obj/kern/kernel.asm	/^ffffffff80102a25:	76 28                	jbe    ffffffff80102a4f <argptr+0x6b>$/;"	l
ffffffff80102a27	obj/kern/kernel.asm	/^ffffffff80102a27:	48 63 db             	movslq %ebx,%rbx$/;"	l
ffffffff80102a2a	obj/kern/kernel.asm	/^ffffffff80102a2a:	48 01 c3             	add    %rax,%rbx$/;"	l
ffffffff80102a2d	obj/kern/kernel.asm	/^ffffffff80102a2d:	48 39 da             	cmp    %rbx,%rdx$/;"	l
ffffffff80102a30	obj/kern/kernel.asm	/^ffffffff80102a30:	72 24                	jb     ffffffff80102a56 <argptr+0x72>$/;"	l
ffffffff80102a32	obj/kern/kernel.asm	/^ffffffff80102a32:	49 89 45 00          	mov    %rax,0x0(%r13)$/;"	l
ffffffff80102a36	obj/kern/kernel.asm	/^ffffffff80102a36:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80102a3b	obj/kern/kernel.asm	/^ffffffff80102a3b:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffffffff80102a3f	obj/kern/kernel.asm	/^ffffffff80102a3f:	5b                   	pop    %rbx$/;"	l
ffffffff80102a40	obj/kern/kernel.asm	/^ffffffff80102a40:	41 5c                	pop    %r12$/;"	l
ffffffff80102a42	obj/kern/kernel.asm	/^ffffffff80102a42:	41 5d                	pop    %r13$/;"	l
ffffffff80102a44	obj/kern/kernel.asm	/^ffffffff80102a44:	41 5e                	pop    %r14$/;"	l
ffffffff80102a46	obj/kern/kernel.asm	/^ffffffff80102a46:	5d                   	pop    %rbp$/;"	l
ffffffff80102a47	obj/kern/kernel.asm	/^ffffffff80102a47:	c3                   	retq   $/;"	l
ffffffff80102a48	obj/kern/kernel.asm	/^ffffffff80102a48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80102a4d	obj/kern/kernel.asm	/^ffffffff80102a4d:	eb ec                	jmp    ffffffff80102a3b <argptr+0x57>$/;"	l
ffffffff80102a4f	obj/kern/kernel.asm	/^ffffffff80102a4f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80102a54	obj/kern/kernel.asm	/^ffffffff80102a54:	eb e5                	jmp    ffffffff80102a3b <argptr+0x57>$/;"	l
ffffffff80102a56	obj/kern/kernel.asm	/^ffffffff80102a56:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80102a5b	obj/kern/kernel.asm	/^ffffffff80102a5b:	eb de                	jmp    ffffffff80102a3b <argptr+0x57>$/;"	l
ffffffff80102a5d	obj/kern/kernel.asm	/^ffffffff80102a5d <argstr>:$/;"	l
ffffffff80102a5d	obj/kern/kernel.asm	/^ffffffff80102a5d:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102a61	obj/kern/kernel.asm	/^ffffffff80102a61:	55                   	push   %rbp$/;"	l
ffffffff80102a62	obj/kern/kernel.asm	/^ffffffff80102a62:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102a65	obj/kern/kernel.asm	/^ffffffff80102a65:	53                   	push   %rbx$/;"	l
ffffffff80102a66	obj/kern/kernel.asm	/^ffffffff80102a66:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80102a6a	obj/kern/kernel.asm	/^ffffffff80102a6a:	48 89 f3             	mov    %rsi,%rbx$/;"	l
ffffffff80102a6d	obj/kern/kernel.asm	/^ffffffff80102a6d:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi$/;"	l
ffffffff80102a71	obj/kern/kernel.asm	/^ffffffff80102a71:	e8 a9 fe ff ff       	callq  ffffffff8010291f <arg>$/;"	l
ffffffff80102a76	obj/kern/kernel.asm	/^ffffffff80102a76:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80102a78	obj/kern/kernel.asm	/^ffffffff80102a78:	78 13                	js     ffffffff80102a8d <argstr+0x30>$/;"	l
ffffffff80102a7a	obj/kern/kernel.asm	/^ffffffff80102a7a:	48 89 de             	mov    %rbx,%rsi$/;"	l
ffffffff80102a7d	obj/kern/kernel.asm	/^ffffffff80102a7d:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi$/;"	l
ffffffff80102a81	obj/kern/kernel.asm	/^ffffffff80102a81:	e8 45 fe ff ff       	callq  ffffffff801028cb <fetchstr>$/;"	l
ffffffff80102a86	obj/kern/kernel.asm	/^ffffffff80102a86:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff80102a8a	obj/kern/kernel.asm	/^ffffffff80102a8a:	5b                   	pop    %rbx$/;"	l
ffffffff80102a8b	obj/kern/kernel.asm	/^ffffffff80102a8b:	5d                   	pop    %rbp$/;"	l
ffffffff80102a8c	obj/kern/kernel.asm	/^ffffffff80102a8c:	c3                   	retq   $/;"	l
ffffffff80102a8d	obj/kern/kernel.asm	/^ffffffff80102a8d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80102a92	obj/kern/kernel.asm	/^ffffffff80102a92:	eb f2                	jmp    ffffffff80102a86 <argstr+0x29>$/;"	l
ffffffff80102a94	obj/kern/kernel.asm	/^ffffffff80102a94 <syscall>:$/;"	l
ffffffff80102a94	obj/kern/kernel.asm	/^ffffffff80102a94:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80102a98	obj/kern/kernel.asm	/^ffffffff80102a98:	55                   	push   %rbp$/;"	l
ffffffff80102a99	obj/kern/kernel.asm	/^ffffffff80102a99:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80102a9c	obj/kern/kernel.asm	/^ffffffff80102a9c:	53                   	push   %rbx$/;"	l
ffffffff80102a9d	obj/kern/kernel.asm	/^ffffffff80102a9d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80102aa1	obj/kern/kernel.asm	/^ffffffff80102aa1:	e8 4a e6 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80102aa6	obj/kern/kernel.asm	/^ffffffff80102aa6:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80102aa9	obj/kern/kernel.asm	/^ffffffff80102aa9:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffffffff80102aad	obj/kern/kernel.asm	/^ffffffff80102aad:	48 8b 08             	mov    (%rax),%rcx$/;"	l
ffffffff80102ab0	obj/kern/kernel.asm	/^ffffffff80102ab0:	48 8d 41 ff          	lea    -0x1(%rcx),%rax$/;"	l
ffffffff80102ab4	obj/kern/kernel.asm	/^ffffffff80102ab4:	48 83 f8 14          	cmp    $0x14,%rax$/;"	l
ffffffff80102ab8	obj/kern/kernel.asm	/^ffffffff80102ab8:	77 1b                	ja     ffffffff80102ad5 <syscall+0x41>$/;"	l
ffffffff80102aba	obj/kern/kernel.asm	/^ffffffff80102aba:	48 8b 04 cd 00 72 10 	mov    -0x7fef8e00(,%rcx,8),%rax$/;"	l
ffffffff80102ac1	obj/kern/kernel.asm	/^ffffffff80102ac1:	80 $/;"	l
ffffffff80102ac2	obj/kern/kernel.asm	/^ffffffff80102ac2:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80102ac5	obj/kern/kernel.asm	/^ffffffff80102ac5:	74 0e                	je     ffffffff80102ad5 <syscall+0x41>$/;"	l
ffffffff80102ac7	obj/kern/kernel.asm	/^ffffffff80102ac7:	ff d0                	callq  *%rax$/;"	l
ffffffff80102ac9	obj/kern/kernel.asm	/^ffffffff80102ac9:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff80102acc	obj/kern/kernel.asm	/^ffffffff80102acc:	48 8b 43 28          	mov    0x28(%rbx),%rax$/;"	l
ffffffff80102ad0	obj/kern/kernel.asm	/^ffffffff80102ad0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffffffff80102ad3	obj/kern/kernel.asm	/^ffffffff80102ad3:	eb 26                	jmp    ffffffff80102afb <syscall+0x67>$/;"	l
ffffffff80102ad5	obj/kern/kernel.asm	/^ffffffff80102ad5:	48 8d 93 d0 00 00 00 	lea    0xd0(%rbx),%rdx$/;"	l
ffffffff80102adc	obj/kern/kernel.asm	/^ffffffff80102adc:	8b 73 1c             	mov    0x1c(%rbx),%esi$/;"	l
ffffffff80102adf	obj/kern/kernel.asm	/^ffffffff80102adf:	48 c7 c7 b0 72 10 80 	mov    $0xffffffff801072b0,%rdi$/;"	l
ffffffff80102ae6	obj/kern/kernel.asm	/^ffffffff80102ae6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80102aeb	obj/kern/kernel.asm	/^ffffffff80102aeb:	e8 d6 dd ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80102af0	obj/kern/kernel.asm	/^ffffffff80102af0:	48 8b 43 28          	mov    0x28(%rbx),%rax$/;"	l
ffffffff80102af4	obj/kern/kernel.asm	/^ffffffff80102af4:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)$/;"	l
ffffffff80102afb	obj/kern/kernel.asm	/^ffffffff80102afb:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80102aff	obj/kern/kernel.asm	/^ffffffff80102aff:	5b                   	pop    %rbx$/;"	l
ffffffff80102b00	obj/kern/kernel.asm	/^ffffffff80102b00:	5d                   	pop    %rbp$/;"	l
ffffffff80102b01	obj/kern/kernel.asm	/^ffffffff80102b01:	c3                   	retq   $/;"	l
ffffffff80102b02	obj/kern/kernel.asm	/^ffffffff80102b02 <vector0>:$/;"	l
ffffffff80102b02	obj/kern/kernel.asm	/^ffffffff80102b02:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b04	obj/kern/kernel.asm	/^ffffffff80102b04:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b06	obj/kern/kernel.asm	/^ffffffff80102b06:	e9 ad f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b0b	obj/kern/kernel.asm	/^ffffffff80102b0b <vector1>:$/;"	l
ffffffff80102b0b	obj/kern/kernel.asm	/^ffffffff80102b0b:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b0d	obj/kern/kernel.asm	/^ffffffff80102b0d:	6a 01                	pushq  $0x1$/;"	l
ffffffff80102b0f	obj/kern/kernel.asm	/^ffffffff80102b0f:	e9 a4 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b14	obj/kern/kernel.asm	/^ffffffff80102b14 <vector2>:$/;"	l
ffffffff80102b14	obj/kern/kernel.asm	/^ffffffff80102b14:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b16	obj/kern/kernel.asm	/^ffffffff80102b16:	6a 02                	pushq  $0x2$/;"	l
ffffffff80102b18	obj/kern/kernel.asm	/^ffffffff80102b18:	e9 9b f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b1d	obj/kern/kernel.asm	/^ffffffff80102b1d <vector3>:$/;"	l
ffffffff80102b1d	obj/kern/kernel.asm	/^ffffffff80102b1d:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b1f	obj/kern/kernel.asm	/^ffffffff80102b1f:	6a 03                	pushq  $0x3$/;"	l
ffffffff80102b21	obj/kern/kernel.asm	/^ffffffff80102b21:	e9 92 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b26	obj/kern/kernel.asm	/^ffffffff80102b26 <vector4>:$/;"	l
ffffffff80102b26	obj/kern/kernel.asm	/^ffffffff80102b26:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b28	obj/kern/kernel.asm	/^ffffffff80102b28:	6a 04                	pushq  $0x4$/;"	l
ffffffff80102b2a	obj/kern/kernel.asm	/^ffffffff80102b2a:	e9 89 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b2f	obj/kern/kernel.asm	/^ffffffff80102b2f <vector5>:$/;"	l
ffffffff80102b2f	obj/kern/kernel.asm	/^ffffffff80102b2f:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b31	obj/kern/kernel.asm	/^ffffffff80102b31:	6a 05                	pushq  $0x5$/;"	l
ffffffff80102b33	obj/kern/kernel.asm	/^ffffffff80102b33:	e9 80 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b38	obj/kern/kernel.asm	/^ffffffff80102b38 <vector6>:$/;"	l
ffffffff80102b38	obj/kern/kernel.asm	/^ffffffff80102b38:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b3a	obj/kern/kernel.asm	/^ffffffff80102b3a:	6a 06                	pushq  $0x6$/;"	l
ffffffff80102b3c	obj/kern/kernel.asm	/^ffffffff80102b3c:	e9 77 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b41	obj/kern/kernel.asm	/^ffffffff80102b41 <vector7>:$/;"	l
ffffffff80102b41	obj/kern/kernel.asm	/^ffffffff80102b41:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b43	obj/kern/kernel.asm	/^ffffffff80102b43:	6a 07                	pushq  $0x7$/;"	l
ffffffff80102b45	obj/kern/kernel.asm	/^ffffffff80102b45:	e9 6e f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b4a	obj/kern/kernel.asm	/^ffffffff80102b4a <vector8>:$/;"	l
ffffffff80102b4a	obj/kern/kernel.asm	/^ffffffff80102b4a:	6a 08                	pushq  $0x8$/;"	l
ffffffff80102b4c	obj/kern/kernel.asm	/^ffffffff80102b4c:	e9 67 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b51	obj/kern/kernel.asm	/^ffffffff80102b51 <vector9>:$/;"	l
ffffffff80102b51	obj/kern/kernel.asm	/^ffffffff80102b51:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b53	obj/kern/kernel.asm	/^ffffffff80102b53:	6a 09                	pushq  $0x9$/;"	l
ffffffff80102b55	obj/kern/kernel.asm	/^ffffffff80102b55:	e9 5e f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b5a	obj/kern/kernel.asm	/^ffffffff80102b5a <vector10>:$/;"	l
ffffffff80102b5a	obj/kern/kernel.asm	/^ffffffff80102b5a:	6a 0a                	pushq  $0xa$/;"	l
ffffffff80102b5c	obj/kern/kernel.asm	/^ffffffff80102b5c:	e9 57 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b61	obj/kern/kernel.asm	/^ffffffff80102b61 <vector11>:$/;"	l
ffffffff80102b61	obj/kern/kernel.asm	/^ffffffff80102b61:	6a 0b                	pushq  $0xb$/;"	l
ffffffff80102b63	obj/kern/kernel.asm	/^ffffffff80102b63:	e9 50 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b68	obj/kern/kernel.asm	/^ffffffff80102b68 <vector12>:$/;"	l
ffffffff80102b68	obj/kern/kernel.asm	/^ffffffff80102b68:	6a 0c                	pushq  $0xc$/;"	l
ffffffff80102b6a	obj/kern/kernel.asm	/^ffffffff80102b6a:	e9 49 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b6f	obj/kern/kernel.asm	/^ffffffff80102b6f <vector13>:$/;"	l
ffffffff80102b6f	obj/kern/kernel.asm	/^ffffffff80102b6f:	6a 0d                	pushq  $0xd$/;"	l
ffffffff80102b71	obj/kern/kernel.asm	/^ffffffff80102b71:	e9 42 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b76	obj/kern/kernel.asm	/^ffffffff80102b76 <vector14>:$/;"	l
ffffffff80102b76	obj/kern/kernel.asm	/^ffffffff80102b76:	6a 0e                	pushq  $0xe$/;"	l
ffffffff80102b78	obj/kern/kernel.asm	/^ffffffff80102b78:	e9 3b f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b7d	obj/kern/kernel.asm	/^ffffffff80102b7d <vector15>:$/;"	l
ffffffff80102b7d	obj/kern/kernel.asm	/^ffffffff80102b7d:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b7f	obj/kern/kernel.asm	/^ffffffff80102b7f:	6a 0f                	pushq  $0xf$/;"	l
ffffffff80102b81	obj/kern/kernel.asm	/^ffffffff80102b81:	e9 32 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b86	obj/kern/kernel.asm	/^ffffffff80102b86 <vector16>:$/;"	l
ffffffff80102b86	obj/kern/kernel.asm	/^ffffffff80102b86:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b88	obj/kern/kernel.asm	/^ffffffff80102b88:	6a 10                	pushq  $0x10$/;"	l
ffffffff80102b8a	obj/kern/kernel.asm	/^ffffffff80102b8a:	e9 29 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b8f	obj/kern/kernel.asm	/^ffffffff80102b8f <vector17>:$/;"	l
ffffffff80102b8f	obj/kern/kernel.asm	/^ffffffff80102b8f:	6a 11                	pushq  $0x11$/;"	l
ffffffff80102b91	obj/kern/kernel.asm	/^ffffffff80102b91:	e9 22 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b96	obj/kern/kernel.asm	/^ffffffff80102b96 <vector18>:$/;"	l
ffffffff80102b96	obj/kern/kernel.asm	/^ffffffff80102b96:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102b98	obj/kern/kernel.asm	/^ffffffff80102b98:	6a 12                	pushq  $0x12$/;"	l
ffffffff80102b9a	obj/kern/kernel.asm	/^ffffffff80102b9a:	e9 19 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102b9f	obj/kern/kernel.asm	/^ffffffff80102b9f <vector19>:$/;"	l
ffffffff80102b9f	obj/kern/kernel.asm	/^ffffffff80102b9f:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ba1	obj/kern/kernel.asm	/^ffffffff80102ba1:	6a 13                	pushq  $0x13$/;"	l
ffffffff80102ba3	obj/kern/kernel.asm	/^ffffffff80102ba3:	e9 10 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ba8	obj/kern/kernel.asm	/^ffffffff80102ba8 <vector20>:$/;"	l
ffffffff80102ba8	obj/kern/kernel.asm	/^ffffffff80102ba8:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102baa	obj/kern/kernel.asm	/^ffffffff80102baa:	6a 14                	pushq  $0x14$/;"	l
ffffffff80102bac	obj/kern/kernel.asm	/^ffffffff80102bac:	e9 07 f9 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102bb1	obj/kern/kernel.asm	/^ffffffff80102bb1 <vector21>:$/;"	l
ffffffff80102bb1	obj/kern/kernel.asm	/^ffffffff80102bb1:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102bb3	obj/kern/kernel.asm	/^ffffffff80102bb3:	6a 15                	pushq  $0x15$/;"	l
ffffffff80102bb5	obj/kern/kernel.asm	/^ffffffff80102bb5:	e9 fe f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102bba	obj/kern/kernel.asm	/^ffffffff80102bba <vector22>:$/;"	l
ffffffff80102bba	obj/kern/kernel.asm	/^ffffffff80102bba:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102bbc	obj/kern/kernel.asm	/^ffffffff80102bbc:	6a 16                	pushq  $0x16$/;"	l
ffffffff80102bbe	obj/kern/kernel.asm	/^ffffffff80102bbe:	e9 f5 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102bc3	obj/kern/kernel.asm	/^ffffffff80102bc3 <vector23>:$/;"	l
ffffffff80102bc3	obj/kern/kernel.asm	/^ffffffff80102bc3:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102bc5	obj/kern/kernel.asm	/^ffffffff80102bc5:	6a 17                	pushq  $0x17$/;"	l
ffffffff80102bc7	obj/kern/kernel.asm	/^ffffffff80102bc7:	e9 ec f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102bcc	obj/kern/kernel.asm	/^ffffffff80102bcc <vector24>:$/;"	l
ffffffff80102bcc	obj/kern/kernel.asm	/^ffffffff80102bcc:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102bce	obj/kern/kernel.asm	/^ffffffff80102bce:	6a 18                	pushq  $0x18$/;"	l
ffffffff80102bd0	obj/kern/kernel.asm	/^ffffffff80102bd0:	e9 e3 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102bd5	obj/kern/kernel.asm	/^ffffffff80102bd5 <vector25>:$/;"	l
ffffffff80102bd5	obj/kern/kernel.asm	/^ffffffff80102bd5:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102bd7	obj/kern/kernel.asm	/^ffffffff80102bd7:	6a 19                	pushq  $0x19$/;"	l
ffffffff80102bd9	obj/kern/kernel.asm	/^ffffffff80102bd9:	e9 da f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102bde	obj/kern/kernel.asm	/^ffffffff80102bde <vector26>:$/;"	l
ffffffff80102bde	obj/kern/kernel.asm	/^ffffffff80102bde:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102be0	obj/kern/kernel.asm	/^ffffffff80102be0:	6a 1a                	pushq  $0x1a$/;"	l
ffffffff80102be2	obj/kern/kernel.asm	/^ffffffff80102be2:	e9 d1 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102be7	obj/kern/kernel.asm	/^ffffffff80102be7 <vector27>:$/;"	l
ffffffff80102be7	obj/kern/kernel.asm	/^ffffffff80102be7:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102be9	obj/kern/kernel.asm	/^ffffffff80102be9:	6a 1b                	pushq  $0x1b$/;"	l
ffffffff80102beb	obj/kern/kernel.asm	/^ffffffff80102beb:	e9 c8 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102bf0	obj/kern/kernel.asm	/^ffffffff80102bf0 <vector28>:$/;"	l
ffffffff80102bf0	obj/kern/kernel.asm	/^ffffffff80102bf0:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102bf2	obj/kern/kernel.asm	/^ffffffff80102bf2:	6a 1c                	pushq  $0x1c$/;"	l
ffffffff80102bf4	obj/kern/kernel.asm	/^ffffffff80102bf4:	e9 bf f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102bf9	obj/kern/kernel.asm	/^ffffffff80102bf9 <vector29>:$/;"	l
ffffffff80102bf9	obj/kern/kernel.asm	/^ffffffff80102bf9:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102bfb	obj/kern/kernel.asm	/^ffffffff80102bfb:	6a 1d                	pushq  $0x1d$/;"	l
ffffffff80102bfd	obj/kern/kernel.asm	/^ffffffff80102bfd:	e9 b6 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c02	obj/kern/kernel.asm	/^ffffffff80102c02 <vector30>:$/;"	l
ffffffff80102c02	obj/kern/kernel.asm	/^ffffffff80102c02:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c04	obj/kern/kernel.asm	/^ffffffff80102c04:	6a 1e                	pushq  $0x1e$/;"	l
ffffffff80102c06	obj/kern/kernel.asm	/^ffffffff80102c06:	e9 ad f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c0b	obj/kern/kernel.asm	/^ffffffff80102c0b <vector31>:$/;"	l
ffffffff80102c0b	obj/kern/kernel.asm	/^ffffffff80102c0b:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c0d	obj/kern/kernel.asm	/^ffffffff80102c0d:	6a 1f                	pushq  $0x1f$/;"	l
ffffffff80102c0f	obj/kern/kernel.asm	/^ffffffff80102c0f:	e9 a4 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c14	obj/kern/kernel.asm	/^ffffffff80102c14 <vector32>:$/;"	l
ffffffff80102c14	obj/kern/kernel.asm	/^ffffffff80102c14:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c16	obj/kern/kernel.asm	/^ffffffff80102c16:	6a 20                	pushq  $0x20$/;"	l
ffffffff80102c18	obj/kern/kernel.asm	/^ffffffff80102c18:	e9 9b f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c1d	obj/kern/kernel.asm	/^ffffffff80102c1d <vector33>:$/;"	l
ffffffff80102c1d	obj/kern/kernel.asm	/^ffffffff80102c1d:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c1f	obj/kern/kernel.asm	/^ffffffff80102c1f:	6a 21                	pushq  $0x21$/;"	l
ffffffff80102c21	obj/kern/kernel.asm	/^ffffffff80102c21:	e9 92 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c26	obj/kern/kernel.asm	/^ffffffff80102c26 <vector34>:$/;"	l
ffffffff80102c26	obj/kern/kernel.asm	/^ffffffff80102c26:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c28	obj/kern/kernel.asm	/^ffffffff80102c28:	6a 22                	pushq  $0x22$/;"	l
ffffffff80102c2a	obj/kern/kernel.asm	/^ffffffff80102c2a:	e9 89 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c2f	obj/kern/kernel.asm	/^ffffffff80102c2f <vector35>:$/;"	l
ffffffff80102c2f	obj/kern/kernel.asm	/^ffffffff80102c2f:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c31	obj/kern/kernel.asm	/^ffffffff80102c31:	6a 23                	pushq  $0x23$/;"	l
ffffffff80102c33	obj/kern/kernel.asm	/^ffffffff80102c33:	e9 80 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c38	obj/kern/kernel.asm	/^ffffffff80102c38 <vector36>:$/;"	l
ffffffff80102c38	obj/kern/kernel.asm	/^ffffffff80102c38:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c3a	obj/kern/kernel.asm	/^ffffffff80102c3a:	6a 24                	pushq  $0x24$/;"	l
ffffffff80102c3c	obj/kern/kernel.asm	/^ffffffff80102c3c:	e9 77 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c41	obj/kern/kernel.asm	/^ffffffff80102c41 <vector37>:$/;"	l
ffffffff80102c41	obj/kern/kernel.asm	/^ffffffff80102c41:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c43	obj/kern/kernel.asm	/^ffffffff80102c43:	6a 25                	pushq  $0x25$/;"	l
ffffffff80102c45	obj/kern/kernel.asm	/^ffffffff80102c45:	e9 6e f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c4a	obj/kern/kernel.asm	/^ffffffff80102c4a <vector38>:$/;"	l
ffffffff80102c4a	obj/kern/kernel.asm	/^ffffffff80102c4a:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c4c	obj/kern/kernel.asm	/^ffffffff80102c4c:	6a 26                	pushq  $0x26$/;"	l
ffffffff80102c4e	obj/kern/kernel.asm	/^ffffffff80102c4e:	e9 65 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c53	obj/kern/kernel.asm	/^ffffffff80102c53 <vector39>:$/;"	l
ffffffff80102c53	obj/kern/kernel.asm	/^ffffffff80102c53:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c55	obj/kern/kernel.asm	/^ffffffff80102c55:	6a 27                	pushq  $0x27$/;"	l
ffffffff80102c57	obj/kern/kernel.asm	/^ffffffff80102c57:	e9 5c f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c5c	obj/kern/kernel.asm	/^ffffffff80102c5c <vector40>:$/;"	l
ffffffff80102c5c	obj/kern/kernel.asm	/^ffffffff80102c5c:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c5e	obj/kern/kernel.asm	/^ffffffff80102c5e:	6a 28                	pushq  $0x28$/;"	l
ffffffff80102c60	obj/kern/kernel.asm	/^ffffffff80102c60:	e9 53 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c65	obj/kern/kernel.asm	/^ffffffff80102c65 <vector41>:$/;"	l
ffffffff80102c65	obj/kern/kernel.asm	/^ffffffff80102c65:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c67	obj/kern/kernel.asm	/^ffffffff80102c67:	6a 29                	pushq  $0x29$/;"	l
ffffffff80102c69	obj/kern/kernel.asm	/^ffffffff80102c69:	e9 4a f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c6e	obj/kern/kernel.asm	/^ffffffff80102c6e <vector42>:$/;"	l
ffffffff80102c6e	obj/kern/kernel.asm	/^ffffffff80102c6e:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c70	obj/kern/kernel.asm	/^ffffffff80102c70:	6a 2a                	pushq  $0x2a$/;"	l
ffffffff80102c72	obj/kern/kernel.asm	/^ffffffff80102c72:	e9 41 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c77	obj/kern/kernel.asm	/^ffffffff80102c77 <vector43>:$/;"	l
ffffffff80102c77	obj/kern/kernel.asm	/^ffffffff80102c77:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c79	obj/kern/kernel.asm	/^ffffffff80102c79:	6a 2b                	pushq  $0x2b$/;"	l
ffffffff80102c7b	obj/kern/kernel.asm	/^ffffffff80102c7b:	e9 38 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c80	obj/kern/kernel.asm	/^ffffffff80102c80 <vector44>:$/;"	l
ffffffff80102c80	obj/kern/kernel.asm	/^ffffffff80102c80:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c82	obj/kern/kernel.asm	/^ffffffff80102c82:	6a 2c                	pushq  $0x2c$/;"	l
ffffffff80102c84	obj/kern/kernel.asm	/^ffffffff80102c84:	e9 2f f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c89	obj/kern/kernel.asm	/^ffffffff80102c89 <vector45>:$/;"	l
ffffffff80102c89	obj/kern/kernel.asm	/^ffffffff80102c89:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c8b	obj/kern/kernel.asm	/^ffffffff80102c8b:	6a 2d                	pushq  $0x2d$/;"	l
ffffffff80102c8d	obj/kern/kernel.asm	/^ffffffff80102c8d:	e9 26 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c92	obj/kern/kernel.asm	/^ffffffff80102c92 <vector46>:$/;"	l
ffffffff80102c92	obj/kern/kernel.asm	/^ffffffff80102c92:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c94	obj/kern/kernel.asm	/^ffffffff80102c94:	6a 2e                	pushq  $0x2e$/;"	l
ffffffff80102c96	obj/kern/kernel.asm	/^ffffffff80102c96:	e9 1d f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102c9b	obj/kern/kernel.asm	/^ffffffff80102c9b <vector47>:$/;"	l
ffffffff80102c9b	obj/kern/kernel.asm	/^ffffffff80102c9b:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102c9d	obj/kern/kernel.asm	/^ffffffff80102c9d:	6a 2f                	pushq  $0x2f$/;"	l
ffffffff80102c9f	obj/kern/kernel.asm	/^ffffffff80102c9f:	e9 14 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ca4	obj/kern/kernel.asm	/^ffffffff80102ca4 <vector48>:$/;"	l
ffffffff80102ca4	obj/kern/kernel.asm	/^ffffffff80102ca4:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ca6	obj/kern/kernel.asm	/^ffffffff80102ca6:	6a 30                	pushq  $0x30$/;"	l
ffffffff80102ca8	obj/kern/kernel.asm	/^ffffffff80102ca8:	e9 0b f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102cad	obj/kern/kernel.asm	/^ffffffff80102cad <vector49>:$/;"	l
ffffffff80102cad	obj/kern/kernel.asm	/^ffffffff80102cad:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102caf	obj/kern/kernel.asm	/^ffffffff80102caf:	6a 31                	pushq  $0x31$/;"	l
ffffffff80102cb1	obj/kern/kernel.asm	/^ffffffff80102cb1:	e9 02 f8 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102cb6	obj/kern/kernel.asm	/^ffffffff80102cb6 <vector50>:$/;"	l
ffffffff80102cb6	obj/kern/kernel.asm	/^ffffffff80102cb6:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102cb8	obj/kern/kernel.asm	/^ffffffff80102cb8:	6a 32                	pushq  $0x32$/;"	l
ffffffff80102cba	obj/kern/kernel.asm	/^ffffffff80102cba:	e9 f9 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102cbf	obj/kern/kernel.asm	/^ffffffff80102cbf <vector51>:$/;"	l
ffffffff80102cbf	obj/kern/kernel.asm	/^ffffffff80102cbf:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102cc1	obj/kern/kernel.asm	/^ffffffff80102cc1:	6a 33                	pushq  $0x33$/;"	l
ffffffff80102cc3	obj/kern/kernel.asm	/^ffffffff80102cc3:	e9 f0 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102cc8	obj/kern/kernel.asm	/^ffffffff80102cc8 <vector52>:$/;"	l
ffffffff80102cc8	obj/kern/kernel.asm	/^ffffffff80102cc8:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102cca	obj/kern/kernel.asm	/^ffffffff80102cca:	6a 34                	pushq  $0x34$/;"	l
ffffffff80102ccc	obj/kern/kernel.asm	/^ffffffff80102ccc:	e9 e7 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102cd1	obj/kern/kernel.asm	/^ffffffff80102cd1 <vector53>:$/;"	l
ffffffff80102cd1	obj/kern/kernel.asm	/^ffffffff80102cd1:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102cd3	obj/kern/kernel.asm	/^ffffffff80102cd3:	6a 35                	pushq  $0x35$/;"	l
ffffffff80102cd5	obj/kern/kernel.asm	/^ffffffff80102cd5:	e9 de f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102cda	obj/kern/kernel.asm	/^ffffffff80102cda <vector54>:$/;"	l
ffffffff80102cda	obj/kern/kernel.asm	/^ffffffff80102cda:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102cdc	obj/kern/kernel.asm	/^ffffffff80102cdc:	6a 36                	pushq  $0x36$/;"	l
ffffffff80102cde	obj/kern/kernel.asm	/^ffffffff80102cde:	e9 d5 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ce3	obj/kern/kernel.asm	/^ffffffff80102ce3 <vector55>:$/;"	l
ffffffff80102ce3	obj/kern/kernel.asm	/^ffffffff80102ce3:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ce5	obj/kern/kernel.asm	/^ffffffff80102ce5:	6a 37                	pushq  $0x37$/;"	l
ffffffff80102ce7	obj/kern/kernel.asm	/^ffffffff80102ce7:	e9 cc f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102cec	obj/kern/kernel.asm	/^ffffffff80102cec <vector56>:$/;"	l
ffffffff80102cec	obj/kern/kernel.asm	/^ffffffff80102cec:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102cee	obj/kern/kernel.asm	/^ffffffff80102cee:	6a 38                	pushq  $0x38$/;"	l
ffffffff80102cf0	obj/kern/kernel.asm	/^ffffffff80102cf0:	e9 c3 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102cf5	obj/kern/kernel.asm	/^ffffffff80102cf5 <vector57>:$/;"	l
ffffffff80102cf5	obj/kern/kernel.asm	/^ffffffff80102cf5:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102cf7	obj/kern/kernel.asm	/^ffffffff80102cf7:	6a 39                	pushq  $0x39$/;"	l
ffffffff80102cf9	obj/kern/kernel.asm	/^ffffffff80102cf9:	e9 ba f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102cfe	obj/kern/kernel.asm	/^ffffffff80102cfe <vector58>:$/;"	l
ffffffff80102cfe	obj/kern/kernel.asm	/^ffffffff80102cfe:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d00	obj/kern/kernel.asm	/^ffffffff80102d00:	6a 3a                	pushq  $0x3a$/;"	l
ffffffff80102d02	obj/kern/kernel.asm	/^ffffffff80102d02:	e9 b1 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d07	obj/kern/kernel.asm	/^ffffffff80102d07 <vector59>:$/;"	l
ffffffff80102d07	obj/kern/kernel.asm	/^ffffffff80102d07:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d09	obj/kern/kernel.asm	/^ffffffff80102d09:	6a 3b                	pushq  $0x3b$/;"	l
ffffffff80102d0b	obj/kern/kernel.asm	/^ffffffff80102d0b:	e9 a8 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d10	obj/kern/kernel.asm	/^ffffffff80102d10 <vector60>:$/;"	l
ffffffff80102d10	obj/kern/kernel.asm	/^ffffffff80102d10:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d12	obj/kern/kernel.asm	/^ffffffff80102d12:	6a 3c                	pushq  $0x3c$/;"	l
ffffffff80102d14	obj/kern/kernel.asm	/^ffffffff80102d14:	e9 9f f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d19	obj/kern/kernel.asm	/^ffffffff80102d19 <vector61>:$/;"	l
ffffffff80102d19	obj/kern/kernel.asm	/^ffffffff80102d19:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d1b	obj/kern/kernel.asm	/^ffffffff80102d1b:	6a 3d                	pushq  $0x3d$/;"	l
ffffffff80102d1d	obj/kern/kernel.asm	/^ffffffff80102d1d:	e9 96 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d22	obj/kern/kernel.asm	/^ffffffff80102d22 <vector62>:$/;"	l
ffffffff80102d22	obj/kern/kernel.asm	/^ffffffff80102d22:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d24	obj/kern/kernel.asm	/^ffffffff80102d24:	6a 3e                	pushq  $0x3e$/;"	l
ffffffff80102d26	obj/kern/kernel.asm	/^ffffffff80102d26:	e9 8d f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d2b	obj/kern/kernel.asm	/^ffffffff80102d2b <vector63>:$/;"	l
ffffffff80102d2b	obj/kern/kernel.asm	/^ffffffff80102d2b:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d2d	obj/kern/kernel.asm	/^ffffffff80102d2d:	6a 3f                	pushq  $0x3f$/;"	l
ffffffff80102d2f	obj/kern/kernel.asm	/^ffffffff80102d2f:	e9 84 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d34	obj/kern/kernel.asm	/^ffffffff80102d34 <vector64>:$/;"	l
ffffffff80102d34	obj/kern/kernel.asm	/^ffffffff80102d34:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d36	obj/kern/kernel.asm	/^ffffffff80102d36:	6a 40                	pushq  $0x40$/;"	l
ffffffff80102d38	obj/kern/kernel.asm	/^ffffffff80102d38:	e9 7b f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d3d	obj/kern/kernel.asm	/^ffffffff80102d3d <vector65>:$/;"	l
ffffffff80102d3d	obj/kern/kernel.asm	/^ffffffff80102d3d:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d3f	obj/kern/kernel.asm	/^ffffffff80102d3f:	6a 41                	pushq  $0x41$/;"	l
ffffffff80102d41	obj/kern/kernel.asm	/^ffffffff80102d41:	e9 72 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d46	obj/kern/kernel.asm	/^ffffffff80102d46 <vector66>:$/;"	l
ffffffff80102d46	obj/kern/kernel.asm	/^ffffffff80102d46:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d48	obj/kern/kernel.asm	/^ffffffff80102d48:	6a 42                	pushq  $0x42$/;"	l
ffffffff80102d4a	obj/kern/kernel.asm	/^ffffffff80102d4a:	e9 69 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d4f	obj/kern/kernel.asm	/^ffffffff80102d4f <vector67>:$/;"	l
ffffffff80102d4f	obj/kern/kernel.asm	/^ffffffff80102d4f:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d51	obj/kern/kernel.asm	/^ffffffff80102d51:	6a 43                	pushq  $0x43$/;"	l
ffffffff80102d53	obj/kern/kernel.asm	/^ffffffff80102d53:	e9 60 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d58	obj/kern/kernel.asm	/^ffffffff80102d58 <vector68>:$/;"	l
ffffffff80102d58	obj/kern/kernel.asm	/^ffffffff80102d58:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d5a	obj/kern/kernel.asm	/^ffffffff80102d5a:	6a 44                	pushq  $0x44$/;"	l
ffffffff80102d5c	obj/kern/kernel.asm	/^ffffffff80102d5c:	e9 57 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d61	obj/kern/kernel.asm	/^ffffffff80102d61 <vector69>:$/;"	l
ffffffff80102d61	obj/kern/kernel.asm	/^ffffffff80102d61:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d63	obj/kern/kernel.asm	/^ffffffff80102d63:	6a 45                	pushq  $0x45$/;"	l
ffffffff80102d65	obj/kern/kernel.asm	/^ffffffff80102d65:	e9 4e f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d6a	obj/kern/kernel.asm	/^ffffffff80102d6a <vector70>:$/;"	l
ffffffff80102d6a	obj/kern/kernel.asm	/^ffffffff80102d6a:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d6c	obj/kern/kernel.asm	/^ffffffff80102d6c:	6a 46                	pushq  $0x46$/;"	l
ffffffff80102d6e	obj/kern/kernel.asm	/^ffffffff80102d6e:	e9 45 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d73	obj/kern/kernel.asm	/^ffffffff80102d73 <vector71>:$/;"	l
ffffffff80102d73	obj/kern/kernel.asm	/^ffffffff80102d73:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d75	obj/kern/kernel.asm	/^ffffffff80102d75:	6a 47                	pushq  $0x47$/;"	l
ffffffff80102d77	obj/kern/kernel.asm	/^ffffffff80102d77:	e9 3c f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d7c	obj/kern/kernel.asm	/^ffffffff80102d7c <vector72>:$/;"	l
ffffffff80102d7c	obj/kern/kernel.asm	/^ffffffff80102d7c:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d7e	obj/kern/kernel.asm	/^ffffffff80102d7e:	6a 48                	pushq  $0x48$/;"	l
ffffffff80102d80	obj/kern/kernel.asm	/^ffffffff80102d80:	e9 33 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d85	obj/kern/kernel.asm	/^ffffffff80102d85 <vector73>:$/;"	l
ffffffff80102d85	obj/kern/kernel.asm	/^ffffffff80102d85:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d87	obj/kern/kernel.asm	/^ffffffff80102d87:	6a 49                	pushq  $0x49$/;"	l
ffffffff80102d89	obj/kern/kernel.asm	/^ffffffff80102d89:	e9 2a f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d8e	obj/kern/kernel.asm	/^ffffffff80102d8e <vector74>:$/;"	l
ffffffff80102d8e	obj/kern/kernel.asm	/^ffffffff80102d8e:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d90	obj/kern/kernel.asm	/^ffffffff80102d90:	6a 4a                	pushq  $0x4a$/;"	l
ffffffff80102d92	obj/kern/kernel.asm	/^ffffffff80102d92:	e9 21 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102d97	obj/kern/kernel.asm	/^ffffffff80102d97 <vector75>:$/;"	l
ffffffff80102d97	obj/kern/kernel.asm	/^ffffffff80102d97:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102d99	obj/kern/kernel.asm	/^ffffffff80102d99:	6a 4b                	pushq  $0x4b$/;"	l
ffffffff80102d9b	obj/kern/kernel.asm	/^ffffffff80102d9b:	e9 18 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102da0	obj/kern/kernel.asm	/^ffffffff80102da0 <vector76>:$/;"	l
ffffffff80102da0	obj/kern/kernel.asm	/^ffffffff80102da0:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102da2	obj/kern/kernel.asm	/^ffffffff80102da2:	6a 4c                	pushq  $0x4c$/;"	l
ffffffff80102da4	obj/kern/kernel.asm	/^ffffffff80102da4:	e9 0f f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102da9	obj/kern/kernel.asm	/^ffffffff80102da9 <vector77>:$/;"	l
ffffffff80102da9	obj/kern/kernel.asm	/^ffffffff80102da9:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102dab	obj/kern/kernel.asm	/^ffffffff80102dab:	6a 4d                	pushq  $0x4d$/;"	l
ffffffff80102dad	obj/kern/kernel.asm	/^ffffffff80102dad:	e9 06 f7 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102db2	obj/kern/kernel.asm	/^ffffffff80102db2 <vector78>:$/;"	l
ffffffff80102db2	obj/kern/kernel.asm	/^ffffffff80102db2:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102db4	obj/kern/kernel.asm	/^ffffffff80102db4:	6a 4e                	pushq  $0x4e$/;"	l
ffffffff80102db6	obj/kern/kernel.asm	/^ffffffff80102db6:	e9 fd f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102dbb	obj/kern/kernel.asm	/^ffffffff80102dbb <vector79>:$/;"	l
ffffffff80102dbb	obj/kern/kernel.asm	/^ffffffff80102dbb:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102dbd	obj/kern/kernel.asm	/^ffffffff80102dbd:	6a 4f                	pushq  $0x4f$/;"	l
ffffffff80102dbf	obj/kern/kernel.asm	/^ffffffff80102dbf:	e9 f4 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102dc4	obj/kern/kernel.asm	/^ffffffff80102dc4 <vector80>:$/;"	l
ffffffff80102dc4	obj/kern/kernel.asm	/^ffffffff80102dc4:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102dc6	obj/kern/kernel.asm	/^ffffffff80102dc6:	6a 50                	pushq  $0x50$/;"	l
ffffffff80102dc8	obj/kern/kernel.asm	/^ffffffff80102dc8:	e9 eb f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102dcd	obj/kern/kernel.asm	/^ffffffff80102dcd <vector81>:$/;"	l
ffffffff80102dcd	obj/kern/kernel.asm	/^ffffffff80102dcd:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102dcf	obj/kern/kernel.asm	/^ffffffff80102dcf:	6a 51                	pushq  $0x51$/;"	l
ffffffff80102dd1	obj/kern/kernel.asm	/^ffffffff80102dd1:	e9 e2 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102dd6	obj/kern/kernel.asm	/^ffffffff80102dd6 <vector82>:$/;"	l
ffffffff80102dd6	obj/kern/kernel.asm	/^ffffffff80102dd6:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102dd8	obj/kern/kernel.asm	/^ffffffff80102dd8:	6a 52                	pushq  $0x52$/;"	l
ffffffff80102dda	obj/kern/kernel.asm	/^ffffffff80102dda:	e9 d9 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ddf	obj/kern/kernel.asm	/^ffffffff80102ddf <vector83>:$/;"	l
ffffffff80102ddf	obj/kern/kernel.asm	/^ffffffff80102ddf:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102de1	obj/kern/kernel.asm	/^ffffffff80102de1:	6a 53                	pushq  $0x53$/;"	l
ffffffff80102de3	obj/kern/kernel.asm	/^ffffffff80102de3:	e9 d0 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102de8	obj/kern/kernel.asm	/^ffffffff80102de8 <vector84>:$/;"	l
ffffffff80102de8	obj/kern/kernel.asm	/^ffffffff80102de8:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102dea	obj/kern/kernel.asm	/^ffffffff80102dea:	6a 54                	pushq  $0x54$/;"	l
ffffffff80102dec	obj/kern/kernel.asm	/^ffffffff80102dec:	e9 c7 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102df1	obj/kern/kernel.asm	/^ffffffff80102df1 <vector85>:$/;"	l
ffffffff80102df1	obj/kern/kernel.asm	/^ffffffff80102df1:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102df3	obj/kern/kernel.asm	/^ffffffff80102df3:	6a 55                	pushq  $0x55$/;"	l
ffffffff80102df5	obj/kern/kernel.asm	/^ffffffff80102df5:	e9 be f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102dfa	obj/kern/kernel.asm	/^ffffffff80102dfa <vector86>:$/;"	l
ffffffff80102dfa	obj/kern/kernel.asm	/^ffffffff80102dfa:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102dfc	obj/kern/kernel.asm	/^ffffffff80102dfc:	6a 56                	pushq  $0x56$/;"	l
ffffffff80102dfe	obj/kern/kernel.asm	/^ffffffff80102dfe:	e9 b5 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e03	obj/kern/kernel.asm	/^ffffffff80102e03 <vector87>:$/;"	l
ffffffff80102e03	obj/kern/kernel.asm	/^ffffffff80102e03:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e05	obj/kern/kernel.asm	/^ffffffff80102e05:	6a 57                	pushq  $0x57$/;"	l
ffffffff80102e07	obj/kern/kernel.asm	/^ffffffff80102e07:	e9 ac f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e0c	obj/kern/kernel.asm	/^ffffffff80102e0c <vector88>:$/;"	l
ffffffff80102e0c	obj/kern/kernel.asm	/^ffffffff80102e0c:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e0e	obj/kern/kernel.asm	/^ffffffff80102e0e:	6a 58                	pushq  $0x58$/;"	l
ffffffff80102e10	obj/kern/kernel.asm	/^ffffffff80102e10:	e9 a3 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e15	obj/kern/kernel.asm	/^ffffffff80102e15 <vector89>:$/;"	l
ffffffff80102e15	obj/kern/kernel.asm	/^ffffffff80102e15:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e17	obj/kern/kernel.asm	/^ffffffff80102e17:	6a 59                	pushq  $0x59$/;"	l
ffffffff80102e19	obj/kern/kernel.asm	/^ffffffff80102e19:	e9 9a f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e1e	obj/kern/kernel.asm	/^ffffffff80102e1e <vector90>:$/;"	l
ffffffff80102e1e	obj/kern/kernel.asm	/^ffffffff80102e1e:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e20	obj/kern/kernel.asm	/^ffffffff80102e20:	6a 5a                	pushq  $0x5a$/;"	l
ffffffff80102e22	obj/kern/kernel.asm	/^ffffffff80102e22:	e9 91 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e27	obj/kern/kernel.asm	/^ffffffff80102e27 <vector91>:$/;"	l
ffffffff80102e27	obj/kern/kernel.asm	/^ffffffff80102e27:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e29	obj/kern/kernel.asm	/^ffffffff80102e29:	6a 5b                	pushq  $0x5b$/;"	l
ffffffff80102e2b	obj/kern/kernel.asm	/^ffffffff80102e2b:	e9 88 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e30	obj/kern/kernel.asm	/^ffffffff80102e30 <vector92>:$/;"	l
ffffffff80102e30	obj/kern/kernel.asm	/^ffffffff80102e30:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e32	obj/kern/kernel.asm	/^ffffffff80102e32:	6a 5c                	pushq  $0x5c$/;"	l
ffffffff80102e34	obj/kern/kernel.asm	/^ffffffff80102e34:	e9 7f f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e39	obj/kern/kernel.asm	/^ffffffff80102e39 <vector93>:$/;"	l
ffffffff80102e39	obj/kern/kernel.asm	/^ffffffff80102e39:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e3b	obj/kern/kernel.asm	/^ffffffff80102e3b:	6a 5d                	pushq  $0x5d$/;"	l
ffffffff80102e3d	obj/kern/kernel.asm	/^ffffffff80102e3d:	e9 76 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e42	obj/kern/kernel.asm	/^ffffffff80102e42 <vector94>:$/;"	l
ffffffff80102e42	obj/kern/kernel.asm	/^ffffffff80102e42:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e44	obj/kern/kernel.asm	/^ffffffff80102e44:	6a 5e                	pushq  $0x5e$/;"	l
ffffffff80102e46	obj/kern/kernel.asm	/^ffffffff80102e46:	e9 6d f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e4b	obj/kern/kernel.asm	/^ffffffff80102e4b <vector95>:$/;"	l
ffffffff80102e4b	obj/kern/kernel.asm	/^ffffffff80102e4b:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e4d	obj/kern/kernel.asm	/^ffffffff80102e4d:	6a 5f                	pushq  $0x5f$/;"	l
ffffffff80102e4f	obj/kern/kernel.asm	/^ffffffff80102e4f:	e9 64 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e54	obj/kern/kernel.asm	/^ffffffff80102e54 <vector96>:$/;"	l
ffffffff80102e54	obj/kern/kernel.asm	/^ffffffff80102e54:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e56	obj/kern/kernel.asm	/^ffffffff80102e56:	6a 60                	pushq  $0x60$/;"	l
ffffffff80102e58	obj/kern/kernel.asm	/^ffffffff80102e58:	e9 5b f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e5d	obj/kern/kernel.asm	/^ffffffff80102e5d <vector97>:$/;"	l
ffffffff80102e5d	obj/kern/kernel.asm	/^ffffffff80102e5d:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e5f	obj/kern/kernel.asm	/^ffffffff80102e5f:	6a 61                	pushq  $0x61$/;"	l
ffffffff80102e61	obj/kern/kernel.asm	/^ffffffff80102e61:	e9 52 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e66	obj/kern/kernel.asm	/^ffffffff80102e66 <vector98>:$/;"	l
ffffffff80102e66	obj/kern/kernel.asm	/^ffffffff80102e66:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e68	obj/kern/kernel.asm	/^ffffffff80102e68:	6a 62                	pushq  $0x62$/;"	l
ffffffff80102e6a	obj/kern/kernel.asm	/^ffffffff80102e6a:	e9 49 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e6f	obj/kern/kernel.asm	/^ffffffff80102e6f <vector99>:$/;"	l
ffffffff80102e6f	obj/kern/kernel.asm	/^ffffffff80102e6f:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e71	obj/kern/kernel.asm	/^ffffffff80102e71:	6a 63                	pushq  $0x63$/;"	l
ffffffff80102e73	obj/kern/kernel.asm	/^ffffffff80102e73:	e9 40 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e78	obj/kern/kernel.asm	/^ffffffff80102e78 <vector100>:$/;"	l
ffffffff80102e78	obj/kern/kernel.asm	/^ffffffff80102e78:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e7a	obj/kern/kernel.asm	/^ffffffff80102e7a:	6a 64                	pushq  $0x64$/;"	l
ffffffff80102e7c	obj/kern/kernel.asm	/^ffffffff80102e7c:	e9 37 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e81	obj/kern/kernel.asm	/^ffffffff80102e81 <vector101>:$/;"	l
ffffffff80102e81	obj/kern/kernel.asm	/^ffffffff80102e81:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e83	obj/kern/kernel.asm	/^ffffffff80102e83:	6a 65                	pushq  $0x65$/;"	l
ffffffff80102e85	obj/kern/kernel.asm	/^ffffffff80102e85:	e9 2e f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e8a	obj/kern/kernel.asm	/^ffffffff80102e8a <vector102>:$/;"	l
ffffffff80102e8a	obj/kern/kernel.asm	/^ffffffff80102e8a:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e8c	obj/kern/kernel.asm	/^ffffffff80102e8c:	6a 66                	pushq  $0x66$/;"	l
ffffffff80102e8e	obj/kern/kernel.asm	/^ffffffff80102e8e:	e9 25 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e93	obj/kern/kernel.asm	/^ffffffff80102e93 <vector103>:$/;"	l
ffffffff80102e93	obj/kern/kernel.asm	/^ffffffff80102e93:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e95	obj/kern/kernel.asm	/^ffffffff80102e95:	6a 67                	pushq  $0x67$/;"	l
ffffffff80102e97	obj/kern/kernel.asm	/^ffffffff80102e97:	e9 1c f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102e9c	obj/kern/kernel.asm	/^ffffffff80102e9c <vector104>:$/;"	l
ffffffff80102e9c	obj/kern/kernel.asm	/^ffffffff80102e9c:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102e9e	obj/kern/kernel.asm	/^ffffffff80102e9e:	6a 68                	pushq  $0x68$/;"	l
ffffffff80102ea0	obj/kern/kernel.asm	/^ffffffff80102ea0:	e9 13 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ea5	obj/kern/kernel.asm	/^ffffffff80102ea5 <vector105>:$/;"	l
ffffffff80102ea5	obj/kern/kernel.asm	/^ffffffff80102ea5:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ea7	obj/kern/kernel.asm	/^ffffffff80102ea7:	6a 69                	pushq  $0x69$/;"	l
ffffffff80102ea9	obj/kern/kernel.asm	/^ffffffff80102ea9:	e9 0a f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102eae	obj/kern/kernel.asm	/^ffffffff80102eae <vector106>:$/;"	l
ffffffff80102eae	obj/kern/kernel.asm	/^ffffffff80102eae:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102eb0	obj/kern/kernel.asm	/^ffffffff80102eb0:	6a 6a                	pushq  $0x6a$/;"	l
ffffffff80102eb2	obj/kern/kernel.asm	/^ffffffff80102eb2:	e9 01 f6 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102eb7	obj/kern/kernel.asm	/^ffffffff80102eb7 <vector107>:$/;"	l
ffffffff80102eb7	obj/kern/kernel.asm	/^ffffffff80102eb7:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102eb9	obj/kern/kernel.asm	/^ffffffff80102eb9:	6a 6b                	pushq  $0x6b$/;"	l
ffffffff80102ebb	obj/kern/kernel.asm	/^ffffffff80102ebb:	e9 f8 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ec0	obj/kern/kernel.asm	/^ffffffff80102ec0 <vector108>:$/;"	l
ffffffff80102ec0	obj/kern/kernel.asm	/^ffffffff80102ec0:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ec2	obj/kern/kernel.asm	/^ffffffff80102ec2:	6a 6c                	pushq  $0x6c$/;"	l
ffffffff80102ec4	obj/kern/kernel.asm	/^ffffffff80102ec4:	e9 ef f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ec9	obj/kern/kernel.asm	/^ffffffff80102ec9 <vector109>:$/;"	l
ffffffff80102ec9	obj/kern/kernel.asm	/^ffffffff80102ec9:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ecb	obj/kern/kernel.asm	/^ffffffff80102ecb:	6a 6d                	pushq  $0x6d$/;"	l
ffffffff80102ecd	obj/kern/kernel.asm	/^ffffffff80102ecd:	e9 e6 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ed2	obj/kern/kernel.asm	/^ffffffff80102ed2 <vector110>:$/;"	l
ffffffff80102ed2	obj/kern/kernel.asm	/^ffffffff80102ed2:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ed4	obj/kern/kernel.asm	/^ffffffff80102ed4:	6a 6e                	pushq  $0x6e$/;"	l
ffffffff80102ed6	obj/kern/kernel.asm	/^ffffffff80102ed6:	e9 dd f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102edb	obj/kern/kernel.asm	/^ffffffff80102edb <vector111>:$/;"	l
ffffffff80102edb	obj/kern/kernel.asm	/^ffffffff80102edb:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102edd	obj/kern/kernel.asm	/^ffffffff80102edd:	6a 6f                	pushq  $0x6f$/;"	l
ffffffff80102edf	obj/kern/kernel.asm	/^ffffffff80102edf:	e9 d4 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ee4	obj/kern/kernel.asm	/^ffffffff80102ee4 <vector112>:$/;"	l
ffffffff80102ee4	obj/kern/kernel.asm	/^ffffffff80102ee4:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ee6	obj/kern/kernel.asm	/^ffffffff80102ee6:	6a 70                	pushq  $0x70$/;"	l
ffffffff80102ee8	obj/kern/kernel.asm	/^ffffffff80102ee8:	e9 cb f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102eed	obj/kern/kernel.asm	/^ffffffff80102eed <vector113>:$/;"	l
ffffffff80102eed	obj/kern/kernel.asm	/^ffffffff80102eed:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102eef	obj/kern/kernel.asm	/^ffffffff80102eef:	6a 71                	pushq  $0x71$/;"	l
ffffffff80102ef1	obj/kern/kernel.asm	/^ffffffff80102ef1:	e9 c2 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ef6	obj/kern/kernel.asm	/^ffffffff80102ef6 <vector114>:$/;"	l
ffffffff80102ef6	obj/kern/kernel.asm	/^ffffffff80102ef6:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ef8	obj/kern/kernel.asm	/^ffffffff80102ef8:	6a 72                	pushq  $0x72$/;"	l
ffffffff80102efa	obj/kern/kernel.asm	/^ffffffff80102efa:	e9 b9 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102eff	obj/kern/kernel.asm	/^ffffffff80102eff <vector115>:$/;"	l
ffffffff80102eff	obj/kern/kernel.asm	/^ffffffff80102eff:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f01	obj/kern/kernel.asm	/^ffffffff80102f01:	6a 73                	pushq  $0x73$/;"	l
ffffffff80102f03	obj/kern/kernel.asm	/^ffffffff80102f03:	e9 b0 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f08	obj/kern/kernel.asm	/^ffffffff80102f08 <vector116>:$/;"	l
ffffffff80102f08	obj/kern/kernel.asm	/^ffffffff80102f08:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f0a	obj/kern/kernel.asm	/^ffffffff80102f0a:	6a 74                	pushq  $0x74$/;"	l
ffffffff80102f0c	obj/kern/kernel.asm	/^ffffffff80102f0c:	e9 a7 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f11	obj/kern/kernel.asm	/^ffffffff80102f11 <vector117>:$/;"	l
ffffffff80102f11	obj/kern/kernel.asm	/^ffffffff80102f11:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f13	obj/kern/kernel.asm	/^ffffffff80102f13:	6a 75                	pushq  $0x75$/;"	l
ffffffff80102f15	obj/kern/kernel.asm	/^ffffffff80102f15:	e9 9e f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f1a	obj/kern/kernel.asm	/^ffffffff80102f1a <vector118>:$/;"	l
ffffffff80102f1a	obj/kern/kernel.asm	/^ffffffff80102f1a:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f1c	obj/kern/kernel.asm	/^ffffffff80102f1c:	6a 76                	pushq  $0x76$/;"	l
ffffffff80102f1e	obj/kern/kernel.asm	/^ffffffff80102f1e:	e9 95 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f23	obj/kern/kernel.asm	/^ffffffff80102f23 <vector119>:$/;"	l
ffffffff80102f23	obj/kern/kernel.asm	/^ffffffff80102f23:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f25	obj/kern/kernel.asm	/^ffffffff80102f25:	6a 77                	pushq  $0x77$/;"	l
ffffffff80102f27	obj/kern/kernel.asm	/^ffffffff80102f27:	e9 8c f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f2c	obj/kern/kernel.asm	/^ffffffff80102f2c <vector120>:$/;"	l
ffffffff80102f2c	obj/kern/kernel.asm	/^ffffffff80102f2c:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f2e	obj/kern/kernel.asm	/^ffffffff80102f2e:	6a 78                	pushq  $0x78$/;"	l
ffffffff80102f30	obj/kern/kernel.asm	/^ffffffff80102f30:	e9 83 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f35	obj/kern/kernel.asm	/^ffffffff80102f35 <vector121>:$/;"	l
ffffffff80102f35	obj/kern/kernel.asm	/^ffffffff80102f35:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f37	obj/kern/kernel.asm	/^ffffffff80102f37:	6a 79                	pushq  $0x79$/;"	l
ffffffff80102f39	obj/kern/kernel.asm	/^ffffffff80102f39:	e9 7a f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f3e	obj/kern/kernel.asm	/^ffffffff80102f3e <vector122>:$/;"	l
ffffffff80102f3e	obj/kern/kernel.asm	/^ffffffff80102f3e:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f40	obj/kern/kernel.asm	/^ffffffff80102f40:	6a 7a                	pushq  $0x7a$/;"	l
ffffffff80102f42	obj/kern/kernel.asm	/^ffffffff80102f42:	e9 71 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f47	obj/kern/kernel.asm	/^ffffffff80102f47 <vector123>:$/;"	l
ffffffff80102f47	obj/kern/kernel.asm	/^ffffffff80102f47:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f49	obj/kern/kernel.asm	/^ffffffff80102f49:	6a 7b                	pushq  $0x7b$/;"	l
ffffffff80102f4b	obj/kern/kernel.asm	/^ffffffff80102f4b:	e9 68 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f50	obj/kern/kernel.asm	/^ffffffff80102f50 <vector124>:$/;"	l
ffffffff80102f50	obj/kern/kernel.asm	/^ffffffff80102f50:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f52	obj/kern/kernel.asm	/^ffffffff80102f52:	6a 7c                	pushq  $0x7c$/;"	l
ffffffff80102f54	obj/kern/kernel.asm	/^ffffffff80102f54:	e9 5f f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f59	obj/kern/kernel.asm	/^ffffffff80102f59 <vector125>:$/;"	l
ffffffff80102f59	obj/kern/kernel.asm	/^ffffffff80102f59:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f5b	obj/kern/kernel.asm	/^ffffffff80102f5b:	6a 7d                	pushq  $0x7d$/;"	l
ffffffff80102f5d	obj/kern/kernel.asm	/^ffffffff80102f5d:	e9 56 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f62	obj/kern/kernel.asm	/^ffffffff80102f62 <vector126>:$/;"	l
ffffffff80102f62	obj/kern/kernel.asm	/^ffffffff80102f62:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f64	obj/kern/kernel.asm	/^ffffffff80102f64:	6a 7e                	pushq  $0x7e$/;"	l
ffffffff80102f66	obj/kern/kernel.asm	/^ffffffff80102f66:	e9 4d f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f6b	obj/kern/kernel.asm	/^ffffffff80102f6b <vector127>:$/;"	l
ffffffff80102f6b	obj/kern/kernel.asm	/^ffffffff80102f6b:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f6d	obj/kern/kernel.asm	/^ffffffff80102f6d:	6a 7f                	pushq  $0x7f$/;"	l
ffffffff80102f6f	obj/kern/kernel.asm	/^ffffffff80102f6f:	e9 44 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f74	obj/kern/kernel.asm	/^ffffffff80102f74 <vector128>:$/;"	l
ffffffff80102f74	obj/kern/kernel.asm	/^ffffffff80102f74:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f76	obj/kern/kernel.asm	/^ffffffff80102f76:	68 80 00 00 00       	pushq  $0x80$/;"	l
ffffffff80102f7b	obj/kern/kernel.asm	/^ffffffff80102f7b:	e9 38 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f80	obj/kern/kernel.asm	/^ffffffff80102f80 <vector129>:$/;"	l
ffffffff80102f80	obj/kern/kernel.asm	/^ffffffff80102f80:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f82	obj/kern/kernel.asm	/^ffffffff80102f82:	68 81 00 00 00       	pushq  $0x81$/;"	l
ffffffff80102f87	obj/kern/kernel.asm	/^ffffffff80102f87:	e9 2c f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f8c	obj/kern/kernel.asm	/^ffffffff80102f8c <vector130>:$/;"	l
ffffffff80102f8c	obj/kern/kernel.asm	/^ffffffff80102f8c:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f8e	obj/kern/kernel.asm	/^ffffffff80102f8e:	68 82 00 00 00       	pushq  $0x82$/;"	l
ffffffff80102f93	obj/kern/kernel.asm	/^ffffffff80102f93:	e9 20 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102f98	obj/kern/kernel.asm	/^ffffffff80102f98 <vector131>:$/;"	l
ffffffff80102f98	obj/kern/kernel.asm	/^ffffffff80102f98:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102f9a	obj/kern/kernel.asm	/^ffffffff80102f9a:	68 83 00 00 00       	pushq  $0x83$/;"	l
ffffffff80102f9f	obj/kern/kernel.asm	/^ffffffff80102f9f:	e9 14 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102fa4	obj/kern/kernel.asm	/^ffffffff80102fa4 <vector132>:$/;"	l
ffffffff80102fa4	obj/kern/kernel.asm	/^ffffffff80102fa4:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102fa6	obj/kern/kernel.asm	/^ffffffff80102fa6:	68 84 00 00 00       	pushq  $0x84$/;"	l
ffffffff80102fab	obj/kern/kernel.asm	/^ffffffff80102fab:	e9 08 f5 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102fb0	obj/kern/kernel.asm	/^ffffffff80102fb0 <vector133>:$/;"	l
ffffffff80102fb0	obj/kern/kernel.asm	/^ffffffff80102fb0:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102fb2	obj/kern/kernel.asm	/^ffffffff80102fb2:	68 85 00 00 00       	pushq  $0x85$/;"	l
ffffffff80102fb7	obj/kern/kernel.asm	/^ffffffff80102fb7:	e9 fc f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102fbc	obj/kern/kernel.asm	/^ffffffff80102fbc <vector134>:$/;"	l
ffffffff80102fbc	obj/kern/kernel.asm	/^ffffffff80102fbc:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102fbe	obj/kern/kernel.asm	/^ffffffff80102fbe:	68 86 00 00 00       	pushq  $0x86$/;"	l
ffffffff80102fc3	obj/kern/kernel.asm	/^ffffffff80102fc3:	e9 f0 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102fc8	obj/kern/kernel.asm	/^ffffffff80102fc8 <vector135>:$/;"	l
ffffffff80102fc8	obj/kern/kernel.asm	/^ffffffff80102fc8:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102fca	obj/kern/kernel.asm	/^ffffffff80102fca:	68 87 00 00 00       	pushq  $0x87$/;"	l
ffffffff80102fcf	obj/kern/kernel.asm	/^ffffffff80102fcf:	e9 e4 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102fd4	obj/kern/kernel.asm	/^ffffffff80102fd4 <vector136>:$/;"	l
ffffffff80102fd4	obj/kern/kernel.asm	/^ffffffff80102fd4:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102fd6	obj/kern/kernel.asm	/^ffffffff80102fd6:	68 88 00 00 00       	pushq  $0x88$/;"	l
ffffffff80102fdb	obj/kern/kernel.asm	/^ffffffff80102fdb:	e9 d8 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102fe0	obj/kern/kernel.asm	/^ffffffff80102fe0 <vector137>:$/;"	l
ffffffff80102fe0	obj/kern/kernel.asm	/^ffffffff80102fe0:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102fe2	obj/kern/kernel.asm	/^ffffffff80102fe2:	68 89 00 00 00       	pushq  $0x89$/;"	l
ffffffff80102fe7	obj/kern/kernel.asm	/^ffffffff80102fe7:	e9 cc f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102fec	obj/kern/kernel.asm	/^ffffffff80102fec <vector138>:$/;"	l
ffffffff80102fec	obj/kern/kernel.asm	/^ffffffff80102fec:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102fee	obj/kern/kernel.asm	/^ffffffff80102fee:	68 8a 00 00 00       	pushq  $0x8a$/;"	l
ffffffff80102ff3	obj/kern/kernel.asm	/^ffffffff80102ff3:	e9 c0 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80102ff8	obj/kern/kernel.asm	/^ffffffff80102ff8 <vector139>:$/;"	l
ffffffff80102ff8	obj/kern/kernel.asm	/^ffffffff80102ff8:	6a 00                	pushq  $0x0$/;"	l
ffffffff80102ffa	obj/kern/kernel.asm	/^ffffffff80102ffa:	68 8b 00 00 00       	pushq  $0x8b$/;"	l
ffffffff80102fff	obj/kern/kernel.asm	/^ffffffff80102fff:	e9 b4 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103004	obj/kern/kernel.asm	/^ffffffff80103004 <vector140>:$/;"	l
ffffffff80103004	obj/kern/kernel.asm	/^ffffffff80103004:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103006	obj/kern/kernel.asm	/^ffffffff80103006:	68 8c 00 00 00       	pushq  $0x8c$/;"	l
ffffffff8010300b	obj/kern/kernel.asm	/^ffffffff8010300b:	e9 a8 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103010	obj/kern/kernel.asm	/^ffffffff80103010 <vector141>:$/;"	l
ffffffff80103010	obj/kern/kernel.asm	/^ffffffff80103010:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103012	obj/kern/kernel.asm	/^ffffffff80103012:	68 8d 00 00 00       	pushq  $0x8d$/;"	l
ffffffff80103017	obj/kern/kernel.asm	/^ffffffff80103017:	e9 9c f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010301c	obj/kern/kernel.asm	/^ffffffff8010301c <vector142>:$/;"	l
ffffffff8010301c	obj/kern/kernel.asm	/^ffffffff8010301c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010301e	obj/kern/kernel.asm	/^ffffffff8010301e:	68 8e 00 00 00       	pushq  $0x8e$/;"	l
ffffffff80103023	obj/kern/kernel.asm	/^ffffffff80103023:	e9 90 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103028	obj/kern/kernel.asm	/^ffffffff80103028 <vector143>:$/;"	l
ffffffff80103028	obj/kern/kernel.asm	/^ffffffff80103028:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010302a	obj/kern/kernel.asm	/^ffffffff8010302a:	68 8f 00 00 00       	pushq  $0x8f$/;"	l
ffffffff8010302f	obj/kern/kernel.asm	/^ffffffff8010302f:	e9 84 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103034	obj/kern/kernel.asm	/^ffffffff80103034 <vector144>:$/;"	l
ffffffff80103034	obj/kern/kernel.asm	/^ffffffff80103034:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103036	obj/kern/kernel.asm	/^ffffffff80103036:	68 90 00 00 00       	pushq  $0x90$/;"	l
ffffffff8010303b	obj/kern/kernel.asm	/^ffffffff8010303b:	e9 78 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103040	obj/kern/kernel.asm	/^ffffffff80103040 <vector145>:$/;"	l
ffffffff80103040	obj/kern/kernel.asm	/^ffffffff80103040:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103042	obj/kern/kernel.asm	/^ffffffff80103042:	68 91 00 00 00       	pushq  $0x91$/;"	l
ffffffff80103047	obj/kern/kernel.asm	/^ffffffff80103047:	e9 6c f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010304c	obj/kern/kernel.asm	/^ffffffff8010304c <vector146>:$/;"	l
ffffffff8010304c	obj/kern/kernel.asm	/^ffffffff8010304c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010304e	obj/kern/kernel.asm	/^ffffffff8010304e:	68 92 00 00 00       	pushq  $0x92$/;"	l
ffffffff80103053	obj/kern/kernel.asm	/^ffffffff80103053:	e9 60 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103058	obj/kern/kernel.asm	/^ffffffff80103058 <vector147>:$/;"	l
ffffffff80103058	obj/kern/kernel.asm	/^ffffffff80103058:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010305a	obj/kern/kernel.asm	/^ffffffff8010305a:	68 93 00 00 00       	pushq  $0x93$/;"	l
ffffffff8010305f	obj/kern/kernel.asm	/^ffffffff8010305f:	e9 54 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103064	obj/kern/kernel.asm	/^ffffffff80103064 <vector148>:$/;"	l
ffffffff80103064	obj/kern/kernel.asm	/^ffffffff80103064:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103066	obj/kern/kernel.asm	/^ffffffff80103066:	68 94 00 00 00       	pushq  $0x94$/;"	l
ffffffff8010306b	obj/kern/kernel.asm	/^ffffffff8010306b:	e9 48 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103070	obj/kern/kernel.asm	/^ffffffff80103070 <vector149>:$/;"	l
ffffffff80103070	obj/kern/kernel.asm	/^ffffffff80103070:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103072	obj/kern/kernel.asm	/^ffffffff80103072:	68 95 00 00 00       	pushq  $0x95$/;"	l
ffffffff80103077	obj/kern/kernel.asm	/^ffffffff80103077:	e9 3c f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010307c	obj/kern/kernel.asm	/^ffffffff8010307c <vector150>:$/;"	l
ffffffff8010307c	obj/kern/kernel.asm	/^ffffffff8010307c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010307e	obj/kern/kernel.asm	/^ffffffff8010307e:	68 96 00 00 00       	pushq  $0x96$/;"	l
ffffffff80103083	obj/kern/kernel.asm	/^ffffffff80103083:	e9 30 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103088	obj/kern/kernel.asm	/^ffffffff80103088 <vector151>:$/;"	l
ffffffff80103088	obj/kern/kernel.asm	/^ffffffff80103088:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010308a	obj/kern/kernel.asm	/^ffffffff8010308a:	68 97 00 00 00       	pushq  $0x97$/;"	l
ffffffff8010308f	obj/kern/kernel.asm	/^ffffffff8010308f:	e9 24 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103094	obj/kern/kernel.asm	/^ffffffff80103094 <vector152>:$/;"	l
ffffffff80103094	obj/kern/kernel.asm	/^ffffffff80103094:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103096	obj/kern/kernel.asm	/^ffffffff80103096:	68 98 00 00 00       	pushq  $0x98$/;"	l
ffffffff8010309b	obj/kern/kernel.asm	/^ffffffff8010309b:	e9 18 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801030a0	obj/kern/kernel.asm	/^ffffffff801030a0 <vector153>:$/;"	l
ffffffff801030a0	obj/kern/kernel.asm	/^ffffffff801030a0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801030a2	obj/kern/kernel.asm	/^ffffffff801030a2:	68 99 00 00 00       	pushq  $0x99$/;"	l
ffffffff801030a7	obj/kern/kernel.asm	/^ffffffff801030a7:	e9 0c f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801030ac	obj/kern/kernel.asm	/^ffffffff801030ac <vector154>:$/;"	l
ffffffff801030ac	obj/kern/kernel.asm	/^ffffffff801030ac:	6a 00                	pushq  $0x0$/;"	l
ffffffff801030ae	obj/kern/kernel.asm	/^ffffffff801030ae:	68 9a 00 00 00       	pushq  $0x9a$/;"	l
ffffffff801030b3	obj/kern/kernel.asm	/^ffffffff801030b3:	e9 00 f4 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801030b8	obj/kern/kernel.asm	/^ffffffff801030b8 <vector155>:$/;"	l
ffffffff801030b8	obj/kern/kernel.asm	/^ffffffff801030b8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801030ba	obj/kern/kernel.asm	/^ffffffff801030ba:	68 9b 00 00 00       	pushq  $0x9b$/;"	l
ffffffff801030bf	obj/kern/kernel.asm	/^ffffffff801030bf:	e9 f4 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801030c4	obj/kern/kernel.asm	/^ffffffff801030c4 <vector156>:$/;"	l
ffffffff801030c4	obj/kern/kernel.asm	/^ffffffff801030c4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801030c6	obj/kern/kernel.asm	/^ffffffff801030c6:	68 9c 00 00 00       	pushq  $0x9c$/;"	l
ffffffff801030cb	obj/kern/kernel.asm	/^ffffffff801030cb:	e9 e8 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801030d0	obj/kern/kernel.asm	/^ffffffff801030d0 <vector157>:$/;"	l
ffffffff801030d0	obj/kern/kernel.asm	/^ffffffff801030d0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801030d2	obj/kern/kernel.asm	/^ffffffff801030d2:	68 9d 00 00 00       	pushq  $0x9d$/;"	l
ffffffff801030d7	obj/kern/kernel.asm	/^ffffffff801030d7:	e9 dc f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801030dc	obj/kern/kernel.asm	/^ffffffff801030dc <vector158>:$/;"	l
ffffffff801030dc	obj/kern/kernel.asm	/^ffffffff801030dc:	6a 00                	pushq  $0x0$/;"	l
ffffffff801030de	obj/kern/kernel.asm	/^ffffffff801030de:	68 9e 00 00 00       	pushq  $0x9e$/;"	l
ffffffff801030e3	obj/kern/kernel.asm	/^ffffffff801030e3:	e9 d0 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801030e8	obj/kern/kernel.asm	/^ffffffff801030e8 <vector159>:$/;"	l
ffffffff801030e8	obj/kern/kernel.asm	/^ffffffff801030e8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801030ea	obj/kern/kernel.asm	/^ffffffff801030ea:	68 9f 00 00 00       	pushq  $0x9f$/;"	l
ffffffff801030ef	obj/kern/kernel.asm	/^ffffffff801030ef:	e9 c4 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801030f4	obj/kern/kernel.asm	/^ffffffff801030f4 <vector160>:$/;"	l
ffffffff801030f4	obj/kern/kernel.asm	/^ffffffff801030f4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801030f6	obj/kern/kernel.asm	/^ffffffff801030f6:	68 a0 00 00 00       	pushq  $0xa0$/;"	l
ffffffff801030fb	obj/kern/kernel.asm	/^ffffffff801030fb:	e9 b8 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103100	obj/kern/kernel.asm	/^ffffffff80103100 <vector161>:$/;"	l
ffffffff80103100	obj/kern/kernel.asm	/^ffffffff80103100:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103102	obj/kern/kernel.asm	/^ffffffff80103102:	68 a1 00 00 00       	pushq  $0xa1$/;"	l
ffffffff80103107	obj/kern/kernel.asm	/^ffffffff80103107:	e9 ac f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010310c	obj/kern/kernel.asm	/^ffffffff8010310c <vector162>:$/;"	l
ffffffff8010310c	obj/kern/kernel.asm	/^ffffffff8010310c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010310e	obj/kern/kernel.asm	/^ffffffff8010310e:	68 a2 00 00 00       	pushq  $0xa2$/;"	l
ffffffff80103113	obj/kern/kernel.asm	/^ffffffff80103113:	e9 a0 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103118	obj/kern/kernel.asm	/^ffffffff80103118 <vector163>:$/;"	l
ffffffff80103118	obj/kern/kernel.asm	/^ffffffff80103118:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010311a	obj/kern/kernel.asm	/^ffffffff8010311a:	68 a3 00 00 00       	pushq  $0xa3$/;"	l
ffffffff8010311f	obj/kern/kernel.asm	/^ffffffff8010311f:	e9 94 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103124	obj/kern/kernel.asm	/^ffffffff80103124 <vector164>:$/;"	l
ffffffff80103124	obj/kern/kernel.asm	/^ffffffff80103124:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103126	obj/kern/kernel.asm	/^ffffffff80103126:	68 a4 00 00 00       	pushq  $0xa4$/;"	l
ffffffff8010312b	obj/kern/kernel.asm	/^ffffffff8010312b:	e9 88 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103130	obj/kern/kernel.asm	/^ffffffff80103130 <vector165>:$/;"	l
ffffffff80103130	obj/kern/kernel.asm	/^ffffffff80103130:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103132	obj/kern/kernel.asm	/^ffffffff80103132:	68 a5 00 00 00       	pushq  $0xa5$/;"	l
ffffffff80103137	obj/kern/kernel.asm	/^ffffffff80103137:	e9 7c f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010313c	obj/kern/kernel.asm	/^ffffffff8010313c <vector166>:$/;"	l
ffffffff8010313c	obj/kern/kernel.asm	/^ffffffff8010313c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010313e	obj/kern/kernel.asm	/^ffffffff8010313e:	68 a6 00 00 00       	pushq  $0xa6$/;"	l
ffffffff80103143	obj/kern/kernel.asm	/^ffffffff80103143:	e9 70 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103148	obj/kern/kernel.asm	/^ffffffff80103148 <vector167>:$/;"	l
ffffffff80103148	obj/kern/kernel.asm	/^ffffffff80103148:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010314a	obj/kern/kernel.asm	/^ffffffff8010314a:	68 a7 00 00 00       	pushq  $0xa7$/;"	l
ffffffff8010314f	obj/kern/kernel.asm	/^ffffffff8010314f:	e9 64 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103154	obj/kern/kernel.asm	/^ffffffff80103154 <vector168>:$/;"	l
ffffffff80103154	obj/kern/kernel.asm	/^ffffffff80103154:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103156	obj/kern/kernel.asm	/^ffffffff80103156:	68 a8 00 00 00       	pushq  $0xa8$/;"	l
ffffffff8010315b	obj/kern/kernel.asm	/^ffffffff8010315b:	e9 58 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103160	obj/kern/kernel.asm	/^ffffffff80103160 <vector169>:$/;"	l
ffffffff80103160	obj/kern/kernel.asm	/^ffffffff80103160:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103162	obj/kern/kernel.asm	/^ffffffff80103162:	68 a9 00 00 00       	pushq  $0xa9$/;"	l
ffffffff80103167	obj/kern/kernel.asm	/^ffffffff80103167:	e9 4c f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010316c	obj/kern/kernel.asm	/^ffffffff8010316c <vector170>:$/;"	l
ffffffff8010316c	obj/kern/kernel.asm	/^ffffffff8010316c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010316e	obj/kern/kernel.asm	/^ffffffff8010316e:	68 aa 00 00 00       	pushq  $0xaa$/;"	l
ffffffff80103173	obj/kern/kernel.asm	/^ffffffff80103173:	e9 40 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103178	obj/kern/kernel.asm	/^ffffffff80103178 <vector171>:$/;"	l
ffffffff80103178	obj/kern/kernel.asm	/^ffffffff80103178:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010317a	obj/kern/kernel.asm	/^ffffffff8010317a:	68 ab 00 00 00       	pushq  $0xab$/;"	l
ffffffff8010317f	obj/kern/kernel.asm	/^ffffffff8010317f:	e9 34 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103184	obj/kern/kernel.asm	/^ffffffff80103184 <vector172>:$/;"	l
ffffffff80103184	obj/kern/kernel.asm	/^ffffffff80103184:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103186	obj/kern/kernel.asm	/^ffffffff80103186:	68 ac 00 00 00       	pushq  $0xac$/;"	l
ffffffff8010318b	obj/kern/kernel.asm	/^ffffffff8010318b:	e9 28 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103190	obj/kern/kernel.asm	/^ffffffff80103190 <vector173>:$/;"	l
ffffffff80103190	obj/kern/kernel.asm	/^ffffffff80103190:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103192	obj/kern/kernel.asm	/^ffffffff80103192:	68 ad 00 00 00       	pushq  $0xad$/;"	l
ffffffff80103197	obj/kern/kernel.asm	/^ffffffff80103197:	e9 1c f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010319c	obj/kern/kernel.asm	/^ffffffff8010319c <vector174>:$/;"	l
ffffffff8010319c	obj/kern/kernel.asm	/^ffffffff8010319c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010319e	obj/kern/kernel.asm	/^ffffffff8010319e:	68 ae 00 00 00       	pushq  $0xae$/;"	l
ffffffff801031a3	obj/kern/kernel.asm	/^ffffffff801031a3:	e9 10 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801031a8	obj/kern/kernel.asm	/^ffffffff801031a8 <vector175>:$/;"	l
ffffffff801031a8	obj/kern/kernel.asm	/^ffffffff801031a8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801031aa	obj/kern/kernel.asm	/^ffffffff801031aa:	68 af 00 00 00       	pushq  $0xaf$/;"	l
ffffffff801031af	obj/kern/kernel.asm	/^ffffffff801031af:	e9 04 f3 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801031b4	obj/kern/kernel.asm	/^ffffffff801031b4 <vector176>:$/;"	l
ffffffff801031b4	obj/kern/kernel.asm	/^ffffffff801031b4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801031b6	obj/kern/kernel.asm	/^ffffffff801031b6:	68 b0 00 00 00       	pushq  $0xb0$/;"	l
ffffffff801031bb	obj/kern/kernel.asm	/^ffffffff801031bb:	e9 f8 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801031c0	obj/kern/kernel.asm	/^ffffffff801031c0 <vector177>:$/;"	l
ffffffff801031c0	obj/kern/kernel.asm	/^ffffffff801031c0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801031c2	obj/kern/kernel.asm	/^ffffffff801031c2:	68 b1 00 00 00       	pushq  $0xb1$/;"	l
ffffffff801031c7	obj/kern/kernel.asm	/^ffffffff801031c7:	e9 ec f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801031cc	obj/kern/kernel.asm	/^ffffffff801031cc <vector178>:$/;"	l
ffffffff801031cc	obj/kern/kernel.asm	/^ffffffff801031cc:	6a 00                	pushq  $0x0$/;"	l
ffffffff801031ce	obj/kern/kernel.asm	/^ffffffff801031ce:	68 b2 00 00 00       	pushq  $0xb2$/;"	l
ffffffff801031d3	obj/kern/kernel.asm	/^ffffffff801031d3:	e9 e0 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801031d8	obj/kern/kernel.asm	/^ffffffff801031d8 <vector179>:$/;"	l
ffffffff801031d8	obj/kern/kernel.asm	/^ffffffff801031d8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801031da	obj/kern/kernel.asm	/^ffffffff801031da:	68 b3 00 00 00       	pushq  $0xb3$/;"	l
ffffffff801031df	obj/kern/kernel.asm	/^ffffffff801031df:	e9 d4 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801031e4	obj/kern/kernel.asm	/^ffffffff801031e4 <vector180>:$/;"	l
ffffffff801031e4	obj/kern/kernel.asm	/^ffffffff801031e4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801031e6	obj/kern/kernel.asm	/^ffffffff801031e6:	68 b4 00 00 00       	pushq  $0xb4$/;"	l
ffffffff801031eb	obj/kern/kernel.asm	/^ffffffff801031eb:	e9 c8 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801031f0	obj/kern/kernel.asm	/^ffffffff801031f0 <vector181>:$/;"	l
ffffffff801031f0	obj/kern/kernel.asm	/^ffffffff801031f0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801031f2	obj/kern/kernel.asm	/^ffffffff801031f2:	68 b5 00 00 00       	pushq  $0xb5$/;"	l
ffffffff801031f7	obj/kern/kernel.asm	/^ffffffff801031f7:	e9 bc f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801031fc	obj/kern/kernel.asm	/^ffffffff801031fc <vector182>:$/;"	l
ffffffff801031fc	obj/kern/kernel.asm	/^ffffffff801031fc:	6a 00                	pushq  $0x0$/;"	l
ffffffff801031fe	obj/kern/kernel.asm	/^ffffffff801031fe:	68 b6 00 00 00       	pushq  $0xb6$/;"	l
ffffffff80103203	obj/kern/kernel.asm	/^ffffffff80103203:	e9 b0 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103208	obj/kern/kernel.asm	/^ffffffff80103208 <vector183>:$/;"	l
ffffffff80103208	obj/kern/kernel.asm	/^ffffffff80103208:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010320a	obj/kern/kernel.asm	/^ffffffff8010320a:	68 b7 00 00 00       	pushq  $0xb7$/;"	l
ffffffff8010320f	obj/kern/kernel.asm	/^ffffffff8010320f:	e9 a4 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103214	obj/kern/kernel.asm	/^ffffffff80103214 <vector184>:$/;"	l
ffffffff80103214	obj/kern/kernel.asm	/^ffffffff80103214:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103216	obj/kern/kernel.asm	/^ffffffff80103216:	68 b8 00 00 00       	pushq  $0xb8$/;"	l
ffffffff8010321b	obj/kern/kernel.asm	/^ffffffff8010321b:	e9 98 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103220	obj/kern/kernel.asm	/^ffffffff80103220 <vector185>:$/;"	l
ffffffff80103220	obj/kern/kernel.asm	/^ffffffff80103220:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103222	obj/kern/kernel.asm	/^ffffffff80103222:	68 b9 00 00 00       	pushq  $0xb9$/;"	l
ffffffff80103227	obj/kern/kernel.asm	/^ffffffff80103227:	e9 8c f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010322c	obj/kern/kernel.asm	/^ffffffff8010322c <vector186>:$/;"	l
ffffffff8010322c	obj/kern/kernel.asm	/^ffffffff8010322c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010322e	obj/kern/kernel.asm	/^ffffffff8010322e:	68 ba 00 00 00       	pushq  $0xba$/;"	l
ffffffff80103233	obj/kern/kernel.asm	/^ffffffff80103233:	e9 80 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103238	obj/kern/kernel.asm	/^ffffffff80103238 <vector187>:$/;"	l
ffffffff80103238	obj/kern/kernel.asm	/^ffffffff80103238:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010323a	obj/kern/kernel.asm	/^ffffffff8010323a:	68 bb 00 00 00       	pushq  $0xbb$/;"	l
ffffffff8010323f	obj/kern/kernel.asm	/^ffffffff8010323f:	e9 74 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103244	obj/kern/kernel.asm	/^ffffffff80103244 <vector188>:$/;"	l
ffffffff80103244	obj/kern/kernel.asm	/^ffffffff80103244:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103246	obj/kern/kernel.asm	/^ffffffff80103246:	68 bc 00 00 00       	pushq  $0xbc$/;"	l
ffffffff8010324b	obj/kern/kernel.asm	/^ffffffff8010324b:	e9 68 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103250	obj/kern/kernel.asm	/^ffffffff80103250 <vector189>:$/;"	l
ffffffff80103250	obj/kern/kernel.asm	/^ffffffff80103250:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103252	obj/kern/kernel.asm	/^ffffffff80103252:	68 bd 00 00 00       	pushq  $0xbd$/;"	l
ffffffff80103257	obj/kern/kernel.asm	/^ffffffff80103257:	e9 5c f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010325c	obj/kern/kernel.asm	/^ffffffff8010325c <vector190>:$/;"	l
ffffffff8010325c	obj/kern/kernel.asm	/^ffffffff8010325c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010325e	obj/kern/kernel.asm	/^ffffffff8010325e:	68 be 00 00 00       	pushq  $0xbe$/;"	l
ffffffff80103263	obj/kern/kernel.asm	/^ffffffff80103263:	e9 50 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103268	obj/kern/kernel.asm	/^ffffffff80103268 <vector191>:$/;"	l
ffffffff80103268	obj/kern/kernel.asm	/^ffffffff80103268:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010326a	obj/kern/kernel.asm	/^ffffffff8010326a:	68 bf 00 00 00       	pushq  $0xbf$/;"	l
ffffffff8010326f	obj/kern/kernel.asm	/^ffffffff8010326f:	e9 44 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103274	obj/kern/kernel.asm	/^ffffffff80103274 <vector192>:$/;"	l
ffffffff80103274	obj/kern/kernel.asm	/^ffffffff80103274:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103276	obj/kern/kernel.asm	/^ffffffff80103276:	68 c0 00 00 00       	pushq  $0xc0$/;"	l
ffffffff8010327b	obj/kern/kernel.asm	/^ffffffff8010327b:	e9 38 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103280	obj/kern/kernel.asm	/^ffffffff80103280 <vector193>:$/;"	l
ffffffff80103280	obj/kern/kernel.asm	/^ffffffff80103280:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103282	obj/kern/kernel.asm	/^ffffffff80103282:	68 c1 00 00 00       	pushq  $0xc1$/;"	l
ffffffff80103287	obj/kern/kernel.asm	/^ffffffff80103287:	e9 2c f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010328c	obj/kern/kernel.asm	/^ffffffff8010328c <vector194>:$/;"	l
ffffffff8010328c	obj/kern/kernel.asm	/^ffffffff8010328c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010328e	obj/kern/kernel.asm	/^ffffffff8010328e:	68 c2 00 00 00       	pushq  $0xc2$/;"	l
ffffffff80103293	obj/kern/kernel.asm	/^ffffffff80103293:	e9 20 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103298	obj/kern/kernel.asm	/^ffffffff80103298 <vector195>:$/;"	l
ffffffff80103298	obj/kern/kernel.asm	/^ffffffff80103298:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010329a	obj/kern/kernel.asm	/^ffffffff8010329a:	68 c3 00 00 00       	pushq  $0xc3$/;"	l
ffffffff8010329f	obj/kern/kernel.asm	/^ffffffff8010329f:	e9 14 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801032a4	obj/kern/kernel.asm	/^ffffffff801032a4 <vector196>:$/;"	l
ffffffff801032a4	obj/kern/kernel.asm	/^ffffffff801032a4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801032a6	obj/kern/kernel.asm	/^ffffffff801032a6:	68 c4 00 00 00       	pushq  $0xc4$/;"	l
ffffffff801032ab	obj/kern/kernel.asm	/^ffffffff801032ab:	e9 08 f2 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801032b0	obj/kern/kernel.asm	/^ffffffff801032b0 <vector197>:$/;"	l
ffffffff801032b0	obj/kern/kernel.asm	/^ffffffff801032b0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801032b2	obj/kern/kernel.asm	/^ffffffff801032b2:	68 c5 00 00 00       	pushq  $0xc5$/;"	l
ffffffff801032b7	obj/kern/kernel.asm	/^ffffffff801032b7:	e9 fc f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801032bc	obj/kern/kernel.asm	/^ffffffff801032bc <vector198>:$/;"	l
ffffffff801032bc	obj/kern/kernel.asm	/^ffffffff801032bc:	6a 00                	pushq  $0x0$/;"	l
ffffffff801032be	obj/kern/kernel.asm	/^ffffffff801032be:	68 c6 00 00 00       	pushq  $0xc6$/;"	l
ffffffff801032c3	obj/kern/kernel.asm	/^ffffffff801032c3:	e9 f0 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801032c8	obj/kern/kernel.asm	/^ffffffff801032c8 <vector199>:$/;"	l
ffffffff801032c8	obj/kern/kernel.asm	/^ffffffff801032c8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801032ca	obj/kern/kernel.asm	/^ffffffff801032ca:	68 c7 00 00 00       	pushq  $0xc7$/;"	l
ffffffff801032cf	obj/kern/kernel.asm	/^ffffffff801032cf:	e9 e4 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801032d4	obj/kern/kernel.asm	/^ffffffff801032d4 <vector200>:$/;"	l
ffffffff801032d4	obj/kern/kernel.asm	/^ffffffff801032d4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801032d6	obj/kern/kernel.asm	/^ffffffff801032d6:	68 c8 00 00 00       	pushq  $0xc8$/;"	l
ffffffff801032db	obj/kern/kernel.asm	/^ffffffff801032db:	e9 d8 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801032e0	obj/kern/kernel.asm	/^ffffffff801032e0 <vector201>:$/;"	l
ffffffff801032e0	obj/kern/kernel.asm	/^ffffffff801032e0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801032e2	obj/kern/kernel.asm	/^ffffffff801032e2:	68 c9 00 00 00       	pushq  $0xc9$/;"	l
ffffffff801032e7	obj/kern/kernel.asm	/^ffffffff801032e7:	e9 cc f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801032ec	obj/kern/kernel.asm	/^ffffffff801032ec <vector202>:$/;"	l
ffffffff801032ec	obj/kern/kernel.asm	/^ffffffff801032ec:	6a 00                	pushq  $0x0$/;"	l
ffffffff801032ee	obj/kern/kernel.asm	/^ffffffff801032ee:	68 ca 00 00 00       	pushq  $0xca$/;"	l
ffffffff801032f3	obj/kern/kernel.asm	/^ffffffff801032f3:	e9 c0 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801032f8	obj/kern/kernel.asm	/^ffffffff801032f8 <vector203>:$/;"	l
ffffffff801032f8	obj/kern/kernel.asm	/^ffffffff801032f8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801032fa	obj/kern/kernel.asm	/^ffffffff801032fa:	68 cb 00 00 00       	pushq  $0xcb$/;"	l
ffffffff801032ff	obj/kern/kernel.asm	/^ffffffff801032ff:	e9 b4 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103304	obj/kern/kernel.asm	/^ffffffff80103304 <vector204>:$/;"	l
ffffffff80103304	obj/kern/kernel.asm	/^ffffffff80103304:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103306	obj/kern/kernel.asm	/^ffffffff80103306:	68 cc 00 00 00       	pushq  $0xcc$/;"	l
ffffffff8010330b	obj/kern/kernel.asm	/^ffffffff8010330b:	e9 a8 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103310	obj/kern/kernel.asm	/^ffffffff80103310 <vector205>:$/;"	l
ffffffff80103310	obj/kern/kernel.asm	/^ffffffff80103310:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103312	obj/kern/kernel.asm	/^ffffffff80103312:	68 cd 00 00 00       	pushq  $0xcd$/;"	l
ffffffff80103317	obj/kern/kernel.asm	/^ffffffff80103317:	e9 9c f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010331c	obj/kern/kernel.asm	/^ffffffff8010331c <vector206>:$/;"	l
ffffffff8010331c	obj/kern/kernel.asm	/^ffffffff8010331c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010331e	obj/kern/kernel.asm	/^ffffffff8010331e:	68 ce 00 00 00       	pushq  $0xce$/;"	l
ffffffff80103323	obj/kern/kernel.asm	/^ffffffff80103323:	e9 90 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103328	obj/kern/kernel.asm	/^ffffffff80103328 <vector207>:$/;"	l
ffffffff80103328	obj/kern/kernel.asm	/^ffffffff80103328:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010332a	obj/kern/kernel.asm	/^ffffffff8010332a:	68 cf 00 00 00       	pushq  $0xcf$/;"	l
ffffffff8010332f	obj/kern/kernel.asm	/^ffffffff8010332f:	e9 84 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103334	obj/kern/kernel.asm	/^ffffffff80103334 <vector208>:$/;"	l
ffffffff80103334	obj/kern/kernel.asm	/^ffffffff80103334:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103336	obj/kern/kernel.asm	/^ffffffff80103336:	68 d0 00 00 00       	pushq  $0xd0$/;"	l
ffffffff8010333b	obj/kern/kernel.asm	/^ffffffff8010333b:	e9 78 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103340	obj/kern/kernel.asm	/^ffffffff80103340 <vector209>:$/;"	l
ffffffff80103340	obj/kern/kernel.asm	/^ffffffff80103340:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103342	obj/kern/kernel.asm	/^ffffffff80103342:	68 d1 00 00 00       	pushq  $0xd1$/;"	l
ffffffff80103347	obj/kern/kernel.asm	/^ffffffff80103347:	e9 6c f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010334c	obj/kern/kernel.asm	/^ffffffff8010334c <vector210>:$/;"	l
ffffffff8010334c	obj/kern/kernel.asm	/^ffffffff8010334c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010334e	obj/kern/kernel.asm	/^ffffffff8010334e:	68 d2 00 00 00       	pushq  $0xd2$/;"	l
ffffffff80103353	obj/kern/kernel.asm	/^ffffffff80103353:	e9 60 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103358	obj/kern/kernel.asm	/^ffffffff80103358 <vector211>:$/;"	l
ffffffff80103358	obj/kern/kernel.asm	/^ffffffff80103358:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010335a	obj/kern/kernel.asm	/^ffffffff8010335a:	68 d3 00 00 00       	pushq  $0xd3$/;"	l
ffffffff8010335f	obj/kern/kernel.asm	/^ffffffff8010335f:	e9 54 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103364	obj/kern/kernel.asm	/^ffffffff80103364 <vector212>:$/;"	l
ffffffff80103364	obj/kern/kernel.asm	/^ffffffff80103364:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103366	obj/kern/kernel.asm	/^ffffffff80103366:	68 d4 00 00 00       	pushq  $0xd4$/;"	l
ffffffff8010336b	obj/kern/kernel.asm	/^ffffffff8010336b:	e9 48 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103370	obj/kern/kernel.asm	/^ffffffff80103370 <vector213>:$/;"	l
ffffffff80103370	obj/kern/kernel.asm	/^ffffffff80103370:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103372	obj/kern/kernel.asm	/^ffffffff80103372:	68 d5 00 00 00       	pushq  $0xd5$/;"	l
ffffffff80103377	obj/kern/kernel.asm	/^ffffffff80103377:	e9 3c f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010337c	obj/kern/kernel.asm	/^ffffffff8010337c <vector214>:$/;"	l
ffffffff8010337c	obj/kern/kernel.asm	/^ffffffff8010337c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010337e	obj/kern/kernel.asm	/^ffffffff8010337e:	68 d6 00 00 00       	pushq  $0xd6$/;"	l
ffffffff80103383	obj/kern/kernel.asm	/^ffffffff80103383:	e9 30 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103388	obj/kern/kernel.asm	/^ffffffff80103388 <vector215>:$/;"	l
ffffffff80103388	obj/kern/kernel.asm	/^ffffffff80103388:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010338a	obj/kern/kernel.asm	/^ffffffff8010338a:	68 d7 00 00 00       	pushq  $0xd7$/;"	l
ffffffff8010338f	obj/kern/kernel.asm	/^ffffffff8010338f:	e9 24 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103394	obj/kern/kernel.asm	/^ffffffff80103394 <vector216>:$/;"	l
ffffffff80103394	obj/kern/kernel.asm	/^ffffffff80103394:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103396	obj/kern/kernel.asm	/^ffffffff80103396:	68 d8 00 00 00       	pushq  $0xd8$/;"	l
ffffffff8010339b	obj/kern/kernel.asm	/^ffffffff8010339b:	e9 18 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801033a0	obj/kern/kernel.asm	/^ffffffff801033a0 <vector217>:$/;"	l
ffffffff801033a0	obj/kern/kernel.asm	/^ffffffff801033a0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801033a2	obj/kern/kernel.asm	/^ffffffff801033a2:	68 d9 00 00 00       	pushq  $0xd9$/;"	l
ffffffff801033a7	obj/kern/kernel.asm	/^ffffffff801033a7:	e9 0c f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801033ac	obj/kern/kernel.asm	/^ffffffff801033ac <vector218>:$/;"	l
ffffffff801033ac	obj/kern/kernel.asm	/^ffffffff801033ac:	6a 00                	pushq  $0x0$/;"	l
ffffffff801033ae	obj/kern/kernel.asm	/^ffffffff801033ae:	68 da 00 00 00       	pushq  $0xda$/;"	l
ffffffff801033b3	obj/kern/kernel.asm	/^ffffffff801033b3:	e9 00 f1 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801033b8	obj/kern/kernel.asm	/^ffffffff801033b8 <vector219>:$/;"	l
ffffffff801033b8	obj/kern/kernel.asm	/^ffffffff801033b8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801033ba	obj/kern/kernel.asm	/^ffffffff801033ba:	68 db 00 00 00       	pushq  $0xdb$/;"	l
ffffffff801033bf	obj/kern/kernel.asm	/^ffffffff801033bf:	e9 f4 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801033c4	obj/kern/kernel.asm	/^ffffffff801033c4 <vector220>:$/;"	l
ffffffff801033c4	obj/kern/kernel.asm	/^ffffffff801033c4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801033c6	obj/kern/kernel.asm	/^ffffffff801033c6:	68 dc 00 00 00       	pushq  $0xdc$/;"	l
ffffffff801033cb	obj/kern/kernel.asm	/^ffffffff801033cb:	e9 e8 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801033d0	obj/kern/kernel.asm	/^ffffffff801033d0 <vector221>:$/;"	l
ffffffff801033d0	obj/kern/kernel.asm	/^ffffffff801033d0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801033d2	obj/kern/kernel.asm	/^ffffffff801033d2:	68 dd 00 00 00       	pushq  $0xdd$/;"	l
ffffffff801033d7	obj/kern/kernel.asm	/^ffffffff801033d7:	e9 dc f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801033dc	obj/kern/kernel.asm	/^ffffffff801033dc <vector222>:$/;"	l
ffffffff801033dc	obj/kern/kernel.asm	/^ffffffff801033dc:	6a 00                	pushq  $0x0$/;"	l
ffffffff801033de	obj/kern/kernel.asm	/^ffffffff801033de:	68 de 00 00 00       	pushq  $0xde$/;"	l
ffffffff801033e3	obj/kern/kernel.asm	/^ffffffff801033e3:	e9 d0 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801033e8	obj/kern/kernel.asm	/^ffffffff801033e8 <vector223>:$/;"	l
ffffffff801033e8	obj/kern/kernel.asm	/^ffffffff801033e8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801033ea	obj/kern/kernel.asm	/^ffffffff801033ea:	68 df 00 00 00       	pushq  $0xdf$/;"	l
ffffffff801033ef	obj/kern/kernel.asm	/^ffffffff801033ef:	e9 c4 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801033f4	obj/kern/kernel.asm	/^ffffffff801033f4 <vector224>:$/;"	l
ffffffff801033f4	obj/kern/kernel.asm	/^ffffffff801033f4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801033f6	obj/kern/kernel.asm	/^ffffffff801033f6:	68 e0 00 00 00       	pushq  $0xe0$/;"	l
ffffffff801033fb	obj/kern/kernel.asm	/^ffffffff801033fb:	e9 b8 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103400	obj/kern/kernel.asm	/^ffffffff80103400 <vector225>:$/;"	l
ffffffff80103400	obj/kern/kernel.asm	/^ffffffff80103400:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103402	obj/kern/kernel.asm	/^ffffffff80103402:	68 e1 00 00 00       	pushq  $0xe1$/;"	l
ffffffff80103407	obj/kern/kernel.asm	/^ffffffff80103407:	e9 ac f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010340c	obj/kern/kernel.asm	/^ffffffff8010340c <vector226>:$/;"	l
ffffffff8010340c	obj/kern/kernel.asm	/^ffffffff8010340c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010340e	obj/kern/kernel.asm	/^ffffffff8010340e:	68 e2 00 00 00       	pushq  $0xe2$/;"	l
ffffffff80103413	obj/kern/kernel.asm	/^ffffffff80103413:	e9 a0 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103418	obj/kern/kernel.asm	/^ffffffff80103418 <vector227>:$/;"	l
ffffffff80103418	obj/kern/kernel.asm	/^ffffffff80103418:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010341a	obj/kern/kernel.asm	/^ffffffff8010341a:	68 e3 00 00 00       	pushq  $0xe3$/;"	l
ffffffff8010341f	obj/kern/kernel.asm	/^ffffffff8010341f:	e9 94 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103424	obj/kern/kernel.asm	/^ffffffff80103424 <vector228>:$/;"	l
ffffffff80103424	obj/kern/kernel.asm	/^ffffffff80103424:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103426	obj/kern/kernel.asm	/^ffffffff80103426:	68 e4 00 00 00       	pushq  $0xe4$/;"	l
ffffffff8010342b	obj/kern/kernel.asm	/^ffffffff8010342b:	e9 88 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103430	obj/kern/kernel.asm	/^ffffffff80103430 <vector229>:$/;"	l
ffffffff80103430	obj/kern/kernel.asm	/^ffffffff80103430:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103432	obj/kern/kernel.asm	/^ffffffff80103432:	68 e5 00 00 00       	pushq  $0xe5$/;"	l
ffffffff80103437	obj/kern/kernel.asm	/^ffffffff80103437:	e9 7c f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010343c	obj/kern/kernel.asm	/^ffffffff8010343c <vector230>:$/;"	l
ffffffff8010343c	obj/kern/kernel.asm	/^ffffffff8010343c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010343e	obj/kern/kernel.asm	/^ffffffff8010343e:	68 e6 00 00 00       	pushq  $0xe6$/;"	l
ffffffff80103443	obj/kern/kernel.asm	/^ffffffff80103443:	e9 70 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103448	obj/kern/kernel.asm	/^ffffffff80103448 <vector231>:$/;"	l
ffffffff80103448	obj/kern/kernel.asm	/^ffffffff80103448:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010344a	obj/kern/kernel.asm	/^ffffffff8010344a:	68 e7 00 00 00       	pushq  $0xe7$/;"	l
ffffffff8010344f	obj/kern/kernel.asm	/^ffffffff8010344f:	e9 64 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103454	obj/kern/kernel.asm	/^ffffffff80103454 <vector232>:$/;"	l
ffffffff80103454	obj/kern/kernel.asm	/^ffffffff80103454:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103456	obj/kern/kernel.asm	/^ffffffff80103456:	68 e8 00 00 00       	pushq  $0xe8$/;"	l
ffffffff8010345b	obj/kern/kernel.asm	/^ffffffff8010345b:	e9 58 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103460	obj/kern/kernel.asm	/^ffffffff80103460 <vector233>:$/;"	l
ffffffff80103460	obj/kern/kernel.asm	/^ffffffff80103460:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103462	obj/kern/kernel.asm	/^ffffffff80103462:	68 e9 00 00 00       	pushq  $0xe9$/;"	l
ffffffff80103467	obj/kern/kernel.asm	/^ffffffff80103467:	e9 4c f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010346c	obj/kern/kernel.asm	/^ffffffff8010346c <vector234>:$/;"	l
ffffffff8010346c	obj/kern/kernel.asm	/^ffffffff8010346c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010346e	obj/kern/kernel.asm	/^ffffffff8010346e:	68 ea 00 00 00       	pushq  $0xea$/;"	l
ffffffff80103473	obj/kern/kernel.asm	/^ffffffff80103473:	e9 40 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103478	obj/kern/kernel.asm	/^ffffffff80103478 <vector235>:$/;"	l
ffffffff80103478	obj/kern/kernel.asm	/^ffffffff80103478:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010347a	obj/kern/kernel.asm	/^ffffffff8010347a:	68 eb 00 00 00       	pushq  $0xeb$/;"	l
ffffffff8010347f	obj/kern/kernel.asm	/^ffffffff8010347f:	e9 34 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103484	obj/kern/kernel.asm	/^ffffffff80103484 <vector236>:$/;"	l
ffffffff80103484	obj/kern/kernel.asm	/^ffffffff80103484:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103486	obj/kern/kernel.asm	/^ffffffff80103486:	68 ec 00 00 00       	pushq  $0xec$/;"	l
ffffffff8010348b	obj/kern/kernel.asm	/^ffffffff8010348b:	e9 28 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103490	obj/kern/kernel.asm	/^ffffffff80103490 <vector237>:$/;"	l
ffffffff80103490	obj/kern/kernel.asm	/^ffffffff80103490:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103492	obj/kern/kernel.asm	/^ffffffff80103492:	68 ed 00 00 00       	pushq  $0xed$/;"	l
ffffffff80103497	obj/kern/kernel.asm	/^ffffffff80103497:	e9 1c f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010349c	obj/kern/kernel.asm	/^ffffffff8010349c <vector238>:$/;"	l
ffffffff8010349c	obj/kern/kernel.asm	/^ffffffff8010349c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010349e	obj/kern/kernel.asm	/^ffffffff8010349e:	68 ee 00 00 00       	pushq  $0xee$/;"	l
ffffffff801034a3	obj/kern/kernel.asm	/^ffffffff801034a3:	e9 10 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801034a8	obj/kern/kernel.asm	/^ffffffff801034a8 <vector239>:$/;"	l
ffffffff801034a8	obj/kern/kernel.asm	/^ffffffff801034a8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801034aa	obj/kern/kernel.asm	/^ffffffff801034aa:	68 ef 00 00 00       	pushq  $0xef$/;"	l
ffffffff801034af	obj/kern/kernel.asm	/^ffffffff801034af:	e9 04 f0 ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801034b4	obj/kern/kernel.asm	/^ffffffff801034b4 <vector240>:$/;"	l
ffffffff801034b4	obj/kern/kernel.asm	/^ffffffff801034b4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801034b6	obj/kern/kernel.asm	/^ffffffff801034b6:	68 f0 00 00 00       	pushq  $0xf0$/;"	l
ffffffff801034bb	obj/kern/kernel.asm	/^ffffffff801034bb:	e9 f8 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801034c0	obj/kern/kernel.asm	/^ffffffff801034c0 <vector241>:$/;"	l
ffffffff801034c0	obj/kern/kernel.asm	/^ffffffff801034c0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801034c2	obj/kern/kernel.asm	/^ffffffff801034c2:	68 f1 00 00 00       	pushq  $0xf1$/;"	l
ffffffff801034c7	obj/kern/kernel.asm	/^ffffffff801034c7:	e9 ec ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801034cc	obj/kern/kernel.asm	/^ffffffff801034cc <vector242>:$/;"	l
ffffffff801034cc	obj/kern/kernel.asm	/^ffffffff801034cc:	6a 00                	pushq  $0x0$/;"	l
ffffffff801034ce	obj/kern/kernel.asm	/^ffffffff801034ce:	68 f2 00 00 00       	pushq  $0xf2$/;"	l
ffffffff801034d3	obj/kern/kernel.asm	/^ffffffff801034d3:	e9 e0 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801034d8	obj/kern/kernel.asm	/^ffffffff801034d8 <vector243>:$/;"	l
ffffffff801034d8	obj/kern/kernel.asm	/^ffffffff801034d8:	6a 00                	pushq  $0x0$/;"	l
ffffffff801034da	obj/kern/kernel.asm	/^ffffffff801034da:	68 f3 00 00 00       	pushq  $0xf3$/;"	l
ffffffff801034df	obj/kern/kernel.asm	/^ffffffff801034df:	e9 d4 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801034e4	obj/kern/kernel.asm	/^ffffffff801034e4 <vector244>:$/;"	l
ffffffff801034e4	obj/kern/kernel.asm	/^ffffffff801034e4:	6a 00                	pushq  $0x0$/;"	l
ffffffff801034e6	obj/kern/kernel.asm	/^ffffffff801034e6:	68 f4 00 00 00       	pushq  $0xf4$/;"	l
ffffffff801034eb	obj/kern/kernel.asm	/^ffffffff801034eb:	e9 c8 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801034f0	obj/kern/kernel.asm	/^ffffffff801034f0 <vector245>:$/;"	l
ffffffff801034f0	obj/kern/kernel.asm	/^ffffffff801034f0:	6a 00                	pushq  $0x0$/;"	l
ffffffff801034f2	obj/kern/kernel.asm	/^ffffffff801034f2:	68 f5 00 00 00       	pushq  $0xf5$/;"	l
ffffffff801034f7	obj/kern/kernel.asm	/^ffffffff801034f7:	e9 bc ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff801034fc	obj/kern/kernel.asm	/^ffffffff801034fc <vector246>:$/;"	l
ffffffff801034fc	obj/kern/kernel.asm	/^ffffffff801034fc:	6a 00                	pushq  $0x0$/;"	l
ffffffff801034fe	obj/kern/kernel.asm	/^ffffffff801034fe:	68 f6 00 00 00       	pushq  $0xf6$/;"	l
ffffffff80103503	obj/kern/kernel.asm	/^ffffffff80103503:	e9 b0 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103508	obj/kern/kernel.asm	/^ffffffff80103508 <vector247>:$/;"	l
ffffffff80103508	obj/kern/kernel.asm	/^ffffffff80103508:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010350a	obj/kern/kernel.asm	/^ffffffff8010350a:	68 f7 00 00 00       	pushq  $0xf7$/;"	l
ffffffff8010350f	obj/kern/kernel.asm	/^ffffffff8010350f:	e9 a4 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103514	obj/kern/kernel.asm	/^ffffffff80103514 <vector248>:$/;"	l
ffffffff80103514	obj/kern/kernel.asm	/^ffffffff80103514:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103516	obj/kern/kernel.asm	/^ffffffff80103516:	68 f8 00 00 00       	pushq  $0xf8$/;"	l
ffffffff8010351b	obj/kern/kernel.asm	/^ffffffff8010351b:	e9 98 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103520	obj/kern/kernel.asm	/^ffffffff80103520 <vector249>:$/;"	l
ffffffff80103520	obj/kern/kernel.asm	/^ffffffff80103520:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103522	obj/kern/kernel.asm	/^ffffffff80103522:	68 f9 00 00 00       	pushq  $0xf9$/;"	l
ffffffff80103527	obj/kern/kernel.asm	/^ffffffff80103527:	e9 8c ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010352c	obj/kern/kernel.asm	/^ffffffff8010352c <vector250>:$/;"	l
ffffffff8010352c	obj/kern/kernel.asm	/^ffffffff8010352c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010352e	obj/kern/kernel.asm	/^ffffffff8010352e:	68 fa 00 00 00       	pushq  $0xfa$/;"	l
ffffffff80103533	obj/kern/kernel.asm	/^ffffffff80103533:	e9 80 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103538	obj/kern/kernel.asm	/^ffffffff80103538 <vector251>:$/;"	l
ffffffff80103538	obj/kern/kernel.asm	/^ffffffff80103538:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010353a	obj/kern/kernel.asm	/^ffffffff8010353a:	68 fb 00 00 00       	pushq  $0xfb$/;"	l
ffffffff8010353f	obj/kern/kernel.asm	/^ffffffff8010353f:	e9 74 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103544	obj/kern/kernel.asm	/^ffffffff80103544 <vector252>:$/;"	l
ffffffff80103544	obj/kern/kernel.asm	/^ffffffff80103544:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103546	obj/kern/kernel.asm	/^ffffffff80103546:	68 fc 00 00 00       	pushq  $0xfc$/;"	l
ffffffff8010354b	obj/kern/kernel.asm	/^ffffffff8010354b:	e9 68 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103550	obj/kern/kernel.asm	/^ffffffff80103550 <vector253>:$/;"	l
ffffffff80103550	obj/kern/kernel.asm	/^ffffffff80103550:	6a 00                	pushq  $0x0$/;"	l
ffffffff80103552	obj/kern/kernel.asm	/^ffffffff80103552:	68 fd 00 00 00       	pushq  $0xfd$/;"	l
ffffffff80103557	obj/kern/kernel.asm	/^ffffffff80103557:	e9 5c ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff8010355c	obj/kern/kernel.asm	/^ffffffff8010355c <vector254>:$/;"	l
ffffffff8010355c	obj/kern/kernel.asm	/^ffffffff8010355c:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010355e	obj/kern/kernel.asm	/^ffffffff8010355e:	68 fe 00 00 00       	pushq  $0xfe$/;"	l
ffffffff80103563	obj/kern/kernel.asm	/^ffffffff80103563:	e9 50 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103568	obj/kern/kernel.asm	/^ffffffff80103568 <vector255>:$/;"	l
ffffffff80103568	obj/kern/kernel.asm	/^ffffffff80103568:	6a 00                	pushq  $0x0$/;"	l
ffffffff8010356a	obj/kern/kernel.asm	/^ffffffff8010356a:	68 ff 00 00 00       	pushq  $0xff$/;"	l
ffffffff8010356f	obj/kern/kernel.asm	/^ffffffff8010356f:	e9 44 ef ff ff       	jmpq   ffffffff801024b8 <alltraps>$/;"	l
ffffffff80103574	obj/kern/kernel.asm	/^ffffffff80103574 <lapicw>:$/;"	l
ffffffff80103574	obj/kern/kernel.asm	/^ffffffff80103574:	48 63 ff             	movslq %edi,%rdi$/;"	l
ffffffff80103577	obj/kern/kernel.asm	/^ffffffff80103577:	48 8b 05 2a b7 00 00 	mov    0xb72a(%rip),%rax        # ffffffff8010eca8 <lapic>$/;"	l
ffffffff8010357e	obj/kern/kernel.asm	/^ffffffff8010357e:	48 8d 04 b8          	lea    (%rax,%rdi,4),%rax$/;"	l
ffffffff80103582	obj/kern/kernel.asm	/^ffffffff80103582:	89 30                	mov    %esi,(%rax)$/;"	l
ffffffff80103584	obj/kern/kernel.asm	/^ffffffff80103584:	48 8b 05 1d b7 00 00 	mov    0xb71d(%rip),%rax        # ffffffff8010eca8 <lapic>$/;"	l
ffffffff8010358b	obj/kern/kernel.asm	/^ffffffff8010358b:	8b 40 20             	mov    0x20(%rax),%eax$/;"	l
ffffffff8010358e	obj/kern/kernel.asm	/^ffffffff8010358e:	c3                   	retq   $/;"	l
ffffffff8010358f	obj/kern/kernel.asm	/^ffffffff8010358f <lapiceoi>:$/;"	l
ffffffff8010358f	obj/kern/kernel.asm	/^ffffffff8010358f:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103593	obj/kern/kernel.asm	/^ffffffff80103593:	48 83 3d 0d b7 00 00 	cmpq   $0x0,0xb70d(%rip)        # ffffffff8010eca8 <lapic>$/;"	l
ffffffff8010359a	obj/kern/kernel.asm	/^ffffffff8010359a:	00 $/;"	l
ffffffff8010359b	obj/kern/kernel.asm	/^ffffffff8010359b:	74 15                	je     ffffffff801035b2 <lapiceoi+0x23>$/;"	l
ffffffff8010359d	obj/kern/kernel.asm	/^ffffffff8010359d:	55                   	push   %rbp$/;"	l
ffffffff8010359e	obj/kern/kernel.asm	/^ffffffff8010359e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801035a1	obj/kern/kernel.asm	/^ffffffff801035a1:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff801035a6	obj/kern/kernel.asm	/^ffffffff801035a6:	bf 2c 00 00 00       	mov    $0x2c,%edi$/;"	l
ffffffff801035ab	obj/kern/kernel.asm	/^ffffffff801035ab:	e8 c4 ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff801035b0	obj/kern/kernel.asm	/^ffffffff801035b0:	5d                   	pop    %rbp$/;"	l
ffffffff801035b1	obj/kern/kernel.asm	/^ffffffff801035b1:	c3                   	retq   $/;"	l
ffffffff801035b2	obj/kern/kernel.asm	/^ffffffff801035b2:	c3                   	retq   $/;"	l
ffffffff801035b3	obj/kern/kernel.asm	/^ffffffff801035b3 <lapicinit>:$/;"	l
ffffffff801035b3	obj/kern/kernel.asm	/^ffffffff801035b3:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801035b7	obj/kern/kernel.asm	/^ffffffff801035b7:	48 83 3d e9 b6 00 00 	cmpq   $0x0,0xb6e9(%rip)        # ffffffff8010eca8 <lapic>$/;"	l
ffffffff801035be	obj/kern/kernel.asm	/^ffffffff801035be:	00 $/;"	l
ffffffff801035bf	obj/kern/kernel.asm	/^ffffffff801035bf:	0f 84 f6 00 00 00    	je     ffffffff801036bb <lapicinit+0x108>$/;"	l
ffffffff801035c5	obj/kern/kernel.asm	/^ffffffff801035c5:	55                   	push   %rbp$/;"	l
ffffffff801035c6	obj/kern/kernel.asm	/^ffffffff801035c6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801035c9	obj/kern/kernel.asm	/^ffffffff801035c9:	be 3f 01 00 00       	mov    $0x13f,%esi$/;"	l
ffffffff801035ce	obj/kern/kernel.asm	/^ffffffff801035ce:	bf 3c 00 00 00       	mov    $0x3c,%edi$/;"	l
ffffffff801035d3	obj/kern/kernel.asm	/^ffffffff801035d3:	e8 9c ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff801035d8	obj/kern/kernel.asm	/^ffffffff801035d8:	be 0b 00 00 00       	mov    $0xb,%esi$/;"	l
ffffffff801035dd	obj/kern/kernel.asm	/^ffffffff801035dd:	bf f8 00 00 00       	mov    $0xf8,%edi$/;"	l
ffffffff801035e2	obj/kern/kernel.asm	/^ffffffff801035e2:	e8 8d ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff801035e7	obj/kern/kernel.asm	/^ffffffff801035e7:	be 20 00 02 00       	mov    $0x20020,%esi$/;"	l
ffffffff801035ec	obj/kern/kernel.asm	/^ffffffff801035ec:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffffffff801035f1	obj/kern/kernel.asm	/^ffffffff801035f1:	e8 7e ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff801035f6	obj/kern/kernel.asm	/^ffffffff801035f6:	be 80 96 98 00       	mov    $0x989680,%esi$/;"	l
ffffffff801035fb	obj/kern/kernel.asm	/^ffffffff801035fb:	bf e0 00 00 00       	mov    $0xe0,%edi$/;"	l
ffffffff80103600	obj/kern/kernel.asm	/^ffffffff80103600:	e8 6f ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff80103605	obj/kern/kernel.asm	/^ffffffff80103605:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffffffff8010360a	obj/kern/kernel.asm	/^ffffffff8010360a:	bf d4 00 00 00       	mov    $0xd4,%edi$/;"	l
ffffffff8010360f	obj/kern/kernel.asm	/^ffffffff8010360f:	e8 60 ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff80103614	obj/kern/kernel.asm	/^ffffffff80103614:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffffffff80103619	obj/kern/kernel.asm	/^ffffffff80103619:	bf d8 00 00 00       	mov    $0xd8,%edi$/;"	l
ffffffff8010361e	obj/kern/kernel.asm	/^ffffffff8010361e:	e8 51 ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff80103623	obj/kern/kernel.asm	/^ffffffff80103623:	48 8b 05 7e b6 00 00 	mov    0xb67e(%rip),%rax        # ffffffff8010eca8 <lapic>$/;"	l
ffffffff8010362a	obj/kern/kernel.asm	/^ffffffff8010362a:	8b 40 30             	mov    0x30(%rax),%eax$/;"	l
ffffffff8010362d	obj/kern/kernel.asm	/^ffffffff8010362d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
ffffffff80103630	obj/kern/kernel.asm	/^ffffffff80103630:	a8 fc                	test   $0xfc,%al$/;"	l
ffffffff80103632	obj/kern/kernel.asm	/^ffffffff80103632:	75 73                	jne    ffffffff801036a7 <lapicinit+0xf4>$/;"	l
ffffffff80103634	obj/kern/kernel.asm	/^ffffffff80103634:	be 33 00 00 00       	mov    $0x33,%esi$/;"	l
ffffffff80103639	obj/kern/kernel.asm	/^ffffffff80103639:	bf dc 00 00 00       	mov    $0xdc,%edi$/;"	l
ffffffff8010363e	obj/kern/kernel.asm	/^ffffffff8010363e:	e8 31 ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff80103643	obj/kern/kernel.asm	/^ffffffff80103643:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80103648	obj/kern/kernel.asm	/^ffffffff80103648:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
ffffffff8010364d	obj/kern/kernel.asm	/^ffffffff8010364d:	e8 22 ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff80103652	obj/kern/kernel.asm	/^ffffffff80103652:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80103657	obj/kern/kernel.asm	/^ffffffff80103657:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
ffffffff8010365c	obj/kern/kernel.asm	/^ffffffff8010365c:	e8 13 ff ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff80103661	obj/kern/kernel.asm	/^ffffffff80103661:	e8 29 ff ff ff       	callq  ffffffff8010358f <lapiceoi>$/;"	l
ffffffff80103666	obj/kern/kernel.asm	/^ffffffff80103666:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff8010366b	obj/kern/kernel.asm	/^ffffffff8010366b:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffffffff80103670	obj/kern/kernel.asm	/^ffffffff80103670:	e8 ff fe ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff80103675	obj/kern/kernel.asm	/^ffffffff80103675:	be 00 85 08 00       	mov    $0x88500,%esi$/;"	l
ffffffff8010367a	obj/kern/kernel.asm	/^ffffffff8010367a:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffffffff8010367f	obj/kern/kernel.asm	/^ffffffff8010367f:	e8 f0 fe ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff80103684	obj/kern/kernel.asm	/^ffffffff80103684:	48 8b 15 1d b6 00 00 	mov    0xb61d(%rip),%rdx        # ffffffff8010eca8 <lapic>$/;"	l
ffffffff8010368b	obj/kern/kernel.asm	/^ffffffff8010368b:	8b 82 00 03 00 00    	mov    0x300(%rdx),%eax$/;"	l
ffffffff80103691	obj/kern/kernel.asm	/^ffffffff80103691:	f6 c4 10             	test   $0x10,%ah$/;"	l
ffffffff80103694	obj/kern/kernel.asm	/^ffffffff80103694:	75 f5                	jne    ffffffff8010368b <lapicinit+0xd8>$/;"	l
ffffffff80103696	obj/kern/kernel.asm	/^ffffffff80103696:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff8010369b	obj/kern/kernel.asm	/^ffffffff8010369b:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
ffffffff801036a0	obj/kern/kernel.asm	/^ffffffff801036a0:	e8 cf fe ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff801036a5	obj/kern/kernel.asm	/^ffffffff801036a5:	5d                   	pop    %rbp$/;"	l
ffffffff801036a6	obj/kern/kernel.asm	/^ffffffff801036a6:	c3                   	retq   $/;"	l
ffffffff801036a7	obj/kern/kernel.asm	/^ffffffff801036a7:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffffffff801036ac	obj/kern/kernel.asm	/^ffffffff801036ac:	bf d0 00 00 00       	mov    $0xd0,%edi$/;"	l
ffffffff801036b1	obj/kern/kernel.asm	/^ffffffff801036b1:	e8 be fe ff ff       	callq  ffffffff80103574 <lapicw>$/;"	l
ffffffff801036b6	obj/kern/kernel.asm	/^ffffffff801036b6:	e9 79 ff ff ff       	jmpq   ffffffff80103634 <lapicinit+0x81>$/;"	l
ffffffff801036bb	obj/kern/kernel.asm	/^ffffffff801036bb:	c3                   	retq   $/;"	l
ffffffff801036bc	obj/kern/kernel.asm	/^ffffffff801036bc <lapicid>:$/;"	l
ffffffff801036bc	obj/kern/kernel.asm	/^ffffffff801036bc:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801036c0	obj/kern/kernel.asm	/^ffffffff801036c0:	48 8b 05 e1 b5 00 00 	mov    0xb5e1(%rip),%rax        # ffffffff8010eca8 <lapic>$/;"	l
ffffffff801036c7	obj/kern/kernel.asm	/^ffffffff801036c7:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801036ca	obj/kern/kernel.asm	/^ffffffff801036ca:	74 07                	je     ffffffff801036d3 <lapicid+0x17>$/;"	l
ffffffff801036cc	obj/kern/kernel.asm	/^ffffffff801036cc:	8b 40 20             	mov    0x20(%rax),%eax$/;"	l
ffffffff801036cf	obj/kern/kernel.asm	/^ffffffff801036cf:	c1 e8 18             	shr    $0x18,%eax$/;"	l
ffffffff801036d2	obj/kern/kernel.asm	/^ffffffff801036d2:	c3                   	retq   $/;"	l
ffffffff801036d3	obj/kern/kernel.asm	/^ffffffff801036d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801036d8	obj/kern/kernel.asm	/^ffffffff801036d8:	c3                   	retq   $/;"	l
ffffffff801036d9	obj/kern/kernel.asm	/^ffffffff801036d9 <microdelay>:$/;"	l
ffffffff801036d9	obj/kern/kernel.asm	/^ffffffff801036d9:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801036dd	obj/kern/kernel.asm	/^ffffffff801036dd:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
ffffffff801036e2	obj/kern/kernel.asm	/^ffffffff801036e2:	ec                   	in     (%dx),%al$/;"	l
ffffffff801036e3	obj/kern/kernel.asm	/^ffffffff801036e3:	ec                   	in     (%dx),%al$/;"	l
ffffffff801036e4	obj/kern/kernel.asm	/^ffffffff801036e4:	ec                   	in     (%dx),%al$/;"	l
ffffffff801036e5	obj/kern/kernel.asm	/^ffffffff801036e5:	ec                   	in     (%dx),%al$/;"	l
ffffffff801036e6	obj/kern/kernel.asm	/^ffffffff801036e6:	c3                   	retq   $/;"	l
ffffffff801036e7	obj/kern/kernel.asm	/^ffffffff801036e7 <uartgetc>:$/;"	l
ffffffff801036e7	obj/kern/kernel.asm	/^ffffffff801036e7:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801036eb	obj/kern/kernel.asm	/^ffffffff801036eb:	83 3d 2e 55 00 00 00 	cmpl   $0x0,0x552e(%rip)        # ffffffff80108c20 <uart>$/;"	l
ffffffff801036f2	obj/kern/kernel.asm	/^ffffffff801036f2:	74 14                	je     ffffffff80103708 <uartgetc+0x21>$/;"	l
ffffffff801036f4	obj/kern/kernel.asm	/^ffffffff801036f4:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
ffffffff801036f9	obj/kern/kernel.asm	/^ffffffff801036f9:	ec                   	in     (%dx),%al$/;"	l
ffffffff801036fa	obj/kern/kernel.asm	/^ffffffff801036fa:	a8 01                	test   $0x1,%al$/;"	l
ffffffff801036fc	obj/kern/kernel.asm	/^ffffffff801036fc:	74 10                	je     ffffffff8010370e <uartgetc+0x27>$/;"	l
ffffffff801036fe	obj/kern/kernel.asm	/^ffffffff801036fe:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
ffffffff80103703	obj/kern/kernel.asm	/^ffffffff80103703:	ec                   	in     (%dx),%al$/;"	l
ffffffff80103704	obj/kern/kernel.asm	/^ffffffff80103704:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffffffff80103707	obj/kern/kernel.asm	/^ffffffff80103707:	c3                   	retq   $/;"	l
ffffffff80103708	obj/kern/kernel.asm	/^ffffffff80103708:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff8010370d	obj/kern/kernel.asm	/^ffffffff8010370d:	c3                   	retq   $/;"	l
ffffffff8010370e	obj/kern/kernel.asm	/^ffffffff8010370e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80103713	obj/kern/kernel.asm	/^ffffffff80103713:	c3                   	retq   $/;"	l
ffffffff80103714	obj/kern/kernel.asm	/^ffffffff80103714 <uartputc>:$/;"	l
ffffffff80103714	obj/kern/kernel.asm	/^ffffffff80103714:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103718	obj/kern/kernel.asm	/^ffffffff80103718:	83 3d 01 55 00 00 00 	cmpl   $0x0,0x5501(%rip)        # ffffffff80108c20 <uart>$/;"	l
ffffffff8010371f	obj/kern/kernel.asm	/^ffffffff8010371f:	74 5a                	je     ffffffff8010377b <uartputc+0x67>$/;"	l
ffffffff80103721	obj/kern/kernel.asm	/^ffffffff80103721:	55                   	push   %rbp$/;"	l
ffffffff80103722	obj/kern/kernel.asm	/^ffffffff80103722:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103725	obj/kern/kernel.asm	/^ffffffff80103725:	41 55                	push   %r13$/;"	l
ffffffff80103727	obj/kern/kernel.asm	/^ffffffff80103727:	41 54                	push   %r12$/;"	l
ffffffff80103729	obj/kern/kernel.asm	/^ffffffff80103729:	53                   	push   %rbx$/;"	l
ffffffff8010372a	obj/kern/kernel.asm	/^ffffffff8010372a:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010372e	obj/kern/kernel.asm	/^ffffffff8010372e:	41 89 fd             	mov    %edi,%r13d$/;"	l
ffffffff80103731	obj/kern/kernel.asm	/^ffffffff80103731:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
ffffffff80103736	obj/kern/kernel.asm	/^ffffffff80103736:	ec                   	in     (%dx),%al$/;"	l
ffffffff80103737	obj/kern/kernel.asm	/^ffffffff80103737:	a8 20                	test   $0x20,%al$/;"	l
ffffffff80103739	obj/kern/kernel.asm	/^ffffffff80103739:	75 2c                	jne    ffffffff80103767 <uartputc+0x53>$/;"	l
ffffffff8010373b	obj/kern/kernel.asm	/^ffffffff8010373b:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffffffff80103740	obj/kern/kernel.asm	/^ffffffff80103740:	e8 94 ff ff ff       	callq  ffffffff801036d9 <microdelay>$/;"	l
ffffffff80103745	obj/kern/kernel.asm	/^ffffffff80103745:	bb 7f 00 00 00       	mov    $0x7f,%ebx$/;"	l
ffffffff8010374a	obj/kern/kernel.asm	/^ffffffff8010374a:	41 bc fd 03 00 00    	mov    $0x3fd,%r12d$/;"	l
ffffffff80103750	obj/kern/kernel.asm	/^ffffffff80103750:	44 89 e2             	mov    %r12d,%edx$/;"	l
ffffffff80103753	obj/kern/kernel.asm	/^ffffffff80103753:	ec                   	in     (%dx),%al$/;"	l
ffffffff80103754	obj/kern/kernel.asm	/^ffffffff80103754:	a8 20                	test   $0x20,%al$/;"	l
ffffffff80103756	obj/kern/kernel.asm	/^ffffffff80103756:	75 0f                	jne    ffffffff80103767 <uartputc+0x53>$/;"	l
ffffffff80103758	obj/kern/kernel.asm	/^ffffffff80103758:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffffffff8010375d	obj/kern/kernel.asm	/^ffffffff8010375d:	e8 77 ff ff ff       	callq  ffffffff801036d9 <microdelay>$/;"	l
ffffffff80103762	obj/kern/kernel.asm	/^ffffffff80103762:	83 eb 01             	sub    $0x1,%ebx$/;"	l
ffffffff80103765	obj/kern/kernel.asm	/^ffffffff80103765:	75 e9                	jne    ffffffff80103750 <uartputc+0x3c>$/;"	l
ffffffff80103767	obj/kern/kernel.asm	/^ffffffff80103767:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
ffffffff8010376c	obj/kern/kernel.asm	/^ffffffff8010376c:	44 89 e8             	mov    %r13d,%eax$/;"	l
ffffffff8010376f	obj/kern/kernel.asm	/^ffffffff8010376f:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80103770	obj/kern/kernel.asm	/^ffffffff80103770:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80103774	obj/kern/kernel.asm	/^ffffffff80103774:	5b                   	pop    %rbx$/;"	l
ffffffff80103775	obj/kern/kernel.asm	/^ffffffff80103775:	41 5c                	pop    %r12$/;"	l
ffffffff80103777	obj/kern/kernel.asm	/^ffffffff80103777:	41 5d                	pop    %r13$/;"	l
ffffffff80103779	obj/kern/kernel.asm	/^ffffffff80103779:	5d                   	pop    %rbp$/;"	l
ffffffff8010377a	obj/kern/kernel.asm	/^ffffffff8010377a:	c3                   	retq   $/;"	l
ffffffff8010377b	obj/kern/kernel.asm	/^ffffffff8010377b:	c3                   	retq   $/;"	l
ffffffff8010377c	obj/kern/kernel.asm	/^ffffffff8010377c <uartinit>:$/;"	l
ffffffff8010377c	obj/kern/kernel.asm	/^ffffffff8010377c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103780	obj/kern/kernel.asm	/^ffffffff80103780:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffffffff80103785	obj/kern/kernel.asm	/^ffffffff80103785:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
ffffffff8010378a	obj/kern/kernel.asm	/^ffffffff8010378a:	89 c8                	mov    %ecx,%eax$/;"	l
ffffffff8010378c	obj/kern/kernel.asm	/^ffffffff8010378c:	ee                   	out    %al,(%dx)$/;"	l
ffffffff8010378d	obj/kern/kernel.asm	/^ffffffff8010378d:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
ffffffff80103792	obj/kern/kernel.asm	/^ffffffff80103792:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
ffffffff80103797	obj/kern/kernel.asm	/^ffffffff80103797:	89 fa                	mov    %edi,%edx$/;"	l
ffffffff80103799	obj/kern/kernel.asm	/^ffffffff80103799:	ee                   	out    %al,(%dx)$/;"	l
ffffffff8010379a	obj/kern/kernel.asm	/^ffffffff8010379a:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
ffffffff8010379f	obj/kern/kernel.asm	/^ffffffff8010379f:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
ffffffff801037a4	obj/kern/kernel.asm	/^ffffffff801037a4:	ee                   	out    %al,(%dx)$/;"	l
ffffffff801037a5	obj/kern/kernel.asm	/^ffffffff801037a5:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
ffffffff801037aa	obj/kern/kernel.asm	/^ffffffff801037aa:	89 c8                	mov    %ecx,%eax$/;"	l
ffffffff801037ac	obj/kern/kernel.asm	/^ffffffff801037ac:	89 f2                	mov    %esi,%edx$/;"	l
ffffffff801037ae	obj/kern/kernel.asm	/^ffffffff801037ae:	ee                   	out    %al,(%dx)$/;"	l
ffffffff801037af	obj/kern/kernel.asm	/^ffffffff801037af:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
ffffffff801037b4	obj/kern/kernel.asm	/^ffffffff801037b4:	89 fa                	mov    %edi,%edx$/;"	l
ffffffff801037b6	obj/kern/kernel.asm	/^ffffffff801037b6:	ee                   	out    %al,(%dx)$/;"	l
ffffffff801037b7	obj/kern/kernel.asm	/^ffffffff801037b7:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
ffffffff801037bc	obj/kern/kernel.asm	/^ffffffff801037bc:	89 c8                	mov    %ecx,%eax$/;"	l
ffffffff801037be	obj/kern/kernel.asm	/^ffffffff801037be:	ee                   	out    %al,(%dx)$/;"	l
ffffffff801037bf	obj/kern/kernel.asm	/^ffffffff801037bf:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffffffff801037c4	obj/kern/kernel.asm	/^ffffffff801037c4:	89 f2                	mov    %esi,%edx$/;"	l
ffffffff801037c6	obj/kern/kernel.asm	/^ffffffff801037c6:	ee                   	out    %al,(%dx)$/;"	l
ffffffff801037c7	obj/kern/kernel.asm	/^ffffffff801037c7:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
ffffffff801037cc	obj/kern/kernel.asm	/^ffffffff801037cc:	ec                   	in     (%dx),%al$/;"	l
ffffffff801037cd	obj/kern/kernel.asm	/^ffffffff801037cd:	3c ff                	cmp    $0xff,%al$/;"	l
ffffffff801037cf	obj/kern/kernel.asm	/^ffffffff801037cf:	74 56                	je     ffffffff80103827 <uartinit+0xab>$/;"	l
ffffffff801037d1	obj/kern/kernel.asm	/^ffffffff801037d1:	55                   	push   %rbp$/;"	l
ffffffff801037d2	obj/kern/kernel.asm	/^ffffffff801037d2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801037d5	obj/kern/kernel.asm	/^ffffffff801037d5:	53                   	push   %rbx$/;"	l
ffffffff801037d6	obj/kern/kernel.asm	/^ffffffff801037d6:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801037da	obj/kern/kernel.asm	/^ffffffff801037da:	c7 05 3c 54 00 00 01 	movl   $0x1,0x543c(%rip)        # ffffffff80108c20 <uart>$/;"	l
ffffffff801037e1	obj/kern/kernel.asm	/^ffffffff801037e1:	00 00 00 $/;"	l
ffffffff801037e4	obj/kern/kernel.asm	/^ffffffff801037e4:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
ffffffff801037e9	obj/kern/kernel.asm	/^ffffffff801037e9:	ec                   	in     (%dx),%al$/;"	l
ffffffff801037ea	obj/kern/kernel.asm	/^ffffffff801037ea:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
ffffffff801037ef	obj/kern/kernel.asm	/^ffffffff801037ef:	ec                   	in     (%dx),%al$/;"	l
ffffffff801037f0	obj/kern/kernel.asm	/^ffffffff801037f0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff801037f5	obj/kern/kernel.asm	/^ffffffff801037f5:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffffffff801037fa	obj/kern/kernel.asm	/^ffffffff801037fa:	e8 25 01 00 00       	callq  ffffffff80103924 <ioapicenable>$/;"	l
ffffffff801037ff	obj/kern/kernel.asm	/^ffffffff801037ff:	48 c7 c3 cc 72 10 80 	mov    $0xffffffff801072cc,%rbx$/;"	l
ffffffff80103806	obj/kern/kernel.asm	/^ffffffff80103806:	bf 78 00 00 00       	mov    $0x78,%edi$/;"	l
ffffffff8010380b	obj/kern/kernel.asm	/^ffffffff8010380b:	40 0f be ff          	movsbl %dil,%edi$/;"	l
ffffffff8010380f	obj/kern/kernel.asm	/^ffffffff8010380f:	e8 00 ff ff ff       	callq  ffffffff80103714 <uartputc>$/;"	l
ffffffff80103814	obj/kern/kernel.asm	/^ffffffff80103814:	48 83 c3 01          	add    $0x1,%rbx$/;"	l
ffffffff80103818	obj/kern/kernel.asm	/^ffffffff80103818:	0f b6 3b             	movzbl (%rbx),%edi$/;"	l
ffffffff8010381b	obj/kern/kernel.asm	/^ffffffff8010381b:	40 84 ff             	test   %dil,%dil$/;"	l
ffffffff8010381e	obj/kern/kernel.asm	/^ffffffff8010381e:	75 eb                	jne    ffffffff8010380b <uartinit+0x8f>$/;"	l
ffffffff80103820	obj/kern/kernel.asm	/^ffffffff80103820:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80103824	obj/kern/kernel.asm	/^ffffffff80103824:	5b                   	pop    %rbx$/;"	l
ffffffff80103825	obj/kern/kernel.asm	/^ffffffff80103825:	5d                   	pop    %rbp$/;"	l
ffffffff80103826	obj/kern/kernel.asm	/^ffffffff80103826:	c3                   	retq   $/;"	l
ffffffff80103827	obj/kern/kernel.asm	/^ffffffff80103827:	c3                   	retq   $/;"	l
ffffffff80103828	obj/kern/kernel.asm	/^ffffffff80103828 <uartintr>:$/;"	l
ffffffff80103828	obj/kern/kernel.asm	/^ffffffff80103828:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010382c	obj/kern/kernel.asm	/^ffffffff8010382c:	55                   	push   %rbp$/;"	l
ffffffff8010382d	obj/kern/kernel.asm	/^ffffffff8010382d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103830	obj/kern/kernel.asm	/^ffffffff80103830:	48 c7 c7 e7 36 10 80 	mov    $0xffffffff801036e7,%rdi$/;"	l
ffffffff80103837	obj/kern/kernel.asm	/^ffffffff80103837:	e8 b3 d2 ff ff       	callq  ffffffff80100aef <consoleintr>$/;"	l
ffffffff8010383c	obj/kern/kernel.asm	/^ffffffff8010383c:	5d                   	pop    %rbp$/;"	l
ffffffff8010383d	obj/kern/kernel.asm	/^ffffffff8010383d:	c3                   	retq   $/;"	l
ffffffff8010383e	obj/kern/kernel.asm	/^ffffffff8010383e <picinit>:$/;"	l
ffffffff8010383e	obj/kern/kernel.asm	/^ffffffff8010383e:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103842	obj/kern/kernel.asm	/^ffffffff80103842:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80103847	obj/kern/kernel.asm	/^ffffffff80103847:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
ffffffff8010384c	obj/kern/kernel.asm	/^ffffffff8010384c:	ee                   	out    %al,(%dx)$/;"	l
ffffffff8010384d	obj/kern/kernel.asm	/^ffffffff8010384d:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
ffffffff80103852	obj/kern/kernel.asm	/^ffffffff80103852:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80103853	obj/kern/kernel.asm	/^ffffffff80103853:	c3                   	retq   $/;"	l
ffffffff80103854	obj/kern/kernel.asm	/^ffffffff80103854 <ioapicinit>:$/;"	l
ffffffff80103854	obj/kern/kernel.asm	/^ffffffff80103854:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103858	obj/kern/kernel.asm	/^ffffffff80103858:	55                   	push   %rbp$/;"	l
ffffffff80103859	obj/kern/kernel.asm	/^ffffffff80103859:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010385c	obj/kern/kernel.asm	/^ffffffff8010385c:	53                   	push   %rbx$/;"	l
ffffffff8010385d	obj/kern/kernel.asm	/^ffffffff8010385d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80103861	obj/kern/kernel.asm	/^ffffffff80103861:	48 8b 05 50 b4 00 00 	mov    0xb450(%rip),%rax        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff80103868	obj/kern/kernel.asm	/^ffffffff80103868:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff8010386b	obj/kern/kernel.asm	/^ffffffff8010386b:	0f 84 94 00 00 00    	je     ffffffff80103905 <ioapicinit+0xb1>$/;"	l
ffffffff80103871	obj/kern/kernel.asm	/^ffffffff80103871:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffffffff80103877	obj/kern/kernel.asm	/^ffffffff80103877:	48 8b 05 3a b4 00 00 	mov    0xb43a(%rip),%rax        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff8010387e	obj/kern/kernel.asm	/^ffffffff8010387e:	8b 58 10             	mov    0x10(%rax),%ebx$/;"	l
ffffffff80103881	obj/kern/kernel.asm	/^ffffffff80103881:	c1 eb 10             	shr    $0x10,%ebx$/;"	l
ffffffff80103884	obj/kern/kernel.asm	/^ffffffff80103884:	0f b6 db             	movzbl %bl,%ebx$/;"	l
ffffffff80103887	obj/kern/kernel.asm	/^ffffffff80103887:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffffffff8010388d	obj/kern/kernel.asm	/^ffffffff8010388d:	48 8b 05 24 b4 00 00 	mov    0xb424(%rip),%rax        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff80103894	obj/kern/kernel.asm	/^ffffffff80103894:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
ffffffff80103897	obj/kern/kernel.asm	/^ffffffff80103897:	0f b6 15 12 b4 00 00 	movzbl 0xb412(%rip),%edx        # ffffffff8010ecb0 <ioapicid>$/;"	l
ffffffff8010389e	obj/kern/kernel.asm	/^ffffffff8010389e:	c1 e8 18             	shr    $0x18,%eax$/;"	l
ffffffff801038a1	obj/kern/kernel.asm	/^ffffffff801038a1:	39 c2                	cmp    %eax,%edx$/;"	l
ffffffff801038a3	obj/kern/kernel.asm	/^ffffffff801038a3:	75 6c                	jne    ffffffff80103911 <ioapicinit+0xbd>$/;"	l
ffffffff801038a5	obj/kern/kernel.asm	/^ffffffff801038a5:	89 de                	mov    %ebx,%esi$/;"	l
ffffffff801038a7	obj/kern/kernel.asm	/^ffffffff801038a7:	48 c7 c7 40 73 10 80 	mov    $0xffffffff80107340,%rdi$/;"	l
ffffffff801038ae	obj/kern/kernel.asm	/^ffffffff801038ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801038b3	obj/kern/kernel.asm	/^ffffffff801038b3:	e8 0e d0 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801038b8	obj/kern/kernel.asm	/^ffffffff801038b8:	8d 7c 1b 12          	lea    0x12(%rbx,%rbx,1),%edi$/;"	l
ffffffff801038bc	obj/kern/kernel.asm	/^ffffffff801038bc:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
ffffffff801038c1	obj/kern/kernel.asm	/^ffffffff801038c1:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
ffffffff801038c6	obj/kern/kernel.asm	/^ffffffff801038c6:	89 d6                	mov    %edx,%esi$/;"	l
ffffffff801038c8	obj/kern/kernel.asm	/^ffffffff801038c8:	81 ce 00 00 01 00    	or     $0x10000,%esi$/;"	l
ffffffff801038ce	obj/kern/kernel.asm	/^ffffffff801038ce:	48 8b 0d e3 b3 00 00 	mov    0xb3e3(%rip),%rcx        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff801038d5	obj/kern/kernel.asm	/^ffffffff801038d5:	89 01                	mov    %eax,(%rcx)$/;"	l
ffffffff801038d7	obj/kern/kernel.asm	/^ffffffff801038d7:	48 8b 0d da b3 00 00 	mov    0xb3da(%rip),%rcx        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff801038de	obj/kern/kernel.asm	/^ffffffff801038de:	89 71 10             	mov    %esi,0x10(%rcx)$/;"	l
ffffffff801038e1	obj/kern/kernel.asm	/^ffffffff801038e1:	8d 70 01             	lea    0x1(%rax),%esi$/;"	l
ffffffff801038e4	obj/kern/kernel.asm	/^ffffffff801038e4:	89 31                	mov    %esi,(%rcx)$/;"	l
ffffffff801038e6	obj/kern/kernel.asm	/^ffffffff801038e6:	48 8b 0d cb b3 00 00 	mov    0xb3cb(%rip),%rcx        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff801038ed	obj/kern/kernel.asm	/^ffffffff801038ed:	c7 41 10 00 00 00 00 	movl   $0x0,0x10(%rcx)$/;"	l
ffffffff801038f4	obj/kern/kernel.asm	/^ffffffff801038f4:	83 c2 01             	add    $0x1,%edx$/;"	l
ffffffff801038f7	obj/kern/kernel.asm	/^ffffffff801038f7:	83 c0 02             	add    $0x2,%eax$/;"	l
ffffffff801038fa	obj/kern/kernel.asm	/^ffffffff801038fa:	39 f8                	cmp    %edi,%eax$/;"	l
ffffffff801038fc	obj/kern/kernel.asm	/^ffffffff801038fc:	75 c8                	jne    ffffffff801038c6 <ioapicinit+0x72>$/;"	l
ffffffff801038fe	obj/kern/kernel.asm	/^ffffffff801038fe:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80103902	obj/kern/kernel.asm	/^ffffffff80103902:	5b                   	pop    %rbx$/;"	l
ffffffff80103903	obj/kern/kernel.asm	/^ffffffff80103903:	5d                   	pop    %rbp$/;"	l
ffffffff80103904	obj/kern/kernel.asm	/^ffffffff80103904:	c3                   	retq   $/;"	l
ffffffff80103905	obj/kern/kernel.asm	/^ffffffff80103905:	48 c7 c7 d8 72 10 80 	mov    $0xffffffff801072d8,%rdi$/;"	l
ffffffff8010390c	obj/kern/kernel.asm	/^ffffffff8010390c:	e8 12 cd ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80103911	obj/kern/kernel.asm	/^ffffffff80103911:	48 c7 c7 08 73 10 80 	mov    $0xffffffff80107308,%rdi$/;"	l
ffffffff80103918	obj/kern/kernel.asm	/^ffffffff80103918:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010391d	obj/kern/kernel.asm	/^ffffffff8010391d:	e8 a4 cf ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80103922	obj/kern/kernel.asm	/^ffffffff80103922:	eb 81                	jmp    ffffffff801038a5 <ioapicinit+0x51>$/;"	l
ffffffff80103924	obj/kern/kernel.asm	/^ffffffff80103924 <ioapicenable>:$/;"	l
ffffffff80103924	obj/kern/kernel.asm	/^ffffffff80103924:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103928	obj/kern/kernel.asm	/^ffffffff80103928:	8d 4f 20             	lea    0x20(%rdi),%ecx$/;"	l
ffffffff8010392b	obj/kern/kernel.asm	/^ffffffff8010392b:	8d 44 3f 10          	lea    0x10(%rdi,%rdi,1),%eax$/;"	l
ffffffff8010392f	obj/kern/kernel.asm	/^ffffffff8010392f:	48 8b 15 82 b3 00 00 	mov    0xb382(%rip),%rdx        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff80103936	obj/kern/kernel.asm	/^ffffffff80103936:	89 02                	mov    %eax,(%rdx)$/;"	l
ffffffff80103938	obj/kern/kernel.asm	/^ffffffff80103938:	48 8b 15 79 b3 00 00 	mov    0xb379(%rip),%rdx        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff8010393f	obj/kern/kernel.asm	/^ffffffff8010393f:	89 4a 10             	mov    %ecx,0x10(%rdx)$/;"	l
ffffffff80103942	obj/kern/kernel.asm	/^ffffffff80103942:	c1 e6 18             	shl    $0x18,%esi$/;"	l
ffffffff80103945	obj/kern/kernel.asm	/^ffffffff80103945:	83 c0 01             	add    $0x1,%eax$/;"	l
ffffffff80103948	obj/kern/kernel.asm	/^ffffffff80103948:	89 02                	mov    %eax,(%rdx)$/;"	l
ffffffff8010394a	obj/kern/kernel.asm	/^ffffffff8010394a:	48 8b 05 67 b3 00 00 	mov    0xb367(%rip),%rax        # ffffffff8010ecb8 <ioapic>$/;"	l
ffffffff80103951	obj/kern/kernel.asm	/^ffffffff80103951:	89 70 10             	mov    %esi,0x10(%rax)$/;"	l
ffffffff80103954	obj/kern/kernel.asm	/^ffffffff80103954:	c3                   	retq   $/;"	l
ffffffff80103955	obj/kern/kernel.asm	/^ffffffff80103955 <kbdgetc>:$/;"	l
ffffffff80103955	obj/kern/kernel.asm	/^ffffffff80103955:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103959	obj/kern/kernel.asm	/^ffffffff80103959:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
ffffffff8010395e	obj/kern/kernel.asm	/^ffffffff8010395e:	ec                   	in     (%dx),%al$/;"	l
ffffffff8010395f	obj/kern/kernel.asm	/^ffffffff8010395f:	a8 01                	test   $0x1,%al$/;"	l
ffffffff80103961	obj/kern/kernel.asm	/^ffffffff80103961:	0f 84 b7 00 00 00    	je     ffffffff80103a1e <kbdgetc+0xc9>$/;"	l
ffffffff80103967	obj/kern/kernel.asm	/^ffffffff80103967:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
ffffffff8010396c	obj/kern/kernel.asm	/^ffffffff8010396c:	ec                   	in     (%dx),%al$/;"	l
ffffffff8010396d	obj/kern/kernel.asm	/^ffffffff8010396d:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffffffff80103970	obj/kern/kernel.asm	/^ffffffff80103970:	3c e0                	cmp    $0xe0,%al$/;"	l
ffffffff80103972	obj/kern/kernel.asm	/^ffffffff80103972:	74 5e                	je     ffffffff801039d2 <kbdgetc+0x7d>$/;"	l
ffffffff80103974	obj/kern/kernel.asm	/^ffffffff80103974:	84 c0                	test   %al,%al$/;"	l
ffffffff80103976	obj/kern/kernel.asm	/^ffffffff80103976:	78 67                	js     ffffffff801039df <kbdgetc+0x8a>$/;"	l
ffffffff80103978	obj/kern/kernel.asm	/^ffffffff80103978:	8b 0d a6 52 00 00    	mov    0x52a6(%rip),%ecx        # ffffffff80108c24 <shift.1458>$/;"	l
ffffffff8010397e	obj/kern/kernel.asm	/^ffffffff8010397e:	f6 c1 40             	test   $0x40,%cl$/;"	l
ffffffff80103981	obj/kern/kernel.asm	/^ffffffff80103981:	74 0f                	je     ffffffff80103992 <kbdgetc+0x3d>$/;"	l
ffffffff80103983	obj/kern/kernel.asm	/^ffffffff80103983:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
ffffffff80103986	obj/kern/kernel.asm	/^ffffffff80103986:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffffffff80103989	obj/kern/kernel.asm	/^ffffffff80103989:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
ffffffff8010398c	obj/kern/kernel.asm	/^ffffffff8010398c:	89 0d 92 52 00 00    	mov    %ecx,0x5292(%rip)        # ffffffff80108c24 <shift.1458>$/;"	l
ffffffff80103992	obj/kern/kernel.asm	/^ffffffff80103992:	89 d0                	mov    %edx,%eax$/;"	l
ffffffff80103994	obj/kern/kernel.asm	/^ffffffff80103994:	0f b6 90 a0 74 10 80 	movzbl -0x7fef8b60(%rax),%edx$/;"	l
ffffffff8010399b	obj/kern/kernel.asm	/^ffffffff8010399b:	0b 15 83 52 00 00    	or     0x5283(%rip),%edx        # ffffffff80108c24 <shift.1458>$/;"	l
ffffffff801039a1	obj/kern/kernel.asm	/^ffffffff801039a1:	0f b6 88 a0 73 10 80 	movzbl -0x7fef8c60(%rax),%ecx$/;"	l
ffffffff801039a8	obj/kern/kernel.asm	/^ffffffff801039a8:	31 ca                	xor    %ecx,%edx$/;"	l
ffffffff801039aa	obj/kern/kernel.asm	/^ffffffff801039aa:	89 15 74 52 00 00    	mov    %edx,0x5274(%rip)        # ffffffff80108c24 <shift.1458>$/;"	l
ffffffff801039b0	obj/kern/kernel.asm	/^ffffffff801039b0:	89 d1                	mov    %edx,%ecx$/;"	l
ffffffff801039b2	obj/kern/kernel.asm	/^ffffffff801039b2:	83 e1 03             	and    $0x3,%ecx$/;"	l
ffffffff801039b5	obj/kern/kernel.asm	/^ffffffff801039b5:	48 8b 0c cd 80 73 10 	mov    -0x7fef8c80(,%rcx,8),%rcx$/;"	l
ffffffff801039bc	obj/kern/kernel.asm	/^ffffffff801039bc:	80 $/;"	l
ffffffff801039bd	obj/kern/kernel.asm	/^ffffffff801039bd:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax$/;"	l
ffffffff801039c1	obj/kern/kernel.asm	/^ffffffff801039c1:	f6 c2 08             	test   $0x8,%dl$/;"	l
ffffffff801039c4	obj/kern/kernel.asm	/^ffffffff801039c4:	74 5d                	je     ffffffff80103a23 <kbdgetc+0xce>$/;"	l
ffffffff801039c6	obj/kern/kernel.asm	/^ffffffff801039c6:	8d 50 9f             	lea    -0x61(%rax),%edx$/;"	l
ffffffff801039c9	obj/kern/kernel.asm	/^ffffffff801039c9:	83 fa 19             	cmp    $0x19,%edx$/;"	l
ffffffff801039cc	obj/kern/kernel.asm	/^ffffffff801039cc:	77 43                	ja     ffffffff80103a11 <kbdgetc+0xbc>$/;"	l
ffffffff801039ce	obj/kern/kernel.asm	/^ffffffff801039ce:	83 e8 20             	sub    $0x20,%eax$/;"	l
ffffffff801039d1	obj/kern/kernel.asm	/^ffffffff801039d1:	c3                   	retq   $/;"	l
ffffffff801039d2	obj/kern/kernel.asm	/^ffffffff801039d2:	83 0d 4b 52 00 00 40 	orl    $0x40,0x524b(%rip)        # ffffffff80108c24 <shift.1458>$/;"	l
ffffffff801039d9	obj/kern/kernel.asm	/^ffffffff801039d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801039de	obj/kern/kernel.asm	/^ffffffff801039de:	c3                   	retq   $/;"	l
ffffffff801039df	obj/kern/kernel.asm	/^ffffffff801039df:	8b 0d 3f 52 00 00    	mov    0x523f(%rip),%ecx        # ffffffff80108c24 <shift.1458>$/;"	l
ffffffff801039e5	obj/kern/kernel.asm	/^ffffffff801039e5:	89 ce                	mov    %ecx,%esi$/;"	l
ffffffff801039e7	obj/kern/kernel.asm	/^ffffffff801039e7:	83 e6 40             	and    $0x40,%esi$/;"	l
ffffffff801039ea	obj/kern/kernel.asm	/^ffffffff801039ea:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffffffff801039ed	obj/kern/kernel.asm	/^ffffffff801039ed:	85 f6                	test   %esi,%esi$/;"	l
ffffffff801039ef	obj/kern/kernel.asm	/^ffffffff801039ef:	0f 44 d0             	cmove  %eax,%edx$/;"	l
ffffffff801039f2	obj/kern/kernel.asm	/^ffffffff801039f2:	89 d0                	mov    %edx,%eax$/;"	l
ffffffff801039f4	obj/kern/kernel.asm	/^ffffffff801039f4:	0f b6 80 a0 74 10 80 	movzbl -0x7fef8b60(%rax),%eax$/;"	l
ffffffff801039fb	obj/kern/kernel.asm	/^ffffffff801039fb:	83 c8 40             	or     $0x40,%eax$/;"	l
ffffffff801039fe	obj/kern/kernel.asm	/^ffffffff801039fe:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffffffff80103a01	obj/kern/kernel.asm	/^ffffffff80103a01:	f7 d0                	not    %eax$/;"	l
ffffffff80103a03	obj/kern/kernel.asm	/^ffffffff80103a03:	21 c8                	and    %ecx,%eax$/;"	l
ffffffff80103a05	obj/kern/kernel.asm	/^ffffffff80103a05:	89 05 19 52 00 00    	mov    %eax,0x5219(%rip)        # ffffffff80108c24 <shift.1458>$/;"	l
ffffffff80103a0b	obj/kern/kernel.asm	/^ffffffff80103a0b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103a10	obj/kern/kernel.asm	/^ffffffff80103a10:	c3                   	retq   $/;"	l
ffffffff80103a11	obj/kern/kernel.asm	/^ffffffff80103a11:	8d 48 bf             	lea    -0x41(%rax),%ecx$/;"	l
ffffffff80103a14	obj/kern/kernel.asm	/^ffffffff80103a14:	8d 50 20             	lea    0x20(%rax),%edx$/;"	l
ffffffff80103a17	obj/kern/kernel.asm	/^ffffffff80103a17:	83 f9 1a             	cmp    $0x1a,%ecx$/;"	l
ffffffff80103a1a	obj/kern/kernel.asm	/^ffffffff80103a1a:	0f 42 c2             	cmovb  %edx,%eax$/;"	l
ffffffff80103a1d	obj/kern/kernel.asm	/^ffffffff80103a1d:	c3                   	retq   $/;"	l
ffffffff80103a1e	obj/kern/kernel.asm	/^ffffffff80103a1e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80103a23	obj/kern/kernel.asm	/^ffffffff80103a23:	c3                   	retq   $/;"	l
ffffffff80103a24	obj/kern/kernel.asm	/^ffffffff80103a24 <kbdintr>:$/;"	l
ffffffff80103a24	obj/kern/kernel.asm	/^ffffffff80103a24:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103a28	obj/kern/kernel.asm	/^ffffffff80103a28:	55                   	push   %rbp$/;"	l
ffffffff80103a29	obj/kern/kernel.asm	/^ffffffff80103a29:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103a2c	obj/kern/kernel.asm	/^ffffffff80103a2c:	48 c7 c7 55 39 10 80 	mov    $0xffffffff80103955,%rdi$/;"	l
ffffffff80103a33	obj/kern/kernel.asm	/^ffffffff80103a33:	e8 b7 d0 ff ff       	callq  ffffffff80100aef <consoleintr>$/;"	l
ffffffff80103a38	obj/kern/kernel.asm	/^ffffffff80103a38:	5d                   	pop    %rbp$/;"	l
ffffffff80103a39	obj/kern/kernel.asm	/^ffffffff80103a39:	c3                   	retq   $/;"	l
ffffffff80103a3a	obj/kern/kernel.asm	/^ffffffff80103a3a <sys_fork>:$/;"	l
ffffffff80103a3a	obj/kern/kernel.asm	/^ffffffff80103a3a:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103a3e	obj/kern/kernel.asm	/^ffffffff80103a3e:	55                   	push   %rbp$/;"	l
ffffffff80103a3f	obj/kern/kernel.asm	/^ffffffff80103a3f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103a42	obj/kern/kernel.asm	/^ffffffff80103a42:	e8 45 d8 ff ff       	callq  ffffffff8010128c <fork>$/;"	l
ffffffff80103a47	obj/kern/kernel.asm	/^ffffffff80103a47:	48 98                	cltq   $/;"	l
ffffffff80103a49	obj/kern/kernel.asm	/^ffffffff80103a49:	5d                   	pop    %rbp$/;"	l
ffffffff80103a4a	obj/kern/kernel.asm	/^ffffffff80103a4a:	c3                   	retq   $/;"	l
ffffffff80103a4b	obj/kern/kernel.asm	/^ffffffff80103a4b <sys_exit>:$/;"	l
ffffffff80103a4b	obj/kern/kernel.asm	/^ffffffff80103a4b:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103a4f	obj/kern/kernel.asm	/^ffffffff80103a4f:	55                   	push   %rbp$/;"	l
ffffffff80103a50	obj/kern/kernel.asm	/^ffffffff80103a50:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103a53	obj/kern/kernel.asm	/^ffffffff80103a53:	e8 80 da ff ff       	callq  ffffffff801014d8 <exit>$/;"	l
ffffffff80103a58	obj/kern/kernel.asm	/^ffffffff80103a58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103a5d	obj/kern/kernel.asm	/^ffffffff80103a5d:	5d                   	pop    %rbp$/;"	l
ffffffff80103a5e	obj/kern/kernel.asm	/^ffffffff80103a5e:	c3                   	retq   $/;"	l
ffffffff80103a5f	obj/kern/kernel.asm	/^ffffffff80103a5f <sys_wait>:$/;"	l
ffffffff80103a5f	obj/kern/kernel.asm	/^ffffffff80103a5f:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103a63	obj/kern/kernel.asm	/^ffffffff80103a63:	55                   	push   %rbp$/;"	l
ffffffff80103a64	obj/kern/kernel.asm	/^ffffffff80103a64:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103a67	obj/kern/kernel.asm	/^ffffffff80103a67:	e8 e7 dc ff ff       	callq  ffffffff80101753 <wait>$/;"	l
ffffffff80103a6c	obj/kern/kernel.asm	/^ffffffff80103a6c:	48 98                	cltq   $/;"	l
ffffffff80103a6e	obj/kern/kernel.asm	/^ffffffff80103a6e:	5d                   	pop    %rbp$/;"	l
ffffffff80103a6f	obj/kern/kernel.asm	/^ffffffff80103a6f:	c3                   	retq   $/;"	l
ffffffff80103a70	obj/kern/kernel.asm	/^ffffffff80103a70 <sys_kill>:$/;"	l
ffffffff80103a70	obj/kern/kernel.asm	/^ffffffff80103a70:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103a74	obj/kern/kernel.asm	/^ffffffff80103a74:	55                   	push   %rbp$/;"	l
ffffffff80103a75	obj/kern/kernel.asm	/^ffffffff80103a75:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103a78	obj/kern/kernel.asm	/^ffffffff80103a78:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff80103a7c	obj/kern/kernel.asm	/^ffffffff80103a7c:	48 8d 75 fc          	lea    -0x4(%rbp),%rsi$/;"	l
ffffffff80103a80	obj/kern/kernel.asm	/^ffffffff80103a80:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff80103a85	obj/kern/kernel.asm	/^ffffffff80103a85:	e8 24 ef ff ff       	callq  ffffffff801029ae <argint>$/;"	l
ffffffff80103a8a	obj/kern/kernel.asm	/^ffffffff80103a8a:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80103a8c	obj/kern/kernel.asm	/^ffffffff80103a8c:	78 0c                	js     ffffffff80103a9a <sys_kill+0x2a>$/;"	l
ffffffff80103a8e	obj/kern/kernel.asm	/^ffffffff80103a8e:	8b 7d fc             	mov    -0x4(%rbp),%edi$/;"	l
ffffffff80103a91	obj/kern/kernel.asm	/^ffffffff80103a91:	e8 98 db ff ff       	callq  ffffffff8010162e <kill>$/;"	l
ffffffff80103a96	obj/kern/kernel.asm	/^ffffffff80103a96:	48 98                	cltq   $/;"	l
ffffffff80103a98	obj/kern/kernel.asm	/^ffffffff80103a98:	c9                   	leaveq $/;"	l
ffffffff80103a99	obj/kern/kernel.asm	/^ffffffff80103a99:	c3                   	retq   $/;"	l
ffffffff80103a9a	obj/kern/kernel.asm	/^ffffffff80103a9a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80103aa1	obj/kern/kernel.asm	/^ffffffff80103aa1:	eb f5                	jmp    ffffffff80103a98 <sys_kill+0x28>$/;"	l
ffffffff80103aa3	obj/kern/kernel.asm	/^ffffffff80103aa3 <sys_getpid>:$/;"	l
ffffffff80103aa3	obj/kern/kernel.asm	/^ffffffff80103aa3:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103aa7	obj/kern/kernel.asm	/^ffffffff80103aa7:	55                   	push   %rbp$/;"	l
ffffffff80103aa8	obj/kern/kernel.asm	/^ffffffff80103aa8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103aab	obj/kern/kernel.asm	/^ffffffff80103aab:	e8 40 d6 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80103ab0	obj/kern/kernel.asm	/^ffffffff80103ab0:	48 63 40 1c          	movslq 0x1c(%rax),%rax$/;"	l
ffffffff80103ab4	obj/kern/kernel.asm	/^ffffffff80103ab4:	5d                   	pop    %rbp$/;"	l
ffffffff80103ab5	obj/kern/kernel.asm	/^ffffffff80103ab5:	c3                   	retq   $/;"	l
ffffffff80103ab6	obj/kern/kernel.asm	/^ffffffff80103ab6 <sys_sbrk>:$/;"	l
ffffffff80103ab6	obj/kern/kernel.asm	/^ffffffff80103ab6:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103aba	obj/kern/kernel.asm	/^ffffffff80103aba:	55                   	push   %rbp$/;"	l
ffffffff80103abb	obj/kern/kernel.asm	/^ffffffff80103abb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103abe	obj/kern/kernel.asm	/^ffffffff80103abe:	53                   	push   %rbx$/;"	l
ffffffff80103abf	obj/kern/kernel.asm	/^ffffffff80103abf:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80103ac3	obj/kern/kernel.asm	/^ffffffff80103ac3:	48 8d 75 ec          	lea    -0x14(%rbp),%rsi$/;"	l
ffffffff80103ac7	obj/kern/kernel.asm	/^ffffffff80103ac7:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff80103acc	obj/kern/kernel.asm	/^ffffffff80103acc:	e8 dd ee ff ff       	callq  ffffffff801029ae <argint>$/;"	l
ffffffff80103ad1	obj/kern/kernel.asm	/^ffffffff80103ad1:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80103ad3	obj/kern/kernel.asm	/^ffffffff80103ad3:	78 24                	js     ffffffff80103af9 <sys_sbrk+0x43>$/;"	l
ffffffff80103ad5	obj/kern/kernel.asm	/^ffffffff80103ad5:	e8 16 d6 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80103ada	obj/kern/kernel.asm	/^ffffffff80103ada:	48 8b 18             	mov    (%rax),%rbx$/;"	l
ffffffff80103add	obj/kern/kernel.asm	/^ffffffff80103add:	8b 7d ec             	mov    -0x14(%rbp),%edi$/;"	l
ffffffff80103ae0	obj/kern/kernel.asm	/^ffffffff80103ae0:	e8 3a d7 ff ff       	callq  ffffffff8010121f <growproc>$/;"	l
ffffffff80103ae5	obj/kern/kernel.asm	/^ffffffff80103ae5:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80103ae7	obj/kern/kernel.asm	/^ffffffff80103ae7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80103aee	obj/kern/kernel.asm	/^ffffffff80103aee:	48 0f 49 c3          	cmovns %rbx,%rax$/;"	l
ffffffff80103af2	obj/kern/kernel.asm	/^ffffffff80103af2:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff80103af6	obj/kern/kernel.asm	/^ffffffff80103af6:	5b                   	pop    %rbx$/;"	l
ffffffff80103af7	obj/kern/kernel.asm	/^ffffffff80103af7:	5d                   	pop    %rbp$/;"	l
ffffffff80103af8	obj/kern/kernel.asm	/^ffffffff80103af8:	c3                   	retq   $/;"	l
ffffffff80103af9	obj/kern/kernel.asm	/^ffffffff80103af9:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80103b00	obj/kern/kernel.asm	/^ffffffff80103b00:	eb f0                	jmp    ffffffff80103af2 <sys_sbrk+0x3c>$/;"	l
ffffffff80103b02	obj/kern/kernel.asm	/^ffffffff80103b02 <sys_sleep>:$/;"	l
ffffffff80103b02	obj/kern/kernel.asm	/^ffffffff80103b02:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103b06	obj/kern/kernel.asm	/^ffffffff80103b06:	55                   	push   %rbp$/;"	l
ffffffff80103b07	obj/kern/kernel.asm	/^ffffffff80103b07:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103b0a	obj/kern/kernel.asm	/^ffffffff80103b0a:	53                   	push   %rbx$/;"	l
ffffffff80103b0b	obj/kern/kernel.asm	/^ffffffff80103b0b:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80103b0f	obj/kern/kernel.asm	/^ffffffff80103b0f:	48 8d 75 ec          	lea    -0x14(%rbp),%rsi$/;"	l
ffffffff80103b13	obj/kern/kernel.asm	/^ffffffff80103b13:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff80103b18	obj/kern/kernel.asm	/^ffffffff80103b18:	e8 91 ee ff ff       	callq  ffffffff801029ae <argint>$/;"	l
ffffffff80103b1d	obj/kern/kernel.asm	/^ffffffff80103b1d:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80103b1f	obj/kern/kernel.asm	/^ffffffff80103b1f:	78 77                	js     ffffffff80103b98 <sys_sleep+0x96>$/;"	l
ffffffff80103b21	obj/kern/kernel.asm	/^ffffffff80103b21:	6b 45 ec 64          	imul   $0x64,-0x14(%rbp),%eax$/;"	l
ffffffff80103b25	obj/kern/kernel.asm	/^ffffffff80103b25:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffffffff80103b28	obj/kern/kernel.asm	/^ffffffff80103b28:	48 c7 c7 80 dc 10 80 	mov    $0xffffffff8010dc80,%rdi$/;"	l
ffffffff80103b2f	obj/kern/kernel.asm	/^ffffffff80103b2f:	e8 6b c9 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80103b34	obj/kern/kernel.asm	/^ffffffff80103b34:	8b 1d 66 b1 00 00    	mov    0xb166(%rip),%ebx        # ffffffff8010eca0 <ticks>$/;"	l
ffffffff80103b3a	obj/kern/kernel.asm	/^ffffffff80103b3a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffffffff80103b3e	obj/kern/kernel.asm	/^ffffffff80103b3e:	74 2b                	je     ffffffff80103b6b <sys_sleep+0x69>$/;"	l
ffffffff80103b40	obj/kern/kernel.asm	/^ffffffff80103b40:	e8 ab d5 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80103b45	obj/kern/kernel.asm	/^ffffffff80103b45:	83 78 40 00          	cmpl   $0x0,0x40(%rax)$/;"	l
ffffffff80103b49	obj/kern/kernel.asm	/^ffffffff80103b49:	75 38                	jne    ffffffff80103b83 <sys_sleep+0x81>$/;"	l
ffffffff80103b4b	obj/kern/kernel.asm	/^ffffffff80103b4b:	48 c7 c6 80 dc 10 80 	mov    $0xffffffff8010dc80,%rsi$/;"	l
ffffffff80103b52	obj/kern/kernel.asm	/^ffffffff80103b52:	48 c7 c7 a0 ec 10 80 	mov    $0xffffffff8010eca0,%rdi$/;"	l
ffffffff80103b59	obj/kern/kernel.asm	/^ffffffff80103b59:	e8 46 db ff ff       	callq  ffffffff801016a4 <sleep>$/;"	l
ffffffff80103b5e	obj/kern/kernel.asm	/^ffffffff80103b5e:	8b 05 3c b1 00 00    	mov    0xb13c(%rip),%eax        # ffffffff8010eca0 <ticks>$/;"	l
ffffffff80103b64	obj/kern/kernel.asm	/^ffffffff80103b64:	29 d8                	sub    %ebx,%eax$/;"	l
ffffffff80103b66	obj/kern/kernel.asm	/^ffffffff80103b66:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffffffff80103b69	obj/kern/kernel.asm	/^ffffffff80103b69:	72 d5                	jb     ffffffff80103b40 <sys_sleep+0x3e>$/;"	l
ffffffff80103b6b	obj/kern/kernel.asm	/^ffffffff80103b6b:	48 c7 c7 80 dc 10 80 	mov    $0xffffffff8010dc80,%rdi$/;"	l
ffffffff80103b72	obj/kern/kernel.asm	/^ffffffff80103b72:	e8 76 c9 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80103b77	obj/kern/kernel.asm	/^ffffffff80103b77:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103b7c	obj/kern/kernel.asm	/^ffffffff80103b7c:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff80103b80	obj/kern/kernel.asm	/^ffffffff80103b80:	5b                   	pop    %rbx$/;"	l
ffffffff80103b81	obj/kern/kernel.asm	/^ffffffff80103b81:	5d                   	pop    %rbp$/;"	l
ffffffff80103b82	obj/kern/kernel.asm	/^ffffffff80103b82:	c3                   	retq   $/;"	l
ffffffff80103b83	obj/kern/kernel.asm	/^ffffffff80103b83:	48 c7 c7 80 dc 10 80 	mov    $0xffffffff8010dc80,%rdi$/;"	l
ffffffff80103b8a	obj/kern/kernel.asm	/^ffffffff80103b8a:	e8 5e c9 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80103b8f	obj/kern/kernel.asm	/^ffffffff80103b8f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80103b96	obj/kern/kernel.asm	/^ffffffff80103b96:	eb e4                	jmp    ffffffff80103b7c <sys_sleep+0x7a>$/;"	l
ffffffff80103b98	obj/kern/kernel.asm	/^ffffffff80103b98:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80103b9f	obj/kern/kernel.asm	/^ffffffff80103b9f:	eb db                	jmp    ffffffff80103b7c <sys_sleep+0x7a>$/;"	l
ffffffff80103ba1	obj/kern/kernel.asm	/^ffffffff80103ba1 <exec>:$/;"	l
ffffffff80103ba1	obj/kern/kernel.asm	/^ffffffff80103ba1:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80103ba5	obj/kern/kernel.asm	/^ffffffff80103ba5:	55                   	push   %rbp$/;"	l
ffffffff80103ba6	obj/kern/kernel.asm	/^ffffffff80103ba6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103ba9	obj/kern/kernel.asm	/^ffffffff80103ba9:	41 57                	push   %r15$/;"	l
ffffffff80103bab	obj/kern/kernel.asm	/^ffffffff80103bab:	41 56                	push   %r14$/;"	l
ffffffff80103bad	obj/kern/kernel.asm	/^ffffffff80103bad:	41 55                	push   %r13$/;"	l
ffffffff80103baf	obj/kern/kernel.asm	/^ffffffff80103baf:	41 54                	push   %r12$/;"	l
ffffffff80103bb1	obj/kern/kernel.asm	/^ffffffff80103bb1:	53                   	push   %rbx$/;"	l
ffffffff80103bb2	obj/kern/kernel.asm	/^ffffffff80103bb2:	48 81 ec c8 01 00 00 	sub    $0x1c8,%rsp$/;"	l
ffffffff80103bb9	obj/kern/kernel.asm	/^ffffffff80103bb9:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80103bbc	obj/kern/kernel.asm	/^ffffffff80103bbc:	48 89 bd 20 fe ff ff 	mov    %rdi,-0x1e0(%rbp)$/;"	l
ffffffff80103bc3	obj/kern/kernel.asm	/^ffffffff80103bc3:	48 89 b5 28 fe ff ff 	mov    %rsi,-0x1d8(%rbp)$/;"	l
ffffffff80103bca	obj/kern/kernel.asm	/^ffffffff80103bca:	e8 21 d5 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80103bcf	obj/kern/kernel.asm	/^ffffffff80103bcf:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)$/;"	l
ffffffff80103bd6	obj/kern/kernel.asm	/^ffffffff80103bd6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffffffff80103bd9	obj/kern/kernel.asm	/^ffffffff80103bd9:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)$/;"	l
ffffffff80103be0	obj/kern/kernel.asm	/^ffffffff80103be0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103be5	obj/kern/kernel.asm	/^ffffffff80103be5:	e8 0f 24 00 00       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff80103bea	obj/kern/kernel.asm	/^ffffffff80103bea:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80103bed	obj/kern/kernel.asm	/^ffffffff80103bed:	e8 50 22 00 00       	callq  ffffffff80105e42 <namei>$/;"	l
ffffffff80103bf2	obj/kern/kernel.asm	/^ffffffff80103bf2:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80103bf5	obj/kern/kernel.asm	/^ffffffff80103bf5:	74 58                	je     ffffffff80103c4f <exec+0xae>$/;"	l
ffffffff80103bf7	obj/kern/kernel.asm	/^ffffffff80103bf7:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80103bfa	obj/kern/kernel.asm	/^ffffffff80103bfa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80103bfd	obj/kern/kernel.asm	/^ffffffff80103bfd:	e8 72 1a 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80103c02	obj/kern/kernel.asm	/^ffffffff80103c02:	b9 40 00 00 00       	mov    $0x40,%ecx$/;"	l
ffffffff80103c07	obj/kern/kernel.asm	/^ffffffff80103c07:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80103c0c	obj/kern/kernel.asm	/^ffffffff80103c0c:	48 8d 75 90          	lea    -0x70(%rbp),%rsi$/;"	l
ffffffff80103c10	obj/kern/kernel.asm	/^ffffffff80103c10:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80103c13	obj/kern/kernel.asm	/^ffffffff80103c13:	e8 dc 1c 00 00       	callq  ffffffff801058f4 <readi>$/;"	l
ffffffff80103c18	obj/kern/kernel.asm	/^ffffffff80103c18:	83 f8 40             	cmp    $0x40,%eax$/;"	l
ffffffff80103c1b	obj/kern/kernel.asm	/^ffffffff80103c1b:	75 09                	jne    ffffffff80103c26 <exec+0x85>$/;"	l
ffffffff80103c1d	obj/kern/kernel.asm	/^ffffffff80103c1d:	81 7d 90 7f 45 4c 46 	cmpl   $0x464c457f,-0x70(%rbp)$/;"	l
ffffffff80103c24	obj/kern/kernel.asm	/^ffffffff80103c24:	74 4b                	je     ffffffff80103c71 <exec+0xd0>$/;"	l
ffffffff80103c26	obj/kern/kernel.asm	/^ffffffff80103c26:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80103c29	obj/kern/kernel.asm	/^ffffffff80103c29:	e8 7d 1c 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80103c2e	obj/kern/kernel.asm	/^ffffffff80103c2e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103c33	obj/kern/kernel.asm	/^ffffffff80103c33:	e8 2e 24 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80103c38	obj/kern/kernel.asm	/^ffffffff80103c38:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80103c3d	obj/kern/kernel.asm	/^ffffffff80103c3d:	48 81 c4 c8 01 00 00 	add    $0x1c8,%rsp$/;"	l
ffffffff80103c44	obj/kern/kernel.asm	/^ffffffff80103c44:	5b                   	pop    %rbx$/;"	l
ffffffff80103c45	obj/kern/kernel.asm	/^ffffffff80103c45:	41 5c                	pop    %r12$/;"	l
ffffffff80103c47	obj/kern/kernel.asm	/^ffffffff80103c47:	41 5d                	pop    %r13$/;"	l
ffffffff80103c49	obj/kern/kernel.asm	/^ffffffff80103c49:	41 5e                	pop    %r14$/;"	l
ffffffff80103c4b	obj/kern/kernel.asm	/^ffffffff80103c4b:	41 5f                	pop    %r15$/;"	l
ffffffff80103c4d	obj/kern/kernel.asm	/^ffffffff80103c4d:	5d                   	pop    %rbp$/;"	l
ffffffff80103c4e	obj/kern/kernel.asm	/^ffffffff80103c4e:	c3                   	retq   $/;"	l
ffffffff80103c4f	obj/kern/kernel.asm	/^ffffffff80103c4f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103c54	obj/kern/kernel.asm	/^ffffffff80103c54:	e8 0d 24 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80103c59	obj/kern/kernel.asm	/^ffffffff80103c59:	48 c7 c7 a0 75 10 80 	mov    $0xffffffff801075a0,%rdi$/;"	l
ffffffff80103c60	obj/kern/kernel.asm	/^ffffffff80103c60:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103c65	obj/kern/kernel.asm	/^ffffffff80103c65:	e8 5c cc ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff80103c6a	obj/kern/kernel.asm	/^ffffffff80103c6a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80103c6f	obj/kern/kernel.asm	/^ffffffff80103c6f:	eb cc                	jmp    ffffffff80103c3d <exec+0x9c>$/;"	l
ffffffff80103c71	obj/kern/kernel.asm	/^ffffffff80103c71:	e8 47 e5 ff ff       	callq  ffffffff801021bd <setupkvm>$/;"	l
ffffffff80103c76	obj/kern/kernel.asm	/^ffffffff80103c76:	49 89 c7             	mov    %rax,%r15$/;"	l
ffffffff80103c79	obj/kern/kernel.asm	/^ffffffff80103c79:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80103c7c	obj/kern/kernel.asm	/^ffffffff80103c7c:	74 a8                	je     ffffffff80103c26 <exec+0x85>$/;"	l
ffffffff80103c7e	obj/kern/kernel.asm	/^ffffffff80103c7e:	4c 8b 6d b0          	mov    -0x50(%rbp),%r13$/;"	l
ffffffff80103c82	obj/kern/kernel.asm	/^ffffffff80103c82:	66 83 7d c8 00       	cmpw   $0x0,-0x38(%rbp)$/;"	l
ffffffff80103c87	obj/kern/kernel.asm	/^ffffffff80103c87:	0f 84 ae 00 00 00    	je     ffffffff80103d3b <exec+0x19a>$/;"	l
ffffffff80103c8d	obj/kern/kernel.asm	/^ffffffff80103c8d:	41 bc 00 00 00 00    	mov    $0x0,%r12d$/;"	l
ffffffff80103c93	obj/kern/kernel.asm	/^ffffffff80103c93:	41 be 00 00 00 00    	mov    $0x0,%r14d$/;"	l
ffffffff80103c99	obj/kern/kernel.asm	/^ffffffff80103c99:	eb 15                	jmp    ffffffff80103cb0 <exec+0x10f>$/;"	l
ffffffff80103c9b	obj/kern/kernel.asm	/^ffffffff80103c9b:	41 83 c6 01          	add    $0x1,%r14d$/;"	l
ffffffff80103c9f	obj/kern/kernel.asm	/^ffffffff80103c9f:	49 83 c5 38          	add    $0x38,%r13$/;"	l
ffffffff80103ca3	obj/kern/kernel.asm	/^ffffffff80103ca3:	0f b7 45 c8          	movzwl -0x38(%rbp),%eax$/;"	l
ffffffff80103ca7	obj/kern/kernel.asm	/^ffffffff80103ca7:	44 39 f0             	cmp    %r14d,%eax$/;"	l
ffffffff80103caa	obj/kern/kernel.asm	/^ffffffff80103caa:	0f 8e 91 00 00 00    	jle    ffffffff80103d41 <exec+0x1a0>$/;"	l
ffffffff80103cb0	obj/kern/kernel.asm	/^ffffffff80103cb0:	b9 38 00 00 00       	mov    $0x38,%ecx$/;"	l
ffffffff80103cb5	obj/kern/kernel.asm	/^ffffffff80103cb5:	44 89 ea             	mov    %r13d,%edx$/;"	l
ffffffff80103cb8	obj/kern/kernel.asm	/^ffffffff80103cb8:	48 8d b5 58 ff ff ff 	lea    -0xa8(%rbp),%rsi$/;"	l
ffffffff80103cbf	obj/kern/kernel.asm	/^ffffffff80103cbf:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80103cc2	obj/kern/kernel.asm	/^ffffffff80103cc2:	e8 2d 1c 00 00       	callq  ffffffff801058f4 <readi>$/;"	l
ffffffff80103cc7	obj/kern/kernel.asm	/^ffffffff80103cc7:	83 f8 38             	cmp    $0x38,%eax$/;"	l
ffffffff80103cca	obj/kern/kernel.asm	/^ffffffff80103cca:	0f 85 ae 00 00 00    	jne    ffffffff80103d7e <exec+0x1dd>$/;"	l
ffffffff80103cd0	obj/kern/kernel.asm	/^ffffffff80103cd0:	83 bd 58 ff ff ff 01 	cmpl   $0x1,-0xa8(%rbp)$/;"	l
ffffffff80103cd7	obj/kern/kernel.asm	/^ffffffff80103cd7:	75 c2                	jne    ffffffff80103c9b <exec+0xfa>$/;"	l
ffffffff80103cd9	obj/kern/kernel.asm	/^ffffffff80103cd9:	48 8b 55 80          	mov    -0x80(%rbp),%rdx$/;"	l
ffffffff80103cdd	obj/kern/kernel.asm	/^ffffffff80103cdd:	48 3b 95 78 ff ff ff 	cmp    -0x88(%rbp),%rdx$/;"	l
ffffffff80103ce4	obj/kern/kernel.asm	/^ffffffff80103ce4:	0f 82 94 00 00 00    	jb     ffffffff80103d7e <exec+0x1dd>$/;"	l
ffffffff80103cea	obj/kern/kernel.asm	/^ffffffff80103cea:	48 03 95 68 ff ff ff 	add    -0x98(%rbp),%rdx$/;"	l
ffffffff80103cf1	obj/kern/kernel.asm	/^ffffffff80103cf1:	0f 82 87 00 00 00    	jb     ffffffff80103d7e <exec+0x1dd>$/;"	l
ffffffff80103cf7	obj/kern/kernel.asm	/^ffffffff80103cf7:	4c 89 e6             	mov    %r12,%rsi$/;"	l
ffffffff80103cfa	obj/kern/kernel.asm	/^ffffffff80103cfa:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80103cfd	obj/kern/kernel.asm	/^ffffffff80103cfd:	e8 d5 e2 ff ff       	callq  ffffffff80101fd7 <allocuvm>$/;"	l
ffffffff80103d02	obj/kern/kernel.asm	/^ffffffff80103d02:	4c 63 e0             	movslq %eax,%r12$/;"	l
ffffffff80103d05	obj/kern/kernel.asm	/^ffffffff80103d05:	4d 85 e4             	test   %r12,%r12$/;"	l
ffffffff80103d08	obj/kern/kernel.asm	/^ffffffff80103d08:	74 74                	je     ffffffff80103d7e <exec+0x1dd>$/;"	l
ffffffff80103d0a	obj/kern/kernel.asm	/^ffffffff80103d0a:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi$/;"	l
ffffffff80103d11	obj/kern/kernel.asm	/^ffffffff80103d11:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi$/;"	l
ffffffff80103d17	obj/kern/kernel.asm	/^ffffffff80103d17:	75 65                	jne    ffffffff80103d7e <exec+0x1dd>$/;"	l
ffffffff80103d19	obj/kern/kernel.asm	/^ffffffff80103d19:	4c 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%r8$/;"	l
ffffffff80103d20	obj/kern/kernel.asm	/^ffffffff80103d20:	8b 8d 60 ff ff ff    	mov    -0xa0(%rbp),%ecx$/;"	l
ffffffff80103d26	obj/kern/kernel.asm	/^ffffffff80103d26:	48 89 da             	mov    %rbx,%rdx$/;"	l
ffffffff80103d29	obj/kern/kernel.asm	/^ffffffff80103d29:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80103d2c	obj/kern/kernel.asm	/^ffffffff80103d2c:	e8 12 e1 ff ff       	callq  ffffffff80101e43 <loaduvm>$/;"	l
ffffffff80103d31	obj/kern/kernel.asm	/^ffffffff80103d31:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80103d33	obj/kern/kernel.asm	/^ffffffff80103d33:	0f 89 62 ff ff ff    	jns    ffffffff80103c9b <exec+0xfa>$/;"	l
ffffffff80103d39	obj/kern/kernel.asm	/^ffffffff80103d39:	eb 43                	jmp    ffffffff80103d7e <exec+0x1dd>$/;"	l
ffffffff80103d3b	obj/kern/kernel.asm	/^ffffffff80103d3b:	41 bc 00 00 00 00    	mov    $0x0,%r12d$/;"	l
ffffffff80103d41	obj/kern/kernel.asm	/^ffffffff80103d41:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80103d44	obj/kern/kernel.asm	/^ffffffff80103d44:	e8 62 1b 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80103d49	obj/kern/kernel.asm	/^ffffffff80103d49:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103d4e	obj/kern/kernel.asm	/^ffffffff80103d4e:	e8 13 23 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80103d53	obj/kern/kernel.asm	/^ffffffff80103d53:	49 8d b4 24 ff 0f 00 	lea    0xfff(%r12),%rsi$/;"	l
ffffffff80103d5a	obj/kern/kernel.asm	/^ffffffff80103d5a:	00 $/;"	l
ffffffff80103d5b	obj/kern/kernel.asm	/^ffffffff80103d5b:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi$/;"	l
ffffffff80103d62	obj/kern/kernel.asm	/^ffffffff80103d62:	48 8d 96 00 20 00 00 	lea    0x2000(%rsi),%rdx$/;"	l
ffffffff80103d69	obj/kern/kernel.asm	/^ffffffff80103d69:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80103d6c	obj/kern/kernel.asm	/^ffffffff80103d6c:	e8 66 e2 ff ff       	callq  ffffffff80101fd7 <allocuvm>$/;"	l
ffffffff80103d71	obj/kern/kernel.asm	/^ffffffff80103d71:	4c 63 e0             	movslq %eax,%r12$/;"	l
ffffffff80103d74	obj/kern/kernel.asm	/^ffffffff80103d74:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80103d79	obj/kern/kernel.asm	/^ffffffff80103d79:	4d 85 e4             	test   %r12,%r12$/;"	l
ffffffff80103d7c	obj/kern/kernel.asm	/^ffffffff80103d7c:	75 1e                	jne    ffffffff80103d9c <exec+0x1fb>$/;"	l
ffffffff80103d7e	obj/kern/kernel.asm	/^ffffffff80103d7e:	4c 89 e6             	mov    %r12,%rsi$/;"	l
ffffffff80103d81	obj/kern/kernel.asm	/^ffffffff80103d81:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80103d84	obj/kern/kernel.asm	/^ffffffff80103d84:	e8 f5 e3 ff ff       	callq  ffffffff8010217e <freevm>$/;"	l
ffffffff80103d89	obj/kern/kernel.asm	/^ffffffff80103d89:	48 85 db             	test   %rbx,%rbx$/;"	l
ffffffff80103d8c	obj/kern/kernel.asm	/^ffffffff80103d8c:	0f 85 94 fe ff ff    	jne    ffffffff80103c26 <exec+0x85>$/;"	l
ffffffff80103d92	obj/kern/kernel.asm	/^ffffffff80103d92:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80103d97	obj/kern/kernel.asm	/^ffffffff80103d97:	e9 a1 fe ff ff       	jmpq   ffffffff80103c3d <exec+0x9c>$/;"	l
ffffffff80103d9c	obj/kern/kernel.asm	/^ffffffff80103d9c:	49 8d b4 24 00 e0 ff 	lea    -0x2000(%r12),%rsi$/;"	l
ffffffff80103da3	obj/kern/kernel.asm	/^ffffffff80103da3:	ff $/;"	l
ffffffff80103da4	obj/kern/kernel.asm	/^ffffffff80103da4:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80103da7	obj/kern/kernel.asm	/^ffffffff80103da7:	e8 e6 e5 ff ff       	callq  ffffffff80102392 <clearpteu>$/;"	l
ffffffff80103dac	obj/kern/kernel.asm	/^ffffffff80103dac:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax$/;"	l
ffffffff80103db3	obj/kern/kernel.asm	/^ffffffff80103db3:	48 8b 38             	mov    (%rax),%rdi$/;"	l
ffffffff80103db6	obj/kern/kernel.asm	/^ffffffff80103db6:	4d 89 e5             	mov    %r12,%r13$/;"	l
ffffffff80103db9	obj/kern/kernel.asm	/^ffffffff80103db9:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
ffffffff80103dbe	obj/kern/kernel.asm	/^ffffffff80103dbe:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff80103dc1	obj/kern/kernel.asm	/^ffffffff80103dc1:	74 63                	je     ffffffff80103e26 <exec+0x285>$/;"	l
ffffffff80103dc3	obj/kern/kernel.asm	/^ffffffff80103dc3:	e8 d0 2c 00 00       	callq  ffffffff80106a98 <strlen>$/;"	l
ffffffff80103dc8	obj/kern/kernel.asm	/^ffffffff80103dc8:	48 f7 d0             	not    %rax$/;"	l
ffffffff80103dcb	obj/kern/kernel.asm	/^ffffffff80103dcb:	49 01 c5             	add    %rax,%r13$/;"	l
ffffffff80103dce	obj/kern/kernel.asm	/^ffffffff80103dce:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13$/;"	l
ffffffff80103dd2	obj/kern/kernel.asm	/^ffffffff80103dd2:	4c 8b b5 28 fe ff ff 	mov    -0x1d8(%rbp),%r14$/;"	l
ffffffff80103dd9	obj/kern/kernel.asm	/^ffffffff80103dd9:	49 8b 7c de f8       	mov    -0x8(%r14,%rbx,8),%rdi$/;"	l
ffffffff80103dde	obj/kern/kernel.asm	/^ffffffff80103dde:	e8 b5 2c 00 00       	callq  ffffffff80106a98 <strlen>$/;"	l
ffffffff80103de3	obj/kern/kernel.asm	/^ffffffff80103de3:	48 8d 48 01          	lea    0x1(%rax),%rcx$/;"	l
ffffffff80103de7	obj/kern/kernel.asm	/^ffffffff80103de7:	49 8b 54 de f8       	mov    -0x8(%r14,%rbx,8),%rdx$/;"	l
ffffffff80103dec	obj/kern/kernel.asm	/^ffffffff80103dec:	4c 89 ee             	mov    %r13,%rsi$/;"	l
ffffffff80103def	obj/kern/kernel.asm	/^ffffffff80103def:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80103df2	obj/kern/kernel.asm	/^ffffffff80103df2:	e8 03 e6 ff ff       	callq  ffffffff801023fa <copyout>$/;"	l
ffffffff80103df7	obj/kern/kernel.asm	/^ffffffff80103df7:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80103df9	obj/kern/kernel.asm	/^ffffffff80103df9:	0f 88 28 01 00 00    	js     ffffffff80103f27 <exec+0x386>$/;"	l
ffffffff80103dff	obj/kern/kernel.asm	/^ffffffff80103dff:	4c 89 ac dd 48 fe ff 	mov    %r13,-0x1b8(%rbp,%rbx,8)$/;"	l
ffffffff80103e06	obj/kern/kernel.asm	/^ffffffff80103e06:	ff $/;"	l
ffffffff80103e07	obj/kern/kernel.asm	/^ffffffff80103e07:	89 d8                	mov    %ebx,%eax$/;"	l
ffffffff80103e09	obj/kern/kernel.asm	/^ffffffff80103e09:	49 8b 3c de          	mov    (%r14,%rbx,8),%rdi$/;"	l
ffffffff80103e0d	obj/kern/kernel.asm	/^ffffffff80103e0d:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff80103e10	obj/kern/kernel.asm	/^ffffffff80103e10:	74 1e                	je     ffffffff80103e30 <exec+0x28f>$/;"	l
ffffffff80103e12	obj/kern/kernel.asm	/^ffffffff80103e12:	48 83 c3 01          	add    $0x1,%rbx$/;"	l
ffffffff80103e16	obj/kern/kernel.asm	/^ffffffff80103e16:	48 83 fb 21          	cmp    $0x21,%rbx$/;"	l
ffffffff80103e1a	obj/kern/kernel.asm	/^ffffffff80103e1a:	75 a7                	jne    ffffffff80103dc3 <exec+0x222>$/;"	l
ffffffff80103e1c	obj/kern/kernel.asm	/^ffffffff80103e1c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80103e21	obj/kern/kernel.asm	/^ffffffff80103e21:	e9 58 ff ff ff       	jmpq   ffffffff80103d7e <exec+0x1dd>$/;"	l
ffffffff80103e26	obj/kern/kernel.asm	/^ffffffff80103e26:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103e2b	obj/kern/kernel.asm	/^ffffffff80103e2b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80103e30	obj/kern/kernel.asm	/^ffffffff80103e30:	8d 50 03             	lea    0x3(%rax),%edx$/;"	l
ffffffff80103e33	obj/kern/kernel.asm	/^ffffffff80103e33:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffffffff80103e36	obj/kern/kernel.asm	/^ffffffff80103e36:	48 c7 84 d5 38 fe ff 	movq   $0x0,-0x1c8(%rbp,%rdx,8)$/;"	l
ffffffff80103e3d	obj/kern/kernel.asm	/^ffffffff80103e3d:	ff 00 00 00 00 $/;"	l
ffffffff80103e42	obj/kern/kernel.asm	/^ffffffff80103e42:	48 c7 85 38 fe ff ff 	movq   $0xffffffffffffffff,-0x1c8(%rbp)$/;"	l
ffffffff80103e49	obj/kern/kernel.asm	/^ffffffff80103e49:	ff ff ff ff $/;"	l
ffffffff80103e4d	obj/kern/kernel.asm	/^ffffffff80103e4d:	48 89 9d 40 fe ff ff 	mov    %rbx,-0x1c0(%rbp)$/;"	l
ffffffff80103e54	obj/kern/kernel.asm	/^ffffffff80103e54:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffffffff80103e57	obj/kern/kernel.asm	/^ffffffff80103e57:	48 63 c9             	movslq %ecx,%rcx$/;"	l
ffffffff80103e5a	obj/kern/kernel.asm	/^ffffffff80103e5a:	48 c1 e1 03          	shl    $0x3,%rcx$/;"	l
ffffffff80103e5e	obj/kern/kernel.asm	/^ffffffff80103e5e:	4c 89 e8             	mov    %r13,%rax$/;"	l
ffffffff80103e61	obj/kern/kernel.asm	/^ffffffff80103e61:	48 29 c8             	sub    %rcx,%rax$/;"	l
ffffffff80103e64	obj/kern/kernel.asm	/^ffffffff80103e64:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)$/;"	l
ffffffff80103e6b	obj/kern/kernel.asm	/^ffffffff80103e6b:	48 83 c1 18          	add    $0x18,%rcx$/;"	l
ffffffff80103e6f	obj/kern/kernel.asm	/^ffffffff80103e6f:	49 29 cd             	sub    %rcx,%r13$/;"	l
ffffffff80103e72	obj/kern/kernel.asm	/^ffffffff80103e72:	48 8d 95 38 fe ff ff 	lea    -0x1c8(%rbp),%rdx$/;"	l
ffffffff80103e79	obj/kern/kernel.asm	/^ffffffff80103e79:	4c 89 ee             	mov    %r13,%rsi$/;"	l
ffffffff80103e7c	obj/kern/kernel.asm	/^ffffffff80103e7c:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80103e7f	obj/kern/kernel.asm	/^ffffffff80103e7f:	e8 76 e5 ff ff       	callq  ffffffff801023fa <copyout>$/;"	l
ffffffff80103e84	obj/kern/kernel.asm	/^ffffffff80103e84:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80103e86	obj/kern/kernel.asm	/^ffffffff80103e86:	0f 88 a5 00 00 00    	js     ffffffff80103f31 <exec+0x390>$/;"	l
ffffffff80103e8c	obj/kern/kernel.asm	/^ffffffff80103e8c:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffffffff80103e93	obj/kern/kernel.asm	/^ffffffff80103e93:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffffffff80103e96	obj/kern/kernel.asm	/^ffffffff80103e96:	84 d2                	test   %dl,%dl$/;"	l
ffffffff80103e98	obj/kern/kernel.asm	/^ffffffff80103e98:	74 25                	je     ffffffff80103ebf <exec+0x31e>$/;"	l
ffffffff80103e9a	obj/kern/kernel.asm	/^ffffffff80103e9a:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffffffff80103e9e	obj/kern/kernel.asm	/^ffffffff80103e9e:	80 fa 2f             	cmp    $0x2f,%dl$/;"	l
ffffffff80103ea1	obj/kern/kernel.asm	/^ffffffff80103ea1:	48 8b 8d 20 fe ff ff 	mov    -0x1e0(%rbp),%rcx$/;"	l
ffffffff80103ea8	obj/kern/kernel.asm	/^ffffffff80103ea8:	48 0f 44 c8          	cmove  %rax,%rcx$/;"	l
ffffffff80103eac	obj/kern/kernel.asm	/^ffffffff80103eac:	48 89 8d 20 fe ff ff 	mov    %rcx,-0x1e0(%rbp)$/;"	l
ffffffff80103eb3	obj/kern/kernel.asm	/^ffffffff80103eb3:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffffffff80103eb7	obj/kern/kernel.asm	/^ffffffff80103eb7:	0f b6 50 ff          	movzbl -0x1(%rax),%edx$/;"	l
ffffffff80103ebb	obj/kern/kernel.asm	/^ffffffff80103ebb:	84 d2                	test   %dl,%dl$/;"	l
ffffffff80103ebd	obj/kern/kernel.asm	/^ffffffff80103ebd:	75 df                	jne    ffffffff80103e9e <exec+0x2fd>$/;"	l
ffffffff80103ebf	obj/kern/kernel.asm	/^ffffffff80103ebf:	48 8b 9d 18 fe ff ff 	mov    -0x1e8(%rbp),%rbx$/;"	l
ffffffff80103ec6	obj/kern/kernel.asm	/^ffffffff80103ec6:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80103ec9	obj/kern/kernel.asm	/^ffffffff80103ec9:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi$/;"	l
ffffffff80103ed0	obj/kern/kernel.asm	/^ffffffff80103ed0:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffffffff80103ed5	obj/kern/kernel.asm	/^ffffffff80103ed5:	48 8b b5 20 fe ff ff 	mov    -0x1e0(%rbp),%rsi$/;"	l
ffffffff80103edc	obj/kern/kernel.asm	/^ffffffff80103edc:	e8 86 2b 00 00       	callq  ffffffff80106a67 <safestrcpy>$/;"	l
ffffffff80103ee1	obj/kern/kernel.asm	/^ffffffff80103ee1:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80103ee4	obj/kern/kernel.asm	/^ffffffff80103ee4:	48 8b 5b 08          	mov    0x8(%rbx),%rbx$/;"	l
ffffffff80103ee8	obj/kern/kernel.asm	/^ffffffff80103ee8:	4c 89 7f 08          	mov    %r15,0x8(%rdi)$/;"	l
ffffffff80103eec	obj/kern/kernel.asm	/^ffffffff80103eec:	4c 89 27             	mov    %r12,(%rdi)$/;"	l
ffffffff80103eef	obj/kern/kernel.asm	/^ffffffff80103eef:	48 8b 47 28          	mov    0x28(%rdi),%rax$/;"	l
ffffffff80103ef3	obj/kern/kernel.asm	/^ffffffff80103ef3:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
ffffffff80103ef7	obj/kern/kernel.asm	/^ffffffff80103ef7:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)$/;"	l
ffffffff80103efe	obj/kern/kernel.asm	/^ffffffff80103efe:	48 8b 47 28          	mov    0x28(%rdi),%rax$/;"	l
ffffffff80103f02	obj/kern/kernel.asm	/^ffffffff80103f02:	4c 89 a8 a0 00 00 00 	mov    %r13,0xa0(%rax)$/;"	l
ffffffff80103f09	obj/kern/kernel.asm	/^ffffffff80103f09:	e8 7a dd ff ff       	callq  ffffffff80101c88 <switchuvm>$/;"	l
ffffffff80103f0e	obj/kern/kernel.asm	/^ffffffff80103f0e:	48 8b b5 10 fe ff ff 	mov    -0x1f0(%rbp),%rsi$/;"	l
ffffffff80103f15	obj/kern/kernel.asm	/^ffffffff80103f15:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80103f18	obj/kern/kernel.asm	/^ffffffff80103f18:	e8 61 e2 ff ff       	callq  ffffffff8010217e <freevm>$/;"	l
ffffffff80103f1d	obj/kern/kernel.asm	/^ffffffff80103f1d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103f22	obj/kern/kernel.asm	/^ffffffff80103f22:	e9 16 fd ff ff       	jmpq   ffffffff80103c3d <exec+0x9c>$/;"	l
ffffffff80103f27	obj/kern/kernel.asm	/^ffffffff80103f27:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80103f2c	obj/kern/kernel.asm	/^ffffffff80103f2c:	e9 4d fe ff ff       	jmpq   ffffffff80103d7e <exec+0x1dd>$/;"	l
ffffffff80103f31	obj/kern/kernel.asm	/^ffffffff80103f31:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80103f36	obj/kern/kernel.asm	/^ffffffff80103f36:	e9 43 fe ff ff       	jmpq   ffffffff80103d7e <exec+0x1dd>$/;"	l
ffffffff80103f3b	obj/kern/kernel.asm	/^ffffffff80103f3b <argfd>:$/;"	l
ffffffff80103f3b	obj/kern/kernel.asm	/^ffffffff80103f3b:	55                   	push   %rbp$/;"	l
ffffffff80103f3c	obj/kern/kernel.asm	/^ffffffff80103f3c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103f3f	obj/kern/kernel.asm	/^ffffffff80103f3f:	41 54                	push   %r12$/;"	l
ffffffff80103f41	obj/kern/kernel.asm	/^ffffffff80103f41:	53                   	push   %rbx$/;"	l
ffffffff80103f42	obj/kern/kernel.asm	/^ffffffff80103f42:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff80103f46	obj/kern/kernel.asm	/^ffffffff80103f46:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff80103f49	obj/kern/kernel.asm	/^ffffffff80103f49:	48 89 d3             	mov    %rdx,%rbx$/;"	l
ffffffff80103f4c	obj/kern/kernel.asm	/^ffffffff80103f4c:	48 8d 75 ec          	lea    -0x14(%rbp),%rsi$/;"	l
ffffffff80103f50	obj/kern/kernel.asm	/^ffffffff80103f50:	e8 59 ea ff ff       	callq  ffffffff801029ae <argint>$/;"	l
ffffffff80103f55	obj/kern/kernel.asm	/^ffffffff80103f55:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80103f57	obj/kern/kernel.asm	/^ffffffff80103f57:	78 3d                	js     ffffffff80103f96 <argfd+0x5b>$/;"	l
ffffffff80103f59	obj/kern/kernel.asm	/^ffffffff80103f59:	83 7d ec 0f          	cmpl   $0xf,-0x14(%rbp)$/;"	l
ffffffff80103f5d	obj/kern/kernel.asm	/^ffffffff80103f5d:	77 3e                	ja     ffffffff80103f9d <argfd+0x62>$/;"	l
ffffffff80103f5f	obj/kern/kernel.asm	/^ffffffff80103f5f:	e8 8c d1 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80103f64	obj/kern/kernel.asm	/^ffffffff80103f64:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff80103f67	obj/kern/kernel.asm	/^ffffffff80103f67:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffffffff80103f6a	obj/kern/kernel.asm	/^ffffffff80103f6a:	48 63 c8             	movslq %eax,%rcx$/;"	l
ffffffff80103f6d	obj/kern/kernel.asm	/^ffffffff80103f6d:	48 8b 54 ca 48       	mov    0x48(%rdx,%rcx,8),%rdx$/;"	l
ffffffff80103f72	obj/kern/kernel.asm	/^ffffffff80103f72:	48 85 d2             	test   %rdx,%rdx$/;"	l
ffffffff80103f75	obj/kern/kernel.asm	/^ffffffff80103f75:	74 2d                	je     ffffffff80103fa4 <argfd+0x69>$/;"	l
ffffffff80103f77	obj/kern/kernel.asm	/^ffffffff80103f77:	4d 85 e4             	test   %r12,%r12$/;"	l
ffffffff80103f7a	obj/kern/kernel.asm	/^ffffffff80103f7a:	74 04                	je     ffffffff80103f80 <argfd+0x45>$/;"	l
ffffffff80103f7c	obj/kern/kernel.asm	/^ffffffff80103f7c:	41 89 04 24          	mov    %eax,(%r12)$/;"	l
ffffffff80103f80	obj/kern/kernel.asm	/^ffffffff80103f80:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80103f85	obj/kern/kernel.asm	/^ffffffff80103f85:	48 85 db             	test   %rbx,%rbx$/;"	l
ffffffff80103f88	obj/kern/kernel.asm	/^ffffffff80103f88:	74 03                	je     ffffffff80103f8d <argfd+0x52>$/;"	l
ffffffff80103f8a	obj/kern/kernel.asm	/^ffffffff80103f8a:	48 89 13             	mov    %rdx,(%rbx)$/;"	l
ffffffff80103f8d	obj/kern/kernel.asm	/^ffffffff80103f8d:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffffffff80103f91	obj/kern/kernel.asm	/^ffffffff80103f91:	5b                   	pop    %rbx$/;"	l
ffffffff80103f92	obj/kern/kernel.asm	/^ffffffff80103f92:	41 5c                	pop    %r12$/;"	l
ffffffff80103f94	obj/kern/kernel.asm	/^ffffffff80103f94:	5d                   	pop    %rbp$/;"	l
ffffffff80103f95	obj/kern/kernel.asm	/^ffffffff80103f95:	c3                   	retq   $/;"	l
ffffffff80103f96	obj/kern/kernel.asm	/^ffffffff80103f96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80103f9b	obj/kern/kernel.asm	/^ffffffff80103f9b:	eb f0                	jmp    ffffffff80103f8d <argfd+0x52>$/;"	l
ffffffff80103f9d	obj/kern/kernel.asm	/^ffffffff80103f9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80103fa2	obj/kern/kernel.asm	/^ffffffff80103fa2:	eb e9                	jmp    ffffffff80103f8d <argfd+0x52>$/;"	l
ffffffff80103fa4	obj/kern/kernel.asm	/^ffffffff80103fa4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80103fa9	obj/kern/kernel.asm	/^ffffffff80103fa9:	eb e2                	jmp    ffffffff80103f8d <argfd+0x52>$/;"	l
ffffffff80103fab	obj/kern/kernel.asm	/^ffffffff80103fab <fdalloc>:$/;"	l
ffffffff80103fab	obj/kern/kernel.asm	/^ffffffff80103fab:	55                   	push   %rbp$/;"	l
ffffffff80103fac	obj/kern/kernel.asm	/^ffffffff80103fac:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103faf	obj/kern/kernel.asm	/^ffffffff80103faf:	53                   	push   %rbx$/;"	l
ffffffff80103fb0	obj/kern/kernel.asm	/^ffffffff80103fb0:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80103fb4	obj/kern/kernel.asm	/^ffffffff80103fb4:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80103fb7	obj/kern/kernel.asm	/^ffffffff80103fb7:	e8 34 d1 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80103fbc	obj/kern/kernel.asm	/^ffffffff80103fbc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80103fc1	obj/kern/kernel.asm	/^ffffffff80103fc1:	89 d1                	mov    %edx,%ecx$/;"	l
ffffffff80103fc3	obj/kern/kernel.asm	/^ffffffff80103fc3:	48 83 7c d0 48 00    	cmpq   $0x0,0x48(%rax,%rdx,8)$/;"	l
ffffffff80103fc9	obj/kern/kernel.asm	/^ffffffff80103fc9:	74 18                	je     ffffffff80103fe3 <fdalloc+0x38>$/;"	l
ffffffff80103fcb	obj/kern/kernel.asm	/^ffffffff80103fcb:	48 83 c2 01          	add    $0x1,%rdx$/;"	l
ffffffff80103fcf	obj/kern/kernel.asm	/^ffffffff80103fcf:	48 83 fa 10          	cmp    $0x10,%rdx$/;"	l
ffffffff80103fd3	obj/kern/kernel.asm	/^ffffffff80103fd3:	75 ec                	jne    ffffffff80103fc1 <fdalloc+0x16>$/;"	l
ffffffff80103fd5	obj/kern/kernel.asm	/^ffffffff80103fd5:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
ffffffff80103fda	obj/kern/kernel.asm	/^ffffffff80103fda:	89 c8                	mov    %ecx,%eax$/;"	l
ffffffff80103fdc	obj/kern/kernel.asm	/^ffffffff80103fdc:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80103fe0	obj/kern/kernel.asm	/^ffffffff80103fe0:	5b                   	pop    %rbx$/;"	l
ffffffff80103fe1	obj/kern/kernel.asm	/^ffffffff80103fe1:	5d                   	pop    %rbp$/;"	l
ffffffff80103fe2	obj/kern/kernel.asm	/^ffffffff80103fe2:	c3                   	retq   $/;"	l
ffffffff80103fe3	obj/kern/kernel.asm	/^ffffffff80103fe3:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffffffff80103fe6	obj/kern/kernel.asm	/^ffffffff80103fe6:	48 89 5c d0 48       	mov    %rbx,0x48(%rax,%rdx,8)$/;"	l
ffffffff80103feb	obj/kern/kernel.asm	/^ffffffff80103feb:	eb ed                	jmp    ffffffff80103fda <fdalloc+0x2f>$/;"	l
ffffffff80103fed	obj/kern/kernel.asm	/^ffffffff80103fed <create>:$/;"	l
ffffffff80103fed	obj/kern/kernel.asm	/^ffffffff80103fed:	55                   	push   %rbp$/;"	l
ffffffff80103fee	obj/kern/kernel.asm	/^ffffffff80103fee:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80103ff1	obj/kern/kernel.asm	/^ffffffff80103ff1:	41 57                	push   %r15$/;"	l
ffffffff80103ff3	obj/kern/kernel.asm	/^ffffffff80103ff3:	41 56                	push   %r14$/;"	l
ffffffff80103ff5	obj/kern/kernel.asm	/^ffffffff80103ff5:	41 55                	push   %r13$/;"	l
ffffffff80103ff7	obj/kern/kernel.asm	/^ffffffff80103ff7:	41 54                	push   %r12$/;"	l
ffffffff80103ff9	obj/kern/kernel.asm	/^ffffffff80103ff9:	53                   	push   %rbx$/;"	l
ffffffff80103ffa	obj/kern/kernel.asm	/^ffffffff80103ffa:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80103ffe	obj/kern/kernel.asm	/^ffffffff80103ffe:	41 89 f5             	mov    %esi,%r13d$/;"	l
ffffffff80104001	obj/kern/kernel.asm	/^ffffffff80104001:	41 89 d7             	mov    %edx,%r15d$/;"	l
ffffffff80104004	obj/kern/kernel.asm	/^ffffffff80104004:	41 89 ce             	mov    %ecx,%r14d$/;"	l
ffffffff80104007	obj/kern/kernel.asm	/^ffffffff80104007:	48 8d 75 c2          	lea    -0x3e(%rbp),%rsi$/;"	l
ffffffff8010400b	obj/kern/kernel.asm	/^ffffffff8010400b:	e8 4e 1e 00 00       	callq  ffffffff80105e5e <nameiparent>$/;"	l
ffffffff80104010	obj/kern/kernel.asm	/^ffffffff80104010:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80104013	obj/kern/kernel.asm	/^ffffffff80104013:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80104016	obj/kern/kernel.asm	/^ffffffff80104016:	0f 84 18 01 00 00    	je     ffffffff80104134 <create+0x147>$/;"	l
ffffffff8010401c	obj/kern/kernel.asm	/^ffffffff8010401c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff8010401f	obj/kern/kernel.asm	/^ffffffff8010401f:	e8 50 16 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80104024	obj/kern/kernel.asm	/^ffffffff80104024:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80104029	obj/kern/kernel.asm	/^ffffffff80104029:	48 8d 75 c2          	lea    -0x3e(%rbp),%rsi$/;"	l
ffffffff8010402d	obj/kern/kernel.asm	/^ffffffff8010402d:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104030	obj/kern/kernel.asm	/^ffffffff80104030:	e8 1c 1b 00 00       	callq  ffffffff80105b51 <dirlookup>$/;"	l
ffffffff80104035	obj/kern/kernel.asm	/^ffffffff80104035:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80104038	obj/kern/kernel.asm	/^ffffffff80104038:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff8010403b	obj/kern/kernel.asm	/^ffffffff8010403b:	74 3d                	je     ffffffff8010407a <create+0x8d>$/;"	l
ffffffff8010403d	obj/kern/kernel.asm	/^ffffffff8010403d:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104040	obj/kern/kernel.asm	/^ffffffff80104040:	e8 66 18 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104045	obj/kern/kernel.asm	/^ffffffff80104045:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104048	obj/kern/kernel.asm	/^ffffffff80104048:	e8 27 16 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff8010404d	obj/kern/kernel.asm	/^ffffffff8010404d:	66 41 83 fd 02       	cmp    $0x2,%r13w$/;"	l
ffffffff80104052	obj/kern/kernel.asm	/^ffffffff80104052:	75 07                	jne    ffffffff8010405b <create+0x6e>$/;"	l
ffffffff80104054	obj/kern/kernel.asm	/^ffffffff80104054:	66 83 7b 44 02       	cmpw   $0x2,0x44(%rbx)$/;"	l
ffffffff80104059	obj/kern/kernel.asm	/^ffffffff80104059:	74 0d                	je     ffffffff80104068 <create+0x7b>$/;"	l
ffffffff8010405b	obj/kern/kernel.asm	/^ffffffff8010405b:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010405e	obj/kern/kernel.asm	/^ffffffff8010405e:	e8 48 18 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104063	obj/kern/kernel.asm	/^ffffffff80104063:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80104068	obj/kern/kernel.asm	/^ffffffff80104068:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff8010406b	obj/kern/kernel.asm	/^ffffffff8010406b:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff8010406f	obj/kern/kernel.asm	/^ffffffff8010406f:	5b                   	pop    %rbx$/;"	l
ffffffff80104070	obj/kern/kernel.asm	/^ffffffff80104070:	41 5c                	pop    %r12$/;"	l
ffffffff80104072	obj/kern/kernel.asm	/^ffffffff80104072:	41 5d                	pop    %r13$/;"	l
ffffffff80104074	obj/kern/kernel.asm	/^ffffffff80104074:	41 5e                	pop    %r14$/;"	l
ffffffff80104076	obj/kern/kernel.asm	/^ffffffff80104076:	41 5f                	pop    %r15$/;"	l
ffffffff80104078	obj/kern/kernel.asm	/^ffffffff80104078:	5d                   	pop    %rbp$/;"	l
ffffffff80104079	obj/kern/kernel.asm	/^ffffffff80104079:	c3                   	retq   $/;"	l
ffffffff8010407a	obj/kern/kernel.asm	/^ffffffff8010407a:	41 0f bf f5          	movswl %r13w,%esi$/;"	l
ffffffff8010407e	obj/kern/kernel.asm	/^ffffffff8010407e:	41 8b 3c 24          	mov    (%r12),%edi$/;"	l
ffffffff80104082	obj/kern/kernel.asm	/^ffffffff80104082:	e8 80 14 00 00       	callq  ffffffff80105507 <ialloc>$/;"	l
ffffffff80104087	obj/kern/kernel.asm	/^ffffffff80104087:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff8010408a	obj/kern/kernel.asm	/^ffffffff8010408a:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff8010408d	obj/kern/kernel.asm	/^ffffffff8010408d:	74 44                	je     ffffffff801040d3 <create+0xe6>$/;"	l
ffffffff8010408f	obj/kern/kernel.asm	/^ffffffff8010408f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80104092	obj/kern/kernel.asm	/^ffffffff80104092:	e8 dd 15 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80104097	obj/kern/kernel.asm	/^ffffffff80104097:	66 44 89 7b 46       	mov    %r15w,0x46(%rbx)$/;"	l
ffffffff8010409c	obj/kern/kernel.asm	/^ffffffff8010409c:	66 44 89 73 48       	mov    %r14w,0x48(%rbx)$/;"	l
ffffffff801040a1	obj/kern/kernel.asm	/^ffffffff801040a1:	66 c7 43 4a 01 00    	movw   $0x1,0x4a(%rbx)$/;"	l
ffffffff801040a7	obj/kern/kernel.asm	/^ffffffff801040a7:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801040aa	obj/kern/kernel.asm	/^ffffffff801040aa:	e8 10 15 00 00       	callq  ffffffff801055bf <iupdate>$/;"	l
ffffffff801040af	obj/kern/kernel.asm	/^ffffffff801040af:	66 41 83 fd 01       	cmp    $0x1,%r13w$/;"	l
ffffffff801040b4	obj/kern/kernel.asm	/^ffffffff801040b4:	74 29                	je     ffffffff801040df <create+0xf2>$/;"	l
ffffffff801040b6	obj/kern/kernel.asm	/^ffffffff801040b6:	8b 53 04             	mov    0x4(%rbx),%edx$/;"	l
ffffffff801040b9	obj/kern/kernel.asm	/^ffffffff801040b9:	48 8d 75 c2          	lea    -0x3e(%rbp),%rsi$/;"	l
ffffffff801040bd	obj/kern/kernel.asm	/^ffffffff801040bd:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801040c0	obj/kern/kernel.asm	/^ffffffff801040c0:	e8 b4 1c 00 00       	callq  ffffffff80105d79 <dirlink>$/;"	l
ffffffff801040c5	obj/kern/kernel.asm	/^ffffffff801040c5:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801040c7	obj/kern/kernel.asm	/^ffffffff801040c7:	78 5f                	js     ffffffff80104128 <create+0x13b>$/;"	l
ffffffff801040c9	obj/kern/kernel.asm	/^ffffffff801040c9:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801040cc	obj/kern/kernel.asm	/^ffffffff801040cc:	e8 da 17 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff801040d1	obj/kern/kernel.asm	/^ffffffff801040d1:	eb 95                	jmp    ffffffff80104068 <create+0x7b>$/;"	l
ffffffff801040d3	obj/kern/kernel.asm	/^ffffffff801040d3:	48 c7 c7 ac 75 10 80 	mov    $0xffffffff801075ac,%rdi$/;"	l
ffffffff801040da	obj/kern/kernel.asm	/^ffffffff801040da:	e8 44 c5 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801040df	obj/kern/kernel.asm	/^ffffffff801040df:	66 41 83 44 24 4a 01 	addw   $0x1,0x4a(%r12)$/;"	l
ffffffff801040e6	obj/kern/kernel.asm	/^ffffffff801040e6:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801040e9	obj/kern/kernel.asm	/^ffffffff801040e9:	e8 d1 14 00 00       	callq  ffffffff801055bf <iupdate>$/;"	l
ffffffff801040ee	obj/kern/kernel.asm	/^ffffffff801040ee:	8b 53 04             	mov    0x4(%rbx),%edx$/;"	l
ffffffff801040f1	obj/kern/kernel.asm	/^ffffffff801040f1:	48 c7 c6 bc 75 10 80 	mov    $0xffffffff801075bc,%rsi$/;"	l
ffffffff801040f8	obj/kern/kernel.asm	/^ffffffff801040f8:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801040fb	obj/kern/kernel.asm	/^ffffffff801040fb:	e8 79 1c 00 00       	callq  ffffffff80105d79 <dirlink>$/;"	l
ffffffff80104100	obj/kern/kernel.asm	/^ffffffff80104100:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104102	obj/kern/kernel.asm	/^ffffffff80104102:	78 18                	js     ffffffff8010411c <create+0x12f>$/;"	l
ffffffff80104104	obj/kern/kernel.asm	/^ffffffff80104104:	41 8b 54 24 04       	mov    0x4(%r12),%edx$/;"	l
ffffffff80104109	obj/kern/kernel.asm	/^ffffffff80104109:	48 c7 c6 bb 75 10 80 	mov    $0xffffffff801075bb,%rsi$/;"	l
ffffffff80104110	obj/kern/kernel.asm	/^ffffffff80104110:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104113	obj/kern/kernel.asm	/^ffffffff80104113:	e8 61 1c 00 00       	callq  ffffffff80105d79 <dirlink>$/;"	l
ffffffff80104118	obj/kern/kernel.asm	/^ffffffff80104118:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010411a	obj/kern/kernel.asm	/^ffffffff8010411a:	79 9a                	jns    ffffffff801040b6 <create+0xc9>$/;"	l
ffffffff8010411c	obj/kern/kernel.asm	/^ffffffff8010411c:	48 c7 c7 be 75 10 80 	mov    $0xffffffff801075be,%rdi$/;"	l
ffffffff80104123	obj/kern/kernel.asm	/^ffffffff80104123:	e8 fb c4 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80104128	obj/kern/kernel.asm	/^ffffffff80104128:	48 c7 c7 ca 75 10 80 	mov    $0xffffffff801075ca,%rdi$/;"	l
ffffffff8010412f	obj/kern/kernel.asm	/^ffffffff8010412f:	e8 ef c4 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80104134	obj/kern/kernel.asm	/^ffffffff80104134:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80104137	obj/kern/kernel.asm	/^ffffffff80104137:	e9 2c ff ff ff       	jmpq   ffffffff80104068 <create+0x7b>$/;"	l
ffffffff8010413c	obj/kern/kernel.asm	/^ffffffff8010413c <sys_dup>:$/;"	l
ffffffff8010413c	obj/kern/kernel.asm	/^ffffffff8010413c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104140	obj/kern/kernel.asm	/^ffffffff80104140:	55                   	push   %rbp$/;"	l
ffffffff80104141	obj/kern/kernel.asm	/^ffffffff80104141:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104144	obj/kern/kernel.asm	/^ffffffff80104144:	53                   	push   %rbx$/;"	l
ffffffff80104145	obj/kern/kernel.asm	/^ffffffff80104145:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80104149	obj/kern/kernel.asm	/^ffffffff80104149:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx$/;"	l
ffffffff8010414d	obj/kern/kernel.asm	/^ffffffff8010414d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80104152	obj/kern/kernel.asm	/^ffffffff80104152:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff80104157	obj/kern/kernel.asm	/^ffffffff80104157:	e8 df fd ff ff       	callq  ffffffff80103f3b <argfd>$/;"	l
ffffffff8010415c	obj/kern/kernel.asm	/^ffffffff8010415c:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010415e	obj/kern/kernel.asm	/^ffffffff8010415e:	78 21                	js     ffffffff80104181 <sys_dup+0x45>$/;"	l
ffffffff80104160	obj/kern/kernel.asm	/^ffffffff80104160:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi$/;"	l
ffffffff80104164	obj/kern/kernel.asm	/^ffffffff80104164:	e8 42 fe ff ff       	callq  ffffffff80103fab <fdalloc>$/;"	l
ffffffff80104169	obj/kern/kernel.asm	/^ffffffff80104169:	89 c3                	mov    %eax,%ebx$/;"	l
ffffffff8010416b	obj/kern/kernel.asm	/^ffffffff8010416b:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010416d	obj/kern/kernel.asm	/^ffffffff8010416d:	78 19                	js     ffffffff80104188 <sys_dup+0x4c>$/;"	l
ffffffff8010416f	obj/kern/kernel.asm	/^ffffffff8010416f:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi$/;"	l
ffffffff80104173	obj/kern/kernel.asm	/^ffffffff80104173:	e8 6d 21 00 00       	callq  ffffffff801062e5 <filedup>$/;"	l
ffffffff80104178	obj/kern/kernel.asm	/^ffffffff80104178:	89 d8                	mov    %ebx,%eax$/;"	l
ffffffff8010417a	obj/kern/kernel.asm	/^ffffffff8010417a:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff8010417e	obj/kern/kernel.asm	/^ffffffff8010417e:	5b                   	pop    %rbx$/;"	l
ffffffff8010417f	obj/kern/kernel.asm	/^ffffffff8010417f:	5d                   	pop    %rbp$/;"	l
ffffffff80104180	obj/kern/kernel.asm	/^ffffffff80104180:	c3                   	retq   $/;"	l
ffffffff80104181	obj/kern/kernel.asm	/^ffffffff80104181:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
ffffffff80104186	obj/kern/kernel.asm	/^ffffffff80104186:	eb f0                	jmp    ffffffff80104178 <sys_dup+0x3c>$/;"	l
ffffffff80104188	obj/kern/kernel.asm	/^ffffffff80104188:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
ffffffff8010418d	obj/kern/kernel.asm	/^ffffffff8010418d:	eb e9                	jmp    ffffffff80104178 <sys_dup+0x3c>$/;"	l
ffffffff8010418f	obj/kern/kernel.asm	/^ffffffff8010418f <sys_read>:$/;"	l
ffffffff8010418f	obj/kern/kernel.asm	/^ffffffff8010418f:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104193	obj/kern/kernel.asm	/^ffffffff80104193:	55                   	push   %rbp$/;"	l
ffffffff80104194	obj/kern/kernel.asm	/^ffffffff80104194:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104197	obj/kern/kernel.asm	/^ffffffff80104197:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffffffff8010419b	obj/kern/kernel.asm	/^ffffffff8010419b:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx$/;"	l
ffffffff8010419f	obj/kern/kernel.asm	/^ffffffff8010419f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff801041a4	obj/kern/kernel.asm	/^ffffffff801041a4:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff801041a9	obj/kern/kernel.asm	/^ffffffff801041a9:	e8 8d fd ff ff       	callq  ffffffff80103f3b <argfd>$/;"	l
ffffffff801041ae	obj/kern/kernel.asm	/^ffffffff801041ae:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801041b0	obj/kern/kernel.asm	/^ffffffff801041b0:	78 39                	js     ffffffff801041eb <sys_read+0x5c>$/;"	l
ffffffff801041b2	obj/kern/kernel.asm	/^ffffffff801041b2:	48 8d 75 f4          	lea    -0xc(%rbp),%rsi$/;"	l
ffffffff801041b6	obj/kern/kernel.asm	/^ffffffff801041b6:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffffffff801041bb	obj/kern/kernel.asm	/^ffffffff801041bb:	e8 ee e7 ff ff       	callq  ffffffff801029ae <argint>$/;"	l
ffffffff801041c0	obj/kern/kernel.asm	/^ffffffff801041c0:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801041c2	obj/kern/kernel.asm	/^ffffffff801041c2:	78 2e                	js     ffffffff801041f2 <sys_read+0x63>$/;"	l
ffffffff801041c4	obj/kern/kernel.asm	/^ffffffff801041c4:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffffffff801041c7	obj/kern/kernel.asm	/^ffffffff801041c7:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi$/;"	l
ffffffff801041cb	obj/kern/kernel.asm	/^ffffffff801041cb:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff801041d0	obj/kern/kernel.asm	/^ffffffff801041d0:	e8 0f e8 ff ff       	callq  ffffffff801029e4 <argptr>$/;"	l
ffffffff801041d5	obj/kern/kernel.asm	/^ffffffff801041d5:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801041d7	obj/kern/kernel.asm	/^ffffffff801041d7:	78 20                	js     ffffffff801041f9 <sys_read+0x6a>$/;"	l
ffffffff801041d9	obj/kern/kernel.asm	/^ffffffff801041d9:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffffffff801041dc	obj/kern/kernel.asm	/^ffffffff801041dc:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi$/;"	l
ffffffff801041e0	obj/kern/kernel.asm	/^ffffffff801041e0:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi$/;"	l
ffffffff801041e4	obj/kern/kernel.asm	/^ffffffff801041e4:	e8 48 22 00 00       	callq  ffffffff80106431 <fileread>$/;"	l
ffffffff801041e9	obj/kern/kernel.asm	/^ffffffff801041e9:	c9                   	leaveq $/;"	l
ffffffff801041ea	obj/kern/kernel.asm	/^ffffffff801041ea:	c3                   	retq   $/;"	l
ffffffff801041eb	obj/kern/kernel.asm	/^ffffffff801041eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801041f0	obj/kern/kernel.asm	/^ffffffff801041f0:	eb f7                	jmp    ffffffff801041e9 <sys_read+0x5a>$/;"	l
ffffffff801041f2	obj/kern/kernel.asm	/^ffffffff801041f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801041f7	obj/kern/kernel.asm	/^ffffffff801041f7:	eb f0                	jmp    ffffffff801041e9 <sys_read+0x5a>$/;"	l
ffffffff801041f9	obj/kern/kernel.asm	/^ffffffff801041f9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801041fe	obj/kern/kernel.asm	/^ffffffff801041fe:	eb e9                	jmp    ffffffff801041e9 <sys_read+0x5a>$/;"	l
ffffffff80104200	obj/kern/kernel.asm	/^ffffffff80104200 <sys_write>:$/;"	l
ffffffff80104200	obj/kern/kernel.asm	/^ffffffff80104200:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104204	obj/kern/kernel.asm	/^ffffffff80104204:	55                   	push   %rbp$/;"	l
ffffffff80104205	obj/kern/kernel.asm	/^ffffffff80104205:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104208	obj/kern/kernel.asm	/^ffffffff80104208:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffffffff8010420c	obj/kern/kernel.asm	/^ffffffff8010420c:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx$/;"	l
ffffffff80104210	obj/kern/kernel.asm	/^ffffffff80104210:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80104215	obj/kern/kernel.asm	/^ffffffff80104215:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff8010421a	obj/kern/kernel.asm	/^ffffffff8010421a:	e8 1c fd ff ff       	callq  ffffffff80103f3b <argfd>$/;"	l
ffffffff8010421f	obj/kern/kernel.asm	/^ffffffff8010421f:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104221	obj/kern/kernel.asm	/^ffffffff80104221:	78 39                	js     ffffffff8010425c <sys_write+0x5c>$/;"	l
ffffffff80104223	obj/kern/kernel.asm	/^ffffffff80104223:	48 8d 75 f4          	lea    -0xc(%rbp),%rsi$/;"	l
ffffffff80104227	obj/kern/kernel.asm	/^ffffffff80104227:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffffffff8010422c	obj/kern/kernel.asm	/^ffffffff8010422c:	e8 7d e7 ff ff       	callq  ffffffff801029ae <argint>$/;"	l
ffffffff80104231	obj/kern/kernel.asm	/^ffffffff80104231:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104233	obj/kern/kernel.asm	/^ffffffff80104233:	78 2e                	js     ffffffff80104263 <sys_write+0x63>$/;"	l
ffffffff80104235	obj/kern/kernel.asm	/^ffffffff80104235:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffffffff80104238	obj/kern/kernel.asm	/^ffffffff80104238:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi$/;"	l
ffffffff8010423c	obj/kern/kernel.asm	/^ffffffff8010423c:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff80104241	obj/kern/kernel.asm	/^ffffffff80104241:	e8 9e e7 ff ff       	callq  ffffffff801029e4 <argptr>$/;"	l
ffffffff80104246	obj/kern/kernel.asm	/^ffffffff80104246:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104248	obj/kern/kernel.asm	/^ffffffff80104248:	78 20                	js     ffffffff8010426a <sys_write+0x6a>$/;"	l
ffffffff8010424a	obj/kern/kernel.asm	/^ffffffff8010424a:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffffffff8010424d	obj/kern/kernel.asm	/^ffffffff8010424d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi$/;"	l
ffffffff80104251	obj/kern/kernel.asm	/^ffffffff80104251:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi$/;"	l
ffffffff80104255	obj/kern/kernel.asm	/^ffffffff80104255:	e8 61 22 00 00       	callq  ffffffff801064bb <filewrite>$/;"	l
ffffffff8010425a	obj/kern/kernel.asm	/^ffffffff8010425a:	c9                   	leaveq $/;"	l
ffffffff8010425b	obj/kern/kernel.asm	/^ffffffff8010425b:	c3                   	retq   $/;"	l
ffffffff8010425c	obj/kern/kernel.asm	/^ffffffff8010425c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104261	obj/kern/kernel.asm	/^ffffffff80104261:	eb f7                	jmp    ffffffff8010425a <sys_write+0x5a>$/;"	l
ffffffff80104263	obj/kern/kernel.asm	/^ffffffff80104263:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104268	obj/kern/kernel.asm	/^ffffffff80104268:	eb f0                	jmp    ffffffff8010425a <sys_write+0x5a>$/;"	l
ffffffff8010426a	obj/kern/kernel.asm	/^ffffffff8010426a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff8010426f	obj/kern/kernel.asm	/^ffffffff8010426f:	eb e9                	jmp    ffffffff8010425a <sys_write+0x5a>$/;"	l
ffffffff80104271	obj/kern/kernel.asm	/^ffffffff80104271 <sys_close>:$/;"	l
ffffffff80104271	obj/kern/kernel.asm	/^ffffffff80104271:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104275	obj/kern/kernel.asm	/^ffffffff80104275:	55                   	push   %rbp$/;"	l
ffffffff80104276	obj/kern/kernel.asm	/^ffffffff80104276:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104279	obj/kern/kernel.asm	/^ffffffff80104279:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff8010427d	obj/kern/kernel.asm	/^ffffffff8010427d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ffffffff80104281	obj/kern/kernel.asm	/^ffffffff80104281:	48 8d 75 fc          	lea    -0x4(%rbp),%rsi$/;"	l
ffffffff80104285	obj/kern/kernel.asm	/^ffffffff80104285:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff8010428a	obj/kern/kernel.asm	/^ffffffff8010428a:	e8 ac fc ff ff       	callq  ffffffff80103f3b <argfd>$/;"	l
ffffffff8010428f	obj/kern/kernel.asm	/^ffffffff8010428f:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104291	obj/kern/kernel.asm	/^ffffffff80104291:	78 22                	js     ffffffff801042b5 <sys_close+0x44>$/;"	l
ffffffff80104293	obj/kern/kernel.asm	/^ffffffff80104293:	e8 58 ce ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80104298	obj/kern/kernel.asm	/^ffffffff80104298:	48 63 55 fc          	movslq -0x4(%rbp),%rdx$/;"	l
ffffffff8010429c	obj/kern/kernel.asm	/^ffffffff8010429c:	48 c7 44 d0 48 00 00 	movq   $0x0,0x48(%rax,%rdx,8)$/;"	l
ffffffff801042a3	obj/kern/kernel.asm	/^ffffffff801042a3:	00 00 $/;"	l
ffffffff801042a5	obj/kern/kernel.asm	/^ffffffff801042a5:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi$/;"	l
ffffffff801042a9	obj/kern/kernel.asm	/^ffffffff801042a9:	e8 82 20 00 00       	callq  ffffffff80106330 <fileclose>$/;"	l
ffffffff801042ae	obj/kern/kernel.asm	/^ffffffff801042ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801042b3	obj/kern/kernel.asm	/^ffffffff801042b3:	c9                   	leaveq $/;"	l
ffffffff801042b4	obj/kern/kernel.asm	/^ffffffff801042b4:	c3                   	retq   $/;"	l
ffffffff801042b5	obj/kern/kernel.asm	/^ffffffff801042b5:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff801042bc	obj/kern/kernel.asm	/^ffffffff801042bc:	eb f5                	jmp    ffffffff801042b3 <sys_close+0x42>$/;"	l
ffffffff801042be	obj/kern/kernel.asm	/^ffffffff801042be <sys_fstat>:$/;"	l
ffffffff801042be	obj/kern/kernel.asm	/^ffffffff801042be:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801042c2	obj/kern/kernel.asm	/^ffffffff801042c2:	55                   	push   %rbp$/;"	l
ffffffff801042c3	obj/kern/kernel.asm	/^ffffffff801042c3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801042c6	obj/kern/kernel.asm	/^ffffffff801042c6:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff801042ca	obj/kern/kernel.asm	/^ffffffff801042ca:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx$/;"	l
ffffffff801042ce	obj/kern/kernel.asm	/^ffffffff801042ce:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff801042d3	obj/kern/kernel.asm	/^ffffffff801042d3:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff801042d8	obj/kern/kernel.asm	/^ffffffff801042d8:	e8 5e fc ff ff       	callq  ffffffff80103f3b <argfd>$/;"	l
ffffffff801042dd	obj/kern/kernel.asm	/^ffffffff801042dd:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801042df	obj/kern/kernel.asm	/^ffffffff801042df:	78 26                	js     ffffffff80104307 <sys_fstat+0x49>$/;"	l
ffffffff801042e1	obj/kern/kernel.asm	/^ffffffff801042e1:	ba 14 00 00 00       	mov    $0x14,%edx$/;"	l
ffffffff801042e6	obj/kern/kernel.asm	/^ffffffff801042e6:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi$/;"	l
ffffffff801042ea	obj/kern/kernel.asm	/^ffffffff801042ea:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff801042ef	obj/kern/kernel.asm	/^ffffffff801042ef:	e8 f0 e6 ff ff       	callq  ffffffff801029e4 <argptr>$/;"	l
ffffffff801042f4	obj/kern/kernel.asm	/^ffffffff801042f4:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801042f6	obj/kern/kernel.asm	/^ffffffff801042f6:	78 16                	js     ffffffff8010430e <sys_fstat+0x50>$/;"	l
ffffffff801042f8	obj/kern/kernel.asm	/^ffffffff801042f8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
ffffffff801042fc	obj/kern/kernel.asm	/^ffffffff801042fc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi$/;"	l
ffffffff80104300	obj/kern/kernel.asm	/^ffffffff80104300:	e8 e8 20 00 00       	callq  ffffffff801063ed <filestat>$/;"	l
ffffffff80104305	obj/kern/kernel.asm	/^ffffffff80104305:	c9                   	leaveq $/;"	l
ffffffff80104306	obj/kern/kernel.asm	/^ffffffff80104306:	c3                   	retq   $/;"	l
ffffffff80104307	obj/kern/kernel.asm	/^ffffffff80104307:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff8010430c	obj/kern/kernel.asm	/^ffffffff8010430c:	eb f7                	jmp    ffffffff80104305 <sys_fstat+0x47>$/;"	l
ffffffff8010430e	obj/kern/kernel.asm	/^ffffffff8010430e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104313	obj/kern/kernel.asm	/^ffffffff80104313:	eb f0                	jmp    ffffffff80104305 <sys_fstat+0x47>$/;"	l
ffffffff80104315	obj/kern/kernel.asm	/^ffffffff80104315 <sys_link>:$/;"	l
ffffffff80104315	obj/kern/kernel.asm	/^ffffffff80104315:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104319	obj/kern/kernel.asm	/^ffffffff80104319:	55                   	push   %rbp$/;"	l
ffffffff8010431a	obj/kern/kernel.asm	/^ffffffff8010431a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010431d	obj/kern/kernel.asm	/^ffffffff8010431d:	41 54                	push   %r12$/;"	l
ffffffff8010431f	obj/kern/kernel.asm	/^ffffffff8010431f:	53                   	push   %rbx$/;"	l
ffffffff80104320	obj/kern/kernel.asm	/^ffffffff80104320:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffffffff80104324	obj/kern/kernel.asm	/^ffffffff80104324:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi$/;"	l
ffffffff80104328	obj/kern/kernel.asm	/^ffffffff80104328:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff8010432d	obj/kern/kernel.asm	/^ffffffff8010432d:	e8 2b e7 ff ff       	callq  ffffffff80102a5d <argstr>$/;"	l
ffffffff80104332	obj/kern/kernel.asm	/^ffffffff80104332:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104334	obj/kern/kernel.asm	/^ffffffff80104334:	0f 88 1d 01 00 00    	js     ffffffff80104457 <sys_link+0x142>$/;"	l
ffffffff8010433a	obj/kern/kernel.asm	/^ffffffff8010433a:	48 8d 75 d8          	lea    -0x28(%rbp),%rsi$/;"	l
ffffffff8010433e	obj/kern/kernel.asm	/^ffffffff8010433e:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff80104343	obj/kern/kernel.asm	/^ffffffff80104343:	e8 15 e7 ff ff       	callq  ffffffff80102a5d <argstr>$/;"	l
ffffffff80104348	obj/kern/kernel.asm	/^ffffffff80104348:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010434a	obj/kern/kernel.asm	/^ffffffff8010434a:	0f 88 0e 01 00 00    	js     ffffffff8010445e <sys_link+0x149>$/;"	l
ffffffff80104350	obj/kern/kernel.asm	/^ffffffff80104350:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104355	obj/kern/kernel.asm	/^ffffffff80104355:	e8 9f 1c 00 00       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff8010435a	obj/kern/kernel.asm	/^ffffffff8010435a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi$/;"	l
ffffffff8010435e	obj/kern/kernel.asm	/^ffffffff8010435e:	e8 df 1a 00 00       	callq  ffffffff80105e42 <namei>$/;"	l
ffffffff80104363	obj/kern/kernel.asm	/^ffffffff80104363:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80104366	obj/kern/kernel.asm	/^ffffffff80104366:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80104369	obj/kern/kernel.asm	/^ffffffff80104369:	0f 84 88 00 00 00    	je     ffffffff801043f7 <sys_link+0xe2>$/;"	l
ffffffff8010436f	obj/kern/kernel.asm	/^ffffffff8010436f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80104372	obj/kern/kernel.asm	/^ffffffff80104372:	e8 fd 12 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80104377	obj/kern/kernel.asm	/^ffffffff80104377:	66 83 7b 44 01       	cmpw   $0x1,0x44(%rbx)$/;"	l
ffffffff8010437c	obj/kern/kernel.asm	/^ffffffff8010437c:	0f 84 86 00 00 00    	je     ffffffff80104408 <sys_link+0xf3>$/;"	l
ffffffff80104382	obj/kern/kernel.asm	/^ffffffff80104382:	66 83 43 4a 01       	addw   $0x1,0x4a(%rbx)$/;"	l
ffffffff80104387	obj/kern/kernel.asm	/^ffffffff80104387:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010438a	obj/kern/kernel.asm	/^ffffffff8010438a:	e8 30 12 00 00       	callq  ffffffff801055bf <iupdate>$/;"	l
ffffffff8010438f	obj/kern/kernel.asm	/^ffffffff8010438f:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104392	obj/kern/kernel.asm	/^ffffffff80104392:	e8 98 13 00 00       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff80104397	obj/kern/kernel.asm	/^ffffffff80104397:	48 8d 75 e2          	lea    -0x1e(%rbp),%rsi$/;"	l
ffffffff8010439b	obj/kern/kernel.asm	/^ffffffff8010439b:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffffffff8010439f	obj/kern/kernel.asm	/^ffffffff8010439f:	e8 ba 1a 00 00       	callq  ffffffff80105e5e <nameiparent>$/;"	l
ffffffff801043a4	obj/kern/kernel.asm	/^ffffffff801043a4:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801043a7	obj/kern/kernel.asm	/^ffffffff801043a7:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801043aa	obj/kern/kernel.asm	/^ffffffff801043aa:	74 7d                	je     ffffffff80104429 <sys_link+0x114>$/;"	l
ffffffff801043ac	obj/kern/kernel.asm	/^ffffffff801043ac:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff801043af	obj/kern/kernel.asm	/^ffffffff801043af:	e8 c0 12 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff801043b4	obj/kern/kernel.asm	/^ffffffff801043b4:	8b 03                	mov    (%rbx),%eax$/;"	l
ffffffff801043b6	obj/kern/kernel.asm	/^ffffffff801043b6:	41 39 04 24          	cmp    %eax,(%r12)$/;"	l
ffffffff801043ba	obj/kern/kernel.asm	/^ffffffff801043ba:	75 65                	jne    ffffffff80104421 <sys_link+0x10c>$/;"	l
ffffffff801043bc	obj/kern/kernel.asm	/^ffffffff801043bc:	8b 53 04             	mov    0x4(%rbx),%edx$/;"	l
ffffffff801043bf	obj/kern/kernel.asm	/^ffffffff801043bf:	48 8d 75 e2          	lea    -0x1e(%rbp),%rsi$/;"	l
ffffffff801043c3	obj/kern/kernel.asm	/^ffffffff801043c3:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801043c6	obj/kern/kernel.asm	/^ffffffff801043c6:	e8 ae 19 00 00       	callq  ffffffff80105d79 <dirlink>$/;"	l
ffffffff801043cb	obj/kern/kernel.asm	/^ffffffff801043cb:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801043cd	obj/kern/kernel.asm	/^ffffffff801043cd:	78 52                	js     ffffffff80104421 <sys_link+0x10c>$/;"	l
ffffffff801043cf	obj/kern/kernel.asm	/^ffffffff801043cf:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801043d2	obj/kern/kernel.asm	/^ffffffff801043d2:	e8 d4 14 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff801043d7	obj/kern/kernel.asm	/^ffffffff801043d7:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801043da	obj/kern/kernel.asm	/^ffffffff801043da:	e8 92 13 00 00       	callq  ffffffff80105771 <iput>$/;"	l
ffffffff801043df	obj/kern/kernel.asm	/^ffffffff801043df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801043e4	obj/kern/kernel.asm	/^ffffffff801043e4:	e8 7d 1c 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff801043e9	obj/kern/kernel.asm	/^ffffffff801043e9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801043ee	obj/kern/kernel.asm	/^ffffffff801043ee:	48 83 c4 20          	add    $0x20,%rsp$/;"	l
ffffffff801043f2	obj/kern/kernel.asm	/^ffffffff801043f2:	5b                   	pop    %rbx$/;"	l
ffffffff801043f3	obj/kern/kernel.asm	/^ffffffff801043f3:	41 5c                	pop    %r12$/;"	l
ffffffff801043f5	obj/kern/kernel.asm	/^ffffffff801043f5:	5d                   	pop    %rbp$/;"	l
ffffffff801043f6	obj/kern/kernel.asm	/^ffffffff801043f6:	c3                   	retq   $/;"	l
ffffffff801043f7	obj/kern/kernel.asm	/^ffffffff801043f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801043fc	obj/kern/kernel.asm	/^ffffffff801043fc:	e8 65 1c 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80104401	obj/kern/kernel.asm	/^ffffffff80104401:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104406	obj/kern/kernel.asm	/^ffffffff80104406:	eb e6                	jmp    ffffffff801043ee <sys_link+0xd9>$/;"	l
ffffffff80104408	obj/kern/kernel.asm	/^ffffffff80104408:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010440b	obj/kern/kernel.asm	/^ffffffff8010440b:	e8 9b 14 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104410	obj/kern/kernel.asm	/^ffffffff80104410:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104415	obj/kern/kernel.asm	/^ffffffff80104415:	e8 4c 1c 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff8010441a	obj/kern/kernel.asm	/^ffffffff8010441a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff8010441f	obj/kern/kernel.asm	/^ffffffff8010441f:	eb cd                	jmp    ffffffff801043ee <sys_link+0xd9>$/;"	l
ffffffff80104421	obj/kern/kernel.asm	/^ffffffff80104421:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104424	obj/kern/kernel.asm	/^ffffffff80104424:	e8 82 14 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104429	obj/kern/kernel.asm	/^ffffffff80104429:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010442c	obj/kern/kernel.asm	/^ffffffff8010442c:	e8 43 12 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80104431	obj/kern/kernel.asm	/^ffffffff80104431:	66 83 6b 4a 01       	subw   $0x1,0x4a(%rbx)$/;"	l
ffffffff80104436	obj/kern/kernel.asm	/^ffffffff80104436:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104439	obj/kern/kernel.asm	/^ffffffff80104439:	e8 81 11 00 00       	callq  ffffffff801055bf <iupdate>$/;"	l
ffffffff8010443e	obj/kern/kernel.asm	/^ffffffff8010443e:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104441	obj/kern/kernel.asm	/^ffffffff80104441:	e8 65 14 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104446	obj/kern/kernel.asm	/^ffffffff80104446:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010444b	obj/kern/kernel.asm	/^ffffffff8010444b:	e8 16 1c 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80104450	obj/kern/kernel.asm	/^ffffffff80104450:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104455	obj/kern/kernel.asm	/^ffffffff80104455:	eb 97                	jmp    ffffffff801043ee <sys_link+0xd9>$/;"	l
ffffffff80104457	obj/kern/kernel.asm	/^ffffffff80104457:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff8010445c	obj/kern/kernel.asm	/^ffffffff8010445c:	eb 90                	jmp    ffffffff801043ee <sys_link+0xd9>$/;"	l
ffffffff8010445e	obj/kern/kernel.asm	/^ffffffff8010445e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104463	obj/kern/kernel.asm	/^ffffffff80104463:	eb 89                	jmp    ffffffff801043ee <sys_link+0xd9>$/;"	l
ffffffff80104465	obj/kern/kernel.asm	/^ffffffff80104465 <sys_unlink>:$/;"	l
ffffffff80104465	obj/kern/kernel.asm	/^ffffffff80104465:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104469	obj/kern/kernel.asm	/^ffffffff80104469:	55                   	push   %rbp$/;"	l
ffffffff8010446a	obj/kern/kernel.asm	/^ffffffff8010446a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010446d	obj/kern/kernel.asm	/^ffffffff8010446d:	41 55                	push   %r13$/;"	l
ffffffff8010446f	obj/kern/kernel.asm	/^ffffffff8010446f:	41 54                	push   %r12$/;"	l
ffffffff80104471	obj/kern/kernel.asm	/^ffffffff80104471:	53                   	push   %rbx$/;"	l
ffffffff80104472	obj/kern/kernel.asm	/^ffffffff80104472:	48 83 ec 48          	sub    $0x48,%rsp$/;"	l
ffffffff80104476	obj/kern/kernel.asm	/^ffffffff80104476:	48 8d 75 b8          	lea    -0x48(%rbp),%rsi$/;"	l
ffffffff8010447a	obj/kern/kernel.asm	/^ffffffff8010447a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff8010447f	obj/kern/kernel.asm	/^ffffffff8010447f:	e8 d9 e5 ff ff       	callq  ffffffff80102a5d <argstr>$/;"	l
ffffffff80104484	obj/kern/kernel.asm	/^ffffffff80104484:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104486	obj/kern/kernel.asm	/^ffffffff80104486:	0f 88 8f 01 00 00    	js     ffffffff8010461b <sys_unlink+0x1b6>$/;"	l
ffffffff8010448c	obj/kern/kernel.asm	/^ffffffff8010448c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104491	obj/kern/kernel.asm	/^ffffffff80104491:	e8 63 1b 00 00       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff80104496	obj/kern/kernel.asm	/^ffffffff80104496:	48 8d 75 c2          	lea    -0x3e(%rbp),%rsi$/;"	l
ffffffff8010449a	obj/kern/kernel.asm	/^ffffffff8010449a:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi$/;"	l
ffffffff8010449e	obj/kern/kernel.asm	/^ffffffff8010449e:	e8 bb 19 00 00       	callq  ffffffff80105e5e <nameiparent>$/;"	l
ffffffff801044a3	obj/kern/kernel.asm	/^ffffffff801044a3:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801044a6	obj/kern/kernel.asm	/^ffffffff801044a6:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801044a9	obj/kern/kernel.asm	/^ffffffff801044a9:	0f 84 e4 00 00 00    	je     ffffffff80104593 <sys_unlink+0x12e>$/;"	l
ffffffff801044af	obj/kern/kernel.asm	/^ffffffff801044af:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff801044b2	obj/kern/kernel.asm	/^ffffffff801044b2:	e8 bd 11 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff801044b7	obj/kern/kernel.asm	/^ffffffff801044b7:	48 c7 c6 bc 75 10 80 	mov    $0xffffffff801075bc,%rsi$/;"	l
ffffffff801044be	obj/kern/kernel.asm	/^ffffffff801044be:	48 8d 7d c2          	lea    -0x3e(%rbp),%rdi$/;"	l
ffffffff801044c2	obj/kern/kernel.asm	/^ffffffff801044c2:	e8 76 16 00 00       	callq  ffffffff80105b3d <namecmp>$/;"	l
ffffffff801044c7	obj/kern/kernel.asm	/^ffffffff801044c7:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801044c9	obj/kern/kernel.asm	/^ffffffff801044c9:	0f 84 5e 01 00 00    	je     ffffffff8010462d <sys_unlink+0x1c8>$/;"	l
ffffffff801044cf	obj/kern/kernel.asm	/^ffffffff801044cf:	48 c7 c6 bb 75 10 80 	mov    $0xffffffff801075bb,%rsi$/;"	l
ffffffff801044d6	obj/kern/kernel.asm	/^ffffffff801044d6:	48 8d 7d c2          	lea    -0x3e(%rbp),%rdi$/;"	l
ffffffff801044da	obj/kern/kernel.asm	/^ffffffff801044da:	e8 5e 16 00 00       	callq  ffffffff80105b3d <namecmp>$/;"	l
ffffffff801044df	obj/kern/kernel.asm	/^ffffffff801044df:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801044e1	obj/kern/kernel.asm	/^ffffffff801044e1:	0f 84 46 01 00 00    	je     ffffffff8010462d <sys_unlink+0x1c8>$/;"	l
ffffffff801044e7	obj/kern/kernel.asm	/^ffffffff801044e7:	48 8d 55 b4          	lea    -0x4c(%rbp),%rdx$/;"	l
ffffffff801044eb	obj/kern/kernel.asm	/^ffffffff801044eb:	48 8d 75 c2          	lea    -0x3e(%rbp),%rsi$/;"	l
ffffffff801044ef	obj/kern/kernel.asm	/^ffffffff801044ef:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801044f2	obj/kern/kernel.asm	/^ffffffff801044f2:	e8 5a 16 00 00       	callq  ffffffff80105b51 <dirlookup>$/;"	l
ffffffff801044f7	obj/kern/kernel.asm	/^ffffffff801044f7:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff801044fa	obj/kern/kernel.asm	/^ffffffff801044fa:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801044fd	obj/kern/kernel.asm	/^ffffffff801044fd:	0f 84 2a 01 00 00    	je     ffffffff8010462d <sys_unlink+0x1c8>$/;"	l
ffffffff80104503	obj/kern/kernel.asm	/^ffffffff80104503:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80104506	obj/kern/kernel.asm	/^ffffffff80104506:	e8 69 11 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff8010450b	obj/kern/kernel.asm	/^ffffffff8010450b:	66 83 7b 4a 00       	cmpw   $0x0,0x4a(%rbx)$/;"	l
ffffffff80104510	obj/kern/kernel.asm	/^ffffffff80104510:	0f 8e 8e 00 00 00    	jle    ffffffff801045a4 <sys_unlink+0x13f>$/;"	l
ffffffff80104516	obj/kern/kernel.asm	/^ffffffff80104516:	66 83 7b 44 01       	cmpw   $0x1,0x44(%rbx)$/;"	l
ffffffff8010451b	obj/kern/kernel.asm	/^ffffffff8010451b:	0f 84 8f 00 00 00    	je     ffffffff801045b0 <sys_unlink+0x14b>$/;"	l
ffffffff80104521	obj/kern/kernel.asm	/^ffffffff80104521:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffffffff80104526	obj/kern/kernel.asm	/^ffffffff80104526:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff8010452b	obj/kern/kernel.asm	/^ffffffff8010452b:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi$/;"	l
ffffffff8010452f	obj/kern/kernel.asm	/^ffffffff8010452f:	e8 41 24 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff80104534	obj/kern/kernel.asm	/^ffffffff80104534:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffffffff80104539	obj/kern/kernel.asm	/^ffffffff80104539:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
ffffffff8010453c	obj/kern/kernel.asm	/^ffffffff8010453c:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi$/;"	l
ffffffff80104540	obj/kern/kernel.asm	/^ffffffff80104540:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104543	obj/kern/kernel.asm	/^ffffffff80104543:	e8 c4 14 00 00       	callq  ffffffff80105a0c <writei>$/;"	l
ffffffff80104548	obj/kern/kernel.asm	/^ffffffff80104548:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffffffff8010454b	obj/kern/kernel.asm	/^ffffffff8010454b:	0f 85 aa 00 00 00    	jne    ffffffff801045fb <sys_unlink+0x196>$/;"	l
ffffffff80104551	obj/kern/kernel.asm	/^ffffffff80104551:	66 83 7b 44 01       	cmpw   $0x1,0x44(%rbx)$/;"	l
ffffffff80104556	obj/kern/kernel.asm	/^ffffffff80104556:	0f 84 ab 00 00 00    	je     ffffffff80104607 <sys_unlink+0x1a2>$/;"	l
ffffffff8010455c	obj/kern/kernel.asm	/^ffffffff8010455c:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff8010455f	obj/kern/kernel.asm	/^ffffffff8010455f:	e8 47 13 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104564	obj/kern/kernel.asm	/^ffffffff80104564:	66 83 6b 4a 01       	subw   $0x1,0x4a(%rbx)$/;"	l
ffffffff80104569	obj/kern/kernel.asm	/^ffffffff80104569:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010456c	obj/kern/kernel.asm	/^ffffffff8010456c:	e8 4e 10 00 00       	callq  ffffffff801055bf <iupdate>$/;"	l
ffffffff80104571	obj/kern/kernel.asm	/^ffffffff80104571:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104574	obj/kern/kernel.asm	/^ffffffff80104574:	e8 32 13 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104579	obj/kern/kernel.asm	/^ffffffff80104579:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010457e	obj/kern/kernel.asm	/^ffffffff8010457e:	e8 e3 1a 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80104583	obj/kern/kernel.asm	/^ffffffff80104583:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104588	obj/kern/kernel.asm	/^ffffffff80104588:	48 83 c4 48          	add    $0x48,%rsp$/;"	l
ffffffff8010458c	obj/kern/kernel.asm	/^ffffffff8010458c:	5b                   	pop    %rbx$/;"	l
ffffffff8010458d	obj/kern/kernel.asm	/^ffffffff8010458d:	41 5c                	pop    %r12$/;"	l
ffffffff8010458f	obj/kern/kernel.asm	/^ffffffff8010458f:	41 5d                	pop    %r13$/;"	l
ffffffff80104591	obj/kern/kernel.asm	/^ffffffff80104591:	5d                   	pop    %rbp$/;"	l
ffffffff80104592	obj/kern/kernel.asm	/^ffffffff80104592:	c3                   	retq   $/;"	l
ffffffff80104593	obj/kern/kernel.asm	/^ffffffff80104593:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104598	obj/kern/kernel.asm	/^ffffffff80104598:	e8 c9 1a 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff8010459d	obj/kern/kernel.asm	/^ffffffff8010459d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801045a2	obj/kern/kernel.asm	/^ffffffff801045a2:	eb e4                	jmp    ffffffff80104588 <sys_unlink+0x123>$/;"	l
ffffffff801045a4	obj/kern/kernel.asm	/^ffffffff801045a4:	48 c7 c7 da 75 10 80 	mov    $0xffffffff801075da,%rdi$/;"	l
ffffffff801045ab	obj/kern/kernel.asm	/^ffffffff801045ab:	e8 73 c0 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801045b0	obj/kern/kernel.asm	/^ffffffff801045b0:	83 7b 4c 20          	cmpl   $0x20,0x4c(%rbx)$/;"	l
ffffffff801045b4	obj/kern/kernel.asm	/^ffffffff801045b4:	0f 86 67 ff ff ff    	jbe    ffffffff80104521 <sys_unlink+0xbc>$/;"	l
ffffffff801045ba	obj/kern/kernel.asm	/^ffffffff801045ba:	41 bd 20 00 00 00    	mov    $0x20,%r13d$/;"	l
ffffffff801045c0	obj/kern/kernel.asm	/^ffffffff801045c0:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffffffff801045c5	obj/kern/kernel.asm	/^ffffffff801045c5:	44 89 ea             	mov    %r13d,%edx$/;"	l
ffffffff801045c8	obj/kern/kernel.asm	/^ffffffff801045c8:	48 8d 75 a4          	lea    -0x5c(%rbp),%rsi$/;"	l
ffffffff801045cc	obj/kern/kernel.asm	/^ffffffff801045cc:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801045cf	obj/kern/kernel.asm	/^ffffffff801045cf:	e8 20 13 00 00       	callq  ffffffff801058f4 <readi>$/;"	l
ffffffff801045d4	obj/kern/kernel.asm	/^ffffffff801045d4:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffffffff801045d7	obj/kern/kernel.asm	/^ffffffff801045d7:	75 16                	jne    ffffffff801045ef <sys_unlink+0x18a>$/;"	l
ffffffff801045d9	obj/kern/kernel.asm	/^ffffffff801045d9:	66 83 7d a4 00       	cmpw   $0x0,-0x5c(%rbp)$/;"	l
ffffffff801045de	obj/kern/kernel.asm	/^ffffffff801045de:	75 45                	jne    ffffffff80104625 <sys_unlink+0x1c0>$/;"	l
ffffffff801045e0	obj/kern/kernel.asm	/^ffffffff801045e0:	41 83 c5 10          	add    $0x10,%r13d$/;"	l
ffffffff801045e4	obj/kern/kernel.asm	/^ffffffff801045e4:	44 3b 6b 4c          	cmp    0x4c(%rbx),%r13d$/;"	l
ffffffff801045e8	obj/kern/kernel.asm	/^ffffffff801045e8:	72 d6                	jb     ffffffff801045c0 <sys_unlink+0x15b>$/;"	l
ffffffff801045ea	obj/kern/kernel.asm	/^ffffffff801045ea:	e9 32 ff ff ff       	jmpq   ffffffff80104521 <sys_unlink+0xbc>$/;"	l
ffffffff801045ef	obj/kern/kernel.asm	/^ffffffff801045ef:	48 c7 c7 ec 75 10 80 	mov    $0xffffffff801075ec,%rdi$/;"	l
ffffffff801045f6	obj/kern/kernel.asm	/^ffffffff801045f6:	e8 28 c0 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801045fb	obj/kern/kernel.asm	/^ffffffff801045fb:	48 c7 c7 fe 75 10 80 	mov    $0xffffffff801075fe,%rdi$/;"	l
ffffffff80104602	obj/kern/kernel.asm	/^ffffffff80104602:	e8 1c c0 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80104607	obj/kern/kernel.asm	/^ffffffff80104607:	66 41 83 6c 24 4a 01 	subw   $0x1,0x4a(%r12)$/;"	l
ffffffff8010460e	obj/kern/kernel.asm	/^ffffffff8010460e:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104611	obj/kern/kernel.asm	/^ffffffff80104611:	e8 a9 0f 00 00       	callq  ffffffff801055bf <iupdate>$/;"	l
ffffffff80104616	obj/kern/kernel.asm	/^ffffffff80104616:	e9 41 ff ff ff       	jmpq   ffffffff8010455c <sys_unlink+0xf7>$/;"	l
ffffffff8010461b	obj/kern/kernel.asm	/^ffffffff8010461b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104620	obj/kern/kernel.asm	/^ffffffff80104620:	e9 63 ff ff ff       	jmpq   ffffffff80104588 <sys_unlink+0x123>$/;"	l
ffffffff80104625	obj/kern/kernel.asm	/^ffffffff80104625:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104628	obj/kern/kernel.asm	/^ffffffff80104628:	e8 7e 12 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff8010462d	obj/kern/kernel.asm	/^ffffffff8010462d:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104630	obj/kern/kernel.asm	/^ffffffff80104630:	e8 76 12 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104635	obj/kern/kernel.asm	/^ffffffff80104635:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010463a	obj/kern/kernel.asm	/^ffffffff8010463a:	e8 27 1a 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff8010463f	obj/kern/kernel.asm	/^ffffffff8010463f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104644	obj/kern/kernel.asm	/^ffffffff80104644:	e9 3f ff ff ff       	jmpq   ffffffff80104588 <sys_unlink+0x123>$/;"	l
ffffffff80104649	obj/kern/kernel.asm	/^ffffffff80104649 <sys_open>:$/;"	l
ffffffff80104649	obj/kern/kernel.asm	/^ffffffff80104649:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010464d	obj/kern/kernel.asm	/^ffffffff8010464d:	55                   	push   %rbp$/;"	l
ffffffff8010464e	obj/kern/kernel.asm	/^ffffffff8010464e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104651	obj/kern/kernel.asm	/^ffffffff80104651:	41 56                	push   %r14$/;"	l
ffffffff80104653	obj/kern/kernel.asm	/^ffffffff80104653:	41 55                	push   %r13$/;"	l
ffffffff80104655	obj/kern/kernel.asm	/^ffffffff80104655:	41 54                	push   %r12$/;"	l
ffffffff80104657	obj/kern/kernel.asm	/^ffffffff80104657:	53                   	push   %rbx$/;"	l
ffffffff80104658	obj/kern/kernel.asm	/^ffffffff80104658:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff8010465c	obj/kern/kernel.asm	/^ffffffff8010465c:	48 8d 75 d8          	lea    -0x28(%rbp),%rsi$/;"	l
ffffffff80104660	obj/kern/kernel.asm	/^ffffffff80104660:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff80104665	obj/kern/kernel.asm	/^ffffffff80104665:	e8 f3 e3 ff ff       	callq  ffffffff80102a5d <argstr>$/;"	l
ffffffff8010466a	obj/kern/kernel.asm	/^ffffffff8010466a:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010466c	obj/kern/kernel.asm	/^ffffffff8010466c:	0f 88 34 01 00 00    	js     ffffffff801047a6 <sys_open+0x15d>$/;"	l
ffffffff80104672	obj/kern/kernel.asm	/^ffffffff80104672:	48 8d 75 d4          	lea    -0x2c(%rbp),%rsi$/;"	l
ffffffff80104676	obj/kern/kernel.asm	/^ffffffff80104676:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff8010467b	obj/kern/kernel.asm	/^ffffffff8010467b:	e8 2e e3 ff ff       	callq  ffffffff801029ae <argint>$/;"	l
ffffffff80104680	obj/kern/kernel.asm	/^ffffffff80104680:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104682	obj/kern/kernel.asm	/^ffffffff80104682:	0f 88 2a 01 00 00    	js     ffffffff801047b2 <sys_open+0x169>$/;"	l
ffffffff80104688	obj/kern/kernel.asm	/^ffffffff80104688:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010468d	obj/kern/kernel.asm	/^ffffffff8010468d:	e8 67 19 00 00       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff80104692	obj/kern/kernel.asm	/^ffffffff80104692:	f6 45 d5 02          	testb  $0x2,-0x2b(%rbp)$/;"	l
ffffffff80104696	obj/kern/kernel.asm	/^ffffffff80104696:	0f 84 ac 00 00 00    	je     ffffffff80104748 <sys_open+0xff>$/;"	l
ffffffff8010469c	obj/kern/kernel.asm	/^ffffffff8010469c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffffffff801046a1	obj/kern/kernel.asm	/^ffffffff801046a1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff801046a6	obj/kern/kernel.asm	/^ffffffff801046a6:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
ffffffff801046ab	obj/kern/kernel.asm	/^ffffffff801046ab:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffffffff801046af	obj/kern/kernel.asm	/^ffffffff801046af:	e8 39 f9 ff ff       	callq  ffffffff80103fed <create>$/;"	l
ffffffff801046b4	obj/kern/kernel.asm	/^ffffffff801046b4:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801046b7	obj/kern/kernel.asm	/^ffffffff801046b7:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801046ba	obj/kern/kernel.asm	/^ffffffff801046ba:	74 79                	je     ffffffff80104735 <sys_open+0xec>$/;"	l
ffffffff801046bc	obj/kern/kernel.asm	/^ffffffff801046bc:	45 8b 74 24 4c       	mov    0x4c(%r12),%r14d$/;"	l
ffffffff801046c1	obj/kern/kernel.asm	/^ffffffff801046c1:	e8 bc 1b 00 00       	callq  ffffffff80106282 <filealloc>$/;"	l
ffffffff801046c6	obj/kern/kernel.asm	/^ffffffff801046c6:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff801046c9	obj/kern/kernel.asm	/^ffffffff801046c9:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801046cc	obj/kern/kernel.asm	/^ffffffff801046cc:	0f 84 f4 00 00 00    	je     ffffffff801047c6 <sys_open+0x17d>$/;"	l
ffffffff801046d2	obj/kern/kernel.asm	/^ffffffff801046d2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff801046d5	obj/kern/kernel.asm	/^ffffffff801046d5:	e8 d1 f8 ff ff       	callq  ffffffff80103fab <fdalloc>$/;"	l
ffffffff801046da	obj/kern/kernel.asm	/^ffffffff801046da:	41 89 c5             	mov    %eax,%r13d$/;"	l
ffffffff801046dd	obj/kern/kernel.asm	/^ffffffff801046dd:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801046df	obj/kern/kernel.asm	/^ffffffff801046df:	0f 88 d9 00 00 00    	js     ffffffff801047be <sys_open+0x175>$/;"	l
ffffffff801046e5	obj/kern/kernel.asm	/^ffffffff801046e5:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801046e8	obj/kern/kernel.asm	/^ffffffff801046e8:	e8 42 10 00 00       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff801046ed	obj/kern/kernel.asm	/^ffffffff801046ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801046f2	obj/kern/kernel.asm	/^ffffffff801046f2:	e8 6f 19 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff801046f7	obj/kern/kernel.asm	/^ffffffff801046f7:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)$/;"	l
ffffffff801046fd	obj/kern/kernel.asm	/^ffffffff801046fd:	4c 89 63 18          	mov    %r12,0x18(%rbx)$/;"	l
ffffffff80104701	obj/kern/kernel.asm	/^ffffffff80104701:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffffffff80104704	obj/kern/kernel.asm	/^ffffffff80104704:	f6 c4 20             	test   $0x20,%ah$/;"	l
ffffffff80104707	obj/kern/kernel.asm	/^ffffffff80104707:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff8010470c	obj/kern/kernel.asm	/^ffffffff8010470c:	44 0f 44 f2          	cmove  %edx,%r14d$/;"	l
ffffffff80104710	obj/kern/kernel.asm	/^ffffffff80104710:	44 89 73 20          	mov    %r14d,0x20(%rbx)$/;"	l
ffffffff80104714	obj/kern/kernel.asm	/^ffffffff80104714:	89 c2                	mov    %eax,%edx$/;"	l
ffffffff80104716	obj/kern/kernel.asm	/^ffffffff80104716:	83 f2 01             	xor    $0x1,%edx$/;"	l
ffffffff80104719	obj/kern/kernel.asm	/^ffffffff80104719:	83 e2 01             	and    $0x1,%edx$/;"	l
ffffffff8010471c	obj/kern/kernel.asm	/^ffffffff8010471c:	88 53 08             	mov    %dl,0x8(%rbx)$/;"	l
ffffffff8010471f	obj/kern/kernel.asm	/^ffffffff8010471f:	a8 03                	test   $0x3,%al$/;"	l
ffffffff80104721	obj/kern/kernel.asm	/^ffffffff80104721:	0f 95 43 09          	setne  0x9(%rbx)$/;"	l
ffffffff80104725	obj/kern/kernel.asm	/^ffffffff80104725:	49 63 c5             	movslq %r13d,%rax$/;"	l
ffffffff80104728	obj/kern/kernel.asm	/^ffffffff80104728:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffffffff8010472c	obj/kern/kernel.asm	/^ffffffff8010472c:	5b                   	pop    %rbx$/;"	l
ffffffff8010472d	obj/kern/kernel.asm	/^ffffffff8010472d:	41 5c                	pop    %r12$/;"	l
ffffffff8010472f	obj/kern/kernel.asm	/^ffffffff8010472f:	41 5d                	pop    %r13$/;"	l
ffffffff80104731	obj/kern/kernel.asm	/^ffffffff80104731:	41 5e                	pop    %r14$/;"	l
ffffffff80104733	obj/kern/kernel.asm	/^ffffffff80104733:	5d                   	pop    %rbp$/;"	l
ffffffff80104734	obj/kern/kernel.asm	/^ffffffff80104734:	c3                   	retq   $/;"	l
ffffffff80104735	obj/kern/kernel.asm	/^ffffffff80104735:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010473a	obj/kern/kernel.asm	/^ffffffff8010473a:	e8 27 19 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff8010473f	obj/kern/kernel.asm	/^ffffffff8010473f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80104746	obj/kern/kernel.asm	/^ffffffff80104746:	eb e0                	jmp    ffffffff80104728 <sys_open+0xdf>$/;"	l
ffffffff80104748	obj/kern/kernel.asm	/^ffffffff80104748:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffffffff8010474c	obj/kern/kernel.asm	/^ffffffff8010474c:	e8 f1 16 00 00       	callq  ffffffff80105e42 <namei>$/;"	l
ffffffff80104751	obj/kern/kernel.asm	/^ffffffff80104751:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80104754	obj/kern/kernel.asm	/^ffffffff80104754:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80104757	obj/kern/kernel.asm	/^ffffffff80104757:	74 3a                	je     ffffffff80104793 <sys_open+0x14a>$/;"	l
ffffffff80104759	obj/kern/kernel.asm	/^ffffffff80104759:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff8010475c	obj/kern/kernel.asm	/^ffffffff8010475c:	e8 13 0f 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80104761	obj/kern/kernel.asm	/^ffffffff80104761:	66 41 83 7c 24 44 01 	cmpw   $0x1,0x44(%r12)$/;"	l
ffffffff80104768	obj/kern/kernel.asm	/^ffffffff80104768:	0f 85 4e ff ff ff    	jne    ffffffff801046bc <sys_open+0x73>$/;"	l
ffffffff8010476e	obj/kern/kernel.asm	/^ffffffff8010476e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)$/;"	l
ffffffff80104772	obj/kern/kernel.asm	/^ffffffff80104772:	0f 84 44 ff ff ff    	je     ffffffff801046bc <sys_open+0x73>$/;"	l
ffffffff80104778	obj/kern/kernel.asm	/^ffffffff80104778:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff8010477b	obj/kern/kernel.asm	/^ffffffff8010477b:	e8 2b 11 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104780	obj/kern/kernel.asm	/^ffffffff80104780:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104785	obj/kern/kernel.asm	/^ffffffff80104785:	e8 dc 18 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff8010478a	obj/kern/kernel.asm	/^ffffffff8010478a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80104791	obj/kern/kernel.asm	/^ffffffff80104791:	eb 95                	jmp    ffffffff80104728 <sys_open+0xdf>$/;"	l
ffffffff80104793	obj/kern/kernel.asm	/^ffffffff80104793:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104798	obj/kern/kernel.asm	/^ffffffff80104798:	e8 c9 18 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff8010479d	obj/kern/kernel.asm	/^ffffffff8010479d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff801047a4	obj/kern/kernel.asm	/^ffffffff801047a4:	eb 82                	jmp    ffffffff80104728 <sys_open+0xdf>$/;"	l
ffffffff801047a6	obj/kern/kernel.asm	/^ffffffff801047a6:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff801047ad	obj/kern/kernel.asm	/^ffffffff801047ad:	e9 76 ff ff ff       	jmpq   ffffffff80104728 <sys_open+0xdf>$/;"	l
ffffffff801047b2	obj/kern/kernel.asm	/^ffffffff801047b2:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff801047b9	obj/kern/kernel.asm	/^ffffffff801047b9:	e9 6a ff ff ff       	jmpq   ffffffff80104728 <sys_open+0xdf>$/;"	l
ffffffff801047be	obj/kern/kernel.asm	/^ffffffff801047be:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801047c1	obj/kern/kernel.asm	/^ffffffff801047c1:	e8 6a 1b 00 00       	callq  ffffffff80106330 <fileclose>$/;"	l
ffffffff801047c6	obj/kern/kernel.asm	/^ffffffff801047c6:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801047c9	obj/kern/kernel.asm	/^ffffffff801047c9:	e8 dd 10 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff801047ce	obj/kern/kernel.asm	/^ffffffff801047ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801047d3	obj/kern/kernel.asm	/^ffffffff801047d3:	e8 8e 18 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff801047d8	obj/kern/kernel.asm	/^ffffffff801047d8:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff801047df	obj/kern/kernel.asm	/^ffffffff801047df:	e9 44 ff ff ff       	jmpq   ffffffff80104728 <sys_open+0xdf>$/;"	l
ffffffff801047e4	obj/kern/kernel.asm	/^ffffffff801047e4 <sys_mkdir>:$/;"	l
ffffffff801047e4	obj/kern/kernel.asm	/^ffffffff801047e4:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801047e8	obj/kern/kernel.asm	/^ffffffff801047e8:	55                   	push   %rbp$/;"	l
ffffffff801047e9	obj/kern/kernel.asm	/^ffffffff801047e9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801047ec	obj/kern/kernel.asm	/^ffffffff801047ec:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff801047f0	obj/kern/kernel.asm	/^ffffffff801047f0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801047f5	obj/kern/kernel.asm	/^ffffffff801047f5:	e8 ff 17 00 00       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff801047fa	obj/kern/kernel.asm	/^ffffffff801047fa:	48 8d 75 f8          	lea    -0x8(%rbp),%rsi$/;"	l
ffffffff801047fe	obj/kern/kernel.asm	/^ffffffff801047fe:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff80104803	obj/kern/kernel.asm	/^ffffffff80104803:	e8 55 e2 ff ff       	callq  ffffffff80102a5d <argstr>$/;"	l
ffffffff80104808	obj/kern/kernel.asm	/^ffffffff80104808:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010480a	obj/kern/kernel.asm	/^ffffffff8010480a:	78 36                	js     ffffffff80104842 <sys_mkdir+0x5e>$/;"	l
ffffffff8010480c	obj/kern/kernel.asm	/^ffffffff8010480c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffffffff80104811	obj/kern/kernel.asm	/^ffffffff80104811:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80104816	obj/kern/kernel.asm	/^ffffffff80104816:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffffffff8010481b	obj/kern/kernel.asm	/^ffffffff8010481b:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi$/;"	l
ffffffff8010481f	obj/kern/kernel.asm	/^ffffffff8010481f:	e8 c9 f7 ff ff       	callq  ffffffff80103fed <create>$/;"	l
ffffffff80104824	obj/kern/kernel.asm	/^ffffffff80104824:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80104827	obj/kern/kernel.asm	/^ffffffff80104827:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff8010482a	obj/kern/kernel.asm	/^ffffffff8010482a:	74 16                	je     ffffffff80104842 <sys_mkdir+0x5e>$/;"	l
ffffffff8010482c	obj/kern/kernel.asm	/^ffffffff8010482c:	e8 7a 10 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104831	obj/kern/kernel.asm	/^ffffffff80104831:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104836	obj/kern/kernel.asm	/^ffffffff80104836:	e8 2b 18 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff8010483b	obj/kern/kernel.asm	/^ffffffff8010483b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104840	obj/kern/kernel.asm	/^ffffffff80104840:	c9                   	leaveq $/;"	l
ffffffff80104841	obj/kern/kernel.asm	/^ffffffff80104841:	c3                   	retq   $/;"	l
ffffffff80104842	obj/kern/kernel.asm	/^ffffffff80104842:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104847	obj/kern/kernel.asm	/^ffffffff80104847:	e8 1a 18 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff8010484c	obj/kern/kernel.asm	/^ffffffff8010484c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104851	obj/kern/kernel.asm	/^ffffffff80104851:	eb ed                	jmp    ffffffff80104840 <sys_mkdir+0x5c>$/;"	l
ffffffff80104853	obj/kern/kernel.asm	/^ffffffff80104853 <sys_mknod>:$/;"	l
ffffffff80104853	obj/kern/kernel.asm	/^ffffffff80104853:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104857	obj/kern/kernel.asm	/^ffffffff80104857:	55                   	push   %rbp$/;"	l
ffffffff80104858	obj/kern/kernel.asm	/^ffffffff80104858:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010485b	obj/kern/kernel.asm	/^ffffffff8010485b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff8010485f	obj/kern/kernel.asm	/^ffffffff8010485f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104864	obj/kern/kernel.asm	/^ffffffff80104864:	e8 90 17 00 00       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff80104869	obj/kern/kernel.asm	/^ffffffff80104869:	48 8d 75 f8          	lea    -0x8(%rbp),%rsi$/;"	l
ffffffff8010486d	obj/kern/kernel.asm	/^ffffffff8010486d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff80104872	obj/kern/kernel.asm	/^ffffffff80104872:	e8 e6 e1 ff ff       	callq  ffffffff80102a5d <argstr>$/;"	l
ffffffff80104877	obj/kern/kernel.asm	/^ffffffff80104877:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104879	obj/kern/kernel.asm	/^ffffffff80104879:	78 58                	js     ffffffff801048d3 <sys_mknod+0x80>$/;"	l
ffffffff8010487b	obj/kern/kernel.asm	/^ffffffff8010487b:	48 8d 75 f4          	lea    -0xc(%rbp),%rsi$/;"	l
ffffffff8010487f	obj/kern/kernel.asm	/^ffffffff8010487f:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff80104884	obj/kern/kernel.asm	/^ffffffff80104884:	e8 25 e1 ff ff       	callq  ffffffff801029ae <argint>$/;"	l
ffffffff80104889	obj/kern/kernel.asm	/^ffffffff80104889:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010488b	obj/kern/kernel.asm	/^ffffffff8010488b:	78 46                	js     ffffffff801048d3 <sys_mknod+0x80>$/;"	l
ffffffff8010488d	obj/kern/kernel.asm	/^ffffffff8010488d:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi$/;"	l
ffffffff80104891	obj/kern/kernel.asm	/^ffffffff80104891:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffffffff80104896	obj/kern/kernel.asm	/^ffffffff80104896:	e8 13 e1 ff ff       	callq  ffffffff801029ae <argint>$/;"	l
ffffffff8010489b	obj/kern/kernel.asm	/^ffffffff8010489b:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010489d	obj/kern/kernel.asm	/^ffffffff8010489d:	78 34                	js     ffffffff801048d3 <sys_mknod+0x80>$/;"	l
ffffffff8010489f	obj/kern/kernel.asm	/^ffffffff8010489f:	0f bf 4d f0          	movswl -0x10(%rbp),%ecx$/;"	l
ffffffff801048a3	obj/kern/kernel.asm	/^ffffffff801048a3:	0f bf 55 f4          	movswl -0xc(%rbp),%edx$/;"	l
ffffffff801048a7	obj/kern/kernel.asm	/^ffffffff801048a7:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffffffff801048ac	obj/kern/kernel.asm	/^ffffffff801048ac:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi$/;"	l
ffffffff801048b0	obj/kern/kernel.asm	/^ffffffff801048b0:	e8 38 f7 ff ff       	callq  ffffffff80103fed <create>$/;"	l
ffffffff801048b5	obj/kern/kernel.asm	/^ffffffff801048b5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff801048b8	obj/kern/kernel.asm	/^ffffffff801048b8:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801048bb	obj/kern/kernel.asm	/^ffffffff801048bb:	74 16                	je     ffffffff801048d3 <sys_mknod+0x80>$/;"	l
ffffffff801048bd	obj/kern/kernel.asm	/^ffffffff801048bd:	e8 e9 0f 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff801048c2	obj/kern/kernel.asm	/^ffffffff801048c2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801048c7	obj/kern/kernel.asm	/^ffffffff801048c7:	e8 9a 17 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff801048cc	obj/kern/kernel.asm	/^ffffffff801048cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801048d1	obj/kern/kernel.asm	/^ffffffff801048d1:	c9                   	leaveq $/;"	l
ffffffff801048d2	obj/kern/kernel.asm	/^ffffffff801048d2:	c3                   	retq   $/;"	l
ffffffff801048d3	obj/kern/kernel.asm	/^ffffffff801048d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801048d8	obj/kern/kernel.asm	/^ffffffff801048d8:	e8 89 17 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff801048dd	obj/kern/kernel.asm	/^ffffffff801048dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801048e2	obj/kern/kernel.asm	/^ffffffff801048e2:	eb ed                	jmp    ffffffff801048d1 <sys_mknod+0x7e>$/;"	l
ffffffff801048e4	obj/kern/kernel.asm	/^ffffffff801048e4 <sys_chdir>:$/;"	l
ffffffff801048e4	obj/kern/kernel.asm	/^ffffffff801048e4:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801048e8	obj/kern/kernel.asm	/^ffffffff801048e8:	55                   	push   %rbp$/;"	l
ffffffff801048e9	obj/kern/kernel.asm	/^ffffffff801048e9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801048ec	obj/kern/kernel.asm	/^ffffffff801048ec:	41 54                	push   %r12$/;"	l
ffffffff801048ee	obj/kern/kernel.asm	/^ffffffff801048ee:	53                   	push   %rbx$/;"	l
ffffffff801048ef	obj/kern/kernel.asm	/^ffffffff801048ef:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff801048f3	obj/kern/kernel.asm	/^ffffffff801048f3:	e8 f8 c7 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801048f8	obj/kern/kernel.asm	/^ffffffff801048f8:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801048fb	obj/kern/kernel.asm	/^ffffffff801048fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104900	obj/kern/kernel.asm	/^ffffffff80104900:	e8 f4 16 00 00       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff80104905	obj/kern/kernel.asm	/^ffffffff80104905:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi$/;"	l
ffffffff80104909	obj/kern/kernel.asm	/^ffffffff80104909:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff8010490e	obj/kern/kernel.asm	/^ffffffff8010490e:	e8 4a e1 ff ff       	callq  ffffffff80102a5d <argstr>$/;"	l
ffffffff80104913	obj/kern/kernel.asm	/^ffffffff80104913:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104915	obj/kern/kernel.asm	/^ffffffff80104915:	78 55                	js     ffffffff8010496c <sys_chdir+0x88>$/;"	l
ffffffff80104917	obj/kern/kernel.asm	/^ffffffff80104917:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi$/;"	l
ffffffff8010491b	obj/kern/kernel.asm	/^ffffffff8010491b:	e8 22 15 00 00       	callq  ffffffff80105e42 <namei>$/;"	l
ffffffff80104920	obj/kern/kernel.asm	/^ffffffff80104920:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80104923	obj/kern/kernel.asm	/^ffffffff80104923:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80104926	obj/kern/kernel.asm	/^ffffffff80104926:	74 44                	je     ffffffff8010496c <sys_chdir+0x88>$/;"	l
ffffffff80104928	obj/kern/kernel.asm	/^ffffffff80104928:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff8010492b	obj/kern/kernel.asm	/^ffffffff8010492b:	e8 44 0d 00 00       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80104930	obj/kern/kernel.asm	/^ffffffff80104930:	66 83 7b 44 01       	cmpw   $0x1,0x44(%rbx)$/;"	l
ffffffff80104935	obj/kern/kernel.asm	/^ffffffff80104935:	75 46                	jne    ffffffff8010497d <sys_chdir+0x99>$/;"	l
ffffffff80104937	obj/kern/kernel.asm	/^ffffffff80104937:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010493a	obj/kern/kernel.asm	/^ffffffff8010493a:	e8 f0 0d 00 00       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff8010493f	obj/kern/kernel.asm	/^ffffffff8010493f:	49 8b bc 24 c8 00 00 	mov    0xc8(%r12),%rdi$/;"	l
ffffffff80104946	obj/kern/kernel.asm	/^ffffffff80104946:	00 $/;"	l
ffffffff80104947	obj/kern/kernel.asm	/^ffffffff80104947:	e8 25 0e 00 00       	callq  ffffffff80105771 <iput>$/;"	l
ffffffff8010494c	obj/kern/kernel.asm	/^ffffffff8010494c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104951	obj/kern/kernel.asm	/^ffffffff80104951:	e8 10 17 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80104956	obj/kern/kernel.asm	/^ffffffff80104956:	49 89 9c 24 c8 00 00 	mov    %rbx,0xc8(%r12)$/;"	l
ffffffff8010495d	obj/kern/kernel.asm	/^ffffffff8010495d:	00 $/;"	l
ffffffff8010495e	obj/kern/kernel.asm	/^ffffffff8010495e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104963	obj/kern/kernel.asm	/^ffffffff80104963:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffffffff80104967	obj/kern/kernel.asm	/^ffffffff80104967:	5b                   	pop    %rbx$/;"	l
ffffffff80104968	obj/kern/kernel.asm	/^ffffffff80104968:	41 5c                	pop    %r12$/;"	l
ffffffff8010496a	obj/kern/kernel.asm	/^ffffffff8010496a:	5d                   	pop    %rbp$/;"	l
ffffffff8010496b	obj/kern/kernel.asm	/^ffffffff8010496b:	c3                   	retq   $/;"	l
ffffffff8010496c	obj/kern/kernel.asm	/^ffffffff8010496c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104971	obj/kern/kernel.asm	/^ffffffff80104971:	e8 f0 16 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80104976	obj/kern/kernel.asm	/^ffffffff80104976:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff8010497b	obj/kern/kernel.asm	/^ffffffff8010497b:	eb e6                	jmp    ffffffff80104963 <sys_chdir+0x7f>$/;"	l
ffffffff8010497d	obj/kern/kernel.asm	/^ffffffff8010497d:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104980	obj/kern/kernel.asm	/^ffffffff80104980:	e8 26 0f 00 00       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80104985	obj/kern/kernel.asm	/^ffffffff80104985:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010498a	obj/kern/kernel.asm	/^ffffffff8010498a:	e8 d7 16 00 00       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff8010498f	obj/kern/kernel.asm	/^ffffffff8010498f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104994	obj/kern/kernel.asm	/^ffffffff80104994:	eb cd                	jmp    ffffffff80104963 <sys_chdir+0x7f>$/;"	l
ffffffff80104996	obj/kern/kernel.asm	/^ffffffff80104996 <sys_exec>:$/;"	l
ffffffff80104996	obj/kern/kernel.asm	/^ffffffff80104996:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010499a	obj/kern/kernel.asm	/^ffffffff8010499a:	55                   	push   %rbp$/;"	l
ffffffff8010499b	obj/kern/kernel.asm	/^ffffffff8010499b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010499e	obj/kern/kernel.asm	/^ffffffff8010499e:	41 54                	push   %r12$/;"	l
ffffffff801049a0	obj/kern/kernel.asm	/^ffffffff801049a0:	53                   	push   %rbx$/;"	l
ffffffff801049a1	obj/kern/kernel.asm	/^ffffffff801049a1:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp$/;"	l
ffffffff801049a8	obj/kern/kernel.asm	/^ffffffff801049a8:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi$/;"	l
ffffffff801049ac	obj/kern/kernel.asm	/^ffffffff801049ac:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff801049b1	obj/kern/kernel.asm	/^ffffffff801049b1:	e8 a7 e0 ff ff       	callq  ffffffff80102a5d <argstr>$/;"	l
ffffffff801049b6	obj/kern/kernel.asm	/^ffffffff801049b6:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801049b8	obj/kern/kernel.asm	/^ffffffff801049b8:	0f 88 b5 00 00 00    	js     ffffffff80104a73 <sys_exec+0xdd>$/;"	l
ffffffff801049be	obj/kern/kernel.asm	/^ffffffff801049be:	48 8d b5 e0 fe ff ff 	lea    -0x120(%rbp),%rsi$/;"	l
ffffffff801049c5	obj/kern/kernel.asm	/^ffffffff801049c5:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff801049ca	obj/kern/kernel.asm	/^ffffffff801049ca:	e8 50 df ff ff       	callq  ffffffff8010291f <arg>$/;"	l
ffffffff801049cf	obj/kern/kernel.asm	/^ffffffff801049cf:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801049d1	obj/kern/kernel.asm	/^ffffffff801049d1:	0f 88 a5 00 00 00    	js     ffffffff80104a7c <sys_exec+0xe6>$/;"	l
ffffffff801049d7	obj/kern/kernel.asm	/^ffffffff801049d7:	ba 00 01 00 00       	mov    $0x100,%edx$/;"	l
ffffffff801049dc	obj/kern/kernel.asm	/^ffffffff801049dc:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff801049e1	obj/kern/kernel.asm	/^ffffffff801049e1:	48 8d bd e8 fe ff ff 	lea    -0x118(%rbp),%rdi$/;"	l
ffffffff801049e8	obj/kern/kernel.asm	/^ffffffff801049e8:	e8 88 1f 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff801049ed	obj/kern/kernel.asm	/^ffffffff801049ed:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff801049f2	obj/kern/kernel.asm	/^ffffffff801049f2:	41 bc 00 00 00 00    	mov    $0x0,%r12d$/;"	l
ffffffff801049f8	obj/kern/kernel.asm	/^ffffffff801049f8:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801049fb	obj/kern/kernel.asm	/^ffffffff801049fb:	48 03 bd e0 fe ff ff 	add    -0x120(%rbp),%rdi$/;"	l
ffffffff80104a02	obj/kern/kernel.asm	/^ffffffff80104a02:	48 8d b5 d8 fe ff ff 	lea    -0x128(%rbp),%rsi$/;"	l
ffffffff80104a09	obj/kern/kernel.asm	/^ffffffff80104a09:	e8 6a de ff ff       	callq  ffffffff80102878 <fetchint>$/;"	l
ffffffff80104a0e	obj/kern/kernel.asm	/^ffffffff80104a0e:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104a10	obj/kern/kernel.asm	/^ffffffff80104a10:	78 73                	js     ffffffff80104a85 <sys_exec+0xef>$/;"	l
ffffffff80104a12	obj/kern/kernel.asm	/^ffffffff80104a12:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi$/;"	l
ffffffff80104a19	obj/kern/kernel.asm	/^ffffffff80104a19:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff80104a1c	obj/kern/kernel.asm	/^ffffffff80104a1c:	74 32                	je     ffffffff80104a50 <sys_exec+0xba>$/;"	l
ffffffff80104a1e	obj/kern/kernel.asm	/^ffffffff80104a1e:	48 8d b4 1d e8 fe ff 	lea    -0x118(%rbp,%rbx,1),%rsi$/;"	l
ffffffff80104a25	obj/kern/kernel.asm	/^ffffffff80104a25:	ff $/;"	l
ffffffff80104a26	obj/kern/kernel.asm	/^ffffffff80104a26:	e8 a0 de ff ff       	callq  ffffffff801028cb <fetchstr>$/;"	l
ffffffff80104a2b	obj/kern/kernel.asm	/^ffffffff80104a2b:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104a2d	obj/kern/kernel.asm	/^ffffffff80104a2d:	78 5f                	js     ffffffff80104a8e <sys_exec+0xf8>$/;"	l
ffffffff80104a2f	obj/kern/kernel.asm	/^ffffffff80104a2f:	41 83 c4 01          	add    $0x1,%r12d$/;"	l
ffffffff80104a33	obj/kern/kernel.asm	/^ffffffff80104a33:	48 83 c3 08          	add    $0x8,%rbx$/;"	l
ffffffff80104a37	obj/kern/kernel.asm	/^ffffffff80104a37:	41 83 fc 20          	cmp    $0x20,%r12d$/;"	l
ffffffff80104a3b	obj/kern/kernel.asm	/^ffffffff80104a3b:	75 bb                	jne    ffffffff801049f8 <sys_exec+0x62>$/;"	l
ffffffff80104a3d	obj/kern/kernel.asm	/^ffffffff80104a3d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80104a44	obj/kern/kernel.asm	/^ffffffff80104a44:	48 81 c4 20 01 00 00 	add    $0x120,%rsp$/;"	l
ffffffff80104a4b	obj/kern/kernel.asm	/^ffffffff80104a4b:	5b                   	pop    %rbx$/;"	l
ffffffff80104a4c	obj/kern/kernel.asm	/^ffffffff80104a4c:	41 5c                	pop    %r12$/;"	l
ffffffff80104a4e	obj/kern/kernel.asm	/^ffffffff80104a4e:	5d                   	pop    %rbp$/;"	l
ffffffff80104a4f	obj/kern/kernel.asm	/^ffffffff80104a4f:	c3                   	retq   $/;"	l
ffffffff80104a50	obj/kern/kernel.asm	/^ffffffff80104a50:	4d 63 e4             	movslq %r12d,%r12$/;"	l
ffffffff80104a53	obj/kern/kernel.asm	/^ffffffff80104a53:	4a c7 84 e5 e8 fe ff 	movq   $0x0,-0x118(%rbp,%r12,8)$/;"	l
ffffffff80104a5a	obj/kern/kernel.asm	/^ffffffff80104a5a:	ff 00 00 00 00 $/;"	l
ffffffff80104a5f	obj/kern/kernel.asm	/^ffffffff80104a5f:	48 8d b5 e8 fe ff ff 	lea    -0x118(%rbp),%rsi$/;"	l
ffffffff80104a66	obj/kern/kernel.asm	/^ffffffff80104a66:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi$/;"	l
ffffffff80104a6a	obj/kern/kernel.asm	/^ffffffff80104a6a:	e8 32 f1 ff ff       	callq  ffffffff80103ba1 <exec>$/;"	l
ffffffff80104a6f	obj/kern/kernel.asm	/^ffffffff80104a6f:	48 98                	cltq   $/;"	l
ffffffff80104a71	obj/kern/kernel.asm	/^ffffffff80104a71:	eb d1                	jmp    ffffffff80104a44 <sys_exec+0xae>$/;"	l
ffffffff80104a73	obj/kern/kernel.asm	/^ffffffff80104a73:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80104a7a	obj/kern/kernel.asm	/^ffffffff80104a7a:	eb c8                	jmp    ffffffff80104a44 <sys_exec+0xae>$/;"	l
ffffffff80104a7c	obj/kern/kernel.asm	/^ffffffff80104a7c:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80104a83	obj/kern/kernel.asm	/^ffffffff80104a83:	eb bf                	jmp    ffffffff80104a44 <sys_exec+0xae>$/;"	l
ffffffff80104a85	obj/kern/kernel.asm	/^ffffffff80104a85:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80104a8c	obj/kern/kernel.asm	/^ffffffff80104a8c:	eb b6                	jmp    ffffffff80104a44 <sys_exec+0xae>$/;"	l
ffffffff80104a8e	obj/kern/kernel.asm	/^ffffffff80104a8e:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffffffff80104a95	obj/kern/kernel.asm	/^ffffffff80104a95:	eb ad                	jmp    ffffffff80104a44 <sys_exec+0xae>$/;"	l
ffffffff80104a97	obj/kern/kernel.asm	/^ffffffff80104a97 <sys_pipe>:$/;"	l
ffffffff80104a97	obj/kern/kernel.asm	/^ffffffff80104a97:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104a9b	obj/kern/kernel.asm	/^ffffffff80104a9b:	55                   	push   %rbp$/;"	l
ffffffff80104a9c	obj/kern/kernel.asm	/^ffffffff80104a9c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104a9f	obj/kern/kernel.asm	/^ffffffff80104a9f:	53                   	push   %rbx$/;"	l
ffffffff80104aa0	obj/kern/kernel.asm	/^ffffffff80104aa0:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffffffff80104aa4	obj/kern/kernel.asm	/^ffffffff80104aa4:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
ffffffff80104aa9	obj/kern/kernel.asm	/^ffffffff80104aa9:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi$/;"	l
ffffffff80104aad	obj/kern/kernel.asm	/^ffffffff80104aad:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffffffff80104ab2	obj/kern/kernel.asm	/^ffffffff80104ab2:	e8 2d df ff ff       	callq  ffffffff801029e4 <argptr>$/;"	l
ffffffff80104ab7	obj/kern/kernel.asm	/^ffffffff80104ab7:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104ab9	obj/kern/kernel.asm	/^ffffffff80104ab9:	78 46                	js     ffffffff80104b01 <sys_pipe+0x6a>$/;"	l
ffffffff80104abb	obj/kern/kernel.asm	/^ffffffff80104abb:	48 8d 75 d8          	lea    -0x28(%rbp),%rsi$/;"	l
ffffffff80104abf	obj/kern/kernel.asm	/^ffffffff80104abf:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi$/;"	l
ffffffff80104ac3	obj/kern/kernel.asm	/^ffffffff80104ac3:	e8 0d 1b 00 00       	callq  ffffffff801065d5 <pipealloc>$/;"	l
ffffffff80104ac8	obj/kern/kernel.asm	/^ffffffff80104ac8:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104aca	obj/kern/kernel.asm	/^ffffffff80104aca:	78 3c                	js     ffffffff80104b08 <sys_pipe+0x71>$/;"	l
ffffffff80104acc	obj/kern/kernel.asm	/^ffffffff80104acc:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi$/;"	l
ffffffff80104ad0	obj/kern/kernel.asm	/^ffffffff80104ad0:	e8 d6 f4 ff ff       	callq  ffffffff80103fab <fdalloc>$/;"	l
ffffffff80104ad5	obj/kern/kernel.asm	/^ffffffff80104ad5:	89 c3                	mov    %eax,%ebx$/;"	l
ffffffff80104ad7	obj/kern/kernel.asm	/^ffffffff80104ad7:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104ad9	obj/kern/kernel.asm	/^ffffffff80104ad9:	78 45                	js     ffffffff80104b20 <sys_pipe+0x89>$/;"	l
ffffffff80104adb	obj/kern/kernel.asm	/^ffffffff80104adb:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffffffff80104adf	obj/kern/kernel.asm	/^ffffffff80104adf:	e8 c7 f4 ff ff       	callq  ffffffff80103fab <fdalloc>$/;"	l
ffffffff80104ae4	obj/kern/kernel.asm	/^ffffffff80104ae4:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104ae6	obj/kern/kernel.asm	/^ffffffff80104ae6:	78 27                	js     ffffffff80104b0f <sys_pipe+0x78>$/;"	l
ffffffff80104ae8	obj/kern/kernel.asm	/^ffffffff80104ae8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffffffff80104aec	obj/kern/kernel.asm	/^ffffffff80104aec:	89 1a                	mov    %ebx,(%rdx)$/;"	l
ffffffff80104aee	obj/kern/kernel.asm	/^ffffffff80104aee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffffffff80104af2	obj/kern/kernel.asm	/^ffffffff80104af2:	89 42 04             	mov    %eax,0x4(%rdx)$/;"	l
ffffffff80104af5	obj/kern/kernel.asm	/^ffffffff80104af5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80104afa	obj/kern/kernel.asm	/^ffffffff80104afa:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffffffff80104afe	obj/kern/kernel.asm	/^ffffffff80104afe:	5b                   	pop    %rbx$/;"	l
ffffffff80104aff	obj/kern/kernel.asm	/^ffffffff80104aff:	5d                   	pop    %rbp$/;"	l
ffffffff80104b00	obj/kern/kernel.asm	/^ffffffff80104b00:	c3                   	retq   $/;"	l
ffffffff80104b01	obj/kern/kernel.asm	/^ffffffff80104b01:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104b06	obj/kern/kernel.asm	/^ffffffff80104b06:	eb f2                	jmp    ffffffff80104afa <sys_pipe+0x63>$/;"	l
ffffffff80104b08	obj/kern/kernel.asm	/^ffffffff80104b08:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104b0d	obj/kern/kernel.asm	/^ffffffff80104b0d:	eb eb                	jmp    ffffffff80104afa <sys_pipe+0x63>$/;"	l
ffffffff80104b0f	obj/kern/kernel.asm	/^ffffffff80104b0f:	e8 dc c5 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80104b14	obj/kern/kernel.asm	/^ffffffff80104b14:	48 63 db             	movslq %ebx,%rbx$/;"	l
ffffffff80104b17	obj/kern/kernel.asm	/^ffffffff80104b17:	48 c7 44 d8 48 00 00 	movq   $0x0,0x48(%rax,%rbx,8)$/;"	l
ffffffff80104b1e	obj/kern/kernel.asm	/^ffffffff80104b1e:	00 00 $/;"	l
ffffffff80104b20	obj/kern/kernel.asm	/^ffffffff80104b20:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi$/;"	l
ffffffff80104b24	obj/kern/kernel.asm	/^ffffffff80104b24:	e8 07 18 00 00       	callq  ffffffff80106330 <fileclose>$/;"	l
ffffffff80104b29	obj/kern/kernel.asm	/^ffffffff80104b29:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffffffff80104b2d	obj/kern/kernel.asm	/^ffffffff80104b2d:	e8 fe 17 00 00       	callq  ffffffff80106330 <fileclose>$/;"	l
ffffffff80104b32	obj/kern/kernel.asm	/^ffffffff80104b32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80104b37	obj/kern/kernel.asm	/^ffffffff80104b37:	eb c1                	jmp    ffffffff80104afa <sys_pipe+0x63>$/;"	l
ffffffff80104b39	obj/kern/kernel.asm	/^ffffffff80104b39 <binit>:$/;"	l
ffffffff80104b39	obj/kern/kernel.asm	/^ffffffff80104b39:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104b3d	obj/kern/kernel.asm	/^ffffffff80104b3d:	55                   	push   %rbp$/;"	l
ffffffff80104b3e	obj/kern/kernel.asm	/^ffffffff80104b3e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104b41	obj/kern/kernel.asm	/^ffffffff80104b41:	53                   	push   %rbx$/;"	l
ffffffff80104b42	obj/kern/kernel.asm	/^ffffffff80104b42:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80104b46	obj/kern/kernel.asm	/^ffffffff80104b46:	48 c7 c6 0d 76 10 80 	mov    $0xffffffff8010760d,%rsi$/;"	l
ffffffff80104b4d	obj/kern/kernel.asm	/^ffffffff80104b4d:	48 c7 c7 c0 ec 10 80 	mov    $0xffffffff8010ecc0,%rdi$/;"	l
ffffffff80104b54	obj/kern/kernel.asm	/^ffffffff80104b54:	e8 4a b8 ff ff       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff80104b59	obj/kern/kernel.asm	/^ffffffff80104b59:	48 c7 05 fc e8 00 00 	movq   $0xffffffff80113418,0xe8fc(%rip)        # ffffffff80113460 <bcache+0x47a0>$/;"	l
ffffffff80104b60	obj/kern/kernel.asm	/^ffffffff80104b60:	18 34 11 80 $/;"	l
ffffffff80104b64	obj/kern/kernel.asm	/^ffffffff80104b64:	48 c7 05 f9 e8 00 00 	movq   $0xffffffff80113418,0xe8f9(%rip)        # ffffffff80113468 <bcache+0x47a8>$/;"	l
ffffffff80104b6b	obj/kern/kernel.asm	/^ffffffff80104b6b:	18 34 11 80 $/;"	l
ffffffff80104b6f	obj/kern/kernel.asm	/^ffffffff80104b6f:	48 c7 c3 d8 ec 10 80 	mov    $0xffffffff8010ecd8,%rbx$/;"	l
ffffffff80104b76	obj/kern/kernel.asm	/^ffffffff80104b76:	48 8b 05 eb e8 00 00 	mov    0xe8eb(%rip),%rax        # ffffffff80113468 <bcache+0x47a8>$/;"	l
ffffffff80104b7d	obj/kern/kernel.asm	/^ffffffff80104b7d:	48 89 43 50          	mov    %rax,0x50(%rbx)$/;"	l
ffffffff80104b81	obj/kern/kernel.asm	/^ffffffff80104b81:	48 c7 43 48 18 34 11 	movq   $0xffffffff80113418,0x48(%rbx)$/;"	l
ffffffff80104b88	obj/kern/kernel.asm	/^ffffffff80104b88:	80 $/;"	l
ffffffff80104b89	obj/kern/kernel.asm	/^ffffffff80104b89:	48 8d 7b 10          	lea    0x10(%rbx),%rdi$/;"	l
ffffffff80104b8d	obj/kern/kernel.asm	/^ffffffff80104b8d:	48 c7 c6 14 76 10 80 	mov    $0xffffffff80107614,%rsi$/;"	l
ffffffff80104b94	obj/kern/kernel.asm	/^ffffffff80104b94:	e8 dd 01 00 00       	callq  ffffffff80104d76 <initsleeplock>$/;"	l
ffffffff80104b99	obj/kern/kernel.asm	/^ffffffff80104b99:	48 8b 05 c8 e8 00 00 	mov    0xe8c8(%rip),%rax        # ffffffff80113468 <bcache+0x47a8>$/;"	l
ffffffff80104ba0	obj/kern/kernel.asm	/^ffffffff80104ba0:	48 89 58 48          	mov    %rbx,0x48(%rax)$/;"	l
ffffffff80104ba4	obj/kern/kernel.asm	/^ffffffff80104ba4:	48 89 1d bd e8 00 00 	mov    %rbx,0xe8bd(%rip)        # ffffffff80113468 <bcache+0x47a8>$/;"	l
ffffffff80104bab	obj/kern/kernel.asm	/^ffffffff80104bab:	48 81 c3 60 02 00 00 	add    $0x260,%rbx$/;"	l
ffffffff80104bb2	obj/kern/kernel.asm	/^ffffffff80104bb2:	48 81 fb 18 34 11 80 	cmp    $0xffffffff80113418,%rbx$/;"	l
ffffffff80104bb9	obj/kern/kernel.asm	/^ffffffff80104bb9:	75 bb                	jne    ffffffff80104b76 <binit+0x3d>$/;"	l
ffffffff80104bbb	obj/kern/kernel.asm	/^ffffffff80104bbb:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80104bbf	obj/kern/kernel.asm	/^ffffffff80104bbf:	5b                   	pop    %rbx$/;"	l
ffffffff80104bc0	obj/kern/kernel.asm	/^ffffffff80104bc0:	5d                   	pop    %rbp$/;"	l
ffffffff80104bc1	obj/kern/kernel.asm	/^ffffffff80104bc1:	c3                   	retq   $/;"	l
ffffffff80104bc2	obj/kern/kernel.asm	/^ffffffff80104bc2 <bread>:$/;"	l
ffffffff80104bc2	obj/kern/kernel.asm	/^ffffffff80104bc2:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104bc6	obj/kern/kernel.asm	/^ffffffff80104bc6:	55                   	push   %rbp$/;"	l
ffffffff80104bc7	obj/kern/kernel.asm	/^ffffffff80104bc7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104bca	obj/kern/kernel.asm	/^ffffffff80104bca:	41 55                	push   %r13$/;"	l
ffffffff80104bcc	obj/kern/kernel.asm	/^ffffffff80104bcc:	41 54                	push   %r12$/;"	l
ffffffff80104bce	obj/kern/kernel.asm	/^ffffffff80104bce:	53                   	push   %rbx$/;"	l
ffffffff80104bcf	obj/kern/kernel.asm	/^ffffffff80104bcf:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80104bd3	obj/kern/kernel.asm	/^ffffffff80104bd3:	41 89 fd             	mov    %edi,%r13d$/;"	l
ffffffff80104bd6	obj/kern/kernel.asm	/^ffffffff80104bd6:	41 89 f4             	mov    %esi,%r12d$/;"	l
ffffffff80104bd9	obj/kern/kernel.asm	/^ffffffff80104bd9:	48 c7 c7 c0 ec 10 80 	mov    $0xffffffff8010ecc0,%rdi$/;"	l
ffffffff80104be0	obj/kern/kernel.asm	/^ffffffff80104be0:	e8 ba b8 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80104be5	obj/kern/kernel.asm	/^ffffffff80104be5:	48 8b 1d 7c e8 00 00 	mov    0xe87c(%rip),%rbx        # ffffffff80113468 <bcache+0x47a8>$/;"	l
ffffffff80104bec	obj/kern/kernel.asm	/^ffffffff80104bec:	48 81 fb 18 34 11 80 	cmp    $0xffffffff80113418,%rbx$/;"	l
ffffffff80104bf3	obj/kern/kernel.asm	/^ffffffff80104bf3:	75 29                	jne    ffffffff80104c1e <bread+0x5c>$/;"	l
ffffffff80104bf5	obj/kern/kernel.asm	/^ffffffff80104bf5:	48 8b 1d 64 e8 00 00 	mov    0xe864(%rip),%rbx        # ffffffff80113460 <bcache+0x47a0>$/;"	l
ffffffff80104bfc	obj/kern/kernel.asm	/^ffffffff80104bfc:	48 81 fb 18 34 11 80 	cmp    $0xffffffff80113418,%rbx$/;"	l
ffffffff80104c03	obj/kern/kernel.asm	/^ffffffff80104c03:	75 4d                	jne    ffffffff80104c52 <bread+0x90>$/;"	l
ffffffff80104c05	obj/kern/kernel.asm	/^ffffffff80104c05:	48 c7 c7 1b 76 10 80 	mov    $0xffffffff8010761b,%rdi$/;"	l
ffffffff80104c0c	obj/kern/kernel.asm	/^ffffffff80104c0c:	e8 12 ba ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80104c11	obj/kern/kernel.asm	/^ffffffff80104c11:	48 8b 5b 50          	mov    0x50(%rbx),%rbx$/;"	l
ffffffff80104c15	obj/kern/kernel.asm	/^ffffffff80104c15:	48 81 fb 18 34 11 80 	cmp    $0xffffffff80113418,%rbx$/;"	l
ffffffff80104c1c	obj/kern/kernel.asm	/^ffffffff80104c1c:	74 d7                	je     ffffffff80104bf5 <bread+0x33>$/;"	l
ffffffff80104c1e	obj/kern/kernel.asm	/^ffffffff80104c1e:	44 3b 6b 04          	cmp    0x4(%rbx),%r13d$/;"	l
ffffffff80104c22	obj/kern/kernel.asm	/^ffffffff80104c22:	75 ed                	jne    ffffffff80104c11 <bread+0x4f>$/;"	l
ffffffff80104c24	obj/kern/kernel.asm	/^ffffffff80104c24:	44 3b 63 08          	cmp    0x8(%rbx),%r12d$/;"	l
ffffffff80104c28	obj/kern/kernel.asm	/^ffffffff80104c28:	75 e7                	jne    ffffffff80104c11 <bread+0x4f>$/;"	l
ffffffff80104c2a	obj/kern/kernel.asm	/^ffffffff80104c2a:	83 43 40 01          	addl   $0x1,0x40(%rbx)$/;"	l
ffffffff80104c2e	obj/kern/kernel.asm	/^ffffffff80104c2e:	48 c7 c7 c0 ec 10 80 	mov    $0xffffffff8010ecc0,%rdi$/;"	l
ffffffff80104c35	obj/kern/kernel.asm	/^ffffffff80104c35:	e8 b3 b8 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80104c3a	obj/kern/kernel.asm	/^ffffffff80104c3a:	48 8d 7b 10          	lea    0x10(%rbx),%rdi$/;"	l
ffffffff80104c3e	obj/kern/kernel.asm	/^ffffffff80104c3e:	e8 6a 01 00 00       	callq  ffffffff80104dad <acquiresleep>$/;"	l
ffffffff80104c43	obj/kern/kernel.asm	/^ffffffff80104c43:	eb 42                	jmp    ffffffff80104c87 <bread+0xc5>$/;"	l
ffffffff80104c45	obj/kern/kernel.asm	/^ffffffff80104c45:	48 8b 5b 48          	mov    0x48(%rbx),%rbx$/;"	l
ffffffff80104c49	obj/kern/kernel.asm	/^ffffffff80104c49:	48 81 fb 18 34 11 80 	cmp    $0xffffffff80113418,%rbx$/;"	l
ffffffff80104c50	obj/kern/kernel.asm	/^ffffffff80104c50:	74 b3                	je     ffffffff80104c05 <bread+0x43>$/;"	l
ffffffff80104c52	obj/kern/kernel.asm	/^ffffffff80104c52:	83 7b 40 00          	cmpl   $0x0,0x40(%rbx)$/;"	l
ffffffff80104c56	obj/kern/kernel.asm	/^ffffffff80104c56:	75 ed                	jne    ffffffff80104c45 <bread+0x83>$/;"	l
ffffffff80104c58	obj/kern/kernel.asm	/^ffffffff80104c58:	f6 03 04             	testb  $0x4,(%rbx)$/;"	l
ffffffff80104c5b	obj/kern/kernel.asm	/^ffffffff80104c5b:	75 e8                	jne    ffffffff80104c45 <bread+0x83>$/;"	l
ffffffff80104c5d	obj/kern/kernel.asm	/^ffffffff80104c5d:	44 89 6b 04          	mov    %r13d,0x4(%rbx)$/;"	l
ffffffff80104c61	obj/kern/kernel.asm	/^ffffffff80104c61:	44 89 63 08          	mov    %r12d,0x8(%rbx)$/;"	l
ffffffff80104c65	obj/kern/kernel.asm	/^ffffffff80104c65:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)$/;"	l
ffffffff80104c6b	obj/kern/kernel.asm	/^ffffffff80104c6b:	c7 43 40 01 00 00 00 	movl   $0x1,0x40(%rbx)$/;"	l
ffffffff80104c72	obj/kern/kernel.asm	/^ffffffff80104c72:	48 c7 c7 c0 ec 10 80 	mov    $0xffffffff8010ecc0,%rdi$/;"	l
ffffffff80104c79	obj/kern/kernel.asm	/^ffffffff80104c79:	e8 6f b8 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80104c7e	obj/kern/kernel.asm	/^ffffffff80104c7e:	48 8d 7b 10          	lea    0x10(%rbx),%rdi$/;"	l
ffffffff80104c82	obj/kern/kernel.asm	/^ffffffff80104c82:	e8 26 01 00 00       	callq  ffffffff80104dad <acquiresleep>$/;"	l
ffffffff80104c87	obj/kern/kernel.asm	/^ffffffff80104c87:	f6 03 02             	testb  $0x2,(%rbx)$/;"	l
ffffffff80104c8a	obj/kern/kernel.asm	/^ffffffff80104c8a:	74 0e                	je     ffffffff80104c9a <bread+0xd8>$/;"	l
ffffffff80104c8c	obj/kern/kernel.asm	/^ffffffff80104c8c:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff80104c8f	obj/kern/kernel.asm	/^ffffffff80104c8f:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80104c93	obj/kern/kernel.asm	/^ffffffff80104c93:	5b                   	pop    %rbx$/;"	l
ffffffff80104c94	obj/kern/kernel.asm	/^ffffffff80104c94:	41 5c                	pop    %r12$/;"	l
ffffffff80104c96	obj/kern/kernel.asm	/^ffffffff80104c96:	41 5d                	pop    %r13$/;"	l
ffffffff80104c98	obj/kern/kernel.asm	/^ffffffff80104c98:	5d                   	pop    %rbp$/;"	l
ffffffff80104c99	obj/kern/kernel.asm	/^ffffffff80104c99:	c3                   	retq   $/;"	l
ffffffff80104c9a	obj/kern/kernel.asm	/^ffffffff80104c9a:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104c9d	obj/kern/kernel.asm	/^ffffffff80104c9d:	e8 b2 03 00 00       	callq  ffffffff80105054 <iderw>$/;"	l
ffffffff80104ca2	obj/kern/kernel.asm	/^ffffffff80104ca2:	eb e8                	jmp    ffffffff80104c8c <bread+0xca>$/;"	l
ffffffff80104ca4	obj/kern/kernel.asm	/^ffffffff80104ca4 <bwrite>:$/;"	l
ffffffff80104ca4	obj/kern/kernel.asm	/^ffffffff80104ca4:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104ca8	obj/kern/kernel.asm	/^ffffffff80104ca8:	55                   	push   %rbp$/;"	l
ffffffff80104ca9	obj/kern/kernel.asm	/^ffffffff80104ca9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104cac	obj/kern/kernel.asm	/^ffffffff80104cac:	53                   	push   %rbx$/;"	l
ffffffff80104cad	obj/kern/kernel.asm	/^ffffffff80104cad:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80104cb1	obj/kern/kernel.asm	/^ffffffff80104cb1:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80104cb4	obj/kern/kernel.asm	/^ffffffff80104cb4:	48 8d 7f 10          	lea    0x10(%rdi),%rdi$/;"	l
ffffffff80104cb8	obj/kern/kernel.asm	/^ffffffff80104cb8:	e8 79 01 00 00       	callq  ffffffff80104e36 <holdingsleep>$/;"	l
ffffffff80104cbd	obj/kern/kernel.asm	/^ffffffff80104cbd:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104cbf	obj/kern/kernel.asm	/^ffffffff80104cbf:	74 12                	je     ffffffff80104cd3 <bwrite+0x2f>$/;"	l
ffffffff80104cc1	obj/kern/kernel.asm	/^ffffffff80104cc1:	83 0b 04             	orl    $0x4,(%rbx)$/;"	l
ffffffff80104cc4	obj/kern/kernel.asm	/^ffffffff80104cc4:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104cc7	obj/kern/kernel.asm	/^ffffffff80104cc7:	e8 88 03 00 00       	callq  ffffffff80105054 <iderw>$/;"	l
ffffffff80104ccc	obj/kern/kernel.asm	/^ffffffff80104ccc:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80104cd0	obj/kern/kernel.asm	/^ffffffff80104cd0:	5b                   	pop    %rbx$/;"	l
ffffffff80104cd1	obj/kern/kernel.asm	/^ffffffff80104cd1:	5d                   	pop    %rbp$/;"	l
ffffffff80104cd2	obj/kern/kernel.asm	/^ffffffff80104cd2:	c3                   	retq   $/;"	l
ffffffff80104cd3	obj/kern/kernel.asm	/^ffffffff80104cd3:	48 c7 c7 2c 76 10 80 	mov    $0xffffffff8010762c,%rdi$/;"	l
ffffffff80104cda	obj/kern/kernel.asm	/^ffffffff80104cda:	e8 44 b9 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80104cdf	obj/kern/kernel.asm	/^ffffffff80104cdf <brelse>:$/;"	l
ffffffff80104cdf	obj/kern/kernel.asm	/^ffffffff80104cdf:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104ce3	obj/kern/kernel.asm	/^ffffffff80104ce3:	55                   	push   %rbp$/;"	l
ffffffff80104ce4	obj/kern/kernel.asm	/^ffffffff80104ce4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104ce7	obj/kern/kernel.asm	/^ffffffff80104ce7:	41 54                	push   %r12$/;"	l
ffffffff80104ce9	obj/kern/kernel.asm	/^ffffffff80104ce9:	53                   	push   %rbx$/;"	l
ffffffff80104cea	obj/kern/kernel.asm	/^ffffffff80104cea:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80104ced	obj/kern/kernel.asm	/^ffffffff80104ced:	4c 8d 67 10          	lea    0x10(%rdi),%r12$/;"	l
ffffffff80104cf1	obj/kern/kernel.asm	/^ffffffff80104cf1:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104cf4	obj/kern/kernel.asm	/^ffffffff80104cf4:	e8 3d 01 00 00       	callq  ffffffff80104e36 <holdingsleep>$/;"	l
ffffffff80104cf9	obj/kern/kernel.asm	/^ffffffff80104cf9:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80104cfb	obj/kern/kernel.asm	/^ffffffff80104cfb:	74 6d                	je     ffffffff80104d6a <brelse+0x8b>$/;"	l
ffffffff80104cfd	obj/kern/kernel.asm	/^ffffffff80104cfd:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104d00	obj/kern/kernel.asm	/^ffffffff80104d00:	e8 f5 00 00 00       	callq  ffffffff80104dfa <releasesleep>$/;"	l
ffffffff80104d05	obj/kern/kernel.asm	/^ffffffff80104d05:	48 c7 c7 c0 ec 10 80 	mov    $0xffffffff8010ecc0,%rdi$/;"	l
ffffffff80104d0c	obj/kern/kernel.asm	/^ffffffff80104d0c:	e8 8e b7 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80104d11	obj/kern/kernel.asm	/^ffffffff80104d11:	8b 43 40             	mov    0x40(%rbx),%eax$/;"	l
ffffffff80104d14	obj/kern/kernel.asm	/^ffffffff80104d14:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffffffff80104d17	obj/kern/kernel.asm	/^ffffffff80104d17:	89 43 40             	mov    %eax,0x40(%rbx)$/;"	l
ffffffff80104d1a	obj/kern/kernel.asm	/^ffffffff80104d1a:	75 3d                	jne    ffffffff80104d59 <brelse+0x7a>$/;"	l
ffffffff80104d1c	obj/kern/kernel.asm	/^ffffffff80104d1c:	48 8b 43 50          	mov    0x50(%rbx),%rax$/;"	l
ffffffff80104d20	obj/kern/kernel.asm	/^ffffffff80104d20:	48 8b 53 48          	mov    0x48(%rbx),%rdx$/;"	l
ffffffff80104d24	obj/kern/kernel.asm	/^ffffffff80104d24:	48 89 50 48          	mov    %rdx,0x48(%rax)$/;"	l
ffffffff80104d28	obj/kern/kernel.asm	/^ffffffff80104d28:	48 8b 43 48          	mov    0x48(%rbx),%rax$/;"	l
ffffffff80104d2c	obj/kern/kernel.asm	/^ffffffff80104d2c:	48 8b 53 50          	mov    0x50(%rbx),%rdx$/;"	l
ffffffff80104d30	obj/kern/kernel.asm	/^ffffffff80104d30:	48 89 50 50          	mov    %rdx,0x50(%rax)$/;"	l
ffffffff80104d34	obj/kern/kernel.asm	/^ffffffff80104d34:	48 8b 05 2d e7 00 00 	mov    0xe72d(%rip),%rax        # ffffffff80113468 <bcache+0x47a8>$/;"	l
ffffffff80104d3b	obj/kern/kernel.asm	/^ffffffff80104d3b:	48 89 43 50          	mov    %rax,0x50(%rbx)$/;"	l
ffffffff80104d3f	obj/kern/kernel.asm	/^ffffffff80104d3f:	48 c7 43 48 18 34 11 	movq   $0xffffffff80113418,0x48(%rbx)$/;"	l
ffffffff80104d46	obj/kern/kernel.asm	/^ffffffff80104d46:	80 $/;"	l
ffffffff80104d47	obj/kern/kernel.asm	/^ffffffff80104d47:	48 8b 05 1a e7 00 00 	mov    0xe71a(%rip),%rax        # ffffffff80113468 <bcache+0x47a8>$/;"	l
ffffffff80104d4e	obj/kern/kernel.asm	/^ffffffff80104d4e:	48 89 58 48          	mov    %rbx,0x48(%rax)$/;"	l
ffffffff80104d52	obj/kern/kernel.asm	/^ffffffff80104d52:	48 89 1d 0f e7 00 00 	mov    %rbx,0xe70f(%rip)        # ffffffff80113468 <bcache+0x47a8>$/;"	l
ffffffff80104d59	obj/kern/kernel.asm	/^ffffffff80104d59:	48 c7 c7 c0 ec 10 80 	mov    $0xffffffff8010ecc0,%rdi$/;"	l
ffffffff80104d60	obj/kern/kernel.asm	/^ffffffff80104d60:	e8 88 b7 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80104d65	obj/kern/kernel.asm	/^ffffffff80104d65:	5b                   	pop    %rbx$/;"	l
ffffffff80104d66	obj/kern/kernel.asm	/^ffffffff80104d66:	41 5c                	pop    %r12$/;"	l
ffffffff80104d68	obj/kern/kernel.asm	/^ffffffff80104d68:	5d                   	pop    %rbp$/;"	l
ffffffff80104d69	obj/kern/kernel.asm	/^ffffffff80104d69:	c3                   	retq   $/;"	l
ffffffff80104d6a	obj/kern/kernel.asm	/^ffffffff80104d6a:	48 c7 c7 33 76 10 80 	mov    $0xffffffff80107633,%rdi$/;"	l
ffffffff80104d71	obj/kern/kernel.asm	/^ffffffff80104d71:	e8 ad b8 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80104d76	obj/kern/kernel.asm	/^ffffffff80104d76 <initsleeplock>:$/;"	l
ffffffff80104d76	obj/kern/kernel.asm	/^ffffffff80104d76:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104d7a	obj/kern/kernel.asm	/^ffffffff80104d7a:	55                   	push   %rbp$/;"	l
ffffffff80104d7b	obj/kern/kernel.asm	/^ffffffff80104d7b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104d7e	obj/kern/kernel.asm	/^ffffffff80104d7e:	41 54                	push   %r12$/;"	l
ffffffff80104d80	obj/kern/kernel.asm	/^ffffffff80104d80:	53                   	push   %rbx$/;"	l
ffffffff80104d81	obj/kern/kernel.asm	/^ffffffff80104d81:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80104d84	obj/kern/kernel.asm	/^ffffffff80104d84:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff80104d87	obj/kern/kernel.asm	/^ffffffff80104d87:	48 8d 7f 08          	lea    0x8(%rdi),%rdi$/;"	l
ffffffff80104d8b	obj/kern/kernel.asm	/^ffffffff80104d8b:	48 c7 c6 3a 76 10 80 	mov    $0xffffffff8010763a,%rsi$/;"	l
ffffffff80104d92	obj/kern/kernel.asm	/^ffffffff80104d92:	e8 0c b6 ff ff       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff80104d97	obj/kern/kernel.asm	/^ffffffff80104d97:	4c 89 63 20          	mov    %r12,0x20(%rbx)$/;"	l
ffffffff80104d9b	obj/kern/kernel.asm	/^ffffffff80104d9b:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)$/;"	l
ffffffff80104da1	obj/kern/kernel.asm	/^ffffffff80104da1:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%rbx)$/;"	l
ffffffff80104da8	obj/kern/kernel.asm	/^ffffffff80104da8:	5b                   	pop    %rbx$/;"	l
ffffffff80104da9	obj/kern/kernel.asm	/^ffffffff80104da9:	41 5c                	pop    %r12$/;"	l
ffffffff80104dab	obj/kern/kernel.asm	/^ffffffff80104dab:	5d                   	pop    %rbp$/;"	l
ffffffff80104dac	obj/kern/kernel.asm	/^ffffffff80104dac:	c3                   	retq   $/;"	l
ffffffff80104dad	obj/kern/kernel.asm	/^ffffffff80104dad <acquiresleep>:$/;"	l
ffffffff80104dad	obj/kern/kernel.asm	/^ffffffff80104dad:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104db1	obj/kern/kernel.asm	/^ffffffff80104db1:	55                   	push   %rbp$/;"	l
ffffffff80104db2	obj/kern/kernel.asm	/^ffffffff80104db2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104db5	obj/kern/kernel.asm	/^ffffffff80104db5:	41 54                	push   %r12$/;"	l
ffffffff80104db7	obj/kern/kernel.asm	/^ffffffff80104db7:	53                   	push   %rbx$/;"	l
ffffffff80104db8	obj/kern/kernel.asm	/^ffffffff80104db8:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80104dbb	obj/kern/kernel.asm	/^ffffffff80104dbb:	4c 8d 67 08          	lea    0x8(%rdi),%r12$/;"	l
ffffffff80104dbf	obj/kern/kernel.asm	/^ffffffff80104dbf:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104dc2	obj/kern/kernel.asm	/^ffffffff80104dc2:	e8 d8 b6 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80104dc7	obj/kern/kernel.asm	/^ffffffff80104dc7:	83 3b 00             	cmpl   $0x0,(%rbx)$/;"	l
ffffffff80104dca	obj/kern/kernel.asm	/^ffffffff80104dca:	74 10                	je     ffffffff80104ddc <acquiresleep+0x2f>$/;"	l
ffffffff80104dcc	obj/kern/kernel.asm	/^ffffffff80104dcc:	4c 89 e6             	mov    %r12,%rsi$/;"	l
ffffffff80104dcf	obj/kern/kernel.asm	/^ffffffff80104dcf:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104dd2	obj/kern/kernel.asm	/^ffffffff80104dd2:	e8 cd c8 ff ff       	callq  ffffffff801016a4 <sleep>$/;"	l
ffffffff80104dd7	obj/kern/kernel.asm	/^ffffffff80104dd7:	83 3b 00             	cmpl   $0x0,(%rbx)$/;"	l
ffffffff80104dda	obj/kern/kernel.asm	/^ffffffff80104dda:	75 f0                	jne    ffffffff80104dcc <acquiresleep+0x1f>$/;"	l
ffffffff80104ddc	obj/kern/kernel.asm	/^ffffffff80104ddc:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)$/;"	l
ffffffff80104de2	obj/kern/kernel.asm	/^ffffffff80104de2:	e8 09 c3 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80104de7	obj/kern/kernel.asm	/^ffffffff80104de7:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffffffff80104dea	obj/kern/kernel.asm	/^ffffffff80104dea:	89 43 28             	mov    %eax,0x28(%rbx)$/;"	l
ffffffff80104ded	obj/kern/kernel.asm	/^ffffffff80104ded:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104df0	obj/kern/kernel.asm	/^ffffffff80104df0:	e8 f8 b6 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80104df5	obj/kern/kernel.asm	/^ffffffff80104df5:	5b                   	pop    %rbx$/;"	l
ffffffff80104df6	obj/kern/kernel.asm	/^ffffffff80104df6:	41 5c                	pop    %r12$/;"	l
ffffffff80104df8	obj/kern/kernel.asm	/^ffffffff80104df8:	5d                   	pop    %rbp$/;"	l
ffffffff80104df9	obj/kern/kernel.asm	/^ffffffff80104df9:	c3                   	retq   $/;"	l
ffffffff80104dfa	obj/kern/kernel.asm	/^ffffffff80104dfa <releasesleep>:$/;"	l
ffffffff80104dfa	obj/kern/kernel.asm	/^ffffffff80104dfa:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104dfe	obj/kern/kernel.asm	/^ffffffff80104dfe:	55                   	push   %rbp$/;"	l
ffffffff80104dff	obj/kern/kernel.asm	/^ffffffff80104dff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104e02	obj/kern/kernel.asm	/^ffffffff80104e02:	41 54                	push   %r12$/;"	l
ffffffff80104e04	obj/kern/kernel.asm	/^ffffffff80104e04:	53                   	push   %rbx$/;"	l
ffffffff80104e05	obj/kern/kernel.asm	/^ffffffff80104e05:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80104e08	obj/kern/kernel.asm	/^ffffffff80104e08:	4c 8d 67 08          	lea    0x8(%rdi),%r12$/;"	l
ffffffff80104e0c	obj/kern/kernel.asm	/^ffffffff80104e0c:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104e0f	obj/kern/kernel.asm	/^ffffffff80104e0f:	e8 8b b6 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80104e14	obj/kern/kernel.asm	/^ffffffff80104e14:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)$/;"	l
ffffffff80104e1a	obj/kern/kernel.asm	/^ffffffff80104e1a:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%rbx)$/;"	l
ffffffff80104e21	obj/kern/kernel.asm	/^ffffffff80104e21:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80104e24	obj/kern/kernel.asm	/^ffffffff80104e24:	e8 ce c7 ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff80104e29	obj/kern/kernel.asm	/^ffffffff80104e29:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104e2c	obj/kern/kernel.asm	/^ffffffff80104e2c:	e8 bc b6 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80104e31	obj/kern/kernel.asm	/^ffffffff80104e31:	5b                   	pop    %rbx$/;"	l
ffffffff80104e32	obj/kern/kernel.asm	/^ffffffff80104e32:	41 5c                	pop    %r12$/;"	l
ffffffff80104e34	obj/kern/kernel.asm	/^ffffffff80104e34:	5d                   	pop    %rbp$/;"	l
ffffffff80104e35	obj/kern/kernel.asm	/^ffffffff80104e35:	c3                   	retq   $/;"	l
ffffffff80104e36	obj/kern/kernel.asm	/^ffffffff80104e36 <holdingsleep>:$/;"	l
ffffffff80104e36	obj/kern/kernel.asm	/^ffffffff80104e36:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104e3a	obj/kern/kernel.asm	/^ffffffff80104e3a:	55                   	push   %rbp$/;"	l
ffffffff80104e3b	obj/kern/kernel.asm	/^ffffffff80104e3b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104e3e	obj/kern/kernel.asm	/^ffffffff80104e3e:	41 55                	push   %r13$/;"	l
ffffffff80104e40	obj/kern/kernel.asm	/^ffffffff80104e40:	41 54                	push   %r12$/;"	l
ffffffff80104e42	obj/kern/kernel.asm	/^ffffffff80104e42:	53                   	push   %rbx$/;"	l
ffffffff80104e43	obj/kern/kernel.asm	/^ffffffff80104e43:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80104e47	obj/kern/kernel.asm	/^ffffffff80104e47:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80104e4a	obj/kern/kernel.asm	/^ffffffff80104e4a:	4c 8d 67 08          	lea    0x8(%rdi),%r12$/;"	l
ffffffff80104e4e	obj/kern/kernel.asm	/^ffffffff80104e4e:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104e51	obj/kern/kernel.asm	/^ffffffff80104e51:	e8 49 b6 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80104e56	obj/kern/kernel.asm	/^ffffffff80104e56:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
ffffffff80104e5c	obj/kern/kernel.asm	/^ffffffff80104e5c:	83 3b 00             	cmpl   $0x0,(%rbx)$/;"	l
ffffffff80104e5f	obj/kern/kernel.asm	/^ffffffff80104e5f:	75 16                	jne    ffffffff80104e77 <holdingsleep+0x41>$/;"	l
ffffffff80104e61	obj/kern/kernel.asm	/^ffffffff80104e61:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80104e64	obj/kern/kernel.asm	/^ffffffff80104e64:	e8 84 b6 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80104e69	obj/kern/kernel.asm	/^ffffffff80104e69:	44 89 e8             	mov    %r13d,%eax$/;"	l
ffffffff80104e6c	obj/kern/kernel.asm	/^ffffffff80104e6c:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80104e70	obj/kern/kernel.asm	/^ffffffff80104e70:	5b                   	pop    %rbx$/;"	l
ffffffff80104e71	obj/kern/kernel.asm	/^ffffffff80104e71:	41 5c                	pop    %r12$/;"	l
ffffffff80104e73	obj/kern/kernel.asm	/^ffffffff80104e73:	41 5d                	pop    %r13$/;"	l
ffffffff80104e75	obj/kern/kernel.asm	/^ffffffff80104e75:	5d                   	pop    %rbp$/;"	l
ffffffff80104e76	obj/kern/kernel.asm	/^ffffffff80104e76:	c3                   	retq   $/;"	l
ffffffff80104e77	obj/kern/kernel.asm	/^ffffffff80104e77:	8b 5b 28             	mov    0x28(%rbx),%ebx$/;"	l
ffffffff80104e7a	obj/kern/kernel.asm	/^ffffffff80104e7a:	e8 71 c2 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80104e7f	obj/kern/kernel.asm	/^ffffffff80104e7f:	39 58 1c             	cmp    %ebx,0x1c(%rax)$/;"	l
ffffffff80104e82	obj/kern/kernel.asm	/^ffffffff80104e82:	41 0f 94 c5          	sete   %r13b$/;"	l
ffffffff80104e86	obj/kern/kernel.asm	/^ffffffff80104e86:	45 0f b6 ed          	movzbl %r13b,%r13d$/;"	l
ffffffff80104e8a	obj/kern/kernel.asm	/^ffffffff80104e8a:	eb d5                	jmp    ffffffff80104e61 <holdingsleep+0x2b>$/;"	l
ffffffff80104e8c	obj/kern/kernel.asm	/^ffffffff80104e8c <ideinit>:$/;"	l
ffffffff80104e8c	obj/kern/kernel.asm	/^ffffffff80104e8c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104e90	obj/kern/kernel.asm	/^ffffffff80104e90:	55                   	push   %rbp$/;"	l
ffffffff80104e91	obj/kern/kernel.asm	/^ffffffff80104e91:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104e94	obj/kern/kernel.asm	/^ffffffff80104e94:	48 c7 c6 45 76 10 80 	mov    $0xffffffff80107645,%rsi$/;"	l
ffffffff80104e9b	obj/kern/kernel.asm	/^ffffffff80104e9b:	48 c7 c7 40 8c 10 80 	mov    $0xffffffff80108c40,%rdi$/;"	l
ffffffff80104ea2	obj/kern/kernel.asm	/^ffffffff80104ea2:	e8 fc b4 ff ff       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff80104ea7	obj/kern/kernel.asm	/^ffffffff80104ea7:	8b 05 93 55 00 00    	mov    0x5593(%rip),%eax        # ffffffff8010a440 <ncpu>$/;"	l
ffffffff80104ead	obj/kern/kernel.asm	/^ffffffff80104ead:	8d 70 ff             	lea    -0x1(%rax),%esi$/;"	l
ffffffff80104eb0	obj/kern/kernel.asm	/^ffffffff80104eb0:	bf 0e 00 00 00       	mov    $0xe,%edi$/;"	l
ffffffff80104eb5	obj/kern/kernel.asm	/^ffffffff80104eb5:	e8 6a ea ff ff       	callq  ffffffff80103924 <ioapicenable>$/;"	l
ffffffff80104eba	obj/kern/kernel.asm	/^ffffffff80104eba:	ba f7 01 00 00       	mov    $0x1f7,%edx$/;"	l
ffffffff80104ebf	obj/kern/kernel.asm	/^ffffffff80104ebf:	ec                   	in     (%dx),%al$/;"	l
ffffffff80104ec0	obj/kern/kernel.asm	/^ffffffff80104ec0:	83 e0 c0             	and    $0xffffffc0,%eax$/;"	l
ffffffff80104ec3	obj/kern/kernel.asm	/^ffffffff80104ec3:	3c 40                	cmp    $0x40,%al$/;"	l
ffffffff80104ec5	obj/kern/kernel.asm	/^ffffffff80104ec5:	75 f8                	jne    ffffffff80104ebf <ideinit+0x33>$/;"	l
ffffffff80104ec7	obj/kern/kernel.asm	/^ffffffff80104ec7:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
ffffffff80104ecc	obj/kern/kernel.asm	/^ffffffff80104ecc:	ba f6 01 00 00       	mov    $0x1f6,%edx$/;"	l
ffffffff80104ed1	obj/kern/kernel.asm	/^ffffffff80104ed1:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104ed2	obj/kern/kernel.asm	/^ffffffff80104ed2:	b9 e8 03 00 00       	mov    $0x3e8,%ecx$/;"	l
ffffffff80104ed7	obj/kern/kernel.asm	/^ffffffff80104ed7:	ba f7 01 00 00       	mov    $0x1f7,%edx$/;"	l
ffffffff80104edc	obj/kern/kernel.asm	/^ffffffff80104edc:	eb 05                	jmp    ffffffff80104ee3 <ideinit+0x57>$/;"	l
ffffffff80104ede	obj/kern/kernel.asm	/^ffffffff80104ede:	83 e9 01             	sub    $0x1,%ecx$/;"	l
ffffffff80104ee1	obj/kern/kernel.asm	/^ffffffff80104ee1:	74 13                	je     ffffffff80104ef6 <ideinit+0x6a>$/;"	l
ffffffff80104ee3	obj/kern/kernel.asm	/^ffffffff80104ee3:	ec                   	in     (%dx),%al$/;"	l
ffffffff80104ee4	obj/kern/kernel.asm	/^ffffffff80104ee4:	84 c0                	test   %al,%al$/;"	l
ffffffff80104ee6	obj/kern/kernel.asm	/^ffffffff80104ee6:	74 f6                	je     ffffffff80104ede <ideinit+0x52>$/;"	l
ffffffff80104ee8	obj/kern/kernel.asm	/^ffffffff80104ee8:	a8 a1                	test   $0xa1,%al$/;"	l
ffffffff80104eea	obj/kern/kernel.asm	/^ffffffff80104eea:	75 f2                	jne    ffffffff80104ede <ideinit+0x52>$/;"	l
ffffffff80104eec	obj/kern/kernel.asm	/^ffffffff80104eec:	c7 05 3a 3d 00 00 01 	movl   $0x1,0x3d3a(%rip)        # ffffffff80108c30 <havedisk1>$/;"	l
ffffffff80104ef3	obj/kern/kernel.asm	/^ffffffff80104ef3:	00 00 00 $/;"	l
ffffffff80104ef6	obj/kern/kernel.asm	/^ffffffff80104ef6:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax$/;"	l
ffffffff80104efb	obj/kern/kernel.asm	/^ffffffff80104efb:	ba f6 01 00 00       	mov    $0x1f6,%edx$/;"	l
ffffffff80104f00	obj/kern/kernel.asm	/^ffffffff80104f00:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104f01	obj/kern/kernel.asm	/^ffffffff80104f01:	5d                   	pop    %rbp$/;"	l
ffffffff80104f02	obj/kern/kernel.asm	/^ffffffff80104f02:	c3                   	retq   $/;"	l
ffffffff80104f03	obj/kern/kernel.asm	/^ffffffff80104f03 <idestart>:$/;"	l
ffffffff80104f03	obj/kern/kernel.asm	/^ffffffff80104f03:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104f07	obj/kern/kernel.asm	/^ffffffff80104f07:	55                   	push   %rbp$/;"	l
ffffffff80104f08	obj/kern/kernel.asm	/^ffffffff80104f08:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104f0b	obj/kern/kernel.asm	/^ffffffff80104f0b:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff80104f0e	obj/kern/kernel.asm	/^ffffffff80104f0e:	0f 84 85 00 00 00    	je     ffffffff80104f99 <idestart+0x96>$/;"	l
ffffffff80104f14	obj/kern/kernel.asm	/^ffffffff80104f14:	8b 4f 08             	mov    0x8(%rdi),%ecx$/;"	l
ffffffff80104f17	obj/kern/kernel.asm	/^ffffffff80104f17:	81 f9 e7 03 00 00    	cmp    $0x3e7,%ecx$/;"	l
ffffffff80104f1d	obj/kern/kernel.asm	/^ffffffff80104f1d:	0f 87 82 00 00 00    	ja     ffffffff80104fa5 <idestart+0xa2>$/;"	l
ffffffff80104f23	obj/kern/kernel.asm	/^ffffffff80104f23:	ba f7 01 00 00       	mov    $0x1f7,%edx$/;"	l
ffffffff80104f28	obj/kern/kernel.asm	/^ffffffff80104f28:	ec                   	in     (%dx),%al$/;"	l
ffffffff80104f29	obj/kern/kernel.asm	/^ffffffff80104f29:	83 e0 c0             	and    $0xffffffc0,%eax$/;"	l
ffffffff80104f2c	obj/kern/kernel.asm	/^ffffffff80104f2c:	3c 40                	cmp    $0x40,%al$/;"	l
ffffffff80104f2e	obj/kern/kernel.asm	/^ffffffff80104f2e:	75 f8                	jne    ffffffff80104f28 <idestart+0x25>$/;"	l
ffffffff80104f30	obj/kern/kernel.asm	/^ffffffff80104f30:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80104f35	obj/kern/kernel.asm	/^ffffffff80104f35:	ba f6 03 00 00       	mov    $0x3f6,%edx$/;"	l
ffffffff80104f3a	obj/kern/kernel.asm	/^ffffffff80104f3a:	89 f0                	mov    %esi,%eax$/;"	l
ffffffff80104f3c	obj/kern/kernel.asm	/^ffffffff80104f3c:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104f3d	obj/kern/kernel.asm	/^ffffffff80104f3d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffffffff80104f42	obj/kern/kernel.asm	/^ffffffff80104f42:	ba f2 01 00 00       	mov    $0x1f2,%edx$/;"	l
ffffffff80104f47	obj/kern/kernel.asm	/^ffffffff80104f47:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104f48	obj/kern/kernel.asm	/^ffffffff80104f48:	ba f3 01 00 00       	mov    $0x1f3,%edx$/;"	l
ffffffff80104f4d	obj/kern/kernel.asm	/^ffffffff80104f4d:	89 c8                	mov    %ecx,%eax$/;"	l
ffffffff80104f4f	obj/kern/kernel.asm	/^ffffffff80104f4f:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104f50	obj/kern/kernel.asm	/^ffffffff80104f50:	89 c8                	mov    %ecx,%eax$/;"	l
ffffffff80104f52	obj/kern/kernel.asm	/^ffffffff80104f52:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffffffff80104f55	obj/kern/kernel.asm	/^ffffffff80104f55:	ba f4 01 00 00       	mov    $0x1f4,%edx$/;"	l
ffffffff80104f5a	obj/kern/kernel.asm	/^ffffffff80104f5a:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104f5b	obj/kern/kernel.asm	/^ffffffff80104f5b:	ba f5 01 00 00       	mov    $0x1f5,%edx$/;"	l
ffffffff80104f60	obj/kern/kernel.asm	/^ffffffff80104f60:	89 f0                	mov    %esi,%eax$/;"	l
ffffffff80104f62	obj/kern/kernel.asm	/^ffffffff80104f62:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104f63	obj/kern/kernel.asm	/^ffffffff80104f63:	0f b6 47 04          	movzbl 0x4(%rdi),%eax$/;"	l
ffffffff80104f67	obj/kern/kernel.asm	/^ffffffff80104f67:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffffffff80104f6a	obj/kern/kernel.asm	/^ffffffff80104f6a:	83 e0 10             	and    $0x10,%eax$/;"	l
ffffffff80104f6d	obj/kern/kernel.asm	/^ffffffff80104f6d:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
ffffffff80104f70	obj/kern/kernel.asm	/^ffffffff80104f70:	ba f6 01 00 00       	mov    $0x1f6,%edx$/;"	l
ffffffff80104f75	obj/kern/kernel.asm	/^ffffffff80104f75:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104f76	obj/kern/kernel.asm	/^ffffffff80104f76:	f6 07 04             	testb  $0x4,(%rdi)$/;"	l
ffffffff80104f79	obj/kern/kernel.asm	/^ffffffff80104f79:	74 36                	je     ffffffff80104fb1 <idestart+0xae>$/;"	l
ffffffff80104f7b	obj/kern/kernel.asm	/^ffffffff80104f7b:	b8 30 00 00 00       	mov    $0x30,%eax$/;"	l
ffffffff80104f80	obj/kern/kernel.asm	/^ffffffff80104f80:	ba f7 01 00 00       	mov    $0x1f7,%edx$/;"	l
ffffffff80104f85	obj/kern/kernel.asm	/^ffffffff80104f85:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104f86	obj/kern/kernel.asm	/^ffffffff80104f86:	48 8d 77 60          	lea    0x60(%rdi),%rsi$/;"	l
ffffffff80104f8a	obj/kern/kernel.asm	/^ffffffff80104f8a:	b9 80 00 00 00       	mov    $0x80,%ecx$/;"	l
ffffffff80104f8f	obj/kern/kernel.asm	/^ffffffff80104f8f:	ba f0 01 00 00       	mov    $0x1f0,%edx$/;"	l
ffffffff80104f94	obj/kern/kernel.asm	/^ffffffff80104f94:	fc                   	cld    $/;"	l
ffffffff80104f95	obj/kern/kernel.asm	/^ffffffff80104f95:	f3 6f                	rep outsl %ds:(%rsi),(%dx)$/;"	l
ffffffff80104f97	obj/kern/kernel.asm	/^ffffffff80104f97:	5d                   	pop    %rbp$/;"	l
ffffffff80104f98	obj/kern/kernel.asm	/^ffffffff80104f98:	c3                   	retq   $/;"	l
ffffffff80104f99	obj/kern/kernel.asm	/^ffffffff80104f99:	48 c7 c7 49 76 10 80 	mov    $0xffffffff80107649,%rdi$/;"	l
ffffffff80104fa0	obj/kern/kernel.asm	/^ffffffff80104fa0:	e8 7e b6 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80104fa5	obj/kern/kernel.asm	/^ffffffff80104fa5:	48 c7 c7 52 76 10 80 	mov    $0xffffffff80107652,%rdi$/;"	l
ffffffff80104fac	obj/kern/kernel.asm	/^ffffffff80104fac:	e8 72 b6 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80104fb1	obj/kern/kernel.asm	/^ffffffff80104fb1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
ffffffff80104fb6	obj/kern/kernel.asm	/^ffffffff80104fb6:	ba f7 01 00 00       	mov    $0x1f7,%edx$/;"	l
ffffffff80104fbb	obj/kern/kernel.asm	/^ffffffff80104fbb:	ee                   	out    %al,(%dx)$/;"	l
ffffffff80104fbc	obj/kern/kernel.asm	/^ffffffff80104fbc:	eb d9                	jmp    ffffffff80104f97 <idestart+0x94>$/;"	l
ffffffff80104fbe	obj/kern/kernel.asm	/^ffffffff80104fbe <ideintr>:$/;"	l
ffffffff80104fbe	obj/kern/kernel.asm	/^ffffffff80104fbe:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80104fc2	obj/kern/kernel.asm	/^ffffffff80104fc2:	55                   	push   %rbp$/;"	l
ffffffff80104fc3	obj/kern/kernel.asm	/^ffffffff80104fc3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80104fc6	obj/kern/kernel.asm	/^ffffffff80104fc6:	48 c7 c7 40 8c 10 80 	mov    $0xffffffff80108c40,%rdi$/;"	l
ffffffff80104fcd	obj/kern/kernel.asm	/^ffffffff80104fcd:	e8 cd b4 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80104fd2	obj/kern/kernel.asm	/^ffffffff80104fd2:	48 8b 35 5f 3c 00 00 	mov    0x3c5f(%rip),%rsi        # ffffffff80108c38 <idequeue>$/;"	l
ffffffff80104fd9	obj/kern/kernel.asm	/^ffffffff80104fd9:	48 85 f6             	test   %rsi,%rsi$/;"	l
ffffffff80104fdc	obj/kern/kernel.asm	/^ffffffff80104fdc:	74 41                	je     ffffffff8010501f <ideintr+0x61>$/;"	l
ffffffff80104fde	obj/kern/kernel.asm	/^ffffffff80104fde:	48 8b 46 58          	mov    0x58(%rsi),%rax$/;"	l
ffffffff80104fe2	obj/kern/kernel.asm	/^ffffffff80104fe2:	48 89 05 4f 3c 00 00 	mov    %rax,0x3c4f(%rip)        # ffffffff80108c38 <idequeue>$/;"	l
ffffffff80104fe9	obj/kern/kernel.asm	/^ffffffff80104fe9:	f6 06 04             	testb  $0x4,(%rsi)$/;"	l
ffffffff80104fec	obj/kern/kernel.asm	/^ffffffff80104fec:	74 3f                	je     ffffffff8010502d <ideintr+0x6f>$/;"	l
ffffffff80104fee	obj/kern/kernel.asm	/^ffffffff80104fee:	8b 06                	mov    (%rsi),%eax$/;"	l
ffffffff80104ff0	obj/kern/kernel.asm	/^ffffffff80104ff0:	83 e0 fb             	and    $0xfffffffb,%eax$/;"	l
ffffffff80104ff3	obj/kern/kernel.asm	/^ffffffff80104ff3:	83 c8 02             	or     $0x2,%eax$/;"	l
ffffffff80104ff6	obj/kern/kernel.asm	/^ffffffff80104ff6:	89 06                	mov    %eax,(%rsi)$/;"	l
ffffffff80104ff8	obj/kern/kernel.asm	/^ffffffff80104ff8:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffffffff80104ffb	obj/kern/kernel.asm	/^ffffffff80104ffb:	e8 f7 c5 ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff80105000	obj/kern/kernel.asm	/^ffffffff80105000:	48 8b 3d 31 3c 00 00 	mov    0x3c31(%rip),%rdi        # ffffffff80108c38 <idequeue>$/;"	l
ffffffff80105007	obj/kern/kernel.asm	/^ffffffff80105007:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff8010500a	obj/kern/kernel.asm	/^ffffffff8010500a:	74 05                	je     ffffffff80105011 <ideintr+0x53>$/;"	l
ffffffff8010500c	obj/kern/kernel.asm	/^ffffffff8010500c:	e8 f2 fe ff ff       	callq  ffffffff80104f03 <idestart>$/;"	l
ffffffff80105011	obj/kern/kernel.asm	/^ffffffff80105011:	48 c7 c7 40 8c 10 80 	mov    $0xffffffff80108c40,%rdi$/;"	l
ffffffff80105018	obj/kern/kernel.asm	/^ffffffff80105018:	e8 d0 b4 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010501d	obj/kern/kernel.asm	/^ffffffff8010501d:	5d                   	pop    %rbp$/;"	l
ffffffff8010501e	obj/kern/kernel.asm	/^ffffffff8010501e:	c3                   	retq   $/;"	l
ffffffff8010501f	obj/kern/kernel.asm	/^ffffffff8010501f:	48 c7 c7 40 8c 10 80 	mov    $0xffffffff80108c40,%rdi$/;"	l
ffffffff80105026	obj/kern/kernel.asm	/^ffffffff80105026:	e8 c2 b4 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010502b	obj/kern/kernel.asm	/^ffffffff8010502b:	eb f0                	jmp    ffffffff8010501d <ideintr+0x5f>$/;"	l
ffffffff8010502d	obj/kern/kernel.asm	/^ffffffff8010502d:	ba f7 01 00 00       	mov    $0x1f7,%edx$/;"	l
ffffffff80105032	obj/kern/kernel.asm	/^ffffffff80105032:	ec                   	in     (%dx),%al$/;"	l
ffffffff80105033	obj/kern/kernel.asm	/^ffffffff80105033:	89 c1                	mov    %eax,%ecx$/;"	l
ffffffff80105035	obj/kern/kernel.asm	/^ffffffff80105035:	83 e0 c0             	and    $0xffffffc0,%eax$/;"	l
ffffffff80105038	obj/kern/kernel.asm	/^ffffffff80105038:	3c 40                	cmp    $0x40,%al$/;"	l
ffffffff8010503a	obj/kern/kernel.asm	/^ffffffff8010503a:	75 f6                	jne    ffffffff80105032 <ideintr+0x74>$/;"	l
ffffffff8010503c	obj/kern/kernel.asm	/^ffffffff8010503c:	f6 c1 21             	test   $0x21,%cl$/;"	l
ffffffff8010503f	obj/kern/kernel.asm	/^ffffffff8010503f:	75 ad                	jne    ffffffff80104fee <ideintr+0x30>$/;"	l
ffffffff80105041	obj/kern/kernel.asm	/^ffffffff80105041:	48 8d 7e 60          	lea    0x60(%rsi),%rdi$/;"	l
ffffffff80105045	obj/kern/kernel.asm	/^ffffffff80105045:	b9 80 00 00 00       	mov    $0x80,%ecx$/;"	l
ffffffff8010504a	obj/kern/kernel.asm	/^ffffffff8010504a:	ba f0 01 00 00       	mov    $0x1f0,%edx$/;"	l
ffffffff8010504f	obj/kern/kernel.asm	/^ffffffff8010504f:	fc                   	cld    $/;"	l
ffffffff80105050	obj/kern/kernel.asm	/^ffffffff80105050:	f3 6d                	rep insl (%dx),%es:(%rdi)$/;"	l
ffffffff80105052	obj/kern/kernel.asm	/^ffffffff80105052:	eb 9a                	jmp    ffffffff80104fee <ideintr+0x30>$/;"	l
ffffffff80105054	obj/kern/kernel.asm	/^ffffffff80105054 <iderw>:$/;"	l
ffffffff80105054	obj/kern/kernel.asm	/^ffffffff80105054:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105058	obj/kern/kernel.asm	/^ffffffff80105058:	55                   	push   %rbp$/;"	l
ffffffff80105059	obj/kern/kernel.asm	/^ffffffff80105059:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010505c	obj/kern/kernel.asm	/^ffffffff8010505c:	53                   	push   %rbx$/;"	l
ffffffff8010505d	obj/kern/kernel.asm	/^ffffffff8010505d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80105061	obj/kern/kernel.asm	/^ffffffff80105061:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80105064	obj/kern/kernel.asm	/^ffffffff80105064:	48 8d 7f 10          	lea    0x10(%rdi),%rdi$/;"	l
ffffffff80105068	obj/kern/kernel.asm	/^ffffffff80105068:	e8 c9 fd ff ff       	callq  ffffffff80104e36 <holdingsleep>$/;"	l
ffffffff8010506d	obj/kern/kernel.asm	/^ffffffff8010506d:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010506f	obj/kern/kernel.asm	/^ffffffff8010506f:	0f 84 93 00 00 00    	je     ffffffff80105108 <iderw+0xb4>$/;"	l
ffffffff80105075	obj/kern/kernel.asm	/^ffffffff80105075:	8b 03                	mov    (%rbx),%eax$/;"	l
ffffffff80105077	obj/kern/kernel.asm	/^ffffffff80105077:	83 e0 06             	and    $0x6,%eax$/;"	l
ffffffff8010507a	obj/kern/kernel.asm	/^ffffffff8010507a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffffffff8010507d	obj/kern/kernel.asm	/^ffffffff8010507d:	0f 84 91 00 00 00    	je     ffffffff80105114 <iderw+0xc0>$/;"	l
ffffffff80105083	obj/kern/kernel.asm	/^ffffffff80105083:	83 7b 04 00          	cmpl   $0x0,0x4(%rbx)$/;"	l
ffffffff80105087	obj/kern/kernel.asm	/^ffffffff80105087:	74 0d                	je     ffffffff80105096 <iderw+0x42>$/;"	l
ffffffff80105089	obj/kern/kernel.asm	/^ffffffff80105089:	83 3d a0 3b 00 00 00 	cmpl   $0x0,0x3ba0(%rip)        # ffffffff80108c30 <havedisk1>$/;"	l
ffffffff80105090	obj/kern/kernel.asm	/^ffffffff80105090:	0f 84 8a 00 00 00    	je     ffffffff80105120 <iderw+0xcc>$/;"	l
ffffffff80105096	obj/kern/kernel.asm	/^ffffffff80105096:	48 c7 c7 40 8c 10 80 	mov    $0xffffffff80108c40,%rdi$/;"	l
ffffffff8010509d	obj/kern/kernel.asm	/^ffffffff8010509d:	e8 fd b3 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801050a2	obj/kern/kernel.asm	/^ffffffff801050a2:	48 c7 43 58 00 00 00 	movq   $0x0,0x58(%rbx)$/;"	l
ffffffff801050a9	obj/kern/kernel.asm	/^ffffffff801050a9:	00 $/;"	l
ffffffff801050aa	obj/kern/kernel.asm	/^ffffffff801050aa:	48 8b 05 87 3b 00 00 	mov    0x3b87(%rip),%rax        # ffffffff80108c38 <idequeue>$/;"	l
ffffffff801050b1	obj/kern/kernel.asm	/^ffffffff801050b1:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801050b4	obj/kern/kernel.asm	/^ffffffff801050b4:	74 76                	je     ffffffff8010512c <iderw+0xd8>$/;"	l
ffffffff801050b6	obj/kern/kernel.asm	/^ffffffff801050b6:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff801050b9	obj/kern/kernel.asm	/^ffffffff801050b9:	48 8b 40 58          	mov    0x58(%rax),%rax$/;"	l
ffffffff801050bd	obj/kern/kernel.asm	/^ffffffff801050bd:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801050c0	obj/kern/kernel.asm	/^ffffffff801050c0:	75 f4                	jne    ffffffff801050b6 <iderw+0x62>$/;"	l
ffffffff801050c2	obj/kern/kernel.asm	/^ffffffff801050c2:	48 83 c2 58          	add    $0x58,%rdx$/;"	l
ffffffff801050c6	obj/kern/kernel.asm	/^ffffffff801050c6:	48 89 1a             	mov    %rbx,(%rdx)$/;"	l
ffffffff801050c9	obj/kern/kernel.asm	/^ffffffff801050c9:	48 39 1d 68 3b 00 00 	cmp    %rbx,0x3b68(%rip)        # ffffffff80108c38 <idequeue>$/;"	l
ffffffff801050d0	obj/kern/kernel.asm	/^ffffffff801050d0:	74 63                	je     ffffffff80105135 <iderw+0xe1>$/;"	l
ffffffff801050d2	obj/kern/kernel.asm	/^ffffffff801050d2:	8b 03                	mov    (%rbx),%eax$/;"	l
ffffffff801050d4	obj/kern/kernel.asm	/^ffffffff801050d4:	83 e0 06             	and    $0x6,%eax$/;"	l
ffffffff801050d7	obj/kern/kernel.asm	/^ffffffff801050d7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffffffff801050da	obj/kern/kernel.asm	/^ffffffff801050da:	74 19                	je     ffffffff801050f5 <iderw+0xa1>$/;"	l
ffffffff801050dc	obj/kern/kernel.asm	/^ffffffff801050dc:	48 c7 c6 40 8c 10 80 	mov    $0xffffffff80108c40,%rsi$/;"	l
ffffffff801050e3	obj/kern/kernel.asm	/^ffffffff801050e3:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801050e6	obj/kern/kernel.asm	/^ffffffff801050e6:	e8 b9 c5 ff ff       	callq  ffffffff801016a4 <sleep>$/;"	l
ffffffff801050eb	obj/kern/kernel.asm	/^ffffffff801050eb:	8b 03                	mov    (%rbx),%eax$/;"	l
ffffffff801050ed	obj/kern/kernel.asm	/^ffffffff801050ed:	83 e0 06             	and    $0x6,%eax$/;"	l
ffffffff801050f0	obj/kern/kernel.asm	/^ffffffff801050f0:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffffffff801050f3	obj/kern/kernel.asm	/^ffffffff801050f3:	75 e7                	jne    ffffffff801050dc <iderw+0x88>$/;"	l
ffffffff801050f5	obj/kern/kernel.asm	/^ffffffff801050f5:	48 c7 c7 40 8c 10 80 	mov    $0xffffffff80108c40,%rdi$/;"	l
ffffffff801050fc	obj/kern/kernel.asm	/^ffffffff801050fc:	e8 ec b3 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80105101	obj/kern/kernel.asm	/^ffffffff80105101:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80105105	obj/kern/kernel.asm	/^ffffffff80105105:	5b                   	pop    %rbx$/;"	l
ffffffff80105106	obj/kern/kernel.asm	/^ffffffff80105106:	5d                   	pop    %rbp$/;"	l
ffffffff80105107	obj/kern/kernel.asm	/^ffffffff80105107:	c3                   	retq   $/;"	l
ffffffff80105108	obj/kern/kernel.asm	/^ffffffff80105108:	48 c7 c7 64 76 10 80 	mov    $0xffffffff80107664,%rdi$/;"	l
ffffffff8010510f	obj/kern/kernel.asm	/^ffffffff8010510f:	e8 0f b5 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80105114	obj/kern/kernel.asm	/^ffffffff80105114:	48 c7 c7 7a 76 10 80 	mov    $0xffffffff8010767a,%rdi$/;"	l
ffffffff8010511b	obj/kern/kernel.asm	/^ffffffff8010511b:	e8 03 b5 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80105120	obj/kern/kernel.asm	/^ffffffff80105120:	48 c7 c7 8f 76 10 80 	mov    $0xffffffff8010768f,%rdi$/;"	l
ffffffff80105127	obj/kern/kernel.asm	/^ffffffff80105127:	e8 f7 b4 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010512c	obj/kern/kernel.asm	/^ffffffff8010512c:	48 c7 c2 38 8c 10 80 	mov    $0xffffffff80108c38,%rdx$/;"	l
ffffffff80105133	obj/kern/kernel.asm	/^ffffffff80105133:	eb 91                	jmp    ffffffff801050c6 <iderw+0x72>$/;"	l
ffffffff80105135	obj/kern/kernel.asm	/^ffffffff80105135:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105138	obj/kern/kernel.asm	/^ffffffff80105138:	e8 c6 fd ff ff       	callq  ffffffff80104f03 <idestart>$/;"	l
ffffffff8010513d	obj/kern/kernel.asm	/^ffffffff8010513d:	eb 93                	jmp    ffffffff801050d2 <iderw+0x7e>$/;"	l
ffffffff8010513f	obj/kern/kernel.asm	/^ffffffff8010513f <bfree>:$/;"	l
ffffffff8010513f	obj/kern/kernel.asm	/^ffffffff8010513f:	55                   	push   %rbp$/;"	l
ffffffff80105140	obj/kern/kernel.asm	/^ffffffff80105140:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105143	obj/kern/kernel.asm	/^ffffffff80105143:	41 54                	push   %r12$/;"	l
ffffffff80105145	obj/kern/kernel.asm	/^ffffffff80105145:	53                   	push   %rbx$/;"	l
ffffffff80105146	obj/kern/kernel.asm	/^ffffffff80105146:	89 f3                	mov    %esi,%ebx$/;"	l
ffffffff80105148	obj/kern/kernel.asm	/^ffffffff80105148:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
ffffffff8010514b	obj/kern/kernel.asm	/^ffffffff8010514b:	03 35 47 e5 00 00    	add    0xe547(%rip),%esi        # ffffffff80113698 <sb+0x18>$/;"	l
ffffffff80105151	obj/kern/kernel.asm	/^ffffffff80105151:	e8 6c fa ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105156	obj/kern/kernel.asm	/^ffffffff80105156:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80105159	obj/kern/kernel.asm	/^ffffffff80105159:	89 d9                	mov    %ebx,%ecx$/;"	l
ffffffff8010515b	obj/kern/kernel.asm	/^ffffffff8010515b:	83 e1 07             	and    $0x7,%ecx$/;"	l
ffffffff8010515e	obj/kern/kernel.asm	/^ffffffff8010515e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffffffff80105163	obj/kern/kernel.asm	/^ffffffff80105163:	d3 e0                	shl    %cl,%eax$/;"	d
ffffffff80105165	obj/kern/kernel.asm	/^ffffffff80105165:	81 e3 ff 0f 00 00    	and    $0xfff,%ebx$/;"	l
ffffffff8010516b	obj/kern/kernel.asm	/^ffffffff8010516b:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
ffffffff8010516e	obj/kern/kernel.asm	/^ffffffff8010516e:	48 63 d3             	movslq %ebx,%rdx$/;"	l
ffffffff80105171	obj/kern/kernel.asm	/^ffffffff80105171:	41 0f b6 54 14 60    	movzbl 0x60(%r12,%rdx,1),%edx$/;"	l
ffffffff80105177	obj/kern/kernel.asm	/^ffffffff80105177:	0f b6 ca             	movzbl %dl,%ecx$/;"	l
ffffffff8010517a	obj/kern/kernel.asm	/^ffffffff8010517a:	85 c1                	test   %eax,%ecx$/;"	l
ffffffff8010517c	obj/kern/kernel.asm	/^ffffffff8010517c:	74 21                	je     ffffffff8010519f <bfree+0x60>$/;"	l
ffffffff8010517e	obj/kern/kernel.asm	/^ffffffff8010517e:	48 63 db             	movslq %ebx,%rbx$/;"	l
ffffffff80105181	obj/kern/kernel.asm	/^ffffffff80105181:	f7 d0                	not    %eax$/;"	l
ffffffff80105183	obj/kern/kernel.asm	/^ffffffff80105183:	21 d0                	and    %edx,%eax$/;"	l
ffffffff80105185	obj/kern/kernel.asm	/^ffffffff80105185:	41 88 44 1c 60       	mov    %al,0x60(%r12,%rbx,1)$/;"	l
ffffffff8010518a	obj/kern/kernel.asm	/^ffffffff8010518a:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff8010518d	obj/kern/kernel.asm	/^ffffffff8010518d:	e8 10 10 00 00       	callq  ffffffff801061a2 <log_write>$/;"	l
ffffffff80105192	obj/kern/kernel.asm	/^ffffffff80105192:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80105195	obj/kern/kernel.asm	/^ffffffff80105195:	e8 45 fb ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff8010519a	obj/kern/kernel.asm	/^ffffffff8010519a:	5b                   	pop    %rbx$/;"	l
ffffffff8010519b	obj/kern/kernel.asm	/^ffffffff8010519b:	41 5c                	pop    %r12$/;"	l
ffffffff8010519d	obj/kern/kernel.asm	/^ffffffff8010519d:	5d                   	pop    %rbp$/;"	l
ffffffff8010519e	obj/kern/kernel.asm	/^ffffffff8010519e:	c3                   	retq   $/;"	l
ffffffff8010519f	obj/kern/kernel.asm	/^ffffffff8010519f:	48 c7 c7 ad 76 10 80 	mov    $0xffffffff801076ad,%rdi$/;"	l
ffffffff801051a6	obj/kern/kernel.asm	/^ffffffff801051a6:	e8 78 b4 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801051ab	obj/kern/kernel.asm	/^ffffffff801051ab <balloc>:$/;"	l
ffffffff801051ab	obj/kern/kernel.asm	/^ffffffff801051ab:	55                   	push   %rbp$/;"	l
ffffffff801051ac	obj/kern/kernel.asm	/^ffffffff801051ac:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801051af	obj/kern/kernel.asm	/^ffffffff801051af:	41 57                	push   %r15$/;"	l
ffffffff801051b1	obj/kern/kernel.asm	/^ffffffff801051b1:	41 56                	push   %r14$/;"	l
ffffffff801051b3	obj/kern/kernel.asm	/^ffffffff801051b3:	41 55                	push   %r13$/;"	l
ffffffff801051b5	obj/kern/kernel.asm	/^ffffffff801051b5:	41 54                	push   %r12$/;"	l
ffffffff801051b7	obj/kern/kernel.asm	/^ffffffff801051b7:	53                   	push   %rbx$/;"	l
ffffffff801051b8	obj/kern/kernel.asm	/^ffffffff801051b8:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801051bc	obj/kern/kernel.asm	/^ffffffff801051bc:	83 3d bd e4 00 00 00 	cmpl   $0x0,0xe4bd(%rip)        # ffffffff80113680 <sb>$/;"	l
ffffffff801051c3	obj/kern/kernel.asm	/^ffffffff801051c3:	0f 84 99 00 00 00    	je     ffffffff80105262 <balloc+0xb7>$/;"	l
ffffffff801051c9	obj/kern/kernel.asm	/^ffffffff801051c9:	41 89 ff             	mov    %edi,%r15d$/;"	l
ffffffff801051cc	obj/kern/kernel.asm	/^ffffffff801051cc:	41 be 00 00 00 00    	mov    $0x0,%r14d$/;"	l
ffffffff801051d2	obj/kern/kernel.asm	/^ffffffff801051d2:	41 bd 01 00 00 00    	mov    $0x1,%r13d$/;"	l
ffffffff801051d8	obj/kern/kernel.asm	/^ffffffff801051d8:	eb 18                	jmp    ffffffff801051f2 <balloc+0x47>$/;"	l
ffffffff801051da	obj/kern/kernel.asm	/^ffffffff801051da:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801051dd	obj/kern/kernel.asm	/^ffffffff801051dd:	e8 fd fa ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff801051e2	obj/kern/kernel.asm	/^ffffffff801051e2:	41 81 c6 00 10 00 00 	add    $0x1000,%r14d$/;"	l
ffffffff801051e9	obj/kern/kernel.asm	/^ffffffff801051e9:	44 39 35 90 e4 00 00 	cmp    %r14d,0xe490(%rip)        # ffffffff80113680 <sb>$/;"	l
ffffffff801051f0	obj/kern/kernel.asm	/^ffffffff801051f0:	76 70                	jbe    ffffffff80105262 <balloc+0xb7>$/;"	l
ffffffff801051f2	obj/kern/kernel.asm	/^ffffffff801051f2:	44 89 f6             	mov    %r14d,%esi$/;"	l
ffffffff801051f5	obj/kern/kernel.asm	/^ffffffff801051f5:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
ffffffff801051f8	obj/kern/kernel.asm	/^ffffffff801051f8:	03 35 9a e4 00 00    	add    0xe49a(%rip),%esi        # ffffffff80113698 <sb+0x18>$/;"	l
ffffffff801051fe	obj/kern/kernel.asm	/^ffffffff801051fe:	44 89 ff             	mov    %r15d,%edi$/;"	l
ffffffff80105201	obj/kern/kernel.asm	/^ffffffff80105201:	e8 bc f9 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105206	obj/kern/kernel.asm	/^ffffffff80105206:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80105209	obj/kern/kernel.asm	/^ffffffff80105209:	8b 35 71 e4 00 00    	mov    0xe471(%rip),%esi        # ffffffff80113680 <sb>$/;"	l
ffffffff8010520f	obj/kern/kernel.asm	/^ffffffff8010520f:	44 89 f3             	mov    %r14d,%ebx$/;"	l
ffffffff80105212	obj/kern/kernel.asm	/^ffffffff80105212:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80105217	obj/kern/kernel.asm	/^ffffffff80105217:	39 de                	cmp    %ebx,%esi$/;"	l
ffffffff80105219	obj/kern/kernel.asm	/^ffffffff80105219:	76 bf                	jbe    ffffffff801051da <balloc+0x2f>$/;"	l
ffffffff8010521b	obj/kern/kernel.asm	/^ffffffff8010521b:	89 d0                	mov    %edx,%eax$/;"	l
ffffffff8010521d	obj/kern/kernel.asm	/^ffffffff8010521d:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
ffffffff80105220	obj/kern/kernel.asm	/^ffffffff80105220:	c1 e8 1d             	shr    $0x1d,%eax$/;"	l
ffffffff80105223	obj/kern/kernel.asm	/^ffffffff80105223:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx$/;"	l
ffffffff80105226	obj/kern/kernel.asm	/^ffffffff80105226:	83 e1 07             	and    $0x7,%ecx$/;"	l
ffffffff80105229	obj/kern/kernel.asm	/^ffffffff80105229:	29 c1                	sub    %eax,%ecx$/;"	l
ffffffff8010522b	obj/kern/kernel.asm	/^ffffffff8010522b:	44 89 e8             	mov    %r13d,%eax$/;"	l
ffffffff8010522e	obj/kern/kernel.asm	/^ffffffff8010522e:	d3 e0                	shl    %cl,%eax$/;"	d
ffffffff80105230	obj/kern/kernel.asm	/^ffffffff80105230:	89 c1                	mov    %eax,%ecx$/;"	l
ffffffff80105232	obj/kern/kernel.asm	/^ffffffff80105232:	8d 42 07             	lea    0x7(%rdx),%eax$/;"	l
ffffffff80105235	obj/kern/kernel.asm	/^ffffffff80105235:	85 d2                	test   %edx,%edx$/;"	l
ffffffff80105237	obj/kern/kernel.asm	/^ffffffff80105237:	0f 49 c2             	cmovns %edx,%eax$/;"	l
ffffffff8010523a	obj/kern/kernel.asm	/^ffffffff8010523a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffffffff8010523d	obj/kern/kernel.asm	/^ffffffff8010523d:	41 89 c0             	mov    %eax,%r8d$/;"	l
ffffffff80105240	obj/kern/kernel.asm	/^ffffffff80105240:	48 98                	cltq   $/;"	l
ffffffff80105242	obj/kern/kernel.asm	/^ffffffff80105242:	41 0f b6 44 04 60    	movzbl 0x60(%r12,%rax,1),%eax$/;"	l
ffffffff80105248	obj/kern/kernel.asm	/^ffffffff80105248:	0f b6 f8             	movzbl %al,%edi$/;"	l
ffffffff8010524b	obj/kern/kernel.asm	/^ffffffff8010524b:	85 cf                	test   %ecx,%edi$/;"	l
ffffffff8010524d	obj/kern/kernel.asm	/^ffffffff8010524d:	74 1f                	je     ffffffff8010526e <balloc+0xc3>$/;"	l
ffffffff8010524f	obj/kern/kernel.asm	/^ffffffff8010524f:	83 c2 01             	add    $0x1,%edx$/;"	l
ffffffff80105252	obj/kern/kernel.asm	/^ffffffff80105252:	83 c3 01             	add    $0x1,%ebx$/;"	l
ffffffff80105255	obj/kern/kernel.asm	/^ffffffff80105255:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
ffffffff8010525b	obj/kern/kernel.asm	/^ffffffff8010525b:	75 ba                	jne    ffffffff80105217 <balloc+0x6c>$/;"	l
ffffffff8010525d	obj/kern/kernel.asm	/^ffffffff8010525d:	e9 78 ff ff ff       	jmpq   ffffffff801051da <balloc+0x2f>$/;"	l
ffffffff80105262	obj/kern/kernel.asm	/^ffffffff80105262:	48 c7 c7 c0 76 10 80 	mov    $0xffffffff801076c0,%rdi$/;"	l
ffffffff80105269	obj/kern/kernel.asm	/^ffffffff80105269:	e8 b5 b3 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010526e	obj/kern/kernel.asm	/^ffffffff8010526e:	4d 63 c0             	movslq %r8d,%r8$/;"	l
ffffffff80105271	obj/kern/kernel.asm	/^ffffffff80105271:	09 c8                	or     %ecx,%eax$/;"	l
ffffffff80105273	obj/kern/kernel.asm	/^ffffffff80105273:	43 88 44 04 60       	mov    %al,0x60(%r12,%r8,1)$/;"	l
ffffffff80105278	obj/kern/kernel.asm	/^ffffffff80105278:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff8010527b	obj/kern/kernel.asm	/^ffffffff8010527b:	e8 22 0f 00 00       	callq  ffffffff801061a2 <log_write>$/;"	l
ffffffff80105280	obj/kern/kernel.asm	/^ffffffff80105280:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80105283	obj/kern/kernel.asm	/^ffffffff80105283:	e8 57 fa ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105288	obj/kern/kernel.asm	/^ffffffff80105288:	89 de                	mov    %ebx,%esi$/;"	l
ffffffff8010528a	obj/kern/kernel.asm	/^ffffffff8010528a:	44 89 ff             	mov    %r15d,%edi$/;"	l
ffffffff8010528d	obj/kern/kernel.asm	/^ffffffff8010528d:	e8 30 f9 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105292	obj/kern/kernel.asm	/^ffffffff80105292:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80105295	obj/kern/kernel.asm	/^ffffffff80105295:	48 8d 78 60          	lea    0x60(%rax),%rdi$/;"	l
ffffffff80105299	obj/kern/kernel.asm	/^ffffffff80105299:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffffffff8010529e	obj/kern/kernel.asm	/^ffffffff8010529e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff801052a3	obj/kern/kernel.asm	/^ffffffff801052a3:	e8 cd 16 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff801052a8	obj/kern/kernel.asm	/^ffffffff801052a8:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801052ab	obj/kern/kernel.asm	/^ffffffff801052ab:	e8 f2 0e 00 00       	callq  ffffffff801061a2 <log_write>$/;"	l
ffffffff801052b0	obj/kern/kernel.asm	/^ffffffff801052b0:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff801052b3	obj/kern/kernel.asm	/^ffffffff801052b3:	e8 27 fa ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff801052b8	obj/kern/kernel.asm	/^ffffffff801052b8:	89 d8                	mov    %ebx,%eax$/;"	l
ffffffff801052ba	obj/kern/kernel.asm	/^ffffffff801052ba:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801052be	obj/kern/kernel.asm	/^ffffffff801052be:	5b                   	pop    %rbx$/;"	l
ffffffff801052bf	obj/kern/kernel.asm	/^ffffffff801052bf:	41 5c                	pop    %r12$/;"	l
ffffffff801052c1	obj/kern/kernel.asm	/^ffffffff801052c1:	41 5d                	pop    %r13$/;"	l
ffffffff801052c3	obj/kern/kernel.asm	/^ffffffff801052c3:	41 5e                	pop    %r14$/;"	l
ffffffff801052c5	obj/kern/kernel.asm	/^ffffffff801052c5:	41 5f                	pop    %r15$/;"	l
ffffffff801052c7	obj/kern/kernel.asm	/^ffffffff801052c7:	5d                   	pop    %rbp$/;"	l
ffffffff801052c8	obj/kern/kernel.asm	/^ffffffff801052c8:	c3                   	retq   $/;"	l
ffffffff801052c9	obj/kern/kernel.asm	/^ffffffff801052c9 <bmap>:$/;"	l
ffffffff801052c9	obj/kern/kernel.asm	/^ffffffff801052c9:	55                   	push   %rbp$/;"	l
ffffffff801052ca	obj/kern/kernel.asm	/^ffffffff801052ca:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801052cd	obj/kern/kernel.asm	/^ffffffff801052cd:	41 56                	push   %r14$/;"	l
ffffffff801052cf	obj/kern/kernel.asm	/^ffffffff801052cf:	41 55                	push   %r13$/;"	l
ffffffff801052d1	obj/kern/kernel.asm	/^ffffffff801052d1:	41 54                	push   %r12$/;"	l
ffffffff801052d3	obj/kern/kernel.asm	/^ffffffff801052d3:	53                   	push   %rbx$/;"	l
ffffffff801052d4	obj/kern/kernel.asm	/^ffffffff801052d4:	49 89 fc             	mov    %rdi,%r12$/;"	l
ffffffff801052d7	obj/kern/kernel.asm	/^ffffffff801052d7:	83 fe 0b             	cmp    $0xb,%esi$/;"	l
ffffffff801052da	obj/kern/kernel.asm	/^ffffffff801052da:	76 3f                	jbe    ffffffff8010531b <bmap+0x52>$/;"	l
ffffffff801052dc	obj/kern/kernel.asm	/^ffffffff801052dc:	8d 5e f4             	lea    -0xc(%rsi),%ebx$/;"	l
ffffffff801052df	obj/kern/kernel.asm	/^ffffffff801052df:	83 fb 7f             	cmp    $0x7f,%ebx$/;"	l
ffffffff801052e2	obj/kern/kernel.asm	/^ffffffff801052e2:	77 7f                	ja     ffffffff80105363 <bmap+0x9a>$/;"	l
ffffffff801052e4	obj/kern/kernel.asm	/^ffffffff801052e4:	8b b7 80 00 00 00    	mov    0x80(%rdi),%esi$/;"	l
ffffffff801052ea	obj/kern/kernel.asm	/^ffffffff801052ea:	85 f6                	test   %esi,%esi$/;"	l
ffffffff801052ec	obj/kern/kernel.asm	/^ffffffff801052ec:	74 4a                	je     ffffffff80105338 <bmap+0x6f>$/;"	l
ffffffff801052ee	obj/kern/kernel.asm	/^ffffffff801052ee:	41 8b 3c 24          	mov    (%r12),%edi$/;"	l
ffffffff801052f2	obj/kern/kernel.asm	/^ffffffff801052f2:	e8 cb f8 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff801052f7	obj/kern/kernel.asm	/^ffffffff801052f7:	49 89 c5             	mov    %rax,%r13$/;"	l
ffffffff801052fa	obj/kern/kernel.asm	/^ffffffff801052fa:	89 de                	mov    %ebx,%esi$/;"	l
ffffffff801052fc	obj/kern/kernel.asm	/^ffffffff801052fc:	4c 8d 74 b0 60       	lea    0x60(%rax,%rsi,4),%r14$/;"	l
ffffffff80105301	obj/kern/kernel.asm	/^ffffffff80105301:	41 8b 1e             	mov    (%r14),%ebx$/;"	l
ffffffff80105304	obj/kern/kernel.asm	/^ffffffff80105304:	85 db                	test   %ebx,%ebx$/;"	l
ffffffff80105306	obj/kern/kernel.asm	/^ffffffff80105306:	74 43                	je     ffffffff8010534b <bmap+0x82>$/;"	l
ffffffff80105308	obj/kern/kernel.asm	/^ffffffff80105308:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff8010530b	obj/kern/kernel.asm	/^ffffffff8010530b:	e8 cf f9 ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105310	obj/kern/kernel.asm	/^ffffffff80105310:	89 d8                	mov    %ebx,%eax$/;"	l
ffffffff80105312	obj/kern/kernel.asm	/^ffffffff80105312:	5b                   	pop    %rbx$/;"	l
ffffffff80105313	obj/kern/kernel.asm	/^ffffffff80105313:	41 5c                	pop    %r12$/;"	l
ffffffff80105315	obj/kern/kernel.asm	/^ffffffff80105315:	41 5d                	pop    %r13$/;"	l
ffffffff80105317	obj/kern/kernel.asm	/^ffffffff80105317:	41 5e                	pop    %r14$/;"	l
ffffffff80105319	obj/kern/kernel.asm	/^ffffffff80105319:	5d                   	pop    %rbp$/;"	l
ffffffff8010531a	obj/kern/kernel.asm	/^ffffffff8010531a:	c3                   	retq   $/;"	l
ffffffff8010531b	obj/kern/kernel.asm	/^ffffffff8010531b:	89 f6                	mov    %esi,%esi$/;"	l
ffffffff8010531d	obj/kern/kernel.asm	/^ffffffff8010531d:	4c 8d 2c b7          	lea    (%rdi,%rsi,4),%r13$/;"	l
ffffffff80105321	obj/kern/kernel.asm	/^ffffffff80105321:	41 8b 5d 50          	mov    0x50(%r13),%ebx$/;"	l
ffffffff80105325	obj/kern/kernel.asm	/^ffffffff80105325:	85 db                	test   %ebx,%ebx$/;"	l
ffffffff80105327	obj/kern/kernel.asm	/^ffffffff80105327:	75 e7                	jne    ffffffff80105310 <bmap+0x47>$/;"	l
ffffffff80105329	obj/kern/kernel.asm	/^ffffffff80105329:	8b 3f                	mov    (%rdi),%edi$/;"	l
ffffffff8010532b	obj/kern/kernel.asm	/^ffffffff8010532b:	e8 7b fe ff ff       	callq  ffffffff801051ab <balloc>$/;"	l
ffffffff80105330	obj/kern/kernel.asm	/^ffffffff80105330:	89 c3                	mov    %eax,%ebx$/;"	l
ffffffff80105332	obj/kern/kernel.asm	/^ffffffff80105332:	41 89 45 50          	mov    %eax,0x50(%r13)$/;"	l
ffffffff80105336	obj/kern/kernel.asm	/^ffffffff80105336:	eb d8                	jmp    ffffffff80105310 <bmap+0x47>$/;"	l
ffffffff80105338	obj/kern/kernel.asm	/^ffffffff80105338:	8b 3f                	mov    (%rdi),%edi$/;"	l
ffffffff8010533a	obj/kern/kernel.asm	/^ffffffff8010533a:	e8 6c fe ff ff       	callq  ffffffff801051ab <balloc>$/;"	l
ffffffff8010533f	obj/kern/kernel.asm	/^ffffffff8010533f:	89 c6                	mov    %eax,%esi$/;"	l
ffffffff80105341	obj/kern/kernel.asm	/^ffffffff80105341:	41 89 84 24 80 00 00 	mov    %eax,0x80(%r12)$/;"	l
ffffffff80105348	obj/kern/kernel.asm	/^ffffffff80105348:	00 $/;"	l
ffffffff80105349	obj/kern/kernel.asm	/^ffffffff80105349:	eb a3                	jmp    ffffffff801052ee <bmap+0x25>$/;"	l
ffffffff8010534b	obj/kern/kernel.asm	/^ffffffff8010534b:	41 8b 3c 24          	mov    (%r12),%edi$/;"	l
ffffffff8010534f	obj/kern/kernel.asm	/^ffffffff8010534f:	e8 57 fe ff ff       	callq  ffffffff801051ab <balloc>$/;"	l
ffffffff80105354	obj/kern/kernel.asm	/^ffffffff80105354:	89 c3                	mov    %eax,%ebx$/;"	l
ffffffff80105356	obj/kern/kernel.asm	/^ffffffff80105356:	41 89 06             	mov    %eax,(%r14)$/;"	l
ffffffff80105359	obj/kern/kernel.asm	/^ffffffff80105359:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff8010535c	obj/kern/kernel.asm	/^ffffffff8010535c:	e8 41 0e 00 00       	callq  ffffffff801061a2 <log_write>$/;"	l
ffffffff80105361	obj/kern/kernel.asm	/^ffffffff80105361:	eb a5                	jmp    ffffffff80105308 <bmap+0x3f>$/;"	l
ffffffff80105363	obj/kern/kernel.asm	/^ffffffff80105363:	48 c7 c7 d6 76 10 80 	mov    $0xffffffff801076d6,%rdi$/;"	l
ffffffff8010536a	obj/kern/kernel.asm	/^ffffffff8010536a:	e8 b4 b2 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010536f	obj/kern/kernel.asm	/^ffffffff8010536f <iget>:$/;"	l
ffffffff8010536f	obj/kern/kernel.asm	/^ffffffff8010536f:	55                   	push   %rbp$/;"	l
ffffffff80105370	obj/kern/kernel.asm	/^ffffffff80105370:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105373	obj/kern/kernel.asm	/^ffffffff80105373:	41 56                	push   %r14$/;"	l
ffffffff80105375	obj/kern/kernel.asm	/^ffffffff80105375:	41 55                	push   %r13$/;"	l
ffffffff80105377	obj/kern/kernel.asm	/^ffffffff80105377:	41 54                	push   %r12$/;"	l
ffffffff80105379	obj/kern/kernel.asm	/^ffffffff80105379:	53                   	push   %rbx$/;"	l
ffffffff8010537a	obj/kern/kernel.asm	/^ffffffff8010537a:	41 89 fd             	mov    %edi,%r13d$/;"	l
ffffffff8010537d	obj/kern/kernel.asm	/^ffffffff8010537d:	41 89 f6             	mov    %esi,%r14d$/;"	l
ffffffff80105380	obj/kern/kernel.asm	/^ffffffff80105380:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff80105387	obj/kern/kernel.asm	/^ffffffff80105387:	e8 13 b1 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff8010538c	obj/kern/kernel.asm	/^ffffffff8010538c:	41 bc 00 00 00 00    	mov    $0x0,%r12d$/;"	l
ffffffff80105392	obj/kern/kernel.asm	/^ffffffff80105392:	48 c7 c3 b8 36 11 80 	mov    $0xffffffff801136b8,%rbx$/;"	l
ffffffff80105399	obj/kern/kernel.asm	/^ffffffff80105399:	eb 19                	jmp    ffffffff801053b4 <iget+0x45>$/;"	l
ffffffff8010539b	obj/kern/kernel.asm	/^ffffffff8010539b:	75 07                	jne    ffffffff801053a4 <iget+0x35>$/;"	l
ffffffff8010539d	obj/kern/kernel.asm	/^ffffffff8010539d:	4d 85 e4             	test   %r12,%r12$/;"	l
ffffffff801053a0	obj/kern/kernel.asm	/^ffffffff801053a0:	4c 0f 44 e3          	cmove  %rbx,%r12$/;"	l
ffffffff801053a4	obj/kern/kernel.asm	/^ffffffff801053a4:	48 81 c3 88 00 00 00 	add    $0x88,%rbx$/;"	l
ffffffff801053ab	obj/kern/kernel.asm	/^ffffffff801053ab:	48 81 fb 48 51 11 80 	cmp    $0xffffffff80115148,%rbx$/;"	l
ffffffff801053b2	obj/kern/kernel.asm	/^ffffffff801053b2:	74 29                	je     ffffffff801053dd <iget+0x6e>$/;"	l
ffffffff801053b4	obj/kern/kernel.asm	/^ffffffff801053b4:	8b 43 08             	mov    0x8(%rbx),%eax$/;"	l
ffffffff801053b7	obj/kern/kernel.asm	/^ffffffff801053b7:	85 c0                	test   %eax,%eax$/;"	l
ffffffff801053b9	obj/kern/kernel.asm	/^ffffffff801053b9:	7e e0                	jle    ffffffff8010539b <iget+0x2c>$/;"	l
ffffffff801053bb	obj/kern/kernel.asm	/^ffffffff801053bb:	44 39 2b             	cmp    %r13d,(%rbx)$/;"	l
ffffffff801053be	obj/kern/kernel.asm	/^ffffffff801053be:	75 e4                	jne    ffffffff801053a4 <iget+0x35>$/;"	l
ffffffff801053c0	obj/kern/kernel.asm	/^ffffffff801053c0:	44 39 73 04          	cmp    %r14d,0x4(%rbx)$/;"	l
ffffffff801053c4	obj/kern/kernel.asm	/^ffffffff801053c4:	75 de                	jne    ffffffff801053a4 <iget+0x35>$/;"	l
ffffffff801053c6	obj/kern/kernel.asm	/^ffffffff801053c6:	83 c0 01             	add    $0x1,%eax$/;"	l
ffffffff801053c9	obj/kern/kernel.asm	/^ffffffff801053c9:	89 43 08             	mov    %eax,0x8(%rbx)$/;"	l
ffffffff801053cc	obj/kern/kernel.asm	/^ffffffff801053cc:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff801053d3	obj/kern/kernel.asm	/^ffffffff801053d3:	e8 15 b1 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801053d8	obj/kern/kernel.asm	/^ffffffff801053d8:	49 89 dc             	mov    %rbx,%r12$/;"	l
ffffffff801053db	obj/kern/kernel.asm	/^ffffffff801053db:	eb 2c                	jmp    ffffffff80105409 <iget+0x9a>$/;"	l
ffffffff801053dd	obj/kern/kernel.asm	/^ffffffff801053dd:	4d 85 e4             	test   %r12,%r12$/;"	l
ffffffff801053e0	obj/kern/kernel.asm	/^ffffffff801053e0:	74 33                	je     ffffffff80105415 <iget+0xa6>$/;"	l
ffffffff801053e2	obj/kern/kernel.asm	/^ffffffff801053e2:	45 89 2c 24          	mov    %r13d,(%r12)$/;"	l
ffffffff801053e6	obj/kern/kernel.asm	/^ffffffff801053e6:	45 89 74 24 04       	mov    %r14d,0x4(%r12)$/;"	l
ffffffff801053eb	obj/kern/kernel.asm	/^ffffffff801053eb:	41 c7 44 24 08 01 00 	movl   $0x1,0x8(%r12)$/;"	l
ffffffff801053f2	obj/kern/kernel.asm	/^ffffffff801053f2:	00 00 $/;"	l
ffffffff801053f4	obj/kern/kernel.asm	/^ffffffff801053f4:	41 c7 44 24 40 00 00 	movl   $0x0,0x40(%r12)$/;"	l
ffffffff801053fb	obj/kern/kernel.asm	/^ffffffff801053fb:	00 00 $/;"	l
ffffffff801053fd	obj/kern/kernel.asm	/^ffffffff801053fd:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff80105404	obj/kern/kernel.asm	/^ffffffff80105404:	e8 e4 b0 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80105409	obj/kern/kernel.asm	/^ffffffff80105409:	4c 89 e0             	mov    %r12,%rax$/;"	l
ffffffff8010540c	obj/kern/kernel.asm	/^ffffffff8010540c:	5b                   	pop    %rbx$/;"	l
ffffffff8010540d	obj/kern/kernel.asm	/^ffffffff8010540d:	41 5c                	pop    %r12$/;"	l
ffffffff8010540f	obj/kern/kernel.asm	/^ffffffff8010540f:	41 5d                	pop    %r13$/;"	l
ffffffff80105411	obj/kern/kernel.asm	/^ffffffff80105411:	41 5e                	pop    %r14$/;"	l
ffffffff80105413	obj/kern/kernel.asm	/^ffffffff80105413:	5d                   	pop    %rbp$/;"	l
ffffffff80105414	obj/kern/kernel.asm	/^ffffffff80105414:	c3                   	retq   $/;"	l
ffffffff80105415	obj/kern/kernel.asm	/^ffffffff80105415:	48 c7 c7 e9 76 10 80 	mov    $0xffffffff801076e9,%rdi$/;"	l
ffffffff8010541c	obj/kern/kernel.asm	/^ffffffff8010541c:	e8 02 b2 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80105421	obj/kern/kernel.asm	/^ffffffff80105421 <readsb>:$/;"	l
ffffffff80105421	obj/kern/kernel.asm	/^ffffffff80105421:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105425	obj/kern/kernel.asm	/^ffffffff80105425:	55                   	push   %rbp$/;"	l
ffffffff80105426	obj/kern/kernel.asm	/^ffffffff80105426:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105429	obj/kern/kernel.asm	/^ffffffff80105429:	41 54                	push   %r12$/;"	l
ffffffff8010542b	obj/kern/kernel.asm	/^ffffffff8010542b:	53                   	push   %rbx$/;"	l
ffffffff8010542c	obj/kern/kernel.asm	/^ffffffff8010542c:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff8010542f	obj/kern/kernel.asm	/^ffffffff8010542f:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffffffff80105434	obj/kern/kernel.asm	/^ffffffff80105434:	e8 89 f7 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105439	obj/kern/kernel.asm	/^ffffffff80105439:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff8010543c	obj/kern/kernel.asm	/^ffffffff8010543c:	48 8d 70 60          	lea    0x60(%rax),%rsi$/;"	l
ffffffff80105440	obj/kern/kernel.asm	/^ffffffff80105440:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
ffffffff80105445	obj/kern/kernel.asm	/^ffffffff80105445:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80105448	obj/kern/kernel.asm	/^ffffffff80105448:	e8 3a 15 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff8010544d	obj/kern/kernel.asm	/^ffffffff8010544d:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105450	obj/kern/kernel.asm	/^ffffffff80105450:	e8 8a f8 ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105455	obj/kern/kernel.asm	/^ffffffff80105455:	5b                   	pop    %rbx$/;"	l
ffffffff80105456	obj/kern/kernel.asm	/^ffffffff80105456:	41 5c                	pop    %r12$/;"	l
ffffffff80105458	obj/kern/kernel.asm	/^ffffffff80105458:	5d                   	pop    %rbp$/;"	l
ffffffff80105459	obj/kern/kernel.asm	/^ffffffff80105459:	c3                   	retq   $/;"	l
ffffffff8010545a	obj/kern/kernel.asm	/^ffffffff8010545a <iinit>:$/;"	l
ffffffff8010545a	obj/kern/kernel.asm	/^ffffffff8010545a:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010545e	obj/kern/kernel.asm	/^ffffffff8010545e:	55                   	push   %rbp$/;"	l
ffffffff8010545f	obj/kern/kernel.asm	/^ffffffff8010545f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105462	obj/kern/kernel.asm	/^ffffffff80105462:	41 55                	push   %r13$/;"	l
ffffffff80105464	obj/kern/kernel.asm	/^ffffffff80105464:	41 54                	push   %r12$/;"	l
ffffffff80105466	obj/kern/kernel.asm	/^ffffffff80105466:	53                   	push   %rbx$/;"	l
ffffffff80105467	obj/kern/kernel.asm	/^ffffffff80105467:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010546b	obj/kern/kernel.asm	/^ffffffff8010546b:	41 89 fd             	mov    %edi,%r13d$/;"	l
ffffffff8010546e	obj/kern/kernel.asm	/^ffffffff8010546e:	48 c7 c6 f9 76 10 80 	mov    $0xffffffff801076f9,%rsi$/;"	l
ffffffff80105475	obj/kern/kernel.asm	/^ffffffff80105475:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff8010547c	obj/kern/kernel.asm	/^ffffffff8010547c:	e8 22 af ff ff       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff80105481	obj/kern/kernel.asm	/^ffffffff80105481:	48 c7 c3 c8 36 11 80 	mov    $0xffffffff801136c8,%rbx$/;"	l
ffffffff80105488	obj/kern/kernel.asm	/^ffffffff80105488:	49 c7 c4 58 51 11 80 	mov    $0xffffffff80115158,%r12$/;"	l
ffffffff8010548f	obj/kern/kernel.asm	/^ffffffff8010548f:	48 c7 c6 00 77 10 80 	mov    $0xffffffff80107700,%rsi$/;"	l
ffffffff80105496	obj/kern/kernel.asm	/^ffffffff80105496:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105499	obj/kern/kernel.asm	/^ffffffff80105499:	e8 d8 f8 ff ff       	callq  ffffffff80104d76 <initsleeplock>$/;"	l
ffffffff8010549e	obj/kern/kernel.asm	/^ffffffff8010549e:	48 81 c3 88 00 00 00 	add    $0x88,%rbx$/;"	l
ffffffff801054a5	obj/kern/kernel.asm	/^ffffffff801054a5:	4c 39 e3             	cmp    %r12,%rbx$/;"	l
ffffffff801054a8	obj/kern/kernel.asm	/^ffffffff801054a8:	75 e5                	jne    ffffffff8010548f <iinit+0x35>$/;"	l
ffffffff801054aa	obj/kern/kernel.asm	/^ffffffff801054aa:	48 c7 c6 80 36 11 80 	mov    $0xffffffff80113680,%rsi$/;"	l
ffffffff801054b1	obj/kern/kernel.asm	/^ffffffff801054b1:	44 89 ef             	mov    %r13d,%edi$/;"	l
ffffffff801054b4	obj/kern/kernel.asm	/^ffffffff801054b4:	e8 68 ff ff ff       	callq  ffffffff80105421 <readsb>$/;"	l
ffffffff801054b9	obj/kern/kernel.asm	/^ffffffff801054b9:	8b 05 d9 e1 00 00    	mov    0xe1d9(%rip),%eax        # ffffffff80113698 <sb+0x18>$/;"	l
ffffffff801054bf	obj/kern/kernel.asm	/^ffffffff801054bf:	50                   	push   %rax$/;"	l
ffffffff801054c0	obj/kern/kernel.asm	/^ffffffff801054c0:	8b 05 ce e1 00 00    	mov    0xe1ce(%rip),%eax        # ffffffff80113694 <sb+0x14>$/;"	l
ffffffff801054c6	obj/kern/kernel.asm	/^ffffffff801054c6:	50                   	push   %rax$/;"	l
ffffffff801054c7	obj/kern/kernel.asm	/^ffffffff801054c7:	44 8b 0d c2 e1 00 00 	mov    0xe1c2(%rip),%r9d        # ffffffff80113690 <sb+0x10>$/;"	l
ffffffff801054ce	obj/kern/kernel.asm	/^ffffffff801054ce:	44 8b 05 b7 e1 00 00 	mov    0xe1b7(%rip),%r8d        # ffffffff8011368c <sb+0xc>$/;"	l
ffffffff801054d5	obj/kern/kernel.asm	/^ffffffff801054d5:	8b 0d ad e1 00 00    	mov    0xe1ad(%rip),%ecx        # ffffffff80113688 <sb+0x8>$/;"	l
ffffffff801054db	obj/kern/kernel.asm	/^ffffffff801054db:	8b 15 a3 e1 00 00    	mov    0xe1a3(%rip),%edx        # ffffffff80113684 <sb+0x4>$/;"	l
ffffffff801054e1	obj/kern/kernel.asm	/^ffffffff801054e1:	8b 35 99 e1 00 00    	mov    0xe199(%rip),%esi        # ffffffff80113680 <sb>$/;"	l
ffffffff801054e7	obj/kern/kernel.asm	/^ffffffff801054e7:	48 c7 c7 68 77 10 80 	mov    $0xffffffff80107768,%rdi$/;"	l
ffffffff801054ee	obj/kern/kernel.asm	/^ffffffff801054ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801054f3	obj/kern/kernel.asm	/^ffffffff801054f3:	e8 ce b3 ff ff       	callq  ffffffff801008c6 <cprintf>$/;"	l
ffffffff801054f8	obj/kern/kernel.asm	/^ffffffff801054f8:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffffffff801054fc	obj/kern/kernel.asm	/^ffffffff801054fc:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp$/;"	l
ffffffff80105500	obj/kern/kernel.asm	/^ffffffff80105500:	5b                   	pop    %rbx$/;"	l
ffffffff80105501	obj/kern/kernel.asm	/^ffffffff80105501:	41 5c                	pop    %r12$/;"	l
ffffffff80105503	obj/kern/kernel.asm	/^ffffffff80105503:	41 5d                	pop    %r13$/;"	l
ffffffff80105505	obj/kern/kernel.asm	/^ffffffff80105505:	5d                   	pop    %rbp$/;"	l
ffffffff80105506	obj/kern/kernel.asm	/^ffffffff80105506:	c3                   	retq   $/;"	l
ffffffff80105507	obj/kern/kernel.asm	/^ffffffff80105507 <ialloc>:$/;"	l
ffffffff80105507	obj/kern/kernel.asm	/^ffffffff80105507:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010550b	obj/kern/kernel.asm	/^ffffffff8010550b:	55                   	push   %rbp$/;"	l
ffffffff8010550c	obj/kern/kernel.asm	/^ffffffff8010550c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010550f	obj/kern/kernel.asm	/^ffffffff8010550f:	41 57                	push   %r15$/;"	l
ffffffff80105511	obj/kern/kernel.asm	/^ffffffff80105511:	41 56                	push   %r14$/;"	l
ffffffff80105513	obj/kern/kernel.asm	/^ffffffff80105513:	41 55                	push   %r13$/;"	l
ffffffff80105515	obj/kern/kernel.asm	/^ffffffff80105515:	41 54                	push   %r12$/;"	l
ffffffff80105517	obj/kern/kernel.asm	/^ffffffff80105517:	53                   	push   %rbx$/;"	l
ffffffff80105518	obj/kern/kernel.asm	/^ffffffff80105518:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010551c	obj/kern/kernel.asm	/^ffffffff8010551c:	83 3d 65 e1 00 00 01 	cmpl   $0x1,0xe165(%rip)        # ffffffff80113688 <sb+0x8>$/;"	l
ffffffff80105523	obj/kern/kernel.asm	/^ffffffff80105523:	76 4e                	jbe    ffffffff80105573 <ialloc+0x6c>$/;"	l
ffffffff80105525	obj/kern/kernel.asm	/^ffffffff80105525:	41 89 fd             	mov    %edi,%r13d$/;"	l
ffffffff80105528	obj/kern/kernel.asm	/^ffffffff80105528:	41 89 f6             	mov    %esi,%r14d$/;"	l
ffffffff8010552b	obj/kern/kernel.asm	/^ffffffff8010552b:	41 bc 01 00 00 00    	mov    $0x1,%r12d$/;"	l
ffffffff80105531	obj/kern/kernel.asm	/^ffffffff80105531:	44 89 e6             	mov    %r12d,%esi$/;"	l
ffffffff80105534	obj/kern/kernel.asm	/^ffffffff80105534:	c1 ee 03             	shr    $0x3,%esi$/;"	l
ffffffff80105537	obj/kern/kernel.asm	/^ffffffff80105537:	03 35 57 e1 00 00    	add    0xe157(%rip),%esi        # ffffffff80113694 <sb+0x14>$/;"	l
ffffffff8010553d	obj/kern/kernel.asm	/^ffffffff8010553d:	44 89 ef             	mov    %r13d,%edi$/;"	l
ffffffff80105540	obj/kern/kernel.asm	/^ffffffff80105540:	e8 7d f6 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105545	obj/kern/kernel.asm	/^ffffffff80105545:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80105548	obj/kern/kernel.asm	/^ffffffff80105548:	44 89 e0             	mov    %r12d,%eax$/;"	l
ffffffff8010554b	obj/kern/kernel.asm	/^ffffffff8010554b:	83 e0 07             	and    $0x7,%eax$/;"	l
ffffffff8010554e	obj/kern/kernel.asm	/^ffffffff8010554e:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffffffff80105552	obj/kern/kernel.asm	/^ffffffff80105552:	4c 8d 7c 03 60       	lea    0x60(%rbx,%rax,1),%r15$/;"	l
ffffffff80105557	obj/kern/kernel.asm	/^ffffffff80105557:	66 41 83 3f 00       	cmpw   $0x0,(%r15)$/;"	l
ffffffff8010555c	obj/kern/kernel.asm	/^ffffffff8010555c:	74 21                	je     ffffffff8010557f <ialloc+0x78>$/;"	l
ffffffff8010555e	obj/kern/kernel.asm	/^ffffffff8010555e:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105561	obj/kern/kernel.asm	/^ffffffff80105561:	e8 79 f7 ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105566	obj/kern/kernel.asm	/^ffffffff80105566:	41 83 c4 01          	add    $0x1,%r12d$/;"	l
ffffffff8010556a	obj/kern/kernel.asm	/^ffffffff8010556a:	44 39 25 17 e1 00 00 	cmp    %r12d,0xe117(%rip)        # ffffffff80113688 <sb+0x8>$/;"	l
ffffffff80105571	obj/kern/kernel.asm	/^ffffffff80105571:	77 be                	ja     ffffffff80105531 <ialloc+0x2a>$/;"	l
ffffffff80105573	obj/kern/kernel.asm	/^ffffffff80105573:	48 c7 c7 06 77 10 80 	mov    $0xffffffff80107706,%rdi$/;"	l
ffffffff8010557a	obj/kern/kernel.asm	/^ffffffff8010557a:	e8 a4 b0 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010557f	obj/kern/kernel.asm	/^ffffffff8010557f:	ba 40 00 00 00       	mov    $0x40,%edx$/;"	l
ffffffff80105584	obj/kern/kernel.asm	/^ffffffff80105584:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80105589	obj/kern/kernel.asm	/^ffffffff80105589:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff8010558c	obj/kern/kernel.asm	/^ffffffff8010558c:	e8 e4 13 00 00       	callq  ffffffff80106975 <memset>$/;"	l
ffffffff80105591	obj/kern/kernel.asm	/^ffffffff80105591:	66 45 89 37          	mov    %r14w,(%r15)$/;"	l
ffffffff80105595	obj/kern/kernel.asm	/^ffffffff80105595:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105598	obj/kern/kernel.asm	/^ffffffff80105598:	e8 05 0c 00 00       	callq  ffffffff801061a2 <log_write>$/;"	l
ffffffff8010559d	obj/kern/kernel.asm	/^ffffffff8010559d:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801055a0	obj/kern/kernel.asm	/^ffffffff801055a0:	e8 3a f7 ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff801055a5	obj/kern/kernel.asm	/^ffffffff801055a5:	44 89 e6             	mov    %r12d,%esi$/;"	l
ffffffff801055a8	obj/kern/kernel.asm	/^ffffffff801055a8:	44 89 ef             	mov    %r13d,%edi$/;"	l
ffffffff801055ab	obj/kern/kernel.asm	/^ffffffff801055ab:	e8 bf fd ff ff       	callq  ffffffff8010536f <iget>$/;"	l
ffffffff801055b0	obj/kern/kernel.asm	/^ffffffff801055b0:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801055b4	obj/kern/kernel.asm	/^ffffffff801055b4:	5b                   	pop    %rbx$/;"	l
ffffffff801055b5	obj/kern/kernel.asm	/^ffffffff801055b5:	41 5c                	pop    %r12$/;"	l
ffffffff801055b7	obj/kern/kernel.asm	/^ffffffff801055b7:	41 5d                	pop    %r13$/;"	l
ffffffff801055b9	obj/kern/kernel.asm	/^ffffffff801055b9:	41 5e                	pop    %r14$/;"	l
ffffffff801055bb	obj/kern/kernel.asm	/^ffffffff801055bb:	41 5f                	pop    %r15$/;"	l
ffffffff801055bd	obj/kern/kernel.asm	/^ffffffff801055bd:	5d                   	pop    %rbp$/;"	l
ffffffff801055be	obj/kern/kernel.asm	/^ffffffff801055be:	c3                   	retq   $/;"	l
ffffffff801055bf	obj/kern/kernel.asm	/^ffffffff801055bf <iupdate>:$/;"	l
ffffffff801055bf	obj/kern/kernel.asm	/^ffffffff801055bf:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801055c3	obj/kern/kernel.asm	/^ffffffff801055c3:	55                   	push   %rbp$/;"	l
ffffffff801055c4	obj/kern/kernel.asm	/^ffffffff801055c4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801055c7	obj/kern/kernel.asm	/^ffffffff801055c7:	41 54                	push   %r12$/;"	l
ffffffff801055c9	obj/kern/kernel.asm	/^ffffffff801055c9:	53                   	push   %rbx$/;"	l
ffffffff801055ca	obj/kern/kernel.asm	/^ffffffff801055ca:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff801055cd	obj/kern/kernel.asm	/^ffffffff801055cd:	8b 77 04             	mov    0x4(%rdi),%esi$/;"	l
ffffffff801055d0	obj/kern/kernel.asm	/^ffffffff801055d0:	c1 ee 03             	shr    $0x3,%esi$/;"	l
ffffffff801055d3	obj/kern/kernel.asm	/^ffffffff801055d3:	03 35 bb e0 00 00    	add    0xe0bb(%rip),%esi        # ffffffff80113694 <sb+0x14>$/;"	l
ffffffff801055d9	obj/kern/kernel.asm	/^ffffffff801055d9:	8b 3f                	mov    (%rdi),%edi$/;"	l
ffffffff801055db	obj/kern/kernel.asm	/^ffffffff801055db:	e8 e2 f5 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff801055e0	obj/kern/kernel.asm	/^ffffffff801055e0:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801055e3	obj/kern/kernel.asm	/^ffffffff801055e3:	8b 43 04             	mov    0x4(%rbx),%eax$/;"	l
ffffffff801055e6	obj/kern/kernel.asm	/^ffffffff801055e6:	83 e0 07             	and    $0x7,%eax$/;"	l
ffffffff801055e9	obj/kern/kernel.asm	/^ffffffff801055e9:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffffffff801055ed	obj/kern/kernel.asm	/^ffffffff801055ed:	49 8d 7c 04 60       	lea    0x60(%r12,%rax,1),%rdi$/;"	l
ffffffff801055f2	obj/kern/kernel.asm	/^ffffffff801055f2:	0f b7 43 44          	movzwl 0x44(%rbx),%eax$/;"	l
ffffffff801055f6	obj/kern/kernel.asm	/^ffffffff801055f6:	66 89 07             	mov    %ax,(%rdi)$/;"	l
ffffffff801055f9	obj/kern/kernel.asm	/^ffffffff801055f9:	0f b7 43 46          	movzwl 0x46(%rbx),%eax$/;"	l
ffffffff801055fd	obj/kern/kernel.asm	/^ffffffff801055fd:	66 89 47 02          	mov    %ax,0x2(%rdi)$/;"	l
ffffffff80105601	obj/kern/kernel.asm	/^ffffffff80105601:	0f b7 43 48          	movzwl 0x48(%rbx),%eax$/;"	l
ffffffff80105605	obj/kern/kernel.asm	/^ffffffff80105605:	66 89 47 04          	mov    %ax,0x4(%rdi)$/;"	l
ffffffff80105609	obj/kern/kernel.asm	/^ffffffff80105609:	0f b7 43 4a          	movzwl 0x4a(%rbx),%eax$/;"	l
ffffffff8010560d	obj/kern/kernel.asm	/^ffffffff8010560d:	66 89 47 06          	mov    %ax,0x6(%rdi)$/;"	l
ffffffff80105611	obj/kern/kernel.asm	/^ffffffff80105611:	8b 43 4c             	mov    0x4c(%rbx),%eax$/;"	l
ffffffff80105614	obj/kern/kernel.asm	/^ffffffff80105614:	89 47 08             	mov    %eax,0x8(%rdi)$/;"	l
ffffffff80105617	obj/kern/kernel.asm	/^ffffffff80105617:	48 8d 73 50          	lea    0x50(%rbx),%rsi$/;"	l
ffffffff8010561b	obj/kern/kernel.asm	/^ffffffff8010561b:	48 83 c7 0c          	add    $0xc,%rdi$/;"	l
ffffffff8010561f	obj/kern/kernel.asm	/^ffffffff8010561f:	ba 34 00 00 00       	mov    $0x34,%edx$/;"	l
ffffffff80105624	obj/kern/kernel.asm	/^ffffffff80105624:	e8 5e 13 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff80105629	obj/kern/kernel.asm	/^ffffffff80105629:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff8010562c	obj/kern/kernel.asm	/^ffffffff8010562c:	e8 71 0b 00 00       	callq  ffffffff801061a2 <log_write>$/;"	l
ffffffff80105631	obj/kern/kernel.asm	/^ffffffff80105631:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80105634	obj/kern/kernel.asm	/^ffffffff80105634:	e8 a6 f6 ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105639	obj/kern/kernel.asm	/^ffffffff80105639:	5b                   	pop    %rbx$/;"	l
ffffffff8010563a	obj/kern/kernel.asm	/^ffffffff8010563a:	41 5c                	pop    %r12$/;"	l
ffffffff8010563c	obj/kern/kernel.asm	/^ffffffff8010563c:	5d                   	pop    %rbp$/;"	l
ffffffff8010563d	obj/kern/kernel.asm	/^ffffffff8010563d:	c3                   	retq   $/;"	l
ffffffff8010563e	obj/kern/kernel.asm	/^ffffffff8010563e <idup>:$/;"	l
ffffffff8010563e	obj/kern/kernel.asm	/^ffffffff8010563e:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105642	obj/kern/kernel.asm	/^ffffffff80105642:	55                   	push   %rbp$/;"	l
ffffffff80105643	obj/kern/kernel.asm	/^ffffffff80105643:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105646	obj/kern/kernel.asm	/^ffffffff80105646:	53                   	push   %rbx$/;"	l
ffffffff80105647	obj/kern/kernel.asm	/^ffffffff80105647:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010564b	obj/kern/kernel.asm	/^ffffffff8010564b:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff8010564e	obj/kern/kernel.asm	/^ffffffff8010564e:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff80105655	obj/kern/kernel.asm	/^ffffffff80105655:	e8 45 ae ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff8010565a	obj/kern/kernel.asm	/^ffffffff8010565a:	83 43 08 01          	addl   $0x1,0x8(%rbx)$/;"	l
ffffffff8010565e	obj/kern/kernel.asm	/^ffffffff8010565e:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff80105665	obj/kern/kernel.asm	/^ffffffff80105665:	e8 83 ae ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010566a	obj/kern/kernel.asm	/^ffffffff8010566a:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff8010566d	obj/kern/kernel.asm	/^ffffffff8010566d:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80105671	obj/kern/kernel.asm	/^ffffffff80105671:	5b                   	pop    %rbx$/;"	l
ffffffff80105672	obj/kern/kernel.asm	/^ffffffff80105672:	5d                   	pop    %rbp$/;"	l
ffffffff80105673	obj/kern/kernel.asm	/^ffffffff80105673:	c3                   	retq   $/;"	l
ffffffff80105674	obj/kern/kernel.asm	/^ffffffff80105674 <ilock>:$/;"	l
ffffffff80105674	obj/kern/kernel.asm	/^ffffffff80105674:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105678	obj/kern/kernel.asm	/^ffffffff80105678:	55                   	push   %rbp$/;"	l
ffffffff80105679	obj/kern/kernel.asm	/^ffffffff80105679:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010567c	obj/kern/kernel.asm	/^ffffffff8010567c:	41 54                	push   %r12$/;"	l
ffffffff8010567e	obj/kern/kernel.asm	/^ffffffff8010567e:	53                   	push   %rbx$/;"	l
ffffffff8010567f	obj/kern/kernel.asm	/^ffffffff8010567f:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff80105682	obj/kern/kernel.asm	/^ffffffff80105682:	74 1d                	je     ffffffff801056a1 <ilock+0x2d>$/;"	l
ffffffff80105684	obj/kern/kernel.asm	/^ffffffff80105684:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80105687	obj/kern/kernel.asm	/^ffffffff80105687:	83 7f 08 00          	cmpl   $0x0,0x8(%rdi)$/;"	l
ffffffff8010568b	obj/kern/kernel.asm	/^ffffffff8010568b:	7e 14                	jle    ffffffff801056a1 <ilock+0x2d>$/;"	l
ffffffff8010568d	obj/kern/kernel.asm	/^ffffffff8010568d:	48 8d 7f 10          	lea    0x10(%rdi),%rdi$/;"	l
ffffffff80105691	obj/kern/kernel.asm	/^ffffffff80105691:	e8 17 f7 ff ff       	callq  ffffffff80104dad <acquiresleep>$/;"	l
ffffffff80105696	obj/kern/kernel.asm	/^ffffffff80105696:	83 7b 40 00          	cmpl   $0x0,0x40(%rbx)$/;"	l
ffffffff8010569a	obj/kern/kernel.asm	/^ffffffff8010569a:	74 11                	je     ffffffff801056ad <ilock+0x39>$/;"	l
ffffffff8010569c	obj/kern/kernel.asm	/^ffffffff8010569c:	5b                   	pop    %rbx$/;"	l
ffffffff8010569d	obj/kern/kernel.asm	/^ffffffff8010569d:	41 5c                	pop    %r12$/;"	l
ffffffff8010569f	obj/kern/kernel.asm	/^ffffffff8010569f:	5d                   	pop    %rbp$/;"	l
ffffffff801056a0	obj/kern/kernel.asm	/^ffffffff801056a0:	c3                   	retq   $/;"	l
ffffffff801056a1	obj/kern/kernel.asm	/^ffffffff801056a1:	48 c7 c7 18 77 10 80 	mov    $0xffffffff80107718,%rdi$/;"	l
ffffffff801056a8	obj/kern/kernel.asm	/^ffffffff801056a8:	e8 76 af ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801056ad	obj/kern/kernel.asm	/^ffffffff801056ad:	8b 73 04             	mov    0x4(%rbx),%esi$/;"	l
ffffffff801056b0	obj/kern/kernel.asm	/^ffffffff801056b0:	c1 ee 03             	shr    $0x3,%esi$/;"	l
ffffffff801056b3	obj/kern/kernel.asm	/^ffffffff801056b3:	03 35 db df 00 00    	add    0xdfdb(%rip),%esi        # ffffffff80113694 <sb+0x14>$/;"	l
ffffffff801056b9	obj/kern/kernel.asm	/^ffffffff801056b9:	8b 3b                	mov    (%rbx),%edi$/;"	l
ffffffff801056bb	obj/kern/kernel.asm	/^ffffffff801056bb:	e8 02 f5 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff801056c0	obj/kern/kernel.asm	/^ffffffff801056c0:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff801056c3	obj/kern/kernel.asm	/^ffffffff801056c3:	8b 43 04             	mov    0x4(%rbx),%eax$/;"	l
ffffffff801056c6	obj/kern/kernel.asm	/^ffffffff801056c6:	83 e0 07             	and    $0x7,%eax$/;"	l
ffffffff801056c9	obj/kern/kernel.asm	/^ffffffff801056c9:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffffffff801056cd	obj/kern/kernel.asm	/^ffffffff801056cd:	49 8d 74 04 60       	lea    0x60(%r12,%rax,1),%rsi$/;"	l
ffffffff801056d2	obj/kern/kernel.asm	/^ffffffff801056d2:	0f b7 06             	movzwl (%rsi),%eax$/;"	l
ffffffff801056d5	obj/kern/kernel.asm	/^ffffffff801056d5:	66 89 43 44          	mov    %ax,0x44(%rbx)$/;"	l
ffffffff801056d9	obj/kern/kernel.asm	/^ffffffff801056d9:	0f b7 46 02          	movzwl 0x2(%rsi),%eax$/;"	l
ffffffff801056dd	obj/kern/kernel.asm	/^ffffffff801056dd:	66 89 43 46          	mov    %ax,0x46(%rbx)$/;"	l
ffffffff801056e1	obj/kern/kernel.asm	/^ffffffff801056e1:	0f b7 46 04          	movzwl 0x4(%rsi),%eax$/;"	l
ffffffff801056e5	obj/kern/kernel.asm	/^ffffffff801056e5:	66 89 43 48          	mov    %ax,0x48(%rbx)$/;"	l
ffffffff801056e9	obj/kern/kernel.asm	/^ffffffff801056e9:	0f b7 46 06          	movzwl 0x6(%rsi),%eax$/;"	l
ffffffff801056ed	obj/kern/kernel.asm	/^ffffffff801056ed:	66 89 43 4a          	mov    %ax,0x4a(%rbx)$/;"	l
ffffffff801056f1	obj/kern/kernel.asm	/^ffffffff801056f1:	8b 46 08             	mov    0x8(%rsi),%eax$/;"	l
ffffffff801056f4	obj/kern/kernel.asm	/^ffffffff801056f4:	89 43 4c             	mov    %eax,0x4c(%rbx)$/;"	l
ffffffff801056f7	obj/kern/kernel.asm	/^ffffffff801056f7:	48 83 c6 0c          	add    $0xc,%rsi$/;"	l
ffffffff801056fb	obj/kern/kernel.asm	/^ffffffff801056fb:	48 8d 7b 50          	lea    0x50(%rbx),%rdi$/;"	l
ffffffff801056ff	obj/kern/kernel.asm	/^ffffffff801056ff:	ba 34 00 00 00       	mov    $0x34,%edx$/;"	l
ffffffff80105704	obj/kern/kernel.asm	/^ffffffff80105704:	e8 7e 12 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff80105709	obj/kern/kernel.asm	/^ffffffff80105709:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff8010570c	obj/kern/kernel.asm	/^ffffffff8010570c:	e8 ce f5 ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105711	obj/kern/kernel.asm	/^ffffffff80105711:	c7 43 40 01 00 00 00 	movl   $0x1,0x40(%rbx)$/;"	l
ffffffff80105718	obj/kern/kernel.asm	/^ffffffff80105718:	66 83 7b 44 00       	cmpw   $0x0,0x44(%rbx)$/;"	l
ffffffff8010571d	obj/kern/kernel.asm	/^ffffffff8010571d:	0f 85 79 ff ff ff    	jne    ffffffff8010569c <ilock+0x28>$/;"	l
ffffffff80105723	obj/kern/kernel.asm	/^ffffffff80105723:	48 c7 c7 1e 77 10 80 	mov    $0xffffffff8010771e,%rdi$/;"	l
ffffffff8010572a	obj/kern/kernel.asm	/^ffffffff8010572a:	e8 f4 ae ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff8010572f	obj/kern/kernel.asm	/^ffffffff8010572f <iunlock>:$/;"	l
ffffffff8010572f	obj/kern/kernel.asm	/^ffffffff8010572f:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105733	obj/kern/kernel.asm	/^ffffffff80105733:	55                   	push   %rbp$/;"	l
ffffffff80105734	obj/kern/kernel.asm	/^ffffffff80105734:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105737	obj/kern/kernel.asm	/^ffffffff80105737:	41 54                	push   %r12$/;"	l
ffffffff80105739	obj/kern/kernel.asm	/^ffffffff80105739:	53                   	push   %rbx$/;"	l
ffffffff8010573a	obj/kern/kernel.asm	/^ffffffff8010573a:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff8010573d	obj/kern/kernel.asm	/^ffffffff8010573d:	74 26                	je     ffffffff80105765 <iunlock+0x36>$/;"	l
ffffffff8010573f	obj/kern/kernel.asm	/^ffffffff8010573f:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80105742	obj/kern/kernel.asm	/^ffffffff80105742:	4c 8d 67 10          	lea    0x10(%rdi),%r12$/;"	l
ffffffff80105746	obj/kern/kernel.asm	/^ffffffff80105746:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80105749	obj/kern/kernel.asm	/^ffffffff80105749:	e8 e8 f6 ff ff       	callq  ffffffff80104e36 <holdingsleep>$/;"	l
ffffffff8010574e	obj/kern/kernel.asm	/^ffffffff8010574e:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80105750	obj/kern/kernel.asm	/^ffffffff80105750:	74 13                	je     ffffffff80105765 <iunlock+0x36>$/;"	l
ffffffff80105752	obj/kern/kernel.asm	/^ffffffff80105752:	83 7b 08 00          	cmpl   $0x0,0x8(%rbx)$/;"	l
ffffffff80105756	obj/kern/kernel.asm	/^ffffffff80105756:	7e 0d                	jle    ffffffff80105765 <iunlock+0x36>$/;"	l
ffffffff80105758	obj/kern/kernel.asm	/^ffffffff80105758:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff8010575b	obj/kern/kernel.asm	/^ffffffff8010575b:	e8 9a f6 ff ff       	callq  ffffffff80104dfa <releasesleep>$/;"	l
ffffffff80105760	obj/kern/kernel.asm	/^ffffffff80105760:	5b                   	pop    %rbx$/;"	l
ffffffff80105761	obj/kern/kernel.asm	/^ffffffff80105761:	41 5c                	pop    %r12$/;"	l
ffffffff80105763	obj/kern/kernel.asm	/^ffffffff80105763:	5d                   	pop    %rbp$/;"	l
ffffffff80105764	obj/kern/kernel.asm	/^ffffffff80105764:	c3                   	retq   $/;"	l
ffffffff80105765	obj/kern/kernel.asm	/^ffffffff80105765:	48 c7 c7 2d 77 10 80 	mov    $0xffffffff8010772d,%rdi$/;"	l
ffffffff8010576c	obj/kern/kernel.asm	/^ffffffff8010576c:	e8 b2 ae ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80105771	obj/kern/kernel.asm	/^ffffffff80105771 <iput>:$/;"	l
ffffffff80105771	obj/kern/kernel.asm	/^ffffffff80105771:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105775	obj/kern/kernel.asm	/^ffffffff80105775:	55                   	push   %rbp$/;"	l
ffffffff80105776	obj/kern/kernel.asm	/^ffffffff80105776:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105779	obj/kern/kernel.asm	/^ffffffff80105779:	41 57                	push   %r15$/;"	l
ffffffff8010577b	obj/kern/kernel.asm	/^ffffffff8010577b:	41 56                	push   %r14$/;"	l
ffffffff8010577d	obj/kern/kernel.asm	/^ffffffff8010577d:	41 55                	push   %r13$/;"	l
ffffffff8010577f	obj/kern/kernel.asm	/^ffffffff8010577f:	41 54                	push   %r12$/;"	l
ffffffff80105781	obj/kern/kernel.asm	/^ffffffff80105781:	53                   	push   %rbx$/;"	l
ffffffff80105782	obj/kern/kernel.asm	/^ffffffff80105782:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80105786	obj/kern/kernel.asm	/^ffffffff80105786:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80105789	obj/kern/kernel.asm	/^ffffffff80105789:	4c 8d 6f 10          	lea    0x10(%rdi),%r13$/;"	l
ffffffff8010578d	obj/kern/kernel.asm	/^ffffffff8010578d:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105790	obj/kern/kernel.asm	/^ffffffff80105790:	e8 18 f6 ff ff       	callq  ffffffff80104dad <acquiresleep>$/;"	l
ffffffff80105795	obj/kern/kernel.asm	/^ffffffff80105795:	83 7b 40 00          	cmpl   $0x0,0x40(%rbx)$/;"	l
ffffffff80105799	obj/kern/kernel.asm	/^ffffffff80105799:	74 07                	je     ffffffff801057a2 <iput+0x31>$/;"	l
ffffffff8010579b	obj/kern/kernel.asm	/^ffffffff8010579b:	66 83 7b 4a 00       	cmpw   $0x0,0x4a(%rbx)$/;"	l
ffffffff801057a0	obj/kern/kernel.asm	/^ffffffff801057a0:	74 33                	je     ffffffff801057d5 <iput+0x64>$/;"	l
ffffffff801057a2	obj/kern/kernel.asm	/^ffffffff801057a2:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff801057a5	obj/kern/kernel.asm	/^ffffffff801057a5:	e8 50 f6 ff ff       	callq  ffffffff80104dfa <releasesleep>$/;"	l
ffffffff801057aa	obj/kern/kernel.asm	/^ffffffff801057aa:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff801057b1	obj/kern/kernel.asm	/^ffffffff801057b1:	e8 e9 ac ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801057b6	obj/kern/kernel.asm	/^ffffffff801057b6:	83 6b 08 01          	subl   $0x1,0x8(%rbx)$/;"	l
ffffffff801057ba	obj/kern/kernel.asm	/^ffffffff801057ba:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff801057c1	obj/kern/kernel.asm	/^ffffffff801057c1:	e8 27 ad ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801057c6	obj/kern/kernel.asm	/^ffffffff801057c6:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801057ca	obj/kern/kernel.asm	/^ffffffff801057ca:	5b                   	pop    %rbx$/;"	l
ffffffff801057cb	obj/kern/kernel.asm	/^ffffffff801057cb:	41 5c                	pop    %r12$/;"	l
ffffffff801057cd	obj/kern/kernel.asm	/^ffffffff801057cd:	41 5d                	pop    %r13$/;"	l
ffffffff801057cf	obj/kern/kernel.asm	/^ffffffff801057cf:	41 5e                	pop    %r14$/;"	l
ffffffff801057d1	obj/kern/kernel.asm	/^ffffffff801057d1:	41 5f                	pop    %r15$/;"	l
ffffffff801057d3	obj/kern/kernel.asm	/^ffffffff801057d3:	5d                   	pop    %rbp$/;"	l
ffffffff801057d4	obj/kern/kernel.asm	/^ffffffff801057d4:	c3                   	retq   $/;"	l
ffffffff801057d5	obj/kern/kernel.asm	/^ffffffff801057d5:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff801057dc	obj/kern/kernel.asm	/^ffffffff801057dc:	e8 be ac ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801057e1	obj/kern/kernel.asm	/^ffffffff801057e1:	44 8b 63 08          	mov    0x8(%rbx),%r12d$/;"	l
ffffffff801057e5	obj/kern/kernel.asm	/^ffffffff801057e5:	48 c7 c7 a0 36 11 80 	mov    $0xffffffff801136a0,%rdi$/;"	l
ffffffff801057ec	obj/kern/kernel.asm	/^ffffffff801057ec:	e8 fc ac ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801057f1	obj/kern/kernel.asm	/^ffffffff801057f1:	41 83 fc 01          	cmp    $0x1,%r12d$/;"	l
ffffffff801057f5	obj/kern/kernel.asm	/^ffffffff801057f5:	75 ab                	jne    ffffffff801057a2 <iput+0x31>$/;"	l
ffffffff801057f7	obj/kern/kernel.asm	/^ffffffff801057f7:	4c 8d 63 50          	lea    0x50(%rbx),%r12$/;"	l
ffffffff801057fb	obj/kern/kernel.asm	/^ffffffff801057fb:	4c 8d b3 80 00 00 00 	lea    0x80(%rbx),%r14$/;"	l
ffffffff80105802	obj/kern/kernel.asm	/^ffffffff80105802:	eb 09                	jmp    ffffffff8010580d <iput+0x9c>$/;"	l
ffffffff80105804	obj/kern/kernel.asm	/^ffffffff80105804:	49 83 c4 04          	add    $0x4,%r12$/;"	l
ffffffff80105808	obj/kern/kernel.asm	/^ffffffff80105808:	4d 39 f4             	cmp    %r14,%r12$/;"	l
ffffffff8010580b	obj/kern/kernel.asm	/^ffffffff8010580b:	74 19                	je     ffffffff80105826 <iput+0xb5>$/;"	l
ffffffff8010580d	obj/kern/kernel.asm	/^ffffffff8010580d:	41 8b 34 24          	mov    (%r12),%esi$/;"	l
ffffffff80105811	obj/kern/kernel.asm	/^ffffffff80105811:	85 f6                	test   %esi,%esi$/;"	l
ffffffff80105813	obj/kern/kernel.asm	/^ffffffff80105813:	74 ef                	je     ffffffff80105804 <iput+0x93>$/;"	l
ffffffff80105815	obj/kern/kernel.asm	/^ffffffff80105815:	8b 3b                	mov    (%rbx),%edi$/;"	l
ffffffff80105817	obj/kern/kernel.asm	/^ffffffff80105817:	e8 23 f9 ff ff       	callq  ffffffff8010513f <bfree>$/;"	l
ffffffff8010581c	obj/kern/kernel.asm	/^ffffffff8010581c:	41 c7 04 24 00 00 00 	movl   $0x0,(%r12)$/;"	l
ffffffff80105823	obj/kern/kernel.asm	/^ffffffff80105823:	00 $/;"	l
ffffffff80105824	obj/kern/kernel.asm	/^ffffffff80105824:	eb de                	jmp    ffffffff80105804 <iput+0x93>$/;"	l
ffffffff80105826	obj/kern/kernel.asm	/^ffffffff80105826:	8b b3 80 00 00 00    	mov    0x80(%rbx),%esi$/;"	l
ffffffff8010582c	obj/kern/kernel.asm	/^ffffffff8010582c:	85 f6                	test   %esi,%esi$/;"	l
ffffffff8010582e	obj/kern/kernel.asm	/^ffffffff8010582e:	75 29                	jne    ffffffff80105859 <iput+0xe8>$/;"	l
ffffffff80105830	obj/kern/kernel.asm	/^ffffffff80105830:	c7 43 4c 00 00 00 00 	movl   $0x0,0x4c(%rbx)$/;"	l
ffffffff80105837	obj/kern/kernel.asm	/^ffffffff80105837:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010583a	obj/kern/kernel.asm	/^ffffffff8010583a:	e8 80 fd ff ff       	callq  ffffffff801055bf <iupdate>$/;"	l
ffffffff8010583f	obj/kern/kernel.asm	/^ffffffff8010583f:	66 c7 43 44 00 00    	movw   $0x0,0x44(%rbx)$/;"	l
ffffffff80105845	obj/kern/kernel.asm	/^ffffffff80105845:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105848	obj/kern/kernel.asm	/^ffffffff80105848:	e8 72 fd ff ff       	callq  ffffffff801055bf <iupdate>$/;"	l
ffffffff8010584d	obj/kern/kernel.asm	/^ffffffff8010584d:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%rbx)$/;"	l
ffffffff80105854	obj/kern/kernel.asm	/^ffffffff80105854:	e9 49 ff ff ff       	jmpq   ffffffff801057a2 <iput+0x31>$/;"	l
ffffffff80105859	obj/kern/kernel.asm	/^ffffffff80105859:	8b 3b                	mov    (%rbx),%edi$/;"	l
ffffffff8010585b	obj/kern/kernel.asm	/^ffffffff8010585b:	e8 62 f3 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105860	obj/kern/kernel.asm	/^ffffffff80105860:	49 89 c7             	mov    %rax,%r15$/;"	l
ffffffff80105863	obj/kern/kernel.asm	/^ffffffff80105863:	4c 8d 60 60          	lea    0x60(%rax),%r12$/;"	l
ffffffff80105867	obj/kern/kernel.asm	/^ffffffff80105867:	4c 8d b0 60 02 00 00 	lea    0x260(%rax),%r14$/;"	l
ffffffff8010586e	obj/kern/kernel.asm	/^ffffffff8010586e:	eb 10                	jmp    ffffffff80105880 <iput+0x10f>$/;"	l
ffffffff80105870	obj/kern/kernel.asm	/^ffffffff80105870:	8b 3b                	mov    (%rbx),%edi$/;"	l
ffffffff80105872	obj/kern/kernel.asm	/^ffffffff80105872:	e8 c8 f8 ff ff       	callq  ffffffff8010513f <bfree>$/;"	l
ffffffff80105877	obj/kern/kernel.asm	/^ffffffff80105877:	49 83 c4 04          	add    $0x4,%r12$/;"	l
ffffffff8010587b	obj/kern/kernel.asm	/^ffffffff8010587b:	4d 39 f4             	cmp    %r14,%r12$/;"	l
ffffffff8010587e	obj/kern/kernel.asm	/^ffffffff8010587e:	74 0a                	je     ffffffff8010588a <iput+0x119>$/;"	l
ffffffff80105880	obj/kern/kernel.asm	/^ffffffff80105880:	41 8b 34 24          	mov    (%r12),%esi$/;"	l
ffffffff80105884	obj/kern/kernel.asm	/^ffffffff80105884:	85 f6                	test   %esi,%esi$/;"	l
ffffffff80105886	obj/kern/kernel.asm	/^ffffffff80105886:	74 ef                	je     ffffffff80105877 <iput+0x106>$/;"	l
ffffffff80105888	obj/kern/kernel.asm	/^ffffffff80105888:	eb e6                	jmp    ffffffff80105870 <iput+0xff>$/;"	l
ffffffff8010588a	obj/kern/kernel.asm	/^ffffffff8010588a:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff8010588d	obj/kern/kernel.asm	/^ffffffff8010588d:	e8 4d f4 ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105892	obj/kern/kernel.asm	/^ffffffff80105892:	8b b3 80 00 00 00    	mov    0x80(%rbx),%esi$/;"	l
ffffffff80105898	obj/kern/kernel.asm	/^ffffffff80105898:	8b 3b                	mov    (%rbx),%edi$/;"	l
ffffffff8010589a	obj/kern/kernel.asm	/^ffffffff8010589a:	e8 a0 f8 ff ff       	callq  ffffffff8010513f <bfree>$/;"	l
ffffffff8010589f	obj/kern/kernel.asm	/^ffffffff8010589f:	c7 83 80 00 00 00 00 	movl   $0x0,0x80(%rbx)$/;"	l
ffffffff801058a6	obj/kern/kernel.asm	/^ffffffff801058a6:	00 00 00 $/;"	l
ffffffff801058a9	obj/kern/kernel.asm	/^ffffffff801058a9:	eb 85                	jmp    ffffffff80105830 <iput+0xbf>$/;"	l
ffffffff801058ab	obj/kern/kernel.asm	/^ffffffff801058ab <iunlockput>:$/;"	l
ffffffff801058ab	obj/kern/kernel.asm	/^ffffffff801058ab:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801058af	obj/kern/kernel.asm	/^ffffffff801058af:	55                   	push   %rbp$/;"	l
ffffffff801058b0	obj/kern/kernel.asm	/^ffffffff801058b0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801058b3	obj/kern/kernel.asm	/^ffffffff801058b3:	53                   	push   %rbx$/;"	l
ffffffff801058b4	obj/kern/kernel.asm	/^ffffffff801058b4:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801058b8	obj/kern/kernel.asm	/^ffffffff801058b8:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff801058bb	obj/kern/kernel.asm	/^ffffffff801058bb:	e8 6f fe ff ff       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff801058c0	obj/kern/kernel.asm	/^ffffffff801058c0:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801058c3	obj/kern/kernel.asm	/^ffffffff801058c3:	e8 a9 fe ff ff       	callq  ffffffff80105771 <iput>$/;"	l
ffffffff801058c8	obj/kern/kernel.asm	/^ffffffff801058c8:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801058cc	obj/kern/kernel.asm	/^ffffffff801058cc:	5b                   	pop    %rbx$/;"	l
ffffffff801058cd	obj/kern/kernel.asm	/^ffffffff801058cd:	5d                   	pop    %rbp$/;"	l
ffffffff801058ce	obj/kern/kernel.asm	/^ffffffff801058ce:	c3                   	retq   $/;"	l
ffffffff801058cf	obj/kern/kernel.asm	/^ffffffff801058cf <stati>:$/;"	l
ffffffff801058cf	obj/kern/kernel.asm	/^ffffffff801058cf:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801058d3	obj/kern/kernel.asm	/^ffffffff801058d3:	8b 07                	mov    (%rdi),%eax$/;"	l
ffffffff801058d5	obj/kern/kernel.asm	/^ffffffff801058d5:	89 46 04             	mov    %eax,0x4(%rsi)$/;"	l
ffffffff801058d8	obj/kern/kernel.asm	/^ffffffff801058d8:	8b 47 04             	mov    0x4(%rdi),%eax$/;"	l
ffffffff801058db	obj/kern/kernel.asm	/^ffffffff801058db:	89 46 08             	mov    %eax,0x8(%rsi)$/;"	l
ffffffff801058de	obj/kern/kernel.asm	/^ffffffff801058de:	0f b7 47 44          	movzwl 0x44(%rdi),%eax$/;"	l
ffffffff801058e2	obj/kern/kernel.asm	/^ffffffff801058e2:	66 89 06             	mov    %ax,(%rsi)$/;"	l
ffffffff801058e5	obj/kern/kernel.asm	/^ffffffff801058e5:	0f b7 47 4a          	movzwl 0x4a(%rdi),%eax$/;"	l
ffffffff801058e9	obj/kern/kernel.asm	/^ffffffff801058e9:	66 89 46 0c          	mov    %ax,0xc(%rsi)$/;"	l
ffffffff801058ed	obj/kern/kernel.asm	/^ffffffff801058ed:	8b 47 4c             	mov    0x4c(%rdi),%eax$/;"	l
ffffffff801058f0	obj/kern/kernel.asm	/^ffffffff801058f0:	89 46 10             	mov    %eax,0x10(%rsi)$/;"	l
ffffffff801058f3	obj/kern/kernel.asm	/^ffffffff801058f3:	c3                   	retq   $/;"	l
ffffffff801058f4	obj/kern/kernel.asm	/^ffffffff801058f4 <readi>:$/;"	l
ffffffff801058f4	obj/kern/kernel.asm	/^ffffffff801058f4:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801058f8	obj/kern/kernel.asm	/^ffffffff801058f8:	55                   	push   %rbp$/;"	l
ffffffff801058f9	obj/kern/kernel.asm	/^ffffffff801058f9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801058fc	obj/kern/kernel.asm	/^ffffffff801058fc:	41 57                	push   %r15$/;"	l
ffffffff801058fe	obj/kern/kernel.asm	/^ffffffff801058fe:	41 56                	push   %r14$/;"	l
ffffffff80105900	obj/kern/kernel.asm	/^ffffffff80105900:	41 55                	push   %r13$/;"	l
ffffffff80105902	obj/kern/kernel.asm	/^ffffffff80105902:	41 54                	push   %r12$/;"	l
ffffffff80105904	obj/kern/kernel.asm	/^ffffffff80105904:	53                   	push   %rbx$/;"	l
ffffffff80105905	obj/kern/kernel.asm	/^ffffffff80105905:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffffffff80105909	obj/kern/kernel.asm	/^ffffffff80105909:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
ffffffff8010590d	obj/kern/kernel.asm	/^ffffffff8010590d:	49 89 f7             	mov    %rsi,%r15$/;"	l
ffffffff80105910	obj/kern/kernel.asm	/^ffffffff80105910:	41 89 ce             	mov    %ecx,%r14d$/;"	l
ffffffff80105913	obj/kern/kernel.asm	/^ffffffff80105913:	66 83 7f 44 03       	cmpw   $0x3,0x44(%rdi)$/;"	l
ffffffff80105918	obj/kern/kernel.asm	/^ffffffff80105918:	0f 84 ae 00 00 00    	je     ffffffff801059cc <readi+0xd8>$/;"	l
ffffffff8010591e	obj/kern/kernel.asm	/^ffffffff8010591e:	41 89 d4             	mov    %edx,%r12d$/;"	l
ffffffff80105921	obj/kern/kernel.asm	/^ffffffff80105921:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffffffff80105925	obj/kern/kernel.asm	/^ffffffff80105925:	8b 40 4c             	mov    0x4c(%rax),%eax$/;"	l
ffffffff80105928	obj/kern/kernel.asm	/^ffffffff80105928:	39 d0                	cmp    %edx,%eax$/;"	l
ffffffff8010592a	obj/kern/kernel.asm	/^ffffffff8010592a:	0f 82 ce 00 00 00    	jb     ffffffff801059fe <readi+0x10a>$/;"	l
ffffffff80105930	obj/kern/kernel.asm	/^ffffffff80105930:	01 ca                	add    %ecx,%edx$/;"	l
ffffffff80105932	obj/kern/kernel.asm	/^ffffffff80105932:	0f 82 cd 00 00 00    	jb     ffffffff80105a05 <readi+0x111>$/;"	l
ffffffff80105938	obj/kern/kernel.asm	/^ffffffff80105938:	89 c1                	mov    %eax,%ecx$/;"	l
ffffffff8010593a	obj/kern/kernel.asm	/^ffffffff8010593a:	44 29 e1             	sub    %r12d,%ecx$/;"	l
ffffffff8010593d	obj/kern/kernel.asm	/^ffffffff8010593d:	39 d0                	cmp    %edx,%eax$/;"	l
ffffffff8010593f	obj/kern/kernel.asm	/^ffffffff8010593f:	44 0f 42 f1          	cmovb  %ecx,%r14d$/;"	l
ffffffff80105943	obj/kern/kernel.asm	/^ffffffff80105943:	45 85 f6             	test   %r14d,%r14d$/;"	l
ffffffff80105946	obj/kern/kernel.asm	/^ffffffff80105946:	74 72                	je     ffffffff801059ba <readi+0xc6>$/;"	l
ffffffff80105948	obj/kern/kernel.asm	/^ffffffff80105948:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
ffffffff8010594e	obj/kern/kernel.asm	/^ffffffff8010594e:	44 89 e6             	mov    %r12d,%esi$/;"	l
ffffffff80105951	obj/kern/kernel.asm	/^ffffffff80105951:	c1 ee 09             	shr    $0x9,%esi$/;"	l
ffffffff80105954	obj/kern/kernel.asm	/^ffffffff80105954:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx$/;"	l
ffffffff80105958	obj/kern/kernel.asm	/^ffffffff80105958:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010595b	obj/kern/kernel.asm	/^ffffffff8010595b:	e8 69 f9 ff ff       	callq  ffffffff801052c9 <bmap>$/;"	l
ffffffff80105960	obj/kern/kernel.asm	/^ffffffff80105960:	89 c6                	mov    %eax,%esi$/;"	l
ffffffff80105962	obj/kern/kernel.asm	/^ffffffff80105962:	8b 3b                	mov    (%rbx),%edi$/;"	l
ffffffff80105964	obj/kern/kernel.asm	/^ffffffff80105964:	e8 59 f2 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105969	obj/kern/kernel.asm	/^ffffffff80105969:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff8010596c	obj/kern/kernel.asm	/^ffffffff8010596c:	44 89 e0             	mov    %r12d,%eax$/;"	l
ffffffff8010596f	obj/kern/kernel.asm	/^ffffffff8010596f:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffffffff80105974	obj/kern/kernel.asm	/^ffffffff80105974:	bb 00 02 00 00       	mov    $0x200,%ebx$/;"	l
ffffffff80105979	obj/kern/kernel.asm	/^ffffffff80105979:	29 c3                	sub    %eax,%ebx$/;"	l
ffffffff8010597b	obj/kern/kernel.asm	/^ffffffff8010597b:	44 89 f2             	mov    %r14d,%edx$/;"	l
ffffffff8010597e	obj/kern/kernel.asm	/^ffffffff8010597e:	44 29 ea             	sub    %r13d,%edx$/;"	l
ffffffff80105981	obj/kern/kernel.asm	/^ffffffff80105981:	39 d3                	cmp    %edx,%ebx$/;"	l
ffffffff80105983	obj/kern/kernel.asm	/^ffffffff80105983:	0f 47 da             	cmova  %edx,%ebx$/;"	l
ffffffff80105986	obj/kern/kernel.asm	/^ffffffff80105986:	89 d9                	mov    %ebx,%ecx$/;"	l
ffffffff80105988	obj/kern/kernel.asm	/^ffffffff80105988:	89 c0                	mov    %eax,%eax$/;"	l
ffffffff8010598a	obj/kern/kernel.asm	/^ffffffff8010598a:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)$/;"	l
ffffffff8010598e	obj/kern/kernel.asm	/^ffffffff8010598e:	48 8d 74 07 60       	lea    0x60(%rdi,%rax,1),%rsi$/;"	l
ffffffff80105993	obj/kern/kernel.asm	/^ffffffff80105993:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)$/;"	l
ffffffff80105997	obj/kern/kernel.asm	/^ffffffff80105997:	48 89 ca             	mov    %rcx,%rdx$/;"	l
ffffffff8010599a	obj/kern/kernel.asm	/^ffffffff8010599a:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff8010599d	obj/kern/kernel.asm	/^ffffffff8010599d:	e8 e5 0f 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff801059a2	obj/kern/kernel.asm	/^ffffffff801059a2:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi$/;"	l
ffffffff801059a6	obj/kern/kernel.asm	/^ffffffff801059a6:	e8 34 f3 ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff801059ab	obj/kern/kernel.asm	/^ffffffff801059ab:	41 01 dd             	add    %ebx,%r13d$/;"	l
ffffffff801059ae	obj/kern/kernel.asm	/^ffffffff801059ae:	41 01 dc             	add    %ebx,%r12d$/;"	l
ffffffff801059b1	obj/kern/kernel.asm	/^ffffffff801059b1:	4c 03 7d c8          	add    -0x38(%rbp),%r15$/;"	l
ffffffff801059b5	obj/kern/kernel.asm	/^ffffffff801059b5:	45 39 ee             	cmp    %r13d,%r14d$/;"	l
ffffffff801059b8	obj/kern/kernel.asm	/^ffffffff801059b8:	77 94                	ja     ffffffff8010594e <readi+0x5a>$/;"	l
ffffffff801059ba	obj/kern/kernel.asm	/^ffffffff801059ba:	44 89 f0             	mov    %r14d,%eax$/;"	l
ffffffff801059bd	obj/kern/kernel.asm	/^ffffffff801059bd:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffffffff801059c1	obj/kern/kernel.asm	/^ffffffff801059c1:	5b                   	pop    %rbx$/;"	l
ffffffff801059c2	obj/kern/kernel.asm	/^ffffffff801059c2:	41 5c                	pop    %r12$/;"	l
ffffffff801059c4	obj/kern/kernel.asm	/^ffffffff801059c4:	41 5d                	pop    %r13$/;"	l
ffffffff801059c6	obj/kern/kernel.asm	/^ffffffff801059c6:	41 5e                	pop    %r14$/;"	l
ffffffff801059c8	obj/kern/kernel.asm	/^ffffffff801059c8:	41 5f                	pop    %r15$/;"	l
ffffffff801059ca	obj/kern/kernel.asm	/^ffffffff801059ca:	5d                   	pop    %rbp$/;"	l
ffffffff801059cb	obj/kern/kernel.asm	/^ffffffff801059cb:	c3                   	retq   $/;"	l
ffffffff801059cc	obj/kern/kernel.asm	/^ffffffff801059cc:	0f b7 47 46          	movzwl 0x46(%rdi),%eax$/;"	l
ffffffff801059d0	obj/kern/kernel.asm	/^ffffffff801059d0:	66 83 f8 09          	cmp    $0x9,%ax$/;"	l
ffffffff801059d4	obj/kern/kernel.asm	/^ffffffff801059d4:	77 1a                	ja     ffffffff801059f0 <readi+0xfc>$/;"	l
ffffffff801059d6	obj/kern/kernel.asm	/^ffffffff801059d6:	48 0f bf c0          	movswq %ax,%rax$/;"	l
ffffffff801059da	obj/kern/kernel.asm	/^ffffffff801059da:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
ffffffff801059de	obj/kern/kernel.asm	/^ffffffff801059de:	48 8b 80 20 61 11 80 	mov    -0x7fee9ee0(%rax),%rax$/;"	l
ffffffff801059e5	obj/kern/kernel.asm	/^ffffffff801059e5:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff801059e8	obj/kern/kernel.asm	/^ffffffff801059e8:	74 0d                	je     ffffffff801059f7 <readi+0x103>$/;"	l
ffffffff801059ea	obj/kern/kernel.asm	/^ffffffff801059ea:	89 ca                	mov    %ecx,%edx$/;"	l
ffffffff801059ec	obj/kern/kernel.asm	/^ffffffff801059ec:	ff d0                	callq  *%rax$/;"	l
ffffffff801059ee	obj/kern/kernel.asm	/^ffffffff801059ee:	eb cd                	jmp    ffffffff801059bd <readi+0xc9>$/;"	l
ffffffff801059f0	obj/kern/kernel.asm	/^ffffffff801059f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801059f5	obj/kern/kernel.asm	/^ffffffff801059f5:	eb c6                	jmp    ffffffff801059bd <readi+0xc9>$/;"	l
ffffffff801059f7	obj/kern/kernel.asm	/^ffffffff801059f7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801059fc	obj/kern/kernel.asm	/^ffffffff801059fc:	eb bf                	jmp    ffffffff801059bd <readi+0xc9>$/;"	l
ffffffff801059fe	obj/kern/kernel.asm	/^ffffffff801059fe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80105a03	obj/kern/kernel.asm	/^ffffffff80105a03:	eb b8                	jmp    ffffffff801059bd <readi+0xc9>$/;"	l
ffffffff80105a05	obj/kern/kernel.asm	/^ffffffff80105a05:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80105a0a	obj/kern/kernel.asm	/^ffffffff80105a0a:	eb b1                	jmp    ffffffff801059bd <readi+0xc9>$/;"	l
ffffffff80105a0c	obj/kern/kernel.asm	/^ffffffff80105a0c <writei>:$/;"	l
ffffffff80105a0c	obj/kern/kernel.asm	/^ffffffff80105a0c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105a10	obj/kern/kernel.asm	/^ffffffff80105a10:	55                   	push   %rbp$/;"	l
ffffffff80105a11	obj/kern/kernel.asm	/^ffffffff80105a11:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105a14	obj/kern/kernel.asm	/^ffffffff80105a14:	41 57                	push   %r15$/;"	l
ffffffff80105a16	obj/kern/kernel.asm	/^ffffffff80105a16:	41 56                	push   %r14$/;"	l
ffffffff80105a18	obj/kern/kernel.asm	/^ffffffff80105a18:	41 55                	push   %r13$/;"	l
ffffffff80105a1a	obj/kern/kernel.asm	/^ffffffff80105a1a:	41 54                	push   %r12$/;"	l
ffffffff80105a1c	obj/kern/kernel.asm	/^ffffffff80105a1c:	53                   	push   %rbx$/;"	l
ffffffff80105a1d	obj/kern/kernel.asm	/^ffffffff80105a1d:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffffffff80105a21	obj/kern/kernel.asm	/^ffffffff80105a21:	49 89 ff             	mov    %rdi,%r15$/;"	l
ffffffff80105a24	obj/kern/kernel.asm	/^ffffffff80105a24:	49 89 f6             	mov    %rsi,%r14$/;"	l
ffffffff80105a27	obj/kern/kernel.asm	/^ffffffff80105a27:	89 4d c4             	mov    %ecx,-0x3c(%rbp)$/;"	l
ffffffff80105a2a	obj/kern/kernel.asm	/^ffffffff80105a2a:	66 83 7f 44 03       	cmpw   $0x3,0x44(%rdi)$/;"	l
ffffffff80105a2f	obj/kern/kernel.asm	/^ffffffff80105a2f:	0f 84 ba 00 00 00    	je     ffffffff80105aef <writei+0xe3>$/;"	l
ffffffff80105a35	obj/kern/kernel.asm	/^ffffffff80105a35:	41 89 d4             	mov    %edx,%r12d$/;"	l
ffffffff80105a38	obj/kern/kernel.asm	/^ffffffff80105a38:	39 57 4c             	cmp    %edx,0x4c(%rdi)$/;"	l
ffffffff80105a3b	obj/kern/kernel.asm	/^ffffffff80105a3b:	0f 82 ee 00 00 00    	jb     ffffffff80105b2f <writei+0x123>$/;"	l
ffffffff80105a41	obj/kern/kernel.asm	/^ffffffff80105a41:	8b 4d c4             	mov    -0x3c(%rbp),%ecx$/;"	l
ffffffff80105a44	obj/kern/kernel.asm	/^ffffffff80105a44:	8d 04 0a             	lea    (%rdx,%rcx,1),%eax$/;"	l
ffffffff80105a47	obj/kern/kernel.asm	/^ffffffff80105a47:	3d 00 18 01 00       	cmp    $0x11800,%eax$/;"	l
ffffffff80105a4c	obj/kern/kernel.asm	/^ffffffff80105a4c:	0f 87 e4 00 00 00    	ja     ffffffff80105b36 <writei+0x12a>$/;"	l
ffffffff80105a52	obj/kern/kernel.asm	/^ffffffff80105a52:	39 d0                	cmp    %edx,%eax$/;"	l
ffffffff80105a54	obj/kern/kernel.asm	/^ffffffff80105a54:	0f 82 dc 00 00 00    	jb     ffffffff80105b36 <writei+0x12a>$/;"	l
ffffffff80105a5a	obj/kern/kernel.asm	/^ffffffff80105a5a:	85 c9                	test   %ecx,%ecx$/;"	l
ffffffff80105a5c	obj/kern/kernel.asm	/^ffffffff80105a5c:	74 7f                	je     ffffffff80105add <writei+0xd1>$/;"	l
ffffffff80105a5e	obj/kern/kernel.asm	/^ffffffff80105a5e:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
ffffffff80105a64	obj/kern/kernel.asm	/^ffffffff80105a64:	44 89 e6             	mov    %r12d,%esi$/;"	l
ffffffff80105a67	obj/kern/kernel.asm	/^ffffffff80105a67:	c1 ee 09             	shr    $0x9,%esi$/;"	l
ffffffff80105a6a	obj/kern/kernel.asm	/^ffffffff80105a6a:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80105a6d	obj/kern/kernel.asm	/^ffffffff80105a6d:	e8 57 f8 ff ff       	callq  ffffffff801052c9 <bmap>$/;"	l
ffffffff80105a72	obj/kern/kernel.asm	/^ffffffff80105a72:	89 c6                	mov    %eax,%esi$/;"	l
ffffffff80105a74	obj/kern/kernel.asm	/^ffffffff80105a74:	41 8b 3f             	mov    (%r15),%edi$/;"	l
ffffffff80105a77	obj/kern/kernel.asm	/^ffffffff80105a77:	e8 46 f1 ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105a7c	obj/kern/kernel.asm	/^ffffffff80105a7c:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffffffff80105a7f	obj/kern/kernel.asm	/^ffffffff80105a7f:	44 89 e0             	mov    %r12d,%eax$/;"	l
ffffffff80105a82	obj/kern/kernel.asm	/^ffffffff80105a82:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffffffff80105a87	obj/kern/kernel.asm	/^ffffffff80105a87:	bb 00 02 00 00       	mov    $0x200,%ebx$/;"	l
ffffffff80105a8c	obj/kern/kernel.asm	/^ffffffff80105a8c:	29 c3                	sub    %eax,%ebx$/;"	l
ffffffff80105a8e	obj/kern/kernel.asm	/^ffffffff80105a8e:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffffffff80105a91	obj/kern/kernel.asm	/^ffffffff80105a91:	44 29 ea             	sub    %r13d,%edx$/;"	l
ffffffff80105a94	obj/kern/kernel.asm	/^ffffffff80105a94:	39 d3                	cmp    %edx,%ebx$/;"	l
ffffffff80105a96	obj/kern/kernel.asm	/^ffffffff80105a96:	0f 47 da             	cmova  %edx,%ebx$/;"	l
ffffffff80105a99	obj/kern/kernel.asm	/^ffffffff80105a99:	89 de                	mov    %ebx,%esi$/;"	l
ffffffff80105a9b	obj/kern/kernel.asm	/^ffffffff80105a9b:	89 c0                	mov    %eax,%eax$/;"	l
ffffffff80105a9d	obj/kern/kernel.asm	/^ffffffff80105a9d:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)$/;"	l
ffffffff80105aa1	obj/kern/kernel.asm	/^ffffffff80105aa1:	48 8d 7c 01 60       	lea    0x60(%rcx,%rax,1),%rdi$/;"	l
ffffffff80105aa6	obj/kern/kernel.asm	/^ffffffff80105aa6:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)$/;"	l
ffffffff80105aaa	obj/kern/kernel.asm	/^ffffffff80105aaa:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffffffff80105aad	obj/kern/kernel.asm	/^ffffffff80105aad:	4c 89 f6             	mov    %r14,%rsi$/;"	l
ffffffff80105ab0	obj/kern/kernel.asm	/^ffffffff80105ab0:	e8 d2 0e 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff80105ab5	obj/kern/kernel.asm	/^ffffffff80105ab5:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi$/;"	l
ffffffff80105ab9	obj/kern/kernel.asm	/^ffffffff80105ab9:	e8 e4 06 00 00       	callq  ffffffff801061a2 <log_write>$/;"	l
ffffffff80105abe	obj/kern/kernel.asm	/^ffffffff80105abe:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi$/;"	l
ffffffff80105ac2	obj/kern/kernel.asm	/^ffffffff80105ac2:	e8 18 f2 ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105ac7	obj/kern/kernel.asm	/^ffffffff80105ac7:	41 01 dd             	add    %ebx,%r13d$/;"	l
ffffffff80105aca	obj/kern/kernel.asm	/^ffffffff80105aca:	41 01 dc             	add    %ebx,%r12d$/;"	l
ffffffff80105acd	obj/kern/kernel.asm	/^ffffffff80105acd:	4c 03 75 b8          	add    -0x48(%rbp),%r14$/;"	l
ffffffff80105ad1	obj/kern/kernel.asm	/^ffffffff80105ad1:	44 39 6d c4          	cmp    %r13d,-0x3c(%rbp)$/;"	l
ffffffff80105ad5	obj/kern/kernel.asm	/^ffffffff80105ad5:	77 8d                	ja     ffffffff80105a64 <writei+0x58>$/;"	l
ffffffff80105ad7	obj/kern/kernel.asm	/^ffffffff80105ad7:	45 39 67 4c          	cmp    %r12d,0x4c(%r15)$/;"	l
ffffffff80105adb	obj/kern/kernel.asm	/^ffffffff80105adb:	72 36                	jb     ffffffff80105b13 <writei+0x107>$/;"	l
ffffffff80105add	obj/kern/kernel.asm	/^ffffffff80105add:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffffffff80105ae0	obj/kern/kernel.asm	/^ffffffff80105ae0:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffffffff80105ae4	obj/kern/kernel.asm	/^ffffffff80105ae4:	5b                   	pop    %rbx$/;"	l
ffffffff80105ae5	obj/kern/kernel.asm	/^ffffffff80105ae5:	41 5c                	pop    %r12$/;"	l
ffffffff80105ae7	obj/kern/kernel.asm	/^ffffffff80105ae7:	41 5d                	pop    %r13$/;"	l
ffffffff80105ae9	obj/kern/kernel.asm	/^ffffffff80105ae9:	41 5e                	pop    %r14$/;"	l
ffffffff80105aeb	obj/kern/kernel.asm	/^ffffffff80105aeb:	41 5f                	pop    %r15$/;"	l
ffffffff80105aed	obj/kern/kernel.asm	/^ffffffff80105aed:	5d                   	pop    %rbp$/;"	l
ffffffff80105aee	obj/kern/kernel.asm	/^ffffffff80105aee:	c3                   	retq   $/;"	l
ffffffff80105aef	obj/kern/kernel.asm	/^ffffffff80105aef:	0f b7 47 46          	movzwl 0x46(%rdi),%eax$/;"	l
ffffffff80105af3	obj/kern/kernel.asm	/^ffffffff80105af3:	66 83 f8 09          	cmp    $0x9,%ax$/;"	l
ffffffff80105af7	obj/kern/kernel.asm	/^ffffffff80105af7:	77 28                	ja     ffffffff80105b21 <writei+0x115>$/;"	l
ffffffff80105af9	obj/kern/kernel.asm	/^ffffffff80105af9:	48 0f bf c0          	movswq %ax,%rax$/;"	l
ffffffff80105afd	obj/kern/kernel.asm	/^ffffffff80105afd:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
ffffffff80105b01	obj/kern/kernel.asm	/^ffffffff80105b01:	48 8b 80 28 61 11 80 	mov    -0x7fee9ed8(%rax),%rax$/;"	l
ffffffff80105b08	obj/kern/kernel.asm	/^ffffffff80105b08:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80105b0b	obj/kern/kernel.asm	/^ffffffff80105b0b:	74 1b                	je     ffffffff80105b28 <writei+0x11c>$/;"	l
ffffffff80105b0d	obj/kern/kernel.asm	/^ffffffff80105b0d:	89 ca                	mov    %ecx,%edx$/;"	l
ffffffff80105b0f	obj/kern/kernel.asm	/^ffffffff80105b0f:	ff d0                	callq  *%rax$/;"	l
ffffffff80105b11	obj/kern/kernel.asm	/^ffffffff80105b11:	eb cd                	jmp    ffffffff80105ae0 <writei+0xd4>$/;"	l
ffffffff80105b13	obj/kern/kernel.asm	/^ffffffff80105b13:	45 89 67 4c          	mov    %r12d,0x4c(%r15)$/;"	l
ffffffff80105b17	obj/kern/kernel.asm	/^ffffffff80105b17:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80105b1a	obj/kern/kernel.asm	/^ffffffff80105b1a:	e8 a0 fa ff ff       	callq  ffffffff801055bf <iupdate>$/;"	l
ffffffff80105b1f	obj/kern/kernel.asm	/^ffffffff80105b1f:	eb bc                	jmp    ffffffff80105add <writei+0xd1>$/;"	l
ffffffff80105b21	obj/kern/kernel.asm	/^ffffffff80105b21:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80105b26	obj/kern/kernel.asm	/^ffffffff80105b26:	eb b8                	jmp    ffffffff80105ae0 <writei+0xd4>$/;"	l
ffffffff80105b28	obj/kern/kernel.asm	/^ffffffff80105b28:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80105b2d	obj/kern/kernel.asm	/^ffffffff80105b2d:	eb b1                	jmp    ffffffff80105ae0 <writei+0xd4>$/;"	l
ffffffff80105b2f	obj/kern/kernel.asm	/^ffffffff80105b2f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80105b34	obj/kern/kernel.asm	/^ffffffff80105b34:	eb aa                	jmp    ffffffff80105ae0 <writei+0xd4>$/;"	l
ffffffff80105b36	obj/kern/kernel.asm	/^ffffffff80105b36:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80105b3b	obj/kern/kernel.asm	/^ffffffff80105b3b:	eb a3                	jmp    ffffffff80105ae0 <writei+0xd4>$/;"	l
ffffffff80105b3d	obj/kern/kernel.asm	/^ffffffff80105b3d <namecmp>:$/;"	l
ffffffff80105b3d	obj/kern/kernel.asm	/^ffffffff80105b3d:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105b41	obj/kern/kernel.asm	/^ffffffff80105b41:	55                   	push   %rbp$/;"	l
ffffffff80105b42	obj/kern/kernel.asm	/^ffffffff80105b42:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105b45	obj/kern/kernel.asm	/^ffffffff80105b45:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffffffff80105b4a	obj/kern/kernel.asm	/^ffffffff80105b4a:	e8 85 0e 00 00       	callq  ffffffff801069d4 <strncmp>$/;"	l
ffffffff80105b4f	obj/kern/kernel.asm	/^ffffffff80105b4f:	5d                   	pop    %rbp$/;"	l
ffffffff80105b50	obj/kern/kernel.asm	/^ffffffff80105b50:	c3                   	retq   $/;"	l
ffffffff80105b51	obj/kern/kernel.asm	/^ffffffff80105b51 <dirlookup>:$/;"	l
ffffffff80105b51	obj/kern/kernel.asm	/^ffffffff80105b51:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105b55	obj/kern/kernel.asm	/^ffffffff80105b55:	55                   	push   %rbp$/;"	l
ffffffff80105b56	obj/kern/kernel.asm	/^ffffffff80105b56:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105b59	obj/kern/kernel.asm	/^ffffffff80105b59:	41 56                	push   %r14$/;"	l
ffffffff80105b5b	obj/kern/kernel.asm	/^ffffffff80105b5b:	41 55                	push   %r13$/;"	l
ffffffff80105b5d	obj/kern/kernel.asm	/^ffffffff80105b5d:	41 54                	push   %r12$/;"	l
ffffffff80105b5f	obj/kern/kernel.asm	/^ffffffff80105b5f:	53                   	push   %rbx$/;"	l
ffffffff80105b60	obj/kern/kernel.asm	/^ffffffff80105b60:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff80105b64	obj/kern/kernel.asm	/^ffffffff80105b64:	66 83 7f 44 01       	cmpw   $0x1,0x44(%rdi)$/;"	l
ffffffff80105b69	obj/kern/kernel.asm	/^ffffffff80105b69:	75 1b                	jne    ffffffff80105b86 <dirlookup+0x35>$/;"	l
ffffffff80105b6b	obj/kern/kernel.asm	/^ffffffff80105b6b:	49 89 fc             	mov    %rdi,%r12$/;"	l
ffffffff80105b6e	obj/kern/kernel.asm	/^ffffffff80105b6e:	49 89 f5             	mov    %rsi,%r13$/;"	l
ffffffff80105b71	obj/kern/kernel.asm	/^ffffffff80105b71:	49 89 d6             	mov    %rdx,%r14$/;"	l
ffffffff80105b74	obj/kern/kernel.asm	/^ffffffff80105b74:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80105b79	obj/kern/kernel.asm	/^ffffffff80105b79:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80105b7e	obj/kern/kernel.asm	/^ffffffff80105b7e:	83 7f 4c 00          	cmpl   $0x0,0x4c(%rdi)$/;"	l
ffffffff80105b82	obj/kern/kernel.asm	/^ffffffff80105b82:	75 24                	jne    ffffffff80105ba8 <dirlookup+0x57>$/;"	l
ffffffff80105b84	obj/kern/kernel.asm	/^ffffffff80105b84:	eb 6d                	jmp    ffffffff80105bf3 <dirlookup+0xa2>$/;"	l
ffffffff80105b86	obj/kern/kernel.asm	/^ffffffff80105b86:	48 c7 c7 35 77 10 80 	mov    $0xffffffff80107735,%rdi$/;"	l
ffffffff80105b8d	obj/kern/kernel.asm	/^ffffffff80105b8d:	e8 91 aa ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80105b92	obj/kern/kernel.asm	/^ffffffff80105b92:	48 c7 c7 47 77 10 80 	mov    $0xffffffff80107747,%rdi$/;"	l
ffffffff80105b99	obj/kern/kernel.asm	/^ffffffff80105b99:	e8 85 aa ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80105b9e	obj/kern/kernel.asm	/^ffffffff80105b9e:	83 c3 10             	add    $0x10,%ebx$/;"	l
ffffffff80105ba1	obj/kern/kernel.asm	/^ffffffff80105ba1:	41 39 5c 24 4c       	cmp    %ebx,0x4c(%r12)$/;"	l
ffffffff80105ba6	obj/kern/kernel.asm	/^ffffffff80105ba6:	76 46                	jbe    ffffffff80105bee <dirlookup+0x9d>$/;"	l
ffffffff80105ba8	obj/kern/kernel.asm	/^ffffffff80105ba8:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffffffff80105bad	obj/kern/kernel.asm	/^ffffffff80105bad:	89 da                	mov    %ebx,%edx$/;"	l
ffffffff80105baf	obj/kern/kernel.asm	/^ffffffff80105baf:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi$/;"	l
ffffffff80105bb3	obj/kern/kernel.asm	/^ffffffff80105bb3:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80105bb6	obj/kern/kernel.asm	/^ffffffff80105bb6:	e8 39 fd ff ff       	callq  ffffffff801058f4 <readi>$/;"	l
ffffffff80105bbb	obj/kern/kernel.asm	/^ffffffff80105bbb:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffffffff80105bbe	obj/kern/kernel.asm	/^ffffffff80105bbe:	75 d2                	jne    ffffffff80105b92 <dirlookup+0x41>$/;"	l
ffffffff80105bc0	obj/kern/kernel.asm	/^ffffffff80105bc0:	66 83 7d d0 00       	cmpw   $0x0,-0x30(%rbp)$/;"	l
ffffffff80105bc5	obj/kern/kernel.asm	/^ffffffff80105bc5:	74 d7                	je     ffffffff80105b9e <dirlookup+0x4d>$/;"	l
ffffffff80105bc7	obj/kern/kernel.asm	/^ffffffff80105bc7:	48 8d 75 d2          	lea    -0x2e(%rbp),%rsi$/;"	l
ffffffff80105bcb	obj/kern/kernel.asm	/^ffffffff80105bcb:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105bce	obj/kern/kernel.asm	/^ffffffff80105bce:	e8 6a ff ff ff       	callq  ffffffff80105b3d <namecmp>$/;"	l
ffffffff80105bd3	obj/kern/kernel.asm	/^ffffffff80105bd3:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80105bd5	obj/kern/kernel.asm	/^ffffffff80105bd5:	75 c7                	jne    ffffffff80105b9e <dirlookup+0x4d>$/;"	l
ffffffff80105bd7	obj/kern/kernel.asm	/^ffffffff80105bd7:	4d 85 f6             	test   %r14,%r14$/;"	l
ffffffff80105bda	obj/kern/kernel.asm	/^ffffffff80105bda:	74 03                	je     ffffffff80105bdf <dirlookup+0x8e>$/;"	l
ffffffff80105bdc	obj/kern/kernel.asm	/^ffffffff80105bdc:	41 89 1e             	mov    %ebx,(%r14)$/;"	l
ffffffff80105bdf	obj/kern/kernel.asm	/^ffffffff80105bdf:	0f b7 75 d0          	movzwl -0x30(%rbp),%esi$/;"	l
ffffffff80105be3	obj/kern/kernel.asm	/^ffffffff80105be3:	41 8b 3c 24          	mov    (%r12),%edi$/;"	l
ffffffff80105be7	obj/kern/kernel.asm	/^ffffffff80105be7:	e8 83 f7 ff ff       	callq  ffffffff8010536f <iget>$/;"	l
ffffffff80105bec	obj/kern/kernel.asm	/^ffffffff80105bec:	eb 05                	jmp    ffffffff80105bf3 <dirlookup+0xa2>$/;"	l
ffffffff80105bee	obj/kern/kernel.asm	/^ffffffff80105bee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80105bf3	obj/kern/kernel.asm	/^ffffffff80105bf3:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffffffff80105bf7	obj/kern/kernel.asm	/^ffffffff80105bf7:	5b                   	pop    %rbx$/;"	l
ffffffff80105bf8	obj/kern/kernel.asm	/^ffffffff80105bf8:	41 5c                	pop    %r12$/;"	l
ffffffff80105bfa	obj/kern/kernel.asm	/^ffffffff80105bfa:	41 5d                	pop    %r13$/;"	l
ffffffff80105bfc	obj/kern/kernel.asm	/^ffffffff80105bfc:	41 5e                	pop    %r14$/;"	l
ffffffff80105bfe	obj/kern/kernel.asm	/^ffffffff80105bfe:	5d                   	pop    %rbp$/;"	l
ffffffff80105bff	obj/kern/kernel.asm	/^ffffffff80105bff:	c3                   	retq   $/;"	l
ffffffff80105c00	obj/kern/kernel.asm	/^ffffffff80105c00 <namex>:$/;"	l
ffffffff80105c00	obj/kern/kernel.asm	/^ffffffff80105c00:	55                   	push   %rbp$/;"	l
ffffffff80105c01	obj/kern/kernel.asm	/^ffffffff80105c01:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105c04	obj/kern/kernel.asm	/^ffffffff80105c04:	41 57                	push   %r15$/;"	l
ffffffff80105c06	obj/kern/kernel.asm	/^ffffffff80105c06:	41 56                	push   %r14$/;"	l
ffffffff80105c08	obj/kern/kernel.asm	/^ffffffff80105c08:	41 55                	push   %r13$/;"	l
ffffffff80105c0a	obj/kern/kernel.asm	/^ffffffff80105c0a:	41 54                	push   %r12$/;"	l
ffffffff80105c0c	obj/kern/kernel.asm	/^ffffffff80105c0c:	53                   	push   %rbx$/;"	l
ffffffff80105c0d	obj/kern/kernel.asm	/^ffffffff80105c0d:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80105c11	obj/kern/kernel.asm	/^ffffffff80105c11:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80105c14	obj/kern/kernel.asm	/^ffffffff80105c14:	89 75 cc             	mov    %esi,-0x34(%rbp)$/;"	l
ffffffff80105c17	obj/kern/kernel.asm	/^ffffffff80105c17:	49 89 d7             	mov    %rdx,%r15$/;"	l
ffffffff80105c1a	obj/kern/kernel.asm	/^ffffffff80105c1a:	80 3f 2f             	cmpb   $0x2f,(%rdi)$/;"	l
ffffffff80105c1d	obj/kern/kernel.asm	/^ffffffff80105c1d:	74 19                	je     ffffffff80105c38 <namex+0x38>$/;"	l
ffffffff80105c1f	obj/kern/kernel.asm	/^ffffffff80105c1f:	e8 cc b4 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80105c24	obj/kern/kernel.asm	/^ffffffff80105c24:	48 8b b8 c8 00 00 00 	mov    0xc8(%rax),%rdi$/;"	l
ffffffff80105c2b	obj/kern/kernel.asm	/^ffffffff80105c2b:	e8 0e fa ff ff       	callq  ffffffff8010563e <idup>$/;"	l
ffffffff80105c30	obj/kern/kernel.asm	/^ffffffff80105c30:	49 89 c5             	mov    %rax,%r13$/;"	l
ffffffff80105c33	obj/kern/kernel.asm	/^ffffffff80105c33:	e9 bf 00 00 00       	jmpq   ffffffff80105cf7 <namex+0xf7>$/;"	l
ffffffff80105c38	obj/kern/kernel.asm	/^ffffffff80105c38:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffffffff80105c3d	obj/kern/kernel.asm	/^ffffffff80105c3d:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffffffff80105c42	obj/kern/kernel.asm	/^ffffffff80105c42:	e8 28 f7 ff ff       	callq  ffffffff8010536f <iget>$/;"	l
ffffffff80105c47	obj/kern/kernel.asm	/^ffffffff80105c47:	49 89 c5             	mov    %rax,%r13$/;"	l
ffffffff80105c4a	obj/kern/kernel.asm	/^ffffffff80105c4a:	e9 a8 00 00 00       	jmpq   ffffffff80105cf7 <namex+0xf7>$/;"	l
ffffffff80105c4f	obj/kern/kernel.asm	/^ffffffff80105c4f:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105c52	obj/kern/kernel.asm	/^ffffffff80105c52:	e8 54 fc ff ff       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80105c57	obj/kern/kernel.asm	/^ffffffff80105c57:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
ffffffff80105c5d	obj/kern/kernel.asm	/^ffffffff80105c5d:	4c 89 e8             	mov    %r13,%rax$/;"	l
ffffffff80105c60	obj/kern/kernel.asm	/^ffffffff80105c60:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff80105c64	obj/kern/kernel.asm	/^ffffffff80105c64:	5b                   	pop    %rbx$/;"	l
ffffffff80105c65	obj/kern/kernel.asm	/^ffffffff80105c65:	41 5c                	pop    %r12$/;"	l
ffffffff80105c67	obj/kern/kernel.asm	/^ffffffff80105c67:	41 5d                	pop    %r13$/;"	l
ffffffff80105c69	obj/kern/kernel.asm	/^ffffffff80105c69:	41 5e                	pop    %r14$/;"	l
ffffffff80105c6b	obj/kern/kernel.asm	/^ffffffff80105c6b:	41 5f                	pop    %r15$/;"	l
ffffffff80105c6d	obj/kern/kernel.asm	/^ffffffff80105c6d:	5d                   	pop    %rbp$/;"	l
ffffffff80105c6e	obj/kern/kernel.asm	/^ffffffff80105c6e:	c3                   	retq   $/;"	l
ffffffff80105c6f	obj/kern/kernel.asm	/^ffffffff80105c6f:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105c72	obj/kern/kernel.asm	/^ffffffff80105c72:	e8 b8 fa ff ff       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff80105c77	obj/kern/kernel.asm	/^ffffffff80105c77:	eb e4                	jmp    ffffffff80105c5d <namex+0x5d>$/;"	l
ffffffff80105c79	obj/kern/kernel.asm	/^ffffffff80105c79:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105c7c	obj/kern/kernel.asm	/^ffffffff80105c7c:	e8 2a fc ff ff       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80105c81	obj/kern/kernel.asm	/^ffffffff80105c81:	4d 89 e5             	mov    %r12,%r13$/;"	l
ffffffff80105c84	obj/kern/kernel.asm	/^ffffffff80105c84:	eb d7                	jmp    ffffffff80105c5d <namex+0x5d>$/;"	l
ffffffff80105c86	obj/kern/kernel.asm	/^ffffffff80105c86:	4c 89 e0             	mov    %r12,%rax$/;"	l
ffffffff80105c89	obj/kern/kernel.asm	/^ffffffff80105c89:	48 29 d8             	sub    %rbx,%rax$/;"	l
ffffffff80105c8c	obj/kern/kernel.asm	/^ffffffff80105c8c:	41 89 c6             	mov    %eax,%r14d$/;"	l
ffffffff80105c8f	obj/kern/kernel.asm	/^ffffffff80105c8f:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
ffffffff80105c92	obj/kern/kernel.asm	/^ffffffff80105c92:	0f 8e a6 00 00 00    	jle    ffffffff80105d3e <namex+0x13e>$/;"	l
ffffffff80105c98	obj/kern/kernel.asm	/^ffffffff80105c98:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffffffff80105c9d	obj/kern/kernel.asm	/^ffffffff80105c9d:	48 89 de             	mov    %rbx,%rsi$/;"	l
ffffffff80105ca0	obj/kern/kernel.asm	/^ffffffff80105ca0:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80105ca3	obj/kern/kernel.asm	/^ffffffff80105ca3:	e8 df 0c 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff80105ca8	obj/kern/kernel.asm	/^ffffffff80105ca8:	4c 89 e3             	mov    %r12,%rbx$/;"	l
ffffffff80105cab	obj/kern/kernel.asm	/^ffffffff80105cab:	80 3b 2f             	cmpb   $0x2f,(%rbx)$/;"	l
ffffffff80105cae	obj/kern/kernel.asm	/^ffffffff80105cae:	75 09                	jne    ffffffff80105cb9 <namex+0xb9>$/;"	l
ffffffff80105cb0	obj/kern/kernel.asm	/^ffffffff80105cb0:	48 83 c3 01          	add    $0x1,%rbx$/;"	l
ffffffff80105cb4	obj/kern/kernel.asm	/^ffffffff80105cb4:	80 3b 2f             	cmpb   $0x2f,(%rbx)$/;"	l
ffffffff80105cb7	obj/kern/kernel.asm	/^ffffffff80105cb7:	74 f7                	je     ffffffff80105cb0 <namex+0xb0>$/;"	l
ffffffff80105cb9	obj/kern/kernel.asm	/^ffffffff80105cb9:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105cbc	obj/kern/kernel.asm	/^ffffffff80105cbc:	e8 b3 f9 ff ff       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80105cc1	obj/kern/kernel.asm	/^ffffffff80105cc1:	66 41 83 7d 44 01    	cmpw   $0x1,0x44(%r13)$/;"	l
ffffffff80105cc7	obj/kern/kernel.asm	/^ffffffff80105cc7:	75 86                	jne    ffffffff80105c4f <namex+0x4f>$/;"	l
ffffffff80105cc9	obj/kern/kernel.asm	/^ffffffff80105cc9:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)$/;"	l
ffffffff80105ccd	obj/kern/kernel.asm	/^ffffffff80105ccd:	74 05                	je     ffffffff80105cd4 <namex+0xd4>$/;"	l
ffffffff80105ccf	obj/kern/kernel.asm	/^ffffffff80105ccf:	80 3b 00             	cmpb   $0x0,(%rbx)$/;"	l
ffffffff80105cd2	obj/kern/kernel.asm	/^ffffffff80105cd2:	74 9b                	je     ffffffff80105c6f <namex+0x6f>$/;"	l
ffffffff80105cd4	obj/kern/kernel.asm	/^ffffffff80105cd4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80105cd9	obj/kern/kernel.asm	/^ffffffff80105cd9:	4c 89 fe             	mov    %r15,%rsi$/;"	l
ffffffff80105cdc	obj/kern/kernel.asm	/^ffffffff80105cdc:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105cdf	obj/kern/kernel.asm	/^ffffffff80105cdf:	e8 6d fe ff ff       	callq  ffffffff80105b51 <dirlookup>$/;"	l
ffffffff80105ce4	obj/kern/kernel.asm	/^ffffffff80105ce4:	49 89 c4             	mov    %rax,%r12$/;"	l
ffffffff80105ce7	obj/kern/kernel.asm	/^ffffffff80105ce7:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80105cea	obj/kern/kernel.asm	/^ffffffff80105cea:	74 8d                	je     ffffffff80105c79 <namex+0x79>$/;"	l
ffffffff80105cec	obj/kern/kernel.asm	/^ffffffff80105cec:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105cef	obj/kern/kernel.asm	/^ffffffff80105cef:	e8 b7 fb ff ff       	callq  ffffffff801058ab <iunlockput>$/;"	l
ffffffff80105cf4	obj/kern/kernel.asm	/^ffffffff80105cf4:	4d 89 e5             	mov    %r12,%r13$/;"	l
ffffffff80105cf7	obj/kern/kernel.asm	/^ffffffff80105cf7:	0f b6 03             	movzbl (%rbx),%eax$/;"	l
ffffffff80105cfa	obj/kern/kernel.asm	/^ffffffff80105cfa:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffffffff80105cfc	obj/kern/kernel.asm	/^ffffffff80105cfc:	75 0b                	jne    ffffffff80105d09 <namex+0x109>$/;"	l
ffffffff80105cfe	obj/kern/kernel.asm	/^ffffffff80105cfe:	48 83 c3 01          	add    $0x1,%rbx$/;"	l
ffffffff80105d02	obj/kern/kernel.asm	/^ffffffff80105d02:	0f b6 03             	movzbl (%rbx),%eax$/;"	l
ffffffff80105d05	obj/kern/kernel.asm	/^ffffffff80105d05:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffffffff80105d07	obj/kern/kernel.asm	/^ffffffff80105d07:	74 f5                	je     ffffffff80105cfe <namex+0xfe>$/;"	l
ffffffff80105d09	obj/kern/kernel.asm	/^ffffffff80105d09:	84 c0                	test   %al,%al$/;"	l
ffffffff80105d0b	obj/kern/kernel.asm	/^ffffffff80105d0b:	74 4f                	je     ffffffff80105d5c <namex+0x15c>$/;"	l
ffffffff80105d0d	obj/kern/kernel.asm	/^ffffffff80105d0d:	0f b6 03             	movzbl (%rbx),%eax$/;"	l
ffffffff80105d10	obj/kern/kernel.asm	/^ffffffff80105d10:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffffffff80105d12	obj/kern/kernel.asm	/^ffffffff80105d12:	74 21                	je     ffffffff80105d35 <namex+0x135>$/;"	l
ffffffff80105d14	obj/kern/kernel.asm	/^ffffffff80105d14:	84 c0                	test   %al,%al$/;"	l
ffffffff80105d16	obj/kern/kernel.asm	/^ffffffff80105d16:	74 1d                	je     ffffffff80105d35 <namex+0x135>$/;"	l
ffffffff80105d18	obj/kern/kernel.asm	/^ffffffff80105d18:	49 89 dc             	mov    %rbx,%r12$/;"	l
ffffffff80105d1b	obj/kern/kernel.asm	/^ffffffff80105d1b:	49 83 c4 01          	add    $0x1,%r12$/;"	l
ffffffff80105d1f	obj/kern/kernel.asm	/^ffffffff80105d1f:	41 0f b6 04 24       	movzbl (%r12),%eax$/;"	l
ffffffff80105d24	obj/kern/kernel.asm	/^ffffffff80105d24:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffffffff80105d26	obj/kern/kernel.asm	/^ffffffff80105d26:	0f 84 5a ff ff ff    	je     ffffffff80105c86 <namex+0x86>$/;"	l
ffffffff80105d2c	obj/kern/kernel.asm	/^ffffffff80105d2c:	84 c0                	test   %al,%al$/;"	l
ffffffff80105d2e	obj/kern/kernel.asm	/^ffffffff80105d2e:	75 eb                	jne    ffffffff80105d1b <namex+0x11b>$/;"	l
ffffffff80105d30	obj/kern/kernel.asm	/^ffffffff80105d30:	e9 51 ff ff ff       	jmpq   ffffffff80105c86 <namex+0x86>$/;"	l
ffffffff80105d35	obj/kern/kernel.asm	/^ffffffff80105d35:	49 89 dc             	mov    %rbx,%r12$/;"	l
ffffffff80105d38	obj/kern/kernel.asm	/^ffffffff80105d38:	41 be 00 00 00 00    	mov    $0x0,%r14d$/;"	l
ffffffff80105d3e	obj/kern/kernel.asm	/^ffffffff80105d3e:	4d 63 f6             	movslq %r14d,%r14$/;"	l
ffffffff80105d41	obj/kern/kernel.asm	/^ffffffff80105d41:	4c 89 f2             	mov    %r14,%rdx$/;"	l
ffffffff80105d44	obj/kern/kernel.asm	/^ffffffff80105d44:	48 89 de             	mov    %rbx,%rsi$/;"	l
ffffffff80105d47	obj/kern/kernel.asm	/^ffffffff80105d47:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff80105d4a	obj/kern/kernel.asm	/^ffffffff80105d4a:	e8 38 0c 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff80105d4f	obj/kern/kernel.asm	/^ffffffff80105d4f:	43 c6 04 37 00       	movb   $0x0,(%r15,%r14,1)$/;"	l
ffffffff80105d54	obj/kern/kernel.asm	/^ffffffff80105d54:	4c 89 e3             	mov    %r12,%rbx$/;"	l
ffffffff80105d57	obj/kern/kernel.asm	/^ffffffff80105d57:	e9 4f ff ff ff       	jmpq   ffffffff80105cab <namex+0xab>$/;"	l
ffffffff80105d5c	obj/kern/kernel.asm	/^ffffffff80105d5c:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)$/;"	l
ffffffff80105d60	obj/kern/kernel.asm	/^ffffffff80105d60:	0f 84 f7 fe ff ff    	je     ffffffff80105c5d <namex+0x5d>$/;"	l
ffffffff80105d66	obj/kern/kernel.asm	/^ffffffff80105d66:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105d69	obj/kern/kernel.asm	/^ffffffff80105d69:	e8 03 fa ff ff       	callq  ffffffff80105771 <iput>$/;"	l
ffffffff80105d6e	obj/kern/kernel.asm	/^ffffffff80105d6e:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
ffffffff80105d74	obj/kern/kernel.asm	/^ffffffff80105d74:	e9 e4 fe ff ff       	jmpq   ffffffff80105c5d <namex+0x5d>$/;"	l
ffffffff80105d79	obj/kern/kernel.asm	/^ffffffff80105d79 <dirlink>:$/;"	l
ffffffff80105d79	obj/kern/kernel.asm	/^ffffffff80105d79:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105d7d	obj/kern/kernel.asm	/^ffffffff80105d7d:	55                   	push   %rbp$/;"	l
ffffffff80105d7e	obj/kern/kernel.asm	/^ffffffff80105d7e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105d81	obj/kern/kernel.asm	/^ffffffff80105d81:	41 56                	push   %r14$/;"	l
ffffffff80105d83	obj/kern/kernel.asm	/^ffffffff80105d83:	41 55                	push   %r13$/;"	l
ffffffff80105d85	obj/kern/kernel.asm	/^ffffffff80105d85:	41 54                	push   %r12$/;"	l
ffffffff80105d87	obj/kern/kernel.asm	/^ffffffff80105d87:	53                   	push   %rbx$/;"	l
ffffffff80105d88	obj/kern/kernel.asm	/^ffffffff80105d88:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff80105d8c	obj/kern/kernel.asm	/^ffffffff80105d8c:	49 89 fc             	mov    %rdi,%r12$/;"	l
ffffffff80105d8f	obj/kern/kernel.asm	/^ffffffff80105d8f:	49 89 f5             	mov    %rsi,%r13$/;"	l
ffffffff80105d92	obj/kern/kernel.asm	/^ffffffff80105d92:	41 89 d6             	mov    %edx,%r14d$/;"	l
ffffffff80105d95	obj/kern/kernel.asm	/^ffffffff80105d95:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80105d9a	obj/kern/kernel.asm	/^ffffffff80105d9a:	e8 b2 fd ff ff       	callq  ffffffff80105b51 <dirlookup>$/;"	l
ffffffff80105d9f	obj/kern/kernel.asm	/^ffffffff80105d9f:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80105da2	obj/kern/kernel.asm	/^ffffffff80105da2:	75 77                	jne    ffffffff80105e1b <dirlink+0xa2>$/;"	l
ffffffff80105da4	obj/kern/kernel.asm	/^ffffffff80105da4:	41 8b 5c 24 4c       	mov    0x4c(%r12),%ebx$/;"	l
ffffffff80105da9	obj/kern/kernel.asm	/^ffffffff80105da9:	85 db                	test   %ebx,%ebx$/;"	l
ffffffff80105dab	obj/kern/kernel.asm	/^ffffffff80105dab:	74 2e                	je     ffffffff80105ddb <dirlink+0x62>$/;"	l
ffffffff80105dad	obj/kern/kernel.asm	/^ffffffff80105dad:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff80105db2	obj/kern/kernel.asm	/^ffffffff80105db2:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffffffff80105db7	obj/kern/kernel.asm	/^ffffffff80105db7:	89 da                	mov    %ebx,%edx$/;"	l
ffffffff80105db9	obj/kern/kernel.asm	/^ffffffff80105db9:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi$/;"	l
ffffffff80105dbd	obj/kern/kernel.asm	/^ffffffff80105dbd:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80105dc0	obj/kern/kernel.asm	/^ffffffff80105dc0:	e8 2f fb ff ff       	callq  ffffffff801058f4 <readi>$/;"	l
ffffffff80105dc5	obj/kern/kernel.asm	/^ffffffff80105dc5:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffffffff80105dc8	obj/kern/kernel.asm	/^ffffffff80105dc8:	75 60                	jne    ffffffff80105e2a <dirlink+0xb1>$/;"	l
ffffffff80105dca	obj/kern/kernel.asm	/^ffffffff80105dca:	66 83 7d d0 00       	cmpw   $0x0,-0x30(%rbp)$/;"	l
ffffffff80105dcf	obj/kern/kernel.asm	/^ffffffff80105dcf:	74 0a                	je     ffffffff80105ddb <dirlink+0x62>$/;"	l
ffffffff80105dd1	obj/kern/kernel.asm	/^ffffffff80105dd1:	83 c3 10             	add    $0x10,%ebx$/;"	l
ffffffff80105dd4	obj/kern/kernel.asm	/^ffffffff80105dd4:	41 39 5c 24 4c       	cmp    %ebx,0x4c(%r12)$/;"	l
ffffffff80105dd9	obj/kern/kernel.asm	/^ffffffff80105dd9:	77 d7                	ja     ffffffff80105db2 <dirlink+0x39>$/;"	l
ffffffff80105ddb	obj/kern/kernel.asm	/^ffffffff80105ddb:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffffffff80105de0	obj/kern/kernel.asm	/^ffffffff80105de0:	4c 89 ee             	mov    %r13,%rsi$/;"	l
ffffffff80105de3	obj/kern/kernel.asm	/^ffffffff80105de3:	48 8d 7d d2          	lea    -0x2e(%rbp),%rdi$/;"	l
ffffffff80105de7	obj/kern/kernel.asm	/^ffffffff80105de7:	e8 2a 0c 00 00       	callq  ffffffff80106a16 <strncpy>$/;"	l
ffffffff80105dec	obj/kern/kernel.asm	/^ffffffff80105dec:	66 44 89 75 d0       	mov    %r14w,-0x30(%rbp)$/;"	l
ffffffff80105df1	obj/kern/kernel.asm	/^ffffffff80105df1:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffffffff80105df6	obj/kern/kernel.asm	/^ffffffff80105df6:	89 da                	mov    %ebx,%edx$/;"	l
ffffffff80105df8	obj/kern/kernel.asm	/^ffffffff80105df8:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi$/;"	l
ffffffff80105dfc	obj/kern/kernel.asm	/^ffffffff80105dfc:	4c 89 e7             	mov    %r12,%rdi$/;"	l
ffffffff80105dff	obj/kern/kernel.asm	/^ffffffff80105dff:	e8 08 fc ff ff       	callq  ffffffff80105a0c <writei>$/;"	l
ffffffff80105e04	obj/kern/kernel.asm	/^ffffffff80105e04:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffffffff80105e07	obj/kern/kernel.asm	/^ffffffff80105e07:	75 2d                	jne    ffffffff80105e36 <dirlink+0xbd>$/;"	l
ffffffff80105e09	obj/kern/kernel.asm	/^ffffffff80105e09:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80105e0e	obj/kern/kernel.asm	/^ffffffff80105e0e:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffffffff80105e12	obj/kern/kernel.asm	/^ffffffff80105e12:	5b                   	pop    %rbx$/;"	l
ffffffff80105e13	obj/kern/kernel.asm	/^ffffffff80105e13:	41 5c                	pop    %r12$/;"	l
ffffffff80105e15	obj/kern/kernel.asm	/^ffffffff80105e15:	41 5d                	pop    %r13$/;"	l
ffffffff80105e17	obj/kern/kernel.asm	/^ffffffff80105e17:	41 5e                	pop    %r14$/;"	l
ffffffff80105e19	obj/kern/kernel.asm	/^ffffffff80105e19:	5d                   	pop    %rbp$/;"	l
ffffffff80105e1a	obj/kern/kernel.asm	/^ffffffff80105e1a:	c3                   	retq   $/;"	l
ffffffff80105e1b	obj/kern/kernel.asm	/^ffffffff80105e1b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80105e1e	obj/kern/kernel.asm	/^ffffffff80105e1e:	e8 4e f9 ff ff       	callq  ffffffff80105771 <iput>$/;"	l
ffffffff80105e23	obj/kern/kernel.asm	/^ffffffff80105e23:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80105e28	obj/kern/kernel.asm	/^ffffffff80105e28:	eb e4                	jmp    ffffffff80105e0e <dirlink+0x95>$/;"	l
ffffffff80105e2a	obj/kern/kernel.asm	/^ffffffff80105e2a:	48 c7 c7 56 77 10 80 	mov    $0xffffffff80107756,%rdi$/;"	l
ffffffff80105e31	obj/kern/kernel.asm	/^ffffffff80105e31:	e8 ed a7 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80105e36	obj/kern/kernel.asm	/^ffffffff80105e36:	48 c7 c7 d2 75 10 80 	mov    $0xffffffff801075d2,%rdi$/;"	l
ffffffff80105e3d	obj/kern/kernel.asm	/^ffffffff80105e3d:	e8 e1 a7 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80105e42	obj/kern/kernel.asm	/^ffffffff80105e42 <namei>:$/;"	l
ffffffff80105e42	obj/kern/kernel.asm	/^ffffffff80105e42:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105e46	obj/kern/kernel.asm	/^ffffffff80105e46:	55                   	push   %rbp$/;"	l
ffffffff80105e47	obj/kern/kernel.asm	/^ffffffff80105e47:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105e4a	obj/kern/kernel.asm	/^ffffffff80105e4a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffffffff80105e4e	obj/kern/kernel.asm	/^ffffffff80105e4e:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx$/;"	l
ffffffff80105e52	obj/kern/kernel.asm	/^ffffffff80105e52:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffffffff80105e57	obj/kern/kernel.asm	/^ffffffff80105e57:	e8 a4 fd ff ff       	callq  ffffffff80105c00 <namex>$/;"	l
ffffffff80105e5c	obj/kern/kernel.asm	/^ffffffff80105e5c:	c9                   	leaveq $/;"	l
ffffffff80105e5d	obj/kern/kernel.asm	/^ffffffff80105e5d:	c3                   	retq   $/;"	l
ffffffff80105e5e	obj/kern/kernel.asm	/^ffffffff80105e5e <nameiparent>:$/;"	l
ffffffff80105e5e	obj/kern/kernel.asm	/^ffffffff80105e5e:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105e62	obj/kern/kernel.asm	/^ffffffff80105e62:	55                   	push   %rbp$/;"	l
ffffffff80105e63	obj/kern/kernel.asm	/^ffffffff80105e63:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105e66	obj/kern/kernel.asm	/^ffffffff80105e66:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffffffff80105e69	obj/kern/kernel.asm	/^ffffffff80105e69:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffffffff80105e6e	obj/kern/kernel.asm	/^ffffffff80105e6e:	e8 8d fd ff ff       	callq  ffffffff80105c00 <namex>$/;"	l
ffffffff80105e73	obj/kern/kernel.asm	/^ffffffff80105e73:	5d                   	pop    %rbp$/;"	l
ffffffff80105e74	obj/kern/kernel.asm	/^ffffffff80105e74:	c3                   	retq   $/;"	l
ffffffff80105e75	obj/kern/kernel.asm	/^ffffffff80105e75 <install_trans>:$/;"	l
ffffffff80105e75	obj/kern/kernel.asm	/^ffffffff80105e75:	83 3d 10 2e 00 00 00 	cmpl   $0x0,0x2e10(%rip)        # ffffffff80108c8c <_log+0x2c>$/;"	l
ffffffff80105e7c	obj/kern/kernel.asm	/^ffffffff80105e7c:	7e 7f                	jle    ffffffff80105efd <install_trans+0x88>$/;"	l
ffffffff80105e7e	obj/kern/kernel.asm	/^ffffffff80105e7e:	55                   	push   %rbp$/;"	l
ffffffff80105e7f	obj/kern/kernel.asm	/^ffffffff80105e7f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105e82	obj/kern/kernel.asm	/^ffffffff80105e82:	41 56                	push   %r14$/;"	l
ffffffff80105e84	obj/kern/kernel.asm	/^ffffffff80105e84:	41 55                	push   %r13$/;"	l
ffffffff80105e86	obj/kern/kernel.asm	/^ffffffff80105e86:	41 54                	push   %r12$/;"	l
ffffffff80105e88	obj/kern/kernel.asm	/^ffffffff80105e88:	53                   	push   %rbx$/;"	l
ffffffff80105e89	obj/kern/kernel.asm	/^ffffffff80105e89:	41 bc 00 00 00 00    	mov    $0x0,%r12d$/;"	l
ffffffff80105e8f	obj/kern/kernel.asm	/^ffffffff80105e8f:	49 c7 c6 60 8c 10 80 	mov    $0xffffffff80108c60,%r14$/;"	l
ffffffff80105e96	obj/kern/kernel.asm	/^ffffffff80105e96:	44 89 e6             	mov    %r12d,%esi$/;"	l
ffffffff80105e99	obj/kern/kernel.asm	/^ffffffff80105e99:	41 03 76 18          	add    0x18(%r14),%esi$/;"	l
ffffffff80105e9d	obj/kern/kernel.asm	/^ffffffff80105e9d:	83 c6 01             	add    $0x1,%esi$/;"	l
ffffffff80105ea0	obj/kern/kernel.asm	/^ffffffff80105ea0:	41 8b 7e 28          	mov    0x28(%r14),%edi$/;"	l
ffffffff80105ea4	obj/kern/kernel.asm	/^ffffffff80105ea4:	e8 19 ed ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105ea9	obj/kern/kernel.asm	/^ffffffff80105ea9:	49 89 c5             	mov    %rax,%r13$/;"	l
ffffffff80105eac	obj/kern/kernel.asm	/^ffffffff80105eac:	42 8b 34 a5 90 8c 10 	mov    -0x7fef7370(,%r12,4),%esi$/;"	l
ffffffff80105eb3	obj/kern/kernel.asm	/^ffffffff80105eb3:	80 $/;"	l
ffffffff80105eb4	obj/kern/kernel.asm	/^ffffffff80105eb4:	41 8b 7e 28          	mov    0x28(%r14),%edi$/;"	l
ffffffff80105eb8	obj/kern/kernel.asm	/^ffffffff80105eb8:	e8 05 ed ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105ebd	obj/kern/kernel.asm	/^ffffffff80105ebd:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80105ec0	obj/kern/kernel.asm	/^ffffffff80105ec0:	49 8d 75 60          	lea    0x60(%r13),%rsi$/;"	l
ffffffff80105ec4	obj/kern/kernel.asm	/^ffffffff80105ec4:	48 8d 78 60          	lea    0x60(%rax),%rdi$/;"	l
ffffffff80105ec8	obj/kern/kernel.asm	/^ffffffff80105ec8:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffffffff80105ecd	obj/kern/kernel.asm	/^ffffffff80105ecd:	e8 b5 0a 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff80105ed2	obj/kern/kernel.asm	/^ffffffff80105ed2:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105ed5	obj/kern/kernel.asm	/^ffffffff80105ed5:	e8 ca ed ff ff       	callq  ffffffff80104ca4 <bwrite>$/;"	l
ffffffff80105eda	obj/kern/kernel.asm	/^ffffffff80105eda:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff80105edd	obj/kern/kernel.asm	/^ffffffff80105edd:	e8 fd ed ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105ee2	obj/kern/kernel.asm	/^ffffffff80105ee2:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105ee5	obj/kern/kernel.asm	/^ffffffff80105ee5:	e8 f5 ed ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105eea	obj/kern/kernel.asm	/^ffffffff80105eea:	49 83 c4 01          	add    $0x1,%r12$/;"	l
ffffffff80105eee	obj/kern/kernel.asm	/^ffffffff80105eee:	45 39 66 2c          	cmp    %r12d,0x2c(%r14)$/;"	l
ffffffff80105ef2	obj/kern/kernel.asm	/^ffffffff80105ef2:	7f a2                	jg     ffffffff80105e96 <install_trans+0x21>$/;"	l
ffffffff80105ef4	obj/kern/kernel.asm	/^ffffffff80105ef4:	5b                   	pop    %rbx$/;"	l
ffffffff80105ef5	obj/kern/kernel.asm	/^ffffffff80105ef5:	41 5c                	pop    %r12$/;"	l
ffffffff80105ef7	obj/kern/kernel.asm	/^ffffffff80105ef7:	41 5d                	pop    %r13$/;"	l
ffffffff80105ef9	obj/kern/kernel.asm	/^ffffffff80105ef9:	41 5e                	pop    %r14$/;"	l
ffffffff80105efb	obj/kern/kernel.asm	/^ffffffff80105efb:	5d                   	pop    %rbp$/;"	l
ffffffff80105efc	obj/kern/kernel.asm	/^ffffffff80105efc:	c3                   	retq   $/;"	l
ffffffff80105efd	obj/kern/kernel.asm	/^ffffffff80105efd:	c3                   	retq   $/;"	l
ffffffff80105efe	obj/kern/kernel.asm	/^ffffffff80105efe <write_head>:$/;"	l
ffffffff80105efe	obj/kern/kernel.asm	/^ffffffff80105efe:	55                   	push   %rbp$/;"	l
ffffffff80105eff	obj/kern/kernel.asm	/^ffffffff80105eff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105f02	obj/kern/kernel.asm	/^ffffffff80105f02:	53                   	push   %rbx$/;"	l
ffffffff80105f03	obj/kern/kernel.asm	/^ffffffff80105f03:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80105f07	obj/kern/kernel.asm	/^ffffffff80105f07:	8b 35 6b 2d 00 00    	mov    0x2d6b(%rip),%esi        # ffffffff80108c78 <_log+0x18>$/;"	l
ffffffff80105f0d	obj/kern/kernel.asm	/^ffffffff80105f0d:	8b 3d 75 2d 00 00    	mov    0x2d75(%rip),%edi        # ffffffff80108c88 <_log+0x28>$/;"	l
ffffffff80105f13	obj/kern/kernel.asm	/^ffffffff80105f13:	e8 aa ec ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105f18	obj/kern/kernel.asm	/^ffffffff80105f18:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff80105f1b	obj/kern/kernel.asm	/^ffffffff80105f1b:	8b 05 6b 2d 00 00    	mov    0x2d6b(%rip),%eax        # ffffffff80108c8c <_log+0x2c>$/;"	l
ffffffff80105f21	obj/kern/kernel.asm	/^ffffffff80105f21:	89 43 60             	mov    %eax,0x60(%rbx)$/;"	l
ffffffff80105f24	obj/kern/kernel.asm	/^ffffffff80105f24:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80105f26	obj/kern/kernel.asm	/^ffffffff80105f26:	7e 1f                	jle    ffffffff80105f47 <write_head+0x49>$/;"	l
ffffffff80105f28	obj/kern/kernel.asm	/^ffffffff80105f28:	8d 48 ff             	lea    -0x1(%rax),%ecx$/;"	l
ffffffff80105f2b	obj/kern/kernel.asm	/^ffffffff80105f2b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80105f30	obj/kern/kernel.asm	/^ffffffff80105f30:	8b 14 85 90 8c 10 80 	mov    -0x7fef7370(,%rax,4),%edx$/;"	l
ffffffff80105f37	obj/kern/kernel.asm	/^ffffffff80105f37:	89 54 83 64          	mov    %edx,0x64(%rbx,%rax,4)$/;"	l
ffffffff80105f3b	obj/kern/kernel.asm	/^ffffffff80105f3b:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff80105f3e	obj/kern/kernel.asm	/^ffffffff80105f3e:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffffffff80105f42	obj/kern/kernel.asm	/^ffffffff80105f42:	48 39 ca             	cmp    %rcx,%rdx$/;"	l
ffffffff80105f45	obj/kern/kernel.asm	/^ffffffff80105f45:	75 e9                	jne    ffffffff80105f30 <write_head+0x32>$/;"	l
ffffffff80105f47	obj/kern/kernel.asm	/^ffffffff80105f47:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105f4a	obj/kern/kernel.asm	/^ffffffff80105f4a:	e8 55 ed ff ff       	callq  ffffffff80104ca4 <bwrite>$/;"	l
ffffffff80105f4f	obj/kern/kernel.asm	/^ffffffff80105f4f:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80105f52	obj/kern/kernel.asm	/^ffffffff80105f52:	e8 88 ed ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105f57	obj/kern/kernel.asm	/^ffffffff80105f57:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80105f5b	obj/kern/kernel.asm	/^ffffffff80105f5b:	5b                   	pop    %rbx$/;"	l
ffffffff80105f5c	obj/kern/kernel.asm	/^ffffffff80105f5c:	5d                   	pop    %rbp$/;"	l
ffffffff80105f5d	obj/kern/kernel.asm	/^ffffffff80105f5d:	c3                   	retq   $/;"	l
ffffffff80105f5e	obj/kern/kernel.asm	/^ffffffff80105f5e <initlog>:$/;"	l
ffffffff80105f5e	obj/kern/kernel.asm	/^ffffffff80105f5e:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105f62	obj/kern/kernel.asm	/^ffffffff80105f62:	55                   	push   %rbp$/;"	l
ffffffff80105f63	obj/kern/kernel.asm	/^ffffffff80105f63:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80105f66	obj/kern/kernel.asm	/^ffffffff80105f66:	53                   	push   %rbx$/;"	l
ffffffff80105f67	obj/kern/kernel.asm	/^ffffffff80105f67:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffffffff80105f6b	obj/kern/kernel.asm	/^ffffffff80105f6b:	89 fb                	mov    %edi,%ebx$/;"	l
ffffffff80105f6d	obj/kern/kernel.asm	/^ffffffff80105f6d:	48 c7 c6 bb 77 10 80 	mov    $0xffffffff801077bb,%rsi$/;"	l
ffffffff80105f74	obj/kern/kernel.asm	/^ffffffff80105f74:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff80105f7b	obj/kern/kernel.asm	/^ffffffff80105f7b:	e8 23 a4 ff ff       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff80105f80	obj/kern/kernel.asm	/^ffffffff80105f80:	48 8d 75 d4          	lea    -0x2c(%rbp),%rsi$/;"	l
ffffffff80105f84	obj/kern/kernel.asm	/^ffffffff80105f84:	89 df                	mov    %ebx,%edi$/;"	l
ffffffff80105f86	obj/kern/kernel.asm	/^ffffffff80105f86:	e8 96 f4 ff ff       	callq  ffffffff80105421 <readsb>$/;"	l
ffffffff80105f8b	obj/kern/kernel.asm	/^ffffffff80105f8b:	8b 75 e4             	mov    -0x1c(%rbp),%esi$/;"	l
ffffffff80105f8e	obj/kern/kernel.asm	/^ffffffff80105f8e:	89 35 e4 2c 00 00    	mov    %esi,0x2ce4(%rip)        # ffffffff80108c78 <_log+0x18>$/;"	l
ffffffff80105f94	obj/kern/kernel.asm	/^ffffffff80105f94:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffffffff80105f97	obj/kern/kernel.asm	/^ffffffff80105f97:	89 05 df 2c 00 00    	mov    %eax,0x2cdf(%rip)        # ffffffff80108c7c <_log+0x1c>$/;"	l
ffffffff80105f9d	obj/kern/kernel.asm	/^ffffffff80105f9d:	89 1d e5 2c 00 00    	mov    %ebx,0x2ce5(%rip)        # ffffffff80108c88 <_log+0x28>$/;"	l
ffffffff80105fa3	obj/kern/kernel.asm	/^ffffffff80105fa3:	89 df                	mov    %ebx,%edi$/;"	l
ffffffff80105fa5	obj/kern/kernel.asm	/^ffffffff80105fa5:	e8 18 ec ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80105faa	obj/kern/kernel.asm	/^ffffffff80105faa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff80105fad	obj/kern/kernel.asm	/^ffffffff80105fad:	8b 40 60             	mov    0x60(%rax),%eax$/;"	l
ffffffff80105fb0	obj/kern/kernel.asm	/^ffffffff80105fb0:	89 05 d6 2c 00 00    	mov    %eax,0x2cd6(%rip)        # ffffffff80108c8c <_log+0x2c>$/;"	l
ffffffff80105fb6	obj/kern/kernel.asm	/^ffffffff80105fb6:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80105fb8	obj/kern/kernel.asm	/^ffffffff80105fb8:	7e 1f                	jle    ffffffff80105fd9 <initlog+0x7b>$/;"	l
ffffffff80105fba	obj/kern/kernel.asm	/^ffffffff80105fba:	8d 48 ff             	lea    -0x1(%rax),%ecx$/;"	l
ffffffff80105fbd	obj/kern/kernel.asm	/^ffffffff80105fbd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80105fc2	obj/kern/kernel.asm	/^ffffffff80105fc2:	8b 54 87 64          	mov    0x64(%rdi,%rax,4),%edx$/;"	l
ffffffff80105fc6	obj/kern/kernel.asm	/^ffffffff80105fc6:	89 14 85 90 8c 10 80 	mov    %edx,-0x7fef7370(,%rax,4)$/;"	l
ffffffff80105fcd	obj/kern/kernel.asm	/^ffffffff80105fcd:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffffffff80105fd0	obj/kern/kernel.asm	/^ffffffff80105fd0:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffffffff80105fd4	obj/kern/kernel.asm	/^ffffffff80105fd4:	48 39 ca             	cmp    %rcx,%rdx$/;"	l
ffffffff80105fd7	obj/kern/kernel.asm	/^ffffffff80105fd7:	75 e9                	jne    ffffffff80105fc2 <initlog+0x64>$/;"	l
ffffffff80105fd9	obj/kern/kernel.asm	/^ffffffff80105fd9:	e8 01 ed ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80105fde	obj/kern/kernel.asm	/^ffffffff80105fde:	e8 92 fe ff ff       	callq  ffffffff80105e75 <install_trans>$/;"	l
ffffffff80105fe3	obj/kern/kernel.asm	/^ffffffff80105fe3:	c7 05 9f 2c 00 00 00 	movl   $0x0,0x2c9f(%rip)        # ffffffff80108c8c <_log+0x2c>$/;"	l
ffffffff80105fea	obj/kern/kernel.asm	/^ffffffff80105fea:	00 00 00 $/;"	l
ffffffff80105fed	obj/kern/kernel.asm	/^ffffffff80105fed:	e8 0c ff ff ff       	callq  ffffffff80105efe <write_head>$/;"	l
ffffffff80105ff2	obj/kern/kernel.asm	/^ffffffff80105ff2:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffffffff80105ff6	obj/kern/kernel.asm	/^ffffffff80105ff6:	5b                   	pop    %rbx$/;"	l
ffffffff80105ff7	obj/kern/kernel.asm	/^ffffffff80105ff7:	5d                   	pop    %rbp$/;"	l
ffffffff80105ff8	obj/kern/kernel.asm	/^ffffffff80105ff8:	c3                   	retq   $/;"	l
ffffffff80105ff9	obj/kern/kernel.asm	/^ffffffff80105ff9 <begin_op>:$/;"	l
ffffffff80105ff9	obj/kern/kernel.asm	/^ffffffff80105ff9:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80105ffd	obj/kern/kernel.asm	/^ffffffff80105ffd:	55                   	push   %rbp$/;"	l
ffffffff80105ffe	obj/kern/kernel.asm	/^ffffffff80105ffe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80106001	obj/kern/kernel.asm	/^ffffffff80106001:	53                   	push   %rbx$/;"	l
ffffffff80106002	obj/kern/kernel.asm	/^ffffffff80106002:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80106006	obj/kern/kernel.asm	/^ffffffff80106006:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff8010600d	obj/kern/kernel.asm	/^ffffffff8010600d:	e8 8d a4 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80106012	obj/kern/kernel.asm	/^ffffffff80106012:	48 c7 c3 60 8c 10 80 	mov    $0xffffffff80108c60,%rbx$/;"	l
ffffffff80106019	obj/kern/kernel.asm	/^ffffffff80106019:	eb 0b                	jmp    ffffffff80106026 <begin_op+0x2d>$/;"	l
ffffffff8010601b	obj/kern/kernel.asm	/^ffffffff8010601b:	48 89 de             	mov    %rbx,%rsi$/;"	l
ffffffff8010601e	obj/kern/kernel.asm	/^ffffffff8010601e:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80106021	obj/kern/kernel.asm	/^ffffffff80106021:	e8 7e b6 ff ff       	callq  ffffffff801016a4 <sleep>$/;"	l
ffffffff80106026	obj/kern/kernel.asm	/^ffffffff80106026:	83 7b 24 00          	cmpl   $0x0,0x24(%rbx)$/;"	l
ffffffff8010602a	obj/kern/kernel.asm	/^ffffffff8010602a:	75 ef                	jne    ffffffff8010601b <begin_op+0x22>$/;"	l
ffffffff8010602c	obj/kern/kernel.asm	/^ffffffff8010602c:	8b 43 20             	mov    0x20(%rbx),%eax$/;"	l
ffffffff8010602f	obj/kern/kernel.asm	/^ffffffff8010602f:	83 c0 01             	add    $0x1,%eax$/;"	l
ffffffff80106032	obj/kern/kernel.asm	/^ffffffff80106032:	8d 0c 80             	lea    (%rax,%rax,4),%ecx$/;"	l
ffffffff80106035	obj/kern/kernel.asm	/^ffffffff80106035:	8b 53 2c             	mov    0x2c(%rbx),%edx$/;"	l
ffffffff80106038	obj/kern/kernel.asm	/^ffffffff80106038:	8d 14 4a             	lea    (%rdx,%rcx,2),%edx$/;"	l
ffffffff8010603b	obj/kern/kernel.asm	/^ffffffff8010603b:	83 fa 1e             	cmp    $0x1e,%edx$/;"	l
ffffffff8010603e	obj/kern/kernel.asm	/^ffffffff8010603e:	7e 0d                	jle    ffffffff8010604d <begin_op+0x54>$/;"	l
ffffffff80106040	obj/kern/kernel.asm	/^ffffffff80106040:	48 89 de             	mov    %rbx,%rsi$/;"	l
ffffffff80106043	obj/kern/kernel.asm	/^ffffffff80106043:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80106046	obj/kern/kernel.asm	/^ffffffff80106046:	e8 59 b6 ff ff       	callq  ffffffff801016a4 <sleep>$/;"	l
ffffffff8010604b	obj/kern/kernel.asm	/^ffffffff8010604b:	eb d9                	jmp    ffffffff80106026 <begin_op+0x2d>$/;"	l
ffffffff8010604d	obj/kern/kernel.asm	/^ffffffff8010604d:	89 05 2d 2c 00 00    	mov    %eax,0x2c2d(%rip)        # ffffffff80108c80 <_log+0x20>$/;"	l
ffffffff80106053	obj/kern/kernel.asm	/^ffffffff80106053:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff8010605a	obj/kern/kernel.asm	/^ffffffff8010605a:	e8 8e a4 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010605f	obj/kern/kernel.asm	/^ffffffff8010605f:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80106063	obj/kern/kernel.asm	/^ffffffff80106063:	5b                   	pop    %rbx$/;"	l
ffffffff80106064	obj/kern/kernel.asm	/^ffffffff80106064:	5d                   	pop    %rbp$/;"	l
ffffffff80106065	obj/kern/kernel.asm	/^ffffffff80106065:	c3                   	retq   $/;"	l
ffffffff80106066	obj/kern/kernel.asm	/^ffffffff80106066 <end_op>:$/;"	l
ffffffff80106066	obj/kern/kernel.asm	/^ffffffff80106066:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010606a	obj/kern/kernel.asm	/^ffffffff8010606a:	55                   	push   %rbp$/;"	l
ffffffff8010606b	obj/kern/kernel.asm	/^ffffffff8010606b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010606e	obj/kern/kernel.asm	/^ffffffff8010606e:	41 56                	push   %r14$/;"	l
ffffffff80106070	obj/kern/kernel.asm	/^ffffffff80106070:	41 55                	push   %r13$/;"	l
ffffffff80106072	obj/kern/kernel.asm	/^ffffffff80106072:	41 54                	push   %r12$/;"	l
ffffffff80106074	obj/kern/kernel.asm	/^ffffffff80106074:	53                   	push   %rbx$/;"	l
ffffffff80106075	obj/kern/kernel.asm	/^ffffffff80106075:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff8010607c	obj/kern/kernel.asm	/^ffffffff8010607c:	e8 1e a4 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80106081	obj/kern/kernel.asm	/^ffffffff80106081:	8b 05 f9 2b 00 00    	mov    0x2bf9(%rip),%eax        # ffffffff80108c80 <_log+0x20>$/;"	l
ffffffff80106087	obj/kern/kernel.asm	/^ffffffff80106087:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffffffff8010608a	obj/kern/kernel.asm	/^ffffffff8010608a:	89 05 f0 2b 00 00    	mov    %eax,0x2bf0(%rip)        # ffffffff80108c80 <_log+0x20>$/;"	l
ffffffff80106090	obj/kern/kernel.asm	/^ffffffff80106090:	83 3d ed 2b 00 00 00 	cmpl   $0x0,0x2bed(%rip)        # ffffffff80108c84 <_log+0x24>$/;"	l
ffffffff80106097	obj/kern/kernel.asm	/^ffffffff80106097:	75 5a                	jne    ffffffff801060f3 <end_op+0x8d>$/;"	l
ffffffff80106099	obj/kern/kernel.asm	/^ffffffff80106099:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010609b	obj/kern/kernel.asm	/^ffffffff8010609b:	75 62                	jne    ffffffff801060ff <end_op+0x99>$/;"	l
ffffffff8010609d	obj/kern/kernel.asm	/^ffffffff8010609d:	c7 05 dd 2b 00 00 01 	movl   $0x1,0x2bdd(%rip)        # ffffffff80108c84 <_log+0x24>$/;"	l
ffffffff801060a4	obj/kern/kernel.asm	/^ffffffff801060a4:	00 00 00 $/;"	l
ffffffff801060a7	obj/kern/kernel.asm	/^ffffffff801060a7:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff801060ae	obj/kern/kernel.asm	/^ffffffff801060ae:	e8 3a a4 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801060b3	obj/kern/kernel.asm	/^ffffffff801060b3:	83 3d d2 2b 00 00 00 	cmpl   $0x0,0x2bd2(%rip)        # ffffffff80108c8c <_log+0x2c>$/;"	l
ffffffff801060ba	obj/kern/kernel.asm	/^ffffffff801060ba:	7f 5d                	jg     ffffffff80106119 <end_op+0xb3>$/;"	l
ffffffff801060bc	obj/kern/kernel.asm	/^ffffffff801060bc:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff801060c3	obj/kern/kernel.asm	/^ffffffff801060c3:	e8 d7 a3 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801060c8	obj/kern/kernel.asm	/^ffffffff801060c8:	c7 05 b2 2b 00 00 00 	movl   $0x0,0x2bb2(%rip)        # ffffffff80108c84 <_log+0x24>$/;"	l
ffffffff801060cf	obj/kern/kernel.asm	/^ffffffff801060cf:	00 00 00 $/;"	l
ffffffff801060d2	obj/kern/kernel.asm	/^ffffffff801060d2:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff801060d9	obj/kern/kernel.asm	/^ffffffff801060d9:	e8 19 b5 ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff801060de	obj/kern/kernel.asm	/^ffffffff801060de:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff801060e5	obj/kern/kernel.asm	/^ffffffff801060e5:	e8 03 a4 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801060ea	obj/kern/kernel.asm	/^ffffffff801060ea:	5b                   	pop    %rbx$/;"	l
ffffffff801060eb	obj/kern/kernel.asm	/^ffffffff801060eb:	41 5c                	pop    %r12$/;"	l
ffffffff801060ed	obj/kern/kernel.asm	/^ffffffff801060ed:	41 5d                	pop    %r13$/;"	l
ffffffff801060ef	obj/kern/kernel.asm	/^ffffffff801060ef:	41 5e                	pop    %r14$/;"	l
ffffffff801060f1	obj/kern/kernel.asm	/^ffffffff801060f1:	5d                   	pop    %rbp$/;"	l
ffffffff801060f2	obj/kern/kernel.asm	/^ffffffff801060f2:	c3                   	retq   $/;"	l
ffffffff801060f3	obj/kern/kernel.asm	/^ffffffff801060f3:	48 c7 c7 bf 77 10 80 	mov    $0xffffffff801077bf,%rdi$/;"	l
ffffffff801060fa	obj/kern/kernel.asm	/^ffffffff801060fa:	e8 24 a5 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801060ff	obj/kern/kernel.asm	/^ffffffff801060ff:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff80106106	obj/kern/kernel.asm	/^ffffffff80106106:	e8 ec b4 ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff8010610b	obj/kern/kernel.asm	/^ffffffff8010610b:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff80106112	obj/kern/kernel.asm	/^ffffffff80106112:	e8 d6 a3 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80106117	obj/kern/kernel.asm	/^ffffffff80106117:	eb d1                	jmp    ffffffff801060ea <end_op+0x84>$/;"	l
ffffffff80106119	obj/kern/kernel.asm	/^ffffffff80106119:	41 bc 00 00 00 00    	mov    $0x0,%r12d$/;"	l
ffffffff8010611f	obj/kern/kernel.asm	/^ffffffff8010611f:	49 c7 c6 60 8c 10 80 	mov    $0xffffffff80108c60,%r14$/;"	l
ffffffff80106126	obj/kern/kernel.asm	/^ffffffff80106126:	44 89 e6             	mov    %r12d,%esi$/;"	l
ffffffff80106129	obj/kern/kernel.asm	/^ffffffff80106129:	41 03 76 18          	add    0x18(%r14),%esi$/;"	l
ffffffff8010612d	obj/kern/kernel.asm	/^ffffffff8010612d:	83 c6 01             	add    $0x1,%esi$/;"	l
ffffffff80106130	obj/kern/kernel.asm	/^ffffffff80106130:	41 8b 7e 28          	mov    0x28(%r14),%edi$/;"	l
ffffffff80106134	obj/kern/kernel.asm	/^ffffffff80106134:	e8 89 ea ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff80106139	obj/kern/kernel.asm	/^ffffffff80106139:	48 89 c3             	mov    %rax,%rbx$/;"	l
ffffffff8010613c	obj/kern/kernel.asm	/^ffffffff8010613c:	42 8b 34 a5 90 8c 10 	mov    -0x7fef7370(,%r12,4),%esi$/;"	l
ffffffff80106143	obj/kern/kernel.asm	/^ffffffff80106143:	80 $/;"	l
ffffffff80106144	obj/kern/kernel.asm	/^ffffffff80106144:	41 8b 7e 28          	mov    0x28(%r14),%edi$/;"	l
ffffffff80106148	obj/kern/kernel.asm	/^ffffffff80106148:	e8 75 ea ff ff       	callq  ffffffff80104bc2 <bread>$/;"	l
ffffffff8010614d	obj/kern/kernel.asm	/^ffffffff8010614d:	49 89 c5             	mov    %rax,%r13$/;"	l
ffffffff80106150	obj/kern/kernel.asm	/^ffffffff80106150:	48 8d 70 60          	lea    0x60(%rax),%rsi$/;"	l
ffffffff80106154	obj/kern/kernel.asm	/^ffffffff80106154:	48 8d 7b 60          	lea    0x60(%rbx),%rdi$/;"	l
ffffffff80106158	obj/kern/kernel.asm	/^ffffffff80106158:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffffffff8010615d	obj/kern/kernel.asm	/^ffffffff8010615d:	e8 25 08 00 00       	callq  ffffffff80106987 <memmove>$/;"	l
ffffffff80106162	obj/kern/kernel.asm	/^ffffffff80106162:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80106165	obj/kern/kernel.asm	/^ffffffff80106165:	e8 3a eb ff ff       	callq  ffffffff80104ca4 <bwrite>$/;"	l
ffffffff8010616a	obj/kern/kernel.asm	/^ffffffff8010616a:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff8010616d	obj/kern/kernel.asm	/^ffffffff8010616d:	e8 6d eb ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff80106172	obj/kern/kernel.asm	/^ffffffff80106172:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80106175	obj/kern/kernel.asm	/^ffffffff80106175:	e8 65 eb ff ff       	callq  ffffffff80104cdf <brelse>$/;"	l
ffffffff8010617a	obj/kern/kernel.asm	/^ffffffff8010617a:	49 83 c4 01          	add    $0x1,%r12$/;"	l
ffffffff8010617e	obj/kern/kernel.asm	/^ffffffff8010617e:	45 39 66 2c          	cmp    %r12d,0x2c(%r14)$/;"	l
ffffffff80106182	obj/kern/kernel.asm	/^ffffffff80106182:	7f a2                	jg     ffffffff80106126 <end_op+0xc0>$/;"	l
ffffffff80106184	obj/kern/kernel.asm	/^ffffffff80106184:	e8 75 fd ff ff       	callq  ffffffff80105efe <write_head>$/;"	l
ffffffff80106189	obj/kern/kernel.asm	/^ffffffff80106189:	e8 e7 fc ff ff       	callq  ffffffff80105e75 <install_trans>$/;"	l
ffffffff8010618e	obj/kern/kernel.asm	/^ffffffff8010618e:	c7 05 f4 2a 00 00 00 	movl   $0x0,0x2af4(%rip)        # ffffffff80108c8c <_log+0x2c>$/;"	l
ffffffff80106195	obj/kern/kernel.asm	/^ffffffff80106195:	00 00 00 $/;"	l
ffffffff80106198	obj/kern/kernel.asm	/^ffffffff80106198:	e8 61 fd ff ff       	callq  ffffffff80105efe <write_head>$/;"	l
ffffffff8010619d	obj/kern/kernel.asm	/^ffffffff8010619d:	e9 1a ff ff ff       	jmpq   ffffffff801060bc <end_op+0x56>$/;"	l
ffffffff801061a2	obj/kern/kernel.asm	/^ffffffff801061a2 <log_write>:$/;"	l
ffffffff801061a2	obj/kern/kernel.asm	/^ffffffff801061a2:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801061a6	obj/kern/kernel.asm	/^ffffffff801061a6:	55                   	push   %rbp$/;"	l
ffffffff801061a7	obj/kern/kernel.asm	/^ffffffff801061a7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801061aa	obj/kern/kernel.asm	/^ffffffff801061aa:	53                   	push   %rbx$/;"	l
ffffffff801061ab	obj/kern/kernel.asm	/^ffffffff801061ab:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801061af	obj/kern/kernel.asm	/^ffffffff801061af:	8b 15 d7 2a 00 00    	mov    0x2ad7(%rip),%edx        # ffffffff80108c8c <_log+0x2c>$/;"	l
ffffffff801061b5	obj/kern/kernel.asm	/^ffffffff801061b5:	83 fa 1d             	cmp    $0x1d,%edx$/;"	l
ffffffff801061b8	obj/kern/kernel.asm	/^ffffffff801061b8:	7f 3f                	jg     ffffffff801061f9 <log_write+0x57>$/;"	l
ffffffff801061ba	obj/kern/kernel.asm	/^ffffffff801061ba:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff801061bd	obj/kern/kernel.asm	/^ffffffff801061bd:	8b 05 b9 2a 00 00    	mov    0x2ab9(%rip),%eax        # ffffffff80108c7c <_log+0x1c>$/;"	l
ffffffff801061c3	obj/kern/kernel.asm	/^ffffffff801061c3:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffffffff801061c6	obj/kern/kernel.asm	/^ffffffff801061c6:	39 c2                	cmp    %eax,%edx$/;"	l
ffffffff801061c8	obj/kern/kernel.asm	/^ffffffff801061c8:	7d 2f                	jge    ffffffff801061f9 <log_write+0x57>$/;"	l
ffffffff801061ca	obj/kern/kernel.asm	/^ffffffff801061ca:	83 3d af 2a 00 00 00 	cmpl   $0x0,0x2aaf(%rip)        # ffffffff80108c80 <_log+0x20>$/;"	l
ffffffff801061d1	obj/kern/kernel.asm	/^ffffffff801061d1:	7e 32                	jle    ffffffff80106205 <log_write+0x63>$/;"	l
ffffffff801061d3	obj/kern/kernel.asm	/^ffffffff801061d3:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff801061da	obj/kern/kernel.asm	/^ffffffff801061da:	e8 c0 a2 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801061df	obj/kern/kernel.asm	/^ffffffff801061df:	44 8b 05 a6 2a 00 00 	mov    0x2aa6(%rip),%r8d        # ffffffff80108c8c <_log+0x2c>$/;"	l
ffffffff801061e6	obj/kern/kernel.asm	/^ffffffff801061e6:	45 85 c0             	test   %r8d,%r8d$/;"	l
ffffffff801061e9	obj/kern/kernel.asm	/^ffffffff801061e9:	7e 68                	jle    ffffffff80106253 <log_write+0xb1>$/;"	l
ffffffff801061eb	obj/kern/kernel.asm	/^ffffffff801061eb:	8b 73 08             	mov    0x8(%rbx),%esi$/;"	l
ffffffff801061ee	obj/kern/kernel.asm	/^ffffffff801061ee:	41 8d 78 ff          	lea    -0x1(%r8),%edi$/;"	l
ffffffff801061f2	obj/kern/kernel.asm	/^ffffffff801061f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801061f7	obj/kern/kernel.asm	/^ffffffff801061f7:	eb 1b                	jmp    ffffffff80106214 <log_write+0x72>$/;"	l
ffffffff801061f9	obj/kern/kernel.asm	/^ffffffff801061f9:	48 c7 c7 ce 77 10 80 	mov    $0xffffffff801077ce,%rdi$/;"	l
ffffffff80106200	obj/kern/kernel.asm	/^ffffffff80106200:	e8 1e a4 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80106205	obj/kern/kernel.asm	/^ffffffff80106205:	48 c7 c7 e4 77 10 80 	mov    $0xffffffff801077e4,%rdi$/;"	l
ffffffff8010620c	obj/kern/kernel.asm	/^ffffffff8010620c:	e8 12 a4 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80106211	obj/kern/kernel.asm	/^ffffffff80106211:	48 89 c8             	mov    %rcx,%rax$/;"	l
ffffffff80106214	obj/kern/kernel.asm	/^ffffffff80106214:	89 c2                	mov    %eax,%edx$/;"	l
ffffffff80106216	obj/kern/kernel.asm	/^ffffffff80106216:	39 34 85 90 8c 10 80 	cmp    %esi,-0x7fef7370(,%rax,4)$/;"	l
ffffffff8010621d	obj/kern/kernel.asm	/^ffffffff8010621d:	74 0c                	je     ffffffff8010622b <log_write+0x89>$/;"	l
ffffffff8010621f	obj/kern/kernel.asm	/^ffffffff8010621f:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffffffff80106222	obj/kern/kernel.asm	/^ffffffff80106222:	48 8d 48 01          	lea    0x1(%rax),%rcx$/;"	l
ffffffff80106226	obj/kern/kernel.asm	/^ffffffff80106226:	48 39 f8             	cmp    %rdi,%rax$/;"	l
ffffffff80106229	obj/kern/kernel.asm	/^ffffffff80106229:	75 e6                	jne    ffffffff80106211 <log_write+0x6f>$/;"	l
ffffffff8010622b	obj/kern/kernel.asm	/^ffffffff8010622b:	8b 4b 08             	mov    0x8(%rbx),%ecx$/;"	l
ffffffff8010622e	obj/kern/kernel.asm	/^ffffffff8010622e:	48 63 c2             	movslq %edx,%rax$/;"	l
ffffffff80106231	obj/kern/kernel.asm	/^ffffffff80106231:	89 0c 85 90 8c 10 80 	mov    %ecx,-0x7fef7370(,%rax,4)$/;"	l
ffffffff80106238	obj/kern/kernel.asm	/^ffffffff80106238:	41 39 d0             	cmp    %edx,%r8d$/;"	l
ffffffff8010623b	obj/kern/kernel.asm	/^ffffffff8010623b:	74 1d                	je     ffffffff8010625a <log_write+0xb8>$/;"	l
ffffffff8010623d	obj/kern/kernel.asm	/^ffffffff8010623d:	83 0b 04             	orl    $0x4,(%rbx)$/;"	l
ffffffff80106240	obj/kern/kernel.asm	/^ffffffff80106240:	48 c7 c7 60 8c 10 80 	mov    $0xffffffff80108c60,%rdi$/;"	l
ffffffff80106247	obj/kern/kernel.asm	/^ffffffff80106247:	e8 a1 a2 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010624c	obj/kern/kernel.asm	/^ffffffff8010624c:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80106250	obj/kern/kernel.asm	/^ffffffff80106250:	5b                   	pop    %rbx$/;"	l
ffffffff80106251	obj/kern/kernel.asm	/^ffffffff80106251:	5d                   	pop    %rbp$/;"	l
ffffffff80106252	obj/kern/kernel.asm	/^ffffffff80106252:	c3                   	retq   $/;"	l
ffffffff80106253	obj/kern/kernel.asm	/^ffffffff80106253:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffffffff80106258	obj/kern/kernel.asm	/^ffffffff80106258:	eb d1                	jmp    ffffffff8010622b <log_write+0x89>$/;"	l
ffffffff8010625a	obj/kern/kernel.asm	/^ffffffff8010625a:	83 c2 01             	add    $0x1,%edx$/;"	l
ffffffff8010625d	obj/kern/kernel.asm	/^ffffffff8010625d:	89 15 29 2a 00 00    	mov    %edx,0x2a29(%rip)        # ffffffff80108c8c <_log+0x2c>$/;"	l
ffffffff80106263	obj/kern/kernel.asm	/^ffffffff80106263:	eb d8                	jmp    ffffffff8010623d <log_write+0x9b>$/;"	l
ffffffff80106265	obj/kern/kernel.asm	/^ffffffff80106265 <fileinit>:$/;"	l
ffffffff80106265	obj/kern/kernel.asm	/^ffffffff80106265:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106269	obj/kern/kernel.asm	/^ffffffff80106269:	55                   	push   %rbp$/;"	l
ffffffff8010626a	obj/kern/kernel.asm	/^ffffffff8010626a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010626d	obj/kern/kernel.asm	/^ffffffff8010626d:	48 c7 c6 ff 77 10 80 	mov    $0xffffffff801077ff,%rsi$/;"	l
ffffffff80106274	obj/kern/kernel.asm	/^ffffffff80106274:	48 c7 c7 60 51 11 80 	mov    $0xffffffff80115160,%rdi$/;"	l
ffffffff8010627b	obj/kern/kernel.asm	/^ffffffff8010627b:	e8 23 a1 ff ff       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff80106280	obj/kern/kernel.asm	/^ffffffff80106280:	5d                   	pop    %rbp$/;"	l
ffffffff80106281	obj/kern/kernel.asm	/^ffffffff80106281:	c3                   	retq   $/;"	l
ffffffff80106282	obj/kern/kernel.asm	/^ffffffff80106282 <filealloc>:$/;"	l
ffffffff80106282	obj/kern/kernel.asm	/^ffffffff80106282:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106286	obj/kern/kernel.asm	/^ffffffff80106286:	55                   	push   %rbp$/;"	l
ffffffff80106287	obj/kern/kernel.asm	/^ffffffff80106287:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff8010628a	obj/kern/kernel.asm	/^ffffffff8010628a:	53                   	push   %rbx$/;"	l
ffffffff8010628b	obj/kern/kernel.asm	/^ffffffff8010628b:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff8010628f	obj/kern/kernel.asm	/^ffffffff8010628f:	48 c7 c7 60 51 11 80 	mov    $0xffffffff80115160,%rdi$/;"	l
ffffffff80106296	obj/kern/kernel.asm	/^ffffffff80106296:	e8 04 a2 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff8010629b	obj/kern/kernel.asm	/^ffffffff8010629b:	48 c7 c3 78 51 11 80 	mov    $0xffffffff80115178,%rbx$/;"	l
ffffffff801062a2	obj/kern/kernel.asm	/^ffffffff801062a2:	83 7b 04 00          	cmpl   $0x0,0x4(%rbx)$/;"	l
ffffffff801062a6	obj/kern/kernel.asm	/^ffffffff801062a6:	74 20                	je     ffffffff801062c8 <filealloc+0x46>$/;"	l
ffffffff801062a8	obj/kern/kernel.asm	/^ffffffff801062a8:	48 83 c3 28          	add    $0x28,%rbx$/;"	l
ffffffff801062ac	obj/kern/kernel.asm	/^ffffffff801062ac:	48 81 fb 18 61 11 80 	cmp    $0xffffffff80116118,%rbx$/;"	l
ffffffff801062b3	obj/kern/kernel.asm	/^ffffffff801062b3:	75 ed                	jne    ffffffff801062a2 <filealloc+0x20>$/;"	l
ffffffff801062b5	obj/kern/kernel.asm	/^ffffffff801062b5:	48 c7 c7 60 51 11 80 	mov    $0xffffffff80115160,%rdi$/;"	l
ffffffff801062bc	obj/kern/kernel.asm	/^ffffffff801062bc:	e8 2c a2 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801062c1	obj/kern/kernel.asm	/^ffffffff801062c1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
ffffffff801062c6	obj/kern/kernel.asm	/^ffffffff801062c6:	eb 13                	jmp    ffffffff801062db <filealloc+0x59>$/;"	l
ffffffff801062c8	obj/kern/kernel.asm	/^ffffffff801062c8:	c7 43 04 01 00 00 00 	movl   $0x1,0x4(%rbx)$/;"	l
ffffffff801062cf	obj/kern/kernel.asm	/^ffffffff801062cf:	48 c7 c7 60 51 11 80 	mov    $0xffffffff80115160,%rdi$/;"	l
ffffffff801062d6	obj/kern/kernel.asm	/^ffffffff801062d6:	e8 12 a2 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801062db	obj/kern/kernel.asm	/^ffffffff801062db:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff801062de	obj/kern/kernel.asm	/^ffffffff801062de:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801062e2	obj/kern/kernel.asm	/^ffffffff801062e2:	5b                   	pop    %rbx$/;"	l
ffffffff801062e3	obj/kern/kernel.asm	/^ffffffff801062e3:	5d                   	pop    %rbp$/;"	l
ffffffff801062e4	obj/kern/kernel.asm	/^ffffffff801062e4:	c3                   	retq   $/;"	l
ffffffff801062e5	obj/kern/kernel.asm	/^ffffffff801062e5 <filedup>:$/;"	l
ffffffff801062e5	obj/kern/kernel.asm	/^ffffffff801062e5:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801062e9	obj/kern/kernel.asm	/^ffffffff801062e9:	55                   	push   %rbp$/;"	l
ffffffff801062ea	obj/kern/kernel.asm	/^ffffffff801062ea:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801062ed	obj/kern/kernel.asm	/^ffffffff801062ed:	53                   	push   %rbx$/;"	l
ffffffff801062ee	obj/kern/kernel.asm	/^ffffffff801062ee:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801062f2	obj/kern/kernel.asm	/^ffffffff801062f2:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff801062f5	obj/kern/kernel.asm	/^ffffffff801062f5:	48 c7 c7 60 51 11 80 	mov    $0xffffffff80115160,%rdi$/;"	l
ffffffff801062fc	obj/kern/kernel.asm	/^ffffffff801062fc:	e8 9e a1 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80106301	obj/kern/kernel.asm	/^ffffffff80106301:	8b 43 04             	mov    0x4(%rbx),%eax$/;"	l
ffffffff80106304	obj/kern/kernel.asm	/^ffffffff80106304:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80106306	obj/kern/kernel.asm	/^ffffffff80106306:	7e 1c                	jle    ffffffff80106324 <filedup+0x3f>$/;"	l
ffffffff80106308	obj/kern/kernel.asm	/^ffffffff80106308:	83 c0 01             	add    $0x1,%eax$/;"	l
ffffffff8010630b	obj/kern/kernel.asm	/^ffffffff8010630b:	89 43 04             	mov    %eax,0x4(%rbx)$/;"	l
ffffffff8010630e	obj/kern/kernel.asm	/^ffffffff8010630e:	48 c7 c7 60 51 11 80 	mov    $0xffffffff80115160,%rdi$/;"	l
ffffffff80106315	obj/kern/kernel.asm	/^ffffffff80106315:	e8 d3 a1 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010631a	obj/kern/kernel.asm	/^ffffffff8010631a:	48 89 d8             	mov    %rbx,%rax$/;"	l
ffffffff8010631d	obj/kern/kernel.asm	/^ffffffff8010631d:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80106321	obj/kern/kernel.asm	/^ffffffff80106321:	5b                   	pop    %rbx$/;"	l
ffffffff80106322	obj/kern/kernel.asm	/^ffffffff80106322:	5d                   	pop    %rbp$/;"	l
ffffffff80106323	obj/kern/kernel.asm	/^ffffffff80106323:	c3                   	retq   $/;"	l
ffffffff80106324	obj/kern/kernel.asm	/^ffffffff80106324:	48 c7 c7 06 78 10 80 	mov    $0xffffffff80107806,%rdi$/;"	l
ffffffff8010632b	obj/kern/kernel.asm	/^ffffffff8010632b:	e8 f3 a2 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff80106330	obj/kern/kernel.asm	/^ffffffff80106330 <fileclose>:$/;"	l
ffffffff80106330	obj/kern/kernel.asm	/^ffffffff80106330:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106334	obj/kern/kernel.asm	/^ffffffff80106334:	55                   	push   %rbp$/;"	l
ffffffff80106335	obj/kern/kernel.asm	/^ffffffff80106335:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80106338	obj/kern/kernel.asm	/^ffffffff80106338:	41 57                	push   %r15$/;"	l
ffffffff8010633a	obj/kern/kernel.asm	/^ffffffff8010633a:	41 56                	push   %r14$/;"	l
ffffffff8010633c	obj/kern/kernel.asm	/^ffffffff8010633c:	41 55                	push   %r13$/;"	l
ffffffff8010633e	obj/kern/kernel.asm	/^ffffffff8010633e:	41 54                	push   %r12$/;"	l
ffffffff80106340	obj/kern/kernel.asm	/^ffffffff80106340:	53                   	push   %rbx$/;"	l
ffffffff80106341	obj/kern/kernel.asm	/^ffffffff80106341:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80106345	obj/kern/kernel.asm	/^ffffffff80106345:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80106348	obj/kern/kernel.asm	/^ffffffff80106348:	48 c7 c7 60 51 11 80 	mov    $0xffffffff80115160,%rdi$/;"	l
ffffffff8010634f	obj/kern/kernel.asm	/^ffffffff8010634f:	e8 4b a1 ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80106354	obj/kern/kernel.asm	/^ffffffff80106354:	8b 43 04             	mov    0x4(%rbx),%eax$/;"	l
ffffffff80106357	obj/kern/kernel.asm	/^ffffffff80106357:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80106359	obj/kern/kernel.asm	/^ffffffff80106359:	7e 5d                	jle    ffffffff801063b8 <fileclose+0x88>$/;"	l
ffffffff8010635b	obj/kern/kernel.asm	/^ffffffff8010635b:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffffffff8010635e	obj/kern/kernel.asm	/^ffffffff8010635e:	89 43 04             	mov    %eax,0x4(%rbx)$/;"	l
ffffffff80106361	obj/kern/kernel.asm	/^ffffffff80106361:	85 c0                	test   %eax,%eax$/;"	l
ffffffff80106363	obj/kern/kernel.asm	/^ffffffff80106363:	7f 5f                	jg     ffffffff801063c4 <fileclose+0x94>$/;"	l
ffffffff80106365	obj/kern/kernel.asm	/^ffffffff80106365:	44 8b 23             	mov    (%rbx),%r12d$/;"	l
ffffffff80106368	obj/kern/kernel.asm	/^ffffffff80106368:	44 0f b6 6b 09       	movzbl 0x9(%rbx),%r13d$/;"	l
ffffffff8010636d	obj/kern/kernel.asm	/^ffffffff8010636d:	4c 8b 73 10          	mov    0x10(%rbx),%r14$/;"	l
ffffffff80106371	obj/kern/kernel.asm	/^ffffffff80106371:	4c 8b 7b 18          	mov    0x18(%rbx),%r15$/;"	l
ffffffff80106375	obj/kern/kernel.asm	/^ffffffff80106375:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%rbx)$/;"	l
ffffffff8010637c	obj/kern/kernel.asm	/^ffffffff8010637c:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)$/;"	l
ffffffff80106382	obj/kern/kernel.asm	/^ffffffff80106382:	48 c7 c7 60 51 11 80 	mov    $0xffffffff80115160,%rdi$/;"	l
ffffffff80106389	obj/kern/kernel.asm	/^ffffffff80106389:	e8 5f a1 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010638e	obj/kern/kernel.asm	/^ffffffff8010638e:	41 83 fc 01          	cmp    $0x1,%r12d$/;"	l
ffffffff80106392	obj/kern/kernel.asm	/^ffffffff80106392:	74 4b                	je     ffffffff801063df <fileclose+0xaf>$/;"	l
ffffffff80106394	obj/kern/kernel.asm	/^ffffffff80106394:	41 83 fc 02          	cmp    $0x2,%r12d$/;"	l
ffffffff80106398	obj/kern/kernel.asm	/^ffffffff80106398:	75 36                	jne    ffffffff801063d0 <fileclose+0xa0>$/;"	l
ffffffff8010639a	obj/kern/kernel.asm	/^ffffffff8010639a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010639f	obj/kern/kernel.asm	/^ffffffff8010639f:	e8 55 fc ff ff       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff801063a4	obj/kern/kernel.asm	/^ffffffff801063a4:	4c 89 ff             	mov    %r15,%rdi$/;"	l
ffffffff801063a7	obj/kern/kernel.asm	/^ffffffff801063a7:	e8 c5 f3 ff ff       	callq  ffffffff80105771 <iput>$/;"	l
ffffffff801063ac	obj/kern/kernel.asm	/^ffffffff801063ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801063b1	obj/kern/kernel.asm	/^ffffffff801063b1:	e8 b0 fc ff ff       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff801063b6	obj/kern/kernel.asm	/^ffffffff801063b6:	eb 18                	jmp    ffffffff801063d0 <fileclose+0xa0>$/;"	l
ffffffff801063b8	obj/kern/kernel.asm	/^ffffffff801063b8:	48 c7 c7 0e 78 10 80 	mov    $0xffffffff8010780e,%rdi$/;"	l
ffffffff801063bf	obj/kern/kernel.asm	/^ffffffff801063bf:	e8 5f a2 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801063c4	obj/kern/kernel.asm	/^ffffffff801063c4:	48 c7 c7 60 51 11 80 	mov    $0xffffffff80115160,%rdi$/;"	l
ffffffff801063cb	obj/kern/kernel.asm	/^ffffffff801063cb:	e8 1d a1 ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801063d0	obj/kern/kernel.asm	/^ffffffff801063d0:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801063d4	obj/kern/kernel.asm	/^ffffffff801063d4:	5b                   	pop    %rbx$/;"	l
ffffffff801063d5	obj/kern/kernel.asm	/^ffffffff801063d5:	41 5c                	pop    %r12$/;"	l
ffffffff801063d7	obj/kern/kernel.asm	/^ffffffff801063d7:	41 5d                	pop    %r13$/;"	l
ffffffff801063d9	obj/kern/kernel.asm	/^ffffffff801063d9:	41 5e                	pop    %r14$/;"	l
ffffffff801063db	obj/kern/kernel.asm	/^ffffffff801063db:	41 5f                	pop    %r15$/;"	l
ffffffff801063dd	obj/kern/kernel.asm	/^ffffffff801063dd:	5d                   	pop    %rbp$/;"	l
ffffffff801063de	obj/kern/kernel.asm	/^ffffffff801063de:	c3                   	retq   $/;"	l
ffffffff801063df	obj/kern/kernel.asm	/^ffffffff801063df:	41 0f be f5          	movsbl %r13b,%esi$/;"	l
ffffffff801063e3	obj/kern/kernel.asm	/^ffffffff801063e3:	4c 89 f7             	mov    %r14,%rdi$/;"	l
ffffffff801063e6	obj/kern/kernel.asm	/^ffffffff801063e6:	e8 fe 02 00 00       	callq  ffffffff801066e9 <pipeclose>$/;"	l
ffffffff801063eb	obj/kern/kernel.asm	/^ffffffff801063eb:	eb e3                	jmp    ffffffff801063d0 <fileclose+0xa0>$/;"	l
ffffffff801063ed	obj/kern/kernel.asm	/^ffffffff801063ed <filestat>:$/;"	l
ffffffff801063ed	obj/kern/kernel.asm	/^ffffffff801063ed:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801063f1	obj/kern/kernel.asm	/^ffffffff801063f1:	83 3f 02             	cmpl   $0x2,(%rdi)$/;"	l
ffffffff801063f4	obj/kern/kernel.asm	/^ffffffff801063f4:	75 35                	jne    ffffffff8010642b <filestat+0x3e>$/;"	l
ffffffff801063f6	obj/kern/kernel.asm	/^ffffffff801063f6:	55                   	push   %rbp$/;"	l
ffffffff801063f7	obj/kern/kernel.asm	/^ffffffff801063f7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801063fa	obj/kern/kernel.asm	/^ffffffff801063fa:	41 54                	push   %r12$/;"	l
ffffffff801063fc	obj/kern/kernel.asm	/^ffffffff801063fc:	53                   	push   %rbx$/;"	l
ffffffff801063fd	obj/kern/kernel.asm	/^ffffffff801063fd:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80106400	obj/kern/kernel.asm	/^ffffffff80106400:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff80106403	obj/kern/kernel.asm	/^ffffffff80106403:	48 8b 7f 18          	mov    0x18(%rdi),%rdi$/;"	l
ffffffff80106407	obj/kern/kernel.asm	/^ffffffff80106407:	e8 68 f2 ff ff       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff8010640c	obj/kern/kernel.asm	/^ffffffff8010640c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi$/;"	l
ffffffff80106410	obj/kern/kernel.asm	/^ffffffff80106410:	4c 89 e6             	mov    %r12,%rsi$/;"	l
ffffffff80106413	obj/kern/kernel.asm	/^ffffffff80106413:	e8 b7 f4 ff ff       	callq  ffffffff801058cf <stati>$/;"	l
ffffffff80106418	obj/kern/kernel.asm	/^ffffffff80106418:	48 8b 7b 18          	mov    0x18(%rbx),%rdi$/;"	l
ffffffff8010641c	obj/kern/kernel.asm	/^ffffffff8010641c:	e8 0e f3 ff ff       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff80106421	obj/kern/kernel.asm	/^ffffffff80106421:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106426	obj/kern/kernel.asm	/^ffffffff80106426:	5b                   	pop    %rbx$/;"	l
ffffffff80106427	obj/kern/kernel.asm	/^ffffffff80106427:	41 5c                	pop    %r12$/;"	l
ffffffff80106429	obj/kern/kernel.asm	/^ffffffff80106429:	5d                   	pop    %rbp$/;"	l
ffffffff8010642a	obj/kern/kernel.asm	/^ffffffff8010642a:	c3                   	retq   $/;"	l
ffffffff8010642b	obj/kern/kernel.asm	/^ffffffff8010642b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff80106430	obj/kern/kernel.asm	/^ffffffff80106430:	c3                   	retq   $/;"	l
ffffffff80106431	obj/kern/kernel.asm	/^ffffffff80106431 <fileread>:$/;"	l
ffffffff80106431	obj/kern/kernel.asm	/^ffffffff80106431:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106435	obj/kern/kernel.asm	/^ffffffff80106435:	55                   	push   %rbp$/;"	l
ffffffff80106436	obj/kern/kernel.asm	/^ffffffff80106436:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80106439	obj/kern/kernel.asm	/^ffffffff80106439:	41 55                	push   %r13$/;"	l
ffffffff8010643b	obj/kern/kernel.asm	/^ffffffff8010643b:	41 54                	push   %r12$/;"	l
ffffffff8010643d	obj/kern/kernel.asm	/^ffffffff8010643d:	53                   	push   %rbx$/;"	l
ffffffff8010643e	obj/kern/kernel.asm	/^ffffffff8010643e:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80106442	obj/kern/kernel.asm	/^ffffffff80106442:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)$/;"	l
ffffffff80106446	obj/kern/kernel.asm	/^ffffffff80106446:	74 6b                	je     ffffffff801064b3 <fileread+0x82>$/;"	l
ffffffff80106448	obj/kern/kernel.asm	/^ffffffff80106448:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff8010644b	obj/kern/kernel.asm	/^ffffffff8010644b:	49 89 f5             	mov    %rsi,%r13$/;"	l
ffffffff8010644e	obj/kern/kernel.asm	/^ffffffff8010644e:	41 89 d4             	mov    %edx,%r12d$/;"	l
ffffffff80106451	obj/kern/kernel.asm	/^ffffffff80106451:	8b 07                	mov    (%rdi),%eax$/;"	l
ffffffff80106453	obj/kern/kernel.asm	/^ffffffff80106453:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffffffff80106456	obj/kern/kernel.asm	/^ffffffff80106456:	74 41                	je     ffffffff80106499 <fileread+0x68>$/;"	l
ffffffff80106458	obj/kern/kernel.asm	/^ffffffff80106458:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffffffff8010645b	obj/kern/kernel.asm	/^ffffffff8010645b:	75 4a                	jne    ffffffff801064a7 <fileread+0x76>$/;"	l
ffffffff8010645d	obj/kern/kernel.asm	/^ffffffff8010645d:	48 8b 7f 18          	mov    0x18(%rdi),%rdi$/;"	l
ffffffff80106461	obj/kern/kernel.asm	/^ffffffff80106461:	e8 0e f2 ff ff       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff80106466	obj/kern/kernel.asm	/^ffffffff80106466:	8b 53 20             	mov    0x20(%rbx),%edx$/;"	l
ffffffff80106469	obj/kern/kernel.asm	/^ffffffff80106469:	48 8b 7b 18          	mov    0x18(%rbx),%rdi$/;"	l
ffffffff8010646d	obj/kern/kernel.asm	/^ffffffff8010646d:	44 89 e1             	mov    %r12d,%ecx$/;"	l
ffffffff80106470	obj/kern/kernel.asm	/^ffffffff80106470:	4c 89 ee             	mov    %r13,%rsi$/;"	l
ffffffff80106473	obj/kern/kernel.asm	/^ffffffff80106473:	e8 7c f4 ff ff       	callq  ffffffff801058f4 <readi>$/;"	l
ffffffff80106478	obj/kern/kernel.asm	/^ffffffff80106478:	41 89 c4             	mov    %eax,%r12d$/;"	l
ffffffff8010647b	obj/kern/kernel.asm	/^ffffffff8010647b:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010647d	obj/kern/kernel.asm	/^ffffffff8010647d:	7e 03                	jle    ffffffff80106482 <fileread+0x51>$/;"	l
ffffffff8010647f	obj/kern/kernel.asm	/^ffffffff8010647f:	01 43 20             	add    %eax,0x20(%rbx)$/;"	l
ffffffff80106482	obj/kern/kernel.asm	/^ffffffff80106482:	48 8b 7b 18          	mov    0x18(%rbx),%rdi$/;"	l
ffffffff80106486	obj/kern/kernel.asm	/^ffffffff80106486:	e8 a4 f2 ff ff       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff8010648b	obj/kern/kernel.asm	/^ffffffff8010648b:	44 89 e0             	mov    %r12d,%eax$/;"	l
ffffffff8010648e	obj/kern/kernel.asm	/^ffffffff8010648e:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff80106492	obj/kern/kernel.asm	/^ffffffff80106492:	5b                   	pop    %rbx$/;"	l
ffffffff80106493	obj/kern/kernel.asm	/^ffffffff80106493:	41 5c                	pop    %r12$/;"	l
ffffffff80106495	obj/kern/kernel.asm	/^ffffffff80106495:	41 5d                	pop    %r13$/;"	l
ffffffff80106497	obj/kern/kernel.asm	/^ffffffff80106497:	5d                   	pop    %rbp$/;"	l
ffffffff80106498	obj/kern/kernel.asm	/^ffffffff80106498:	c3                   	retq   $/;"	l
ffffffff80106499	obj/kern/kernel.asm	/^ffffffff80106499:	48 8b 7f 10          	mov    0x10(%rdi),%rdi$/;"	l
ffffffff8010649d	obj/kern/kernel.asm	/^ffffffff8010649d:	e8 aa 03 00 00       	callq  ffffffff8010684c <piperead>$/;"	l
ffffffff801064a2	obj/kern/kernel.asm	/^ffffffff801064a2:	41 89 c4             	mov    %eax,%r12d$/;"	l
ffffffff801064a5	obj/kern/kernel.asm	/^ffffffff801064a5:	eb e4                	jmp    ffffffff8010648b <fileread+0x5a>$/;"	l
ffffffff801064a7	obj/kern/kernel.asm	/^ffffffff801064a7:	48 c7 c7 18 78 10 80 	mov    $0xffffffff80107818,%rdi$/;"	l
ffffffff801064ae	obj/kern/kernel.asm	/^ffffffff801064ae:	e8 70 a1 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801064b3	obj/kern/kernel.asm	/^ffffffff801064b3:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d$/;"	l
ffffffff801064b9	obj/kern/kernel.asm	/^ffffffff801064b9:	eb d0                	jmp    ffffffff8010648b <fileread+0x5a>$/;"	l
ffffffff801064bb	obj/kern/kernel.asm	/^ffffffff801064bb <filewrite>:$/;"	l
ffffffff801064bb	obj/kern/kernel.asm	/^ffffffff801064bb:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801064bf	obj/kern/kernel.asm	/^ffffffff801064bf:	55                   	push   %rbp$/;"	l
ffffffff801064c0	obj/kern/kernel.asm	/^ffffffff801064c0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801064c3	obj/kern/kernel.asm	/^ffffffff801064c3:	41 57                	push   %r15$/;"	l
ffffffff801064c5	obj/kern/kernel.asm	/^ffffffff801064c5:	41 56                	push   %r14$/;"	l
ffffffff801064c7	obj/kern/kernel.asm	/^ffffffff801064c7:	41 55                	push   %r13$/;"	l
ffffffff801064c9	obj/kern/kernel.asm	/^ffffffff801064c9:	41 54                	push   %r12$/;"	l
ffffffff801064cb	obj/kern/kernel.asm	/^ffffffff801064cb:	53                   	push   %rbx$/;"	l
ffffffff801064cc	obj/kern/kernel.asm	/^ffffffff801064cc:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff801064d0	obj/kern/kernel.asm	/^ffffffff801064d0:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)$/;"	l
ffffffff801064d4	obj/kern/kernel.asm	/^ffffffff801064d4:	80 7f 09 00          	cmpb   $0x0,0x9(%rdi)$/;"	l
ffffffff801064d8	obj/kern/kernel.asm	/^ffffffff801064d8:	0f 84 f0 00 00 00    	je     ffffffff801065ce <filewrite+0x113>$/;"	l
ffffffff801064de	obj/kern/kernel.asm	/^ffffffff801064de:	49 89 fd             	mov    %rdi,%r13$/;"	l
ffffffff801064e1	obj/kern/kernel.asm	/^ffffffff801064e1:	41 89 d7             	mov    %edx,%r15d$/;"	l
ffffffff801064e4	obj/kern/kernel.asm	/^ffffffff801064e4:	8b 07                	mov    (%rdi),%eax$/;"	l
ffffffff801064e6	obj/kern/kernel.asm	/^ffffffff801064e6:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffffffff801064e9	obj/kern/kernel.asm	/^ffffffff801064e9:	74 19                	je     ffffffff80106504 <filewrite+0x49>$/;"	l
ffffffff801064eb	obj/kern/kernel.asm	/^ffffffff801064eb:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffffffff801064ee	obj/kern/kernel.asm	/^ffffffff801064ee:	0f 85 ce 00 00 00    	jne    ffffffff801065c2 <filewrite+0x107>$/;"	l
ffffffff801064f4	obj/kern/kernel.asm	/^ffffffff801064f4:	85 d2                	test   %edx,%edx$/;"	l
ffffffff801064f6	obj/kern/kernel.asm	/^ffffffff801064f6:	0f 8e a5 00 00 00    	jle    ffffffff801065a1 <filewrite+0xe6>$/;"	l
ffffffff801064fc	obj/kern/kernel.asm	/^ffffffff801064fc:	41 be 00 00 00 00    	mov    $0x0,%r14d$/;"	l
ffffffff80106502	obj/kern/kernel.asm	/^ffffffff80106502:	eb 32                	jmp    ffffffff80106536 <filewrite+0x7b>$/;"	l
ffffffff80106504	obj/kern/kernel.asm	/^ffffffff80106504:	48 8b 7f 10          	mov    0x10(%rdi),%rdi$/;"	l
ffffffff80106508	obj/kern/kernel.asm	/^ffffffff80106508:	e8 4e 02 00 00       	callq  ffffffff8010675b <pipewrite>$/;"	l
ffffffff8010650d	obj/kern/kernel.asm	/^ffffffff8010650d:	e9 a1 00 00 00       	jmpq   ffffffff801065b3 <filewrite+0xf8>$/;"	l
ffffffff80106512	obj/kern/kernel.asm	/^ffffffff80106512:	49 8b 7d 18          	mov    0x18(%r13),%rdi$/;"	l
ffffffff80106516	obj/kern/kernel.asm	/^ffffffff80106516:	e8 14 f2 ff ff       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff8010651b	obj/kern/kernel.asm	/^ffffffff8010651b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106520	obj/kern/kernel.asm	/^ffffffff80106520:	e8 41 fb ff ff       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80106525	obj/kern/kernel.asm	/^ffffffff80106525:	85 db                	test   %ebx,%ebx$/;"	l
ffffffff80106527	obj/kern/kernel.asm	/^ffffffff80106527:	78 7e                	js     ffffffff801065a7 <filewrite+0xec>$/;"	l
ffffffff80106529	obj/kern/kernel.asm	/^ffffffff80106529:	41 39 dc             	cmp    %ebx,%r12d$/;"	l
ffffffff8010652c	obj/kern/kernel.asm	/^ffffffff8010652c:	75 67                	jne    ffffffff80106595 <filewrite+0xda>$/;"	l
ffffffff8010652e	obj/kern/kernel.asm	/^ffffffff8010652e:	41 01 de             	add    %ebx,%r14d$/;"	l
ffffffff80106531	obj/kern/kernel.asm	/^ffffffff80106531:	45 39 f7             	cmp    %r14d,%r15d$/;"	l
ffffffff80106534	obj/kern/kernel.asm	/^ffffffff80106534:	7e 71                	jle    ffffffff801065a7 <filewrite+0xec>$/;"	l
ffffffff80106536	obj/kern/kernel.asm	/^ffffffff80106536:	45 89 fc             	mov    %r15d,%r12d$/;"	l
ffffffff80106539	obj/kern/kernel.asm	/^ffffffff80106539:	45 29 f4             	sub    %r14d,%r12d$/;"	l
ffffffff8010653c	obj/kern/kernel.asm	/^ffffffff8010653c:	41 81 fc 00 06 00 00 	cmp    $0x600,%r12d$/;"	l
ffffffff80106543	obj/kern/kernel.asm	/^ffffffff80106543:	b8 00 06 00 00       	mov    $0x600,%eax$/;"	l
ffffffff80106548	obj/kern/kernel.asm	/^ffffffff80106548:	44 0f 4f e0          	cmovg  %eax,%r12d$/;"	l
ffffffff8010654c	obj/kern/kernel.asm	/^ffffffff8010654c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106551	obj/kern/kernel.asm	/^ffffffff80106551:	e8 a3 fa ff ff       	callq  ffffffff80105ff9 <begin_op>$/;"	l
ffffffff80106556	obj/kern/kernel.asm	/^ffffffff80106556:	49 8b 7d 18          	mov    0x18(%r13),%rdi$/;"	l
ffffffff8010655a	obj/kern/kernel.asm	/^ffffffff8010655a:	e8 15 f1 ff ff       	callq  ffffffff80105674 <ilock>$/;"	l
ffffffff8010655f	obj/kern/kernel.asm	/^ffffffff8010655f:	41 8b 55 20          	mov    0x20(%r13),%edx$/;"	l
ffffffff80106563	obj/kern/kernel.asm	/^ffffffff80106563:	49 63 f6             	movslq %r14d,%rsi$/;"	l
ffffffff80106566	obj/kern/kernel.asm	/^ffffffff80106566:	48 03 75 c8          	add    -0x38(%rbp),%rsi$/;"	l
ffffffff8010656a	obj/kern/kernel.asm	/^ffffffff8010656a:	49 8b 7d 18          	mov    0x18(%r13),%rdi$/;"	l
ffffffff8010656e	obj/kern/kernel.asm	/^ffffffff8010656e:	44 89 e1             	mov    %r12d,%ecx$/;"	l
ffffffff80106571	obj/kern/kernel.asm	/^ffffffff80106571:	e8 96 f4 ff ff       	callq  ffffffff80105a0c <writei>$/;"	l
ffffffff80106576	obj/kern/kernel.asm	/^ffffffff80106576:	89 c3                	mov    %eax,%ebx$/;"	l
ffffffff80106578	obj/kern/kernel.asm	/^ffffffff80106578:	85 c0                	test   %eax,%eax$/;"	l
ffffffff8010657a	obj/kern/kernel.asm	/^ffffffff8010657a:	7e 96                	jle    ffffffff80106512 <filewrite+0x57>$/;"	l
ffffffff8010657c	obj/kern/kernel.asm	/^ffffffff8010657c:	41 01 45 20          	add    %eax,0x20(%r13)$/;"	l
ffffffff80106580	obj/kern/kernel.asm	/^ffffffff80106580:	49 8b 7d 18          	mov    0x18(%r13),%rdi$/;"	l
ffffffff80106584	obj/kern/kernel.asm	/^ffffffff80106584:	e8 a6 f1 ff ff       	callq  ffffffff8010572f <iunlock>$/;"	l
ffffffff80106589	obj/kern/kernel.asm	/^ffffffff80106589:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff8010658e	obj/kern/kernel.asm	/^ffffffff8010658e:	e8 d3 fa ff ff       	callq  ffffffff80106066 <end_op>$/;"	l
ffffffff80106593	obj/kern/kernel.asm	/^ffffffff80106593:	eb 94                	jmp    ffffffff80106529 <filewrite+0x6e>$/;"	l
ffffffff80106595	obj/kern/kernel.asm	/^ffffffff80106595:	48 c7 c7 21 78 10 80 	mov    $0xffffffff80107821,%rdi$/;"	l
ffffffff8010659c	obj/kern/kernel.asm	/^ffffffff8010659c:	e8 82 a0 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801065a1	obj/kern/kernel.asm	/^ffffffff801065a1:	41 be 00 00 00 00    	mov    $0x0,%r14d$/;"	l
ffffffff801065a7	obj/kern/kernel.asm	/^ffffffff801065a7:	45 39 f7             	cmp    %r14d,%r15d$/;"	l
ffffffff801065aa	obj/kern/kernel.asm	/^ffffffff801065aa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801065af	obj/kern/kernel.asm	/^ffffffff801065af:	41 0f 44 c7          	cmove  %r15d,%eax$/;"	l
ffffffff801065b3	obj/kern/kernel.asm	/^ffffffff801065b3:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff801065b7	obj/kern/kernel.asm	/^ffffffff801065b7:	5b                   	pop    %rbx$/;"	l
ffffffff801065b8	obj/kern/kernel.asm	/^ffffffff801065b8:	41 5c                	pop    %r12$/;"	l
ffffffff801065ba	obj/kern/kernel.asm	/^ffffffff801065ba:	41 5d                	pop    %r13$/;"	l
ffffffff801065bc	obj/kern/kernel.asm	/^ffffffff801065bc:	41 5e                	pop    %r14$/;"	l
ffffffff801065be	obj/kern/kernel.asm	/^ffffffff801065be:	41 5f                	pop    %r15$/;"	l
ffffffff801065c0	obj/kern/kernel.asm	/^ffffffff801065c0:	5d                   	pop    %rbp$/;"	l
ffffffff801065c1	obj/kern/kernel.asm	/^ffffffff801065c1:	c3                   	retq   $/;"	l
ffffffff801065c2	obj/kern/kernel.asm	/^ffffffff801065c2:	48 c7 c7 27 78 10 80 	mov    $0xffffffff80107827,%rdi$/;"	l
ffffffff801065c9	obj/kern/kernel.asm	/^ffffffff801065c9:	e8 55 a0 ff ff       	callq  ffffffff80100623 <panic>$/;"	l
ffffffff801065ce	obj/kern/kernel.asm	/^ffffffff801065ce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801065d3	obj/kern/kernel.asm	/^ffffffff801065d3:	eb de                	jmp    ffffffff801065b3 <filewrite+0xf8>$/;"	l
ffffffff801065d5	obj/kern/kernel.asm	/^ffffffff801065d5 <pipealloc>:$/;"	l
ffffffff801065d5	obj/kern/kernel.asm	/^ffffffff801065d5:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801065d9	obj/kern/kernel.asm	/^ffffffff801065d9:	55                   	push   %rbp$/;"	l
ffffffff801065da	obj/kern/kernel.asm	/^ffffffff801065da:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801065dd	obj/kern/kernel.asm	/^ffffffff801065dd:	41 55                	push   %r13$/;"	l
ffffffff801065df	obj/kern/kernel.asm	/^ffffffff801065df:	41 54                	push   %r12$/;"	l
ffffffff801065e1	obj/kern/kernel.asm	/^ffffffff801065e1:	53                   	push   %rbx$/;"	l
ffffffff801065e2	obj/kern/kernel.asm	/^ffffffff801065e2:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff801065e6	obj/kern/kernel.asm	/^ffffffff801065e6:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff801065e9	obj/kern/kernel.asm	/^ffffffff801065e9:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff801065ec	obj/kern/kernel.asm	/^ffffffff801065ec:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)$/;"	l
ffffffff801065f3	obj/kern/kernel.asm	/^ffffffff801065f3:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)$/;"	l
ffffffff801065fa	obj/kern/kernel.asm	/^ffffffff801065fa:	e8 83 fc ff ff       	callq  ffffffff80106282 <filealloc>$/;"	l
ffffffff801065ff	obj/kern/kernel.asm	/^ffffffff801065ff:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffffffff80106602	obj/kern/kernel.asm	/^ffffffff80106602:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80106605	obj/kern/kernel.asm	/^ffffffff80106605:	0f 84 b4 00 00 00    	je     ffffffff801066bf <pipealloc+0xea>$/;"	l
ffffffff8010660b	obj/kern/kernel.asm	/^ffffffff8010660b:	e8 72 fc ff ff       	callq  ffffffff80106282 <filealloc>$/;"	l
ffffffff80106610	obj/kern/kernel.asm	/^ffffffff80106610:	49 89 04 24          	mov    %rax,(%r12)$/;"	l
ffffffff80106614	obj/kern/kernel.asm	/^ffffffff80106614:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80106617	obj/kern/kernel.asm	/^ffffffff80106617:	0f 84 95 00 00 00    	je     ffffffff801066b2 <pipealloc+0xdd>$/;"	l
ffffffff8010661d	obj/kern/kernel.asm	/^ffffffff8010661d:	e8 1a 9d ff ff       	callq  ffffffff8010033c <kalloc>$/;"	l
ffffffff80106622	obj/kern/kernel.asm	/^ffffffff80106622:	49 89 c5             	mov    %rax,%r13$/;"	l
ffffffff80106625	obj/kern/kernel.asm	/^ffffffff80106625:	48 85 c0             	test   %rax,%rax$/;"	l
ffffffff80106628	obj/kern/kernel.asm	/^ffffffff80106628:	74 7e                	je     ffffffff801066a8 <pipealloc+0xd3>$/;"	l
ffffffff8010662a	obj/kern/kernel.asm	/^ffffffff8010662a:	c7 80 20 02 00 00 01 	movl   $0x1,0x220(%rax)$/;"	l
ffffffff80106631	obj/kern/kernel.asm	/^ffffffff80106631:	00 00 00 $/;"	l
ffffffff80106634	obj/kern/kernel.asm	/^ffffffff80106634:	c7 80 24 02 00 00 01 	movl   $0x1,0x224(%rax)$/;"	l
ffffffff8010663b	obj/kern/kernel.asm	/^ffffffff8010663b:	00 00 00 $/;"	l
ffffffff8010663e	obj/kern/kernel.asm	/^ffffffff8010663e:	c7 80 1c 02 00 00 00 	movl   $0x0,0x21c(%rax)$/;"	l
ffffffff80106645	obj/kern/kernel.asm	/^ffffffff80106645:	00 00 00 $/;"	l
ffffffff80106648	obj/kern/kernel.asm	/^ffffffff80106648:	c7 80 18 02 00 00 00 	movl   $0x0,0x218(%rax)$/;"	l
ffffffff8010664f	obj/kern/kernel.asm	/^ffffffff8010664f:	00 00 00 $/;"	l
ffffffff80106652	obj/kern/kernel.asm	/^ffffffff80106652:	48 c7 c6 31 78 10 80 	mov    $0xffffffff80107831,%rsi$/;"	l
ffffffff80106659	obj/kern/kernel.asm	/^ffffffff80106659:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffffffff8010665c	obj/kern/kernel.asm	/^ffffffff8010665c:	e8 42 9d ff ff       	callq  ffffffff801003a3 <initlock>$/;"	l
ffffffff80106661	obj/kern/kernel.asm	/^ffffffff80106661:	48 8b 03             	mov    (%rbx),%rax$/;"	l
ffffffff80106664	obj/kern/kernel.asm	/^ffffffff80106664:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffffffff8010666a	obj/kern/kernel.asm	/^ffffffff8010666a:	48 8b 03             	mov    (%rbx),%rax$/;"	l
ffffffff8010666d	obj/kern/kernel.asm	/^ffffffff8010666d:	c6 40 08 01          	movb   $0x1,0x8(%rax)$/;"	l
ffffffff80106671	obj/kern/kernel.asm	/^ffffffff80106671:	48 8b 03             	mov    (%rbx),%rax$/;"	l
ffffffff80106674	obj/kern/kernel.asm	/^ffffffff80106674:	c6 40 09 00          	movb   $0x0,0x9(%rax)$/;"	l
ffffffff80106678	obj/kern/kernel.asm	/^ffffffff80106678:	48 8b 03             	mov    (%rbx),%rax$/;"	l
ffffffff8010667b	obj/kern/kernel.asm	/^ffffffff8010667b:	4c 89 68 10          	mov    %r13,0x10(%rax)$/;"	l
ffffffff8010667f	obj/kern/kernel.asm	/^ffffffff8010667f:	49 8b 04 24          	mov    (%r12),%rax$/;"	l
ffffffff80106683	obj/kern/kernel.asm	/^ffffffff80106683:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffffffff80106689	obj/kern/kernel.asm	/^ffffffff80106689:	49 8b 04 24          	mov    (%r12),%rax$/;"	l
ffffffff8010668d	obj/kern/kernel.asm	/^ffffffff8010668d:	c6 40 08 00          	movb   $0x0,0x8(%rax)$/;"	l
ffffffff80106691	obj/kern/kernel.asm	/^ffffffff80106691:	49 8b 04 24          	mov    (%r12),%rax$/;"	l
ffffffff80106695	obj/kern/kernel.asm	/^ffffffff80106695:	c6 40 09 01          	movb   $0x1,0x9(%rax)$/;"	l
ffffffff80106699	obj/kern/kernel.asm	/^ffffffff80106699:	49 8b 04 24          	mov    (%r12),%rax$/;"	l
ffffffff8010669d	obj/kern/kernel.asm	/^ffffffff8010669d:	4c 89 68 10          	mov    %r13,0x10(%rax)$/;"	l
ffffffff801066a1	obj/kern/kernel.asm	/^ffffffff801066a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801066a6	obj/kern/kernel.asm	/^ffffffff801066a6:	eb 2f                	jmp    ffffffff801066d7 <pipealloc+0x102>$/;"	l
ffffffff801066a8	obj/kern/kernel.asm	/^ffffffff801066a8:	48 8b 3b             	mov    (%rbx),%rdi$/;"	l
ffffffff801066ab	obj/kern/kernel.asm	/^ffffffff801066ab:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff801066ae	obj/kern/kernel.asm	/^ffffffff801066ae:	75 0a                	jne    ffffffff801066ba <pipealloc+0xe5>$/;"	l
ffffffff801066b0	obj/kern/kernel.asm	/^ffffffff801066b0:	eb 0d                	jmp    ffffffff801066bf <pipealloc+0xea>$/;"	l
ffffffff801066b2	obj/kern/kernel.asm	/^ffffffff801066b2:	48 8b 3b             	mov    (%rbx),%rdi$/;"	l
ffffffff801066b5	obj/kern/kernel.asm	/^ffffffff801066b5:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff801066b8	obj/kern/kernel.asm	/^ffffffff801066b8:	74 28                	je     ffffffff801066e2 <pipealloc+0x10d>$/;"	l
ffffffff801066ba	obj/kern/kernel.asm	/^ffffffff801066ba:	e8 71 fc ff ff       	callq  ffffffff80106330 <fileclose>$/;"	l
ffffffff801066bf	obj/kern/kernel.asm	/^ffffffff801066bf:	49 8b 3c 24          	mov    (%r12),%rdi$/;"	l
ffffffff801066c3	obj/kern/kernel.asm	/^ffffffff801066c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801066c8	obj/kern/kernel.asm	/^ffffffff801066c8:	48 85 ff             	test   %rdi,%rdi$/;"	l
ffffffff801066cb	obj/kern/kernel.asm	/^ffffffff801066cb:	74 0a                	je     ffffffff801066d7 <pipealloc+0x102>$/;"	l
ffffffff801066cd	obj/kern/kernel.asm	/^ffffffff801066cd:	e8 5e fc ff ff       	callq  ffffffff80106330 <fileclose>$/;"	l
ffffffff801066d2	obj/kern/kernel.asm	/^ffffffff801066d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801066d7	obj/kern/kernel.asm	/^ffffffff801066d7:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff801066db	obj/kern/kernel.asm	/^ffffffff801066db:	5b                   	pop    %rbx$/;"	l
ffffffff801066dc	obj/kern/kernel.asm	/^ffffffff801066dc:	41 5c                	pop    %r12$/;"	l
ffffffff801066de	obj/kern/kernel.asm	/^ffffffff801066de:	41 5d                	pop    %r13$/;"	l
ffffffff801066e0	obj/kern/kernel.asm	/^ffffffff801066e0:	5d                   	pop    %rbp$/;"	l
ffffffff801066e1	obj/kern/kernel.asm	/^ffffffff801066e1:	c3                   	retq   $/;"	l
ffffffff801066e2	obj/kern/kernel.asm	/^ffffffff801066e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff801066e7	obj/kern/kernel.asm	/^ffffffff801066e7:	eb ee                	jmp    ffffffff801066d7 <pipealloc+0x102>$/;"	l
ffffffff801066e9	obj/kern/kernel.asm	/^ffffffff801066e9 <pipeclose>:$/;"	l
ffffffff801066e9	obj/kern/kernel.asm	/^ffffffff801066e9:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801066ed	obj/kern/kernel.asm	/^ffffffff801066ed:	55                   	push   %rbp$/;"	l
ffffffff801066ee	obj/kern/kernel.asm	/^ffffffff801066ee:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff801066f1	obj/kern/kernel.asm	/^ffffffff801066f1:	41 54                	push   %r12$/;"	l
ffffffff801066f3	obj/kern/kernel.asm	/^ffffffff801066f3:	53                   	push   %rbx$/;"	l
ffffffff801066f4	obj/kern/kernel.asm	/^ffffffff801066f4:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff801066f7	obj/kern/kernel.asm	/^ffffffff801066f7:	41 89 f4             	mov    %esi,%r12d$/;"	l
ffffffff801066fa	obj/kern/kernel.asm	/^ffffffff801066fa:	e8 a0 9d ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff801066ff	obj/kern/kernel.asm	/^ffffffff801066ff:	45 85 e4             	test   %r12d,%r12d$/;"	l
ffffffff80106702	obj/kern/kernel.asm	/^ffffffff80106702:	74 35                	je     ffffffff80106739 <pipeclose+0x50>$/;"	l
ffffffff80106704	obj/kern/kernel.asm	/^ffffffff80106704:	c7 83 24 02 00 00 00 	movl   $0x0,0x224(%rbx)$/;"	l
ffffffff8010670b	obj/kern/kernel.asm	/^ffffffff8010670b:	00 00 00 $/;"	l
ffffffff8010670e	obj/kern/kernel.asm	/^ffffffff8010670e:	48 8d bb 18 02 00 00 	lea    0x218(%rbx),%rdi$/;"	l
ffffffff80106715	obj/kern/kernel.asm	/^ffffffff80106715:	e8 dd ae ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff8010671a	obj/kern/kernel.asm	/^ffffffff8010671a:	48 83 bb 20 02 00 00 	cmpq   $0x0,0x220(%rbx)$/;"	l
ffffffff80106721	obj/kern/kernel.asm	/^ffffffff80106721:	00 $/;"	l
ffffffff80106722	obj/kern/kernel.asm	/^ffffffff80106722:	75 2d                	jne    ffffffff80106751 <pipeclose+0x68>$/;"	l
ffffffff80106724	obj/kern/kernel.asm	/^ffffffff80106724:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80106727	obj/kern/kernel.asm	/^ffffffff80106727:	e8 c1 9d ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010672c	obj/kern/kernel.asm	/^ffffffff8010672c:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff8010672f	obj/kern/kernel.asm	/^ffffffff8010672f:	e8 18 9a ff ff       	callq  ffffffff8010014c <kfree>$/;"	l
ffffffff80106734	obj/kern/kernel.asm	/^ffffffff80106734:	5b                   	pop    %rbx$/;"	l
ffffffff80106735	obj/kern/kernel.asm	/^ffffffff80106735:	41 5c                	pop    %r12$/;"	l
ffffffff80106737	obj/kern/kernel.asm	/^ffffffff80106737:	5d                   	pop    %rbp$/;"	l
ffffffff80106738	obj/kern/kernel.asm	/^ffffffff80106738:	c3                   	retq   $/;"	l
ffffffff80106739	obj/kern/kernel.asm	/^ffffffff80106739:	c7 83 20 02 00 00 00 	movl   $0x0,0x220(%rbx)$/;"	l
ffffffff80106740	obj/kern/kernel.asm	/^ffffffff80106740:	00 00 00 $/;"	l
ffffffff80106743	obj/kern/kernel.asm	/^ffffffff80106743:	48 8d bb 1c 02 00 00 	lea    0x21c(%rbx),%rdi$/;"	l
ffffffff8010674a	obj/kern/kernel.asm	/^ffffffff8010674a:	e8 a8 ae ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff8010674f	obj/kern/kernel.asm	/^ffffffff8010674f:	eb c9                	jmp    ffffffff8010671a <pipeclose+0x31>$/;"	l
ffffffff80106751	obj/kern/kernel.asm	/^ffffffff80106751:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80106754	obj/kern/kernel.asm	/^ffffffff80106754:	e8 94 9d ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80106759	obj/kern/kernel.asm	/^ffffffff80106759:	eb d9                	jmp    ffffffff80106734 <pipeclose+0x4b>$/;"	l
ffffffff8010675b	obj/kern/kernel.asm	/^ffffffff8010675b <pipewrite>:$/;"	l
ffffffff8010675b	obj/kern/kernel.asm	/^ffffffff8010675b:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010675f	obj/kern/kernel.asm	/^ffffffff8010675f:	55                   	push   %rbp$/;"	l
ffffffff80106760	obj/kern/kernel.asm	/^ffffffff80106760:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80106763	obj/kern/kernel.asm	/^ffffffff80106763:	41 57                	push   %r15$/;"	l
ffffffff80106765	obj/kern/kernel.asm	/^ffffffff80106765:	41 56                	push   %r14$/;"	l
ffffffff80106767	obj/kern/kernel.asm	/^ffffffff80106767:	41 55                	push   %r13$/;"	l
ffffffff80106769	obj/kern/kernel.asm	/^ffffffff80106769:	41 54                	push   %r12$/;"	l
ffffffff8010676b	obj/kern/kernel.asm	/^ffffffff8010676b:	53                   	push   %rbx$/;"	l
ffffffff8010676c	obj/kern/kernel.asm	/^ffffffff8010676c:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffffffff80106770	obj/kern/kernel.asm	/^ffffffff80106770:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80106773	obj/kern/kernel.asm	/^ffffffff80106773:	49 89 f5             	mov    %rsi,%r13$/;"	l
ffffffff80106776	obj/kern/kernel.asm	/^ffffffff80106776:	41 89 d6             	mov    %edx,%r14d$/;"	l
ffffffff80106779	obj/kern/kernel.asm	/^ffffffff80106779:	49 89 fc             	mov    %rdi,%r12$/;"	l
ffffffff8010677c	obj/kern/kernel.asm	/^ffffffff8010677c:	e8 1e 9d ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80106781	obj/kern/kernel.asm	/^ffffffff80106781:	45 85 f6             	test   %r14d,%r14d$/;"	l
ffffffff80106784	obj/kern/kernel.asm	/^ffffffff80106784:	0f 8e 8d 00 00 00    	jle    ffffffff80106817 <pipewrite+0xbc>$/;"	l
ffffffff8010678a	obj/kern/kernel.asm	/^ffffffff8010678a:	4d 89 ef             	mov    %r13,%r15$/;"	l
ffffffff8010678d	obj/kern/kernel.asm	/^ffffffff8010678d:	41 8d 46 ff          	lea    -0x1(%r14),%eax$/;"	l
ffffffff80106791	obj/kern/kernel.asm	/^ffffffff80106791:	49 8d 44 05 01       	lea    0x1(%r13,%rax,1),%rax$/;"	l
ffffffff80106796	obj/kern/kernel.asm	/^ffffffff80106796:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
ffffffff8010679a	obj/kern/kernel.asm	/^ffffffff8010679a:	4c 8d ab 18 02 00 00 	lea    0x218(%rbx),%r13$/;"	l
ffffffff801067a1	obj/kern/kernel.asm	/^ffffffff801067a1:	8b 93 1c 02 00 00    	mov    0x21c(%rbx),%edx$/;"	l
ffffffff801067a7	obj/kern/kernel.asm	/^ffffffff801067a7:	8b 83 18 02 00 00    	mov    0x218(%rbx),%eax$/;"	l
ffffffff801067ad	obj/kern/kernel.asm	/^ffffffff801067ad:	05 00 02 00 00       	add    $0x200,%eax$/;"	l
ffffffff801067b2	obj/kern/kernel.asm	/^ffffffff801067b2:	39 c2                	cmp    %eax,%edx$/;"	l
ffffffff801067b4	obj/kern/kernel.asm	/^ffffffff801067b4:	75 40                	jne    ffffffff801067f6 <pipewrite+0x9b>$/;"	l
ffffffff801067b6	obj/kern/kernel.asm	/^ffffffff801067b6:	83 bb 20 02 00 00 00 	cmpl   $0x0,0x220(%rbx)$/;"	l
ffffffff801067bd	obj/kern/kernel.asm	/^ffffffff801067bd:	74 71                	je     ffffffff80106830 <pipewrite+0xd5>$/;"	l
ffffffff801067bf	obj/kern/kernel.asm	/^ffffffff801067bf:	e8 2c a9 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff801067c4	obj/kern/kernel.asm	/^ffffffff801067c4:	83 78 40 00          	cmpl   $0x0,0x40(%rax)$/;"	l
ffffffff801067c8	obj/kern/kernel.asm	/^ffffffff801067c8:	75 66                	jne    ffffffff80106830 <pipewrite+0xd5>$/;"	l
ffffffff801067ca	obj/kern/kernel.asm	/^ffffffff801067ca:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff801067cd	obj/kern/kernel.asm	/^ffffffff801067cd:	e8 25 ae ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff801067d2	obj/kern/kernel.asm	/^ffffffff801067d2:	48 8d bb 1c 02 00 00 	lea    0x21c(%rbx),%rdi$/;"	l
ffffffff801067d9	obj/kern/kernel.asm	/^ffffffff801067d9:	4c 89 e6             	mov    %r12,%rsi$/;"	l
ffffffff801067dc	obj/kern/kernel.asm	/^ffffffff801067dc:	e8 c3 ae ff ff       	callq  ffffffff801016a4 <sleep>$/;"	l
ffffffff801067e1	obj/kern/kernel.asm	/^ffffffff801067e1:	8b 93 1c 02 00 00    	mov    0x21c(%rbx),%edx$/;"	l
ffffffff801067e7	obj/kern/kernel.asm	/^ffffffff801067e7:	8b 83 18 02 00 00    	mov    0x218(%rbx),%eax$/;"	l
ffffffff801067ed	obj/kern/kernel.asm	/^ffffffff801067ed:	05 00 02 00 00       	add    $0x200,%eax$/;"	l
ffffffff801067f2	obj/kern/kernel.asm	/^ffffffff801067f2:	39 c2                	cmp    %eax,%edx$/;"	l
ffffffff801067f4	obj/kern/kernel.asm	/^ffffffff801067f4:	74 c0                	je     ffffffff801067b6 <pipewrite+0x5b>$/;"	l
ffffffff801067f6	obj/kern/kernel.asm	/^ffffffff801067f6:	8d 42 01             	lea    0x1(%rdx),%eax$/;"	l
ffffffff801067f9	obj/kern/kernel.asm	/^ffffffff801067f9:	89 83 1c 02 00 00    	mov    %eax,0x21c(%rbx)$/;"	l
ffffffff801067ff	obj/kern/kernel.asm	/^ffffffff801067ff:	41 0f b6 07          	movzbl (%r15),%eax$/;"	l
ffffffff80106803	obj/kern/kernel.asm	/^ffffffff80106803:	81 e2 ff 01 00 00    	and    $0x1ff,%edx$/;"	l
ffffffff80106809	obj/kern/kernel.asm	/^ffffffff80106809:	88 44 13 18          	mov    %al,0x18(%rbx,%rdx,1)$/;"	l
ffffffff8010680d	obj/kern/kernel.asm	/^ffffffff8010680d:	49 83 c7 01          	add    $0x1,%r15$/;"	l
ffffffff80106811	obj/kern/kernel.asm	/^ffffffff80106811:	4c 3b 7d c8          	cmp    -0x38(%rbp),%r15$/;"	l
ffffffff80106815	obj/kern/kernel.asm	/^ffffffff80106815:	75 8a                	jne    ffffffff801067a1 <pipewrite+0x46>$/;"	l
ffffffff80106817	obj/kern/kernel.asm	/^ffffffff80106817:	48 8d bb 18 02 00 00 	lea    0x218(%rbx),%rdi$/;"	l
ffffffff8010681e	obj/kern/kernel.asm	/^ffffffff8010681e:	e8 d4 ad ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff80106823	obj/kern/kernel.asm	/^ffffffff80106823:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80106826	obj/kern/kernel.asm	/^ffffffff80106826:	e8 c2 9c ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff8010682b	obj/kern/kernel.asm	/^ffffffff8010682b:	44 89 f0             	mov    %r14d,%eax$/;"	l
ffffffff8010682e	obj/kern/kernel.asm	/^ffffffff8010682e:	eb 0d                	jmp    ffffffff8010683d <pipewrite+0xe2>$/;"	l
ffffffff80106830	obj/kern/kernel.asm	/^ffffffff80106830:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80106833	obj/kern/kernel.asm	/^ffffffff80106833:	e8 b5 9c ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80106838	obj/kern/kernel.asm	/^ffffffff80106838:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffffffff8010683d	obj/kern/kernel.asm	/^ffffffff8010683d:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffffffff80106841	obj/kern/kernel.asm	/^ffffffff80106841:	5b                   	pop    %rbx$/;"	l
ffffffff80106842	obj/kern/kernel.asm	/^ffffffff80106842:	41 5c                	pop    %r12$/;"	l
ffffffff80106844	obj/kern/kernel.asm	/^ffffffff80106844:	41 5d                	pop    %r13$/;"	l
ffffffff80106846	obj/kern/kernel.asm	/^ffffffff80106846:	41 5e                	pop    %r14$/;"	l
ffffffff80106848	obj/kern/kernel.asm	/^ffffffff80106848:	41 5f                	pop    %r15$/;"	l
ffffffff8010684a	obj/kern/kernel.asm	/^ffffffff8010684a:	5d                   	pop    %rbp$/;"	l
ffffffff8010684b	obj/kern/kernel.asm	/^ffffffff8010684b:	c3                   	retq   $/;"	l
ffffffff8010684c	obj/kern/kernel.asm	/^ffffffff8010684c <piperead>:$/;"	l
ffffffff8010684c	obj/kern/kernel.asm	/^ffffffff8010684c:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106850	obj/kern/kernel.asm	/^ffffffff80106850:	55                   	push   %rbp$/;"	l
ffffffff80106851	obj/kern/kernel.asm	/^ffffffff80106851:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffffffff80106854	obj/kern/kernel.asm	/^ffffffff80106854:	41 57                	push   %r15$/;"	l
ffffffff80106856	obj/kern/kernel.asm	/^ffffffff80106856:	41 56                	push   %r14$/;"	l
ffffffff80106858	obj/kern/kernel.asm	/^ffffffff80106858:	41 55                	push   %r13$/;"	l
ffffffff8010685a	obj/kern/kernel.asm	/^ffffffff8010685a:	41 54                	push   %r12$/;"	l
ffffffff8010685c	obj/kern/kernel.asm	/^ffffffff8010685c:	53                   	push   %rbx$/;"	l
ffffffff8010685d	obj/kern/kernel.asm	/^ffffffff8010685d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffffffff80106861	obj/kern/kernel.asm	/^ffffffff80106861:	48 89 fb             	mov    %rdi,%rbx$/;"	l
ffffffff80106864	obj/kern/kernel.asm	/^ffffffff80106864:	49 89 f4             	mov    %rsi,%r12$/;"	l
ffffffff80106867	obj/kern/kernel.asm	/^ffffffff80106867:	41 89 d6             	mov    %edx,%r14d$/;"	l
ffffffff8010686a	obj/kern/kernel.asm	/^ffffffff8010686a:	49 89 ff             	mov    %rdi,%r15$/;"	l
ffffffff8010686d	obj/kern/kernel.asm	/^ffffffff8010686d:	e8 2d 9c ff ff       	callq  ffffffff8010049f <acquire>$/;"	l
ffffffff80106872	obj/kern/kernel.asm	/^ffffffff80106872:	4c 8d ab 18 02 00 00 	lea    0x218(%rbx),%r13$/;"	l
ffffffff80106879	obj/kern/kernel.asm	/^ffffffff80106879:	8b 83 1c 02 00 00    	mov    0x21c(%rbx),%eax$/;"	l
ffffffff8010687f	obj/kern/kernel.asm	/^ffffffff8010687f:	39 83 18 02 00 00    	cmp    %eax,0x218(%rbx)$/;"	l
ffffffff80106885	obj/kern/kernel.asm	/^ffffffff80106885:	75 2d                	jne    ffffffff801068b4 <piperead+0x68>$/;"	l
ffffffff80106887	obj/kern/kernel.asm	/^ffffffff80106887:	83 bb 24 02 00 00 00 	cmpl   $0x0,0x224(%rbx)$/;"	l
ffffffff8010688e	obj/kern/kernel.asm	/^ffffffff8010688e:	74 24                	je     ffffffff801068b4 <piperead+0x68>$/;"	l
ffffffff80106890	obj/kern/kernel.asm	/^ffffffff80106890:	e8 5b a8 ff ff       	callq  ffffffff801010f0 <myproc>$/;"	l
ffffffff80106895	obj/kern/kernel.asm	/^ffffffff80106895:	83 78 40 00          	cmpl   $0x0,0x40(%rax)$/;"	l
ffffffff80106899	obj/kern/kernel.asm	/^ffffffff80106899:	75 2f                	jne    ffffffff801068ca <piperead+0x7e>$/;"	l
ffffffff8010689b	obj/kern/kernel.asm	/^ffffffff8010689b:	4c 89 fe             	mov    %r15,%rsi$/;"	l
ffffffff8010689e	obj/kern/kernel.asm	/^ffffffff8010689e:	4c 89 ef             	mov    %r13,%rdi$/;"	l
ffffffff801068a1	obj/kern/kernel.asm	/^ffffffff801068a1:	e8 fe ad ff ff       	callq  ffffffff801016a4 <sleep>$/;"	l
ffffffff801068a6	obj/kern/kernel.asm	/^ffffffff801068a6:	8b 83 1c 02 00 00    	mov    0x21c(%rbx),%eax$/;"	l
ffffffff801068ac	obj/kern/kernel.asm	/^ffffffff801068ac:	39 83 18 02 00 00    	cmp    %eax,0x218(%rbx)$/;"	l
ffffffff801068b2	obj/kern/kernel.asm	/^ffffffff801068b2:	74 d3                	je     ffffffff80106887 <piperead+0x3b>$/;"	l
ffffffff801068b4	obj/kern/kernel.asm	/^ffffffff801068b4:	41 8d 76 ff          	lea    -0x1(%r14),%esi$/;"	l
ffffffff801068b8	obj/kern/kernel.asm	/^ffffffff801068b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801068bd	obj/kern/kernel.asm	/^ffffffff801068bd:	41 bd 00 00 00 00    	mov    $0x0,%r13d$/;"	l
ffffffff801068c3	obj/kern/kernel.asm	/^ffffffff801068c3:	45 85 f6             	test   %r14d,%r14d$/;"	l
ffffffff801068c6	obj/kern/kernel.asm	/^ffffffff801068c6:	7f 15                	jg     ffffffff801068dd <piperead+0x91>$/;"	l
ffffffff801068c8	obj/kern/kernel.asm	/^ffffffff801068c8:	eb 49                	jmp    ffffffff80106913 <piperead+0xc7>$/;"	l
ffffffff801068ca	obj/kern/kernel.asm	/^ffffffff801068ca:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff801068cd	obj/kern/kernel.asm	/^ffffffff801068cd:	e8 1b 9c ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff801068d2	obj/kern/kernel.asm	/^ffffffff801068d2:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d$/;"	l
ffffffff801068d8	obj/kern/kernel.asm	/^ffffffff801068d8:	eb 4d                	jmp    ffffffff80106927 <piperead+0xdb>$/;"	l
ffffffff801068da	obj/kern/kernel.asm	/^ffffffff801068da:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffffffff801068dd	obj/kern/kernel.asm	/^ffffffff801068dd:	41 89 c5             	mov    %eax,%r13d$/;"	l
ffffffff801068e0	obj/kern/kernel.asm	/^ffffffff801068e0:	8b 93 18 02 00 00    	mov    0x218(%rbx),%edx$/;"	l
ffffffff801068e6	obj/kern/kernel.asm	/^ffffffff801068e6:	3b 93 1c 02 00 00    	cmp    0x21c(%rbx),%edx$/;"	l
ffffffff801068ec	obj/kern/kernel.asm	/^ffffffff801068ec:	74 25                	je     ffffffff80106913 <piperead+0xc7>$/;"	l
ffffffff801068ee	obj/kern/kernel.asm	/^ffffffff801068ee:	8d 4a 01             	lea    0x1(%rdx),%ecx$/;"	l
ffffffff801068f1	obj/kern/kernel.asm	/^ffffffff801068f1:	89 8b 18 02 00 00    	mov    %ecx,0x218(%rbx)$/;"	l
ffffffff801068f7	obj/kern/kernel.asm	/^ffffffff801068f7:	81 e2 ff 01 00 00    	and    $0x1ff,%edx$/;"	l
ffffffff801068fd	obj/kern/kernel.asm	/^ffffffff801068fd:	0f b6 54 13 18       	movzbl 0x18(%rbx,%rdx,1),%edx$/;"	l
ffffffff80106902	obj/kern/kernel.asm	/^ffffffff80106902:	41 88 14 04          	mov    %dl,(%r12,%rax,1)$/;"	l
ffffffff80106906	obj/kern/kernel.asm	/^ffffffff80106906:	44 8d 68 01          	lea    0x1(%rax),%r13d$/;"	l
ffffffff8010690a	obj/kern/kernel.asm	/^ffffffff8010690a:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffffffff8010690e	obj/kern/kernel.asm	/^ffffffff8010690e:	48 39 f0             	cmp    %rsi,%rax$/;"	l
ffffffff80106911	obj/kern/kernel.asm	/^ffffffff80106911:	75 c7                	jne    ffffffff801068da <piperead+0x8e>$/;"	l
ffffffff80106913	obj/kern/kernel.asm	/^ffffffff80106913:	48 8d bb 1c 02 00 00 	lea    0x21c(%rbx),%rdi$/;"	l
ffffffff8010691a	obj/kern/kernel.asm	/^ffffffff8010691a:	e8 d8 ac ff ff       	callq  ffffffff801015f7 <wakeup>$/;"	l
ffffffff8010691f	obj/kern/kernel.asm	/^ffffffff8010691f:	48 89 df             	mov    %rbx,%rdi$/;"	l
ffffffff80106922	obj/kern/kernel.asm	/^ffffffff80106922:	e8 c6 9b ff ff       	callq  ffffffff801004ed <release>$/;"	l
ffffffff80106927	obj/kern/kernel.asm	/^ffffffff80106927:	44 89 e8             	mov    %r13d,%eax$/;"	l
ffffffff8010692a	obj/kern/kernel.asm	/^ffffffff8010692a:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffffffff8010692e	obj/kern/kernel.asm	/^ffffffff8010692e:	5b                   	pop    %rbx$/;"	l
ffffffff8010692f	obj/kern/kernel.asm	/^ffffffff8010692f:	41 5c                	pop    %r12$/;"	l
ffffffff80106931	obj/kern/kernel.asm	/^ffffffff80106931:	41 5d                	pop    %r13$/;"	l
ffffffff80106933	obj/kern/kernel.asm	/^ffffffff80106933:	41 5e                	pop    %r14$/;"	l
ffffffff80106935	obj/kern/kernel.asm	/^ffffffff80106935:	41 5f                	pop    %r15$/;"	l
ffffffff80106937	obj/kern/kernel.asm	/^ffffffff80106937:	5d                   	pop    %rbp$/;"	l
ffffffff80106938	obj/kern/kernel.asm	/^ffffffff80106938:	c3                   	retq   $/;"	l
ffffffff80106939	obj/kern/kernel.asm	/^ffffffff80106939 <memcmp>:$/;"	l
ffffffff80106939	obj/kern/kernel.asm	/^ffffffff80106939:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010693d	obj/kern/kernel.asm	/^ffffffff8010693d:	48 85 d2             	test   %rdx,%rdx$/;"	l
ffffffff80106940	obj/kern/kernel.asm	/^ffffffff80106940:	74 2d                	je     ffffffff8010696f <memcmp+0x36>$/;"	l
ffffffff80106942	obj/kern/kernel.asm	/^ffffffff80106942:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106947	obj/kern/kernel.asm	/^ffffffff80106947:	0f b6 0c 07          	movzbl (%rdi,%rax,1),%ecx$/;"	l
ffffffff8010694b	obj/kern/kernel.asm	/^ffffffff8010694b:	44 0f b6 04 06       	movzbl (%rsi,%rax,1),%r8d$/;"	l
ffffffff80106950	obj/kern/kernel.asm	/^ffffffff80106950:	44 38 c1             	cmp    %r8b,%cl$/;"	l
ffffffff80106953	obj/kern/kernel.asm	/^ffffffff80106953:	75 0f                	jne    ffffffff80106964 <memcmp+0x2b>$/;"	l
ffffffff80106955	obj/kern/kernel.asm	/^ffffffff80106955:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffffffff80106959	obj/kern/kernel.asm	/^ffffffff80106959:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffffffff8010695c	obj/kern/kernel.asm	/^ffffffff8010695c:	75 e9                	jne    ffffffff80106947 <memcmp+0xe>$/;"	l
ffffffff8010695e	obj/kern/kernel.asm	/^ffffffff8010695e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106963	obj/kern/kernel.asm	/^ffffffff80106963:	c3                   	retq   $/;"	l
ffffffff80106964	obj/kern/kernel.asm	/^ffffffff80106964:	0f b6 c1             	movzbl %cl,%eax$/;"	l
ffffffff80106967	obj/kern/kernel.asm	/^ffffffff80106967:	45 0f b6 c0          	movzbl %r8b,%r8d$/;"	l
ffffffff8010696b	obj/kern/kernel.asm	/^ffffffff8010696b:	44 29 c0             	sub    %r8d,%eax$/;"	l
ffffffff8010696e	obj/kern/kernel.asm	/^ffffffff8010696e:	c3                   	retq   $/;"	l
ffffffff8010696f	obj/kern/kernel.asm	/^ffffffff8010696f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106974	obj/kern/kernel.asm	/^ffffffff80106974:	c3                   	retq   $/;"	l
ffffffff80106975	obj/kern/kernel.asm	/^ffffffff80106975 <memset>:$/;"	l
ffffffff80106975	obj/kern/kernel.asm	/^ffffffff80106975:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106979	obj/kern/kernel.asm	/^ffffffff80106979:	49 89 f8             	mov    %rdi,%r8$/;"	l
ffffffff8010697c	obj/kern/kernel.asm	/^ffffffff8010697c:	89 d1                	mov    %edx,%ecx$/;"	l
ffffffff8010697e	obj/kern/kernel.asm	/^ffffffff8010697e:	89 f0                	mov    %esi,%eax$/;"	l
ffffffff80106980	obj/kern/kernel.asm	/^ffffffff80106980:	fc                   	cld    $/;"	l
ffffffff80106981	obj/kern/kernel.asm	/^ffffffff80106981:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ffffffff80106983	obj/kern/kernel.asm	/^ffffffff80106983:	4c 89 c0             	mov    %r8,%rax$/;"	l
ffffffff80106986	obj/kern/kernel.asm	/^ffffffff80106986:	c3                   	retq   $/;"	l
ffffffff80106987	obj/kern/kernel.asm	/^ffffffff80106987 <memmove>:$/;"	l
ffffffff80106987	obj/kern/kernel.asm	/^ffffffff80106987:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff8010698b	obj/kern/kernel.asm	/^ffffffff8010698b:	48 89 f8             	mov    %rdi,%rax$/;"	l
ffffffff8010698e	obj/kern/kernel.asm	/^ffffffff8010698e:	48 39 fe             	cmp    %rdi,%rsi$/;"	l
ffffffff80106991	obj/kern/kernel.asm	/^ffffffff80106991:	72 1d                	jb     ffffffff801069b0 <memmove+0x29>$/;"	l
ffffffff80106993	obj/kern/kernel.asm	/^ffffffff80106993:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffffffff80106998	obj/kern/kernel.asm	/^ffffffff80106998:	48 85 d2             	test   %rdx,%rdx$/;"	l
ffffffff8010699b	obj/kern/kernel.asm	/^ffffffff8010699b:	74 12                	je     ffffffff801069af <memmove+0x28>$/;"	l
ffffffff8010699d	obj/kern/kernel.asm	/^ffffffff8010699d:	0f b6 3c 0e          	movzbl (%rsi,%rcx,1),%edi$/;"	l
ffffffff801069a1	obj/kern/kernel.asm	/^ffffffff801069a1:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)$/;"	l
ffffffff801069a5	obj/kern/kernel.asm	/^ffffffff801069a5:	48 83 c1 01          	add    $0x1,%rcx$/;"	l
ffffffff801069a9	obj/kern/kernel.asm	/^ffffffff801069a9:	48 39 ca             	cmp    %rcx,%rdx$/;"	l
ffffffff801069ac	obj/kern/kernel.asm	/^ffffffff801069ac:	75 ef                	jne    ffffffff8010699d <memmove+0x16>$/;"	l
ffffffff801069ae	obj/kern/kernel.asm	/^ffffffff801069ae:	c3                   	retq   $/;"	l
ffffffff801069af	obj/kern/kernel.asm	/^ffffffff801069af:	c3                   	retq   $/;"	l
ffffffff801069b0	obj/kern/kernel.asm	/^ffffffff801069b0:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx$/;"	l
ffffffff801069b4	obj/kern/kernel.asm	/^ffffffff801069b4:	48 39 cf             	cmp    %rcx,%rdi$/;"	l
ffffffff801069b7	obj/kern/kernel.asm	/^ffffffff801069b7:	73 da                	jae    ffffffff80106993 <memmove+0xc>$/;"	l
ffffffff801069b9	obj/kern/kernel.asm	/^ffffffff801069b9:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx$/;"	l
ffffffff801069bd	obj/kern/kernel.asm	/^ffffffff801069bd:	48 85 d2             	test   %rdx,%rdx$/;"	l
ffffffff801069c0	obj/kern/kernel.asm	/^ffffffff801069c0:	74 ec                	je     ffffffff801069ae <memmove+0x27>$/;"	l
ffffffff801069c2	obj/kern/kernel.asm	/^ffffffff801069c2:	0f b6 14 0e          	movzbl (%rsi,%rcx,1),%edx$/;"	l
ffffffff801069c6	obj/kern/kernel.asm	/^ffffffff801069c6:	88 14 08             	mov    %dl,(%rax,%rcx,1)$/;"	l
ffffffff801069c9	obj/kern/kernel.asm	/^ffffffff801069c9:	48 83 e9 01          	sub    $0x1,%rcx$/;"	l
ffffffff801069cd	obj/kern/kernel.asm	/^ffffffff801069cd:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx$/;"	l
ffffffff801069d1	obj/kern/kernel.asm	/^ffffffff801069d1:	75 ef                	jne    ffffffff801069c2 <memmove+0x3b>$/;"	l
ffffffff801069d3	obj/kern/kernel.asm	/^ffffffff801069d3:	c3                   	retq   $/;"	l
ffffffff801069d4	obj/kern/kernel.asm	/^ffffffff801069d4 <strncmp>:$/;"	l
ffffffff801069d4	obj/kern/kernel.asm	/^ffffffff801069d4:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff801069d8	obj/kern/kernel.asm	/^ffffffff801069d8:	48 85 d2             	test   %rdx,%rdx$/;"	l
ffffffff801069db	obj/kern/kernel.asm	/^ffffffff801069db:	74 1f                	je     ffffffff801069fc <strncmp+0x28>$/;"	l
ffffffff801069dd	obj/kern/kernel.asm	/^ffffffff801069dd:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
ffffffff801069e0	obj/kern/kernel.asm	/^ffffffff801069e0:	84 c0                	test   %al,%al$/;"	l
ffffffff801069e2	obj/kern/kernel.asm	/^ffffffff801069e2:	74 1e                	je     ffffffff80106a02 <strncmp+0x2e>$/;"	l
ffffffff801069e4	obj/kern/kernel.asm	/^ffffffff801069e4:	3a 06                	cmp    (%rsi),%al$/;"	l
ffffffff801069e6	obj/kern/kernel.asm	/^ffffffff801069e6:	75 1a                	jne    ffffffff80106a02 <strncmp+0x2e>$/;"	l
ffffffff801069e8	obj/kern/kernel.asm	/^ffffffff801069e8:	48 83 c7 01          	add    $0x1,%rdi$/;"	l
ffffffff801069ec	obj/kern/kernel.asm	/^ffffffff801069ec:	48 83 c6 01          	add    $0x1,%rsi$/;"	l
ffffffff801069f0	obj/kern/kernel.asm	/^ffffffff801069f0:	48 83 ea 01          	sub    $0x1,%rdx$/;"	l
ffffffff801069f4	obj/kern/kernel.asm	/^ffffffff801069f4:	75 e7                	jne    ffffffff801069dd <strncmp+0x9>$/;"	l
ffffffff801069f6	obj/kern/kernel.asm	/^ffffffff801069f6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff801069fb	obj/kern/kernel.asm	/^ffffffff801069fb:	c3                   	retq   $/;"	l
ffffffff801069fc	obj/kern/kernel.asm	/^ffffffff801069fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106a01	obj/kern/kernel.asm	/^ffffffff80106a01:	c3                   	retq   $/;"	l
ffffffff80106a02	obj/kern/kernel.asm	/^ffffffff80106a02:	48 85 d2             	test   %rdx,%rdx$/;"	l
ffffffff80106a05	obj/kern/kernel.asm	/^ffffffff80106a05:	74 09                	je     ffffffff80106a10 <strncmp+0x3c>$/;"	l
ffffffff80106a07	obj/kern/kernel.asm	/^ffffffff80106a07:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
ffffffff80106a0a	obj/kern/kernel.asm	/^ffffffff80106a0a:	0f b6 16             	movzbl (%rsi),%edx$/;"	l
ffffffff80106a0d	obj/kern/kernel.asm	/^ffffffff80106a0d:	29 d0                	sub    %edx,%eax$/;"	l
ffffffff80106a0f	obj/kern/kernel.asm	/^ffffffff80106a0f:	c3                   	retq   $/;"	l
ffffffff80106a10	obj/kern/kernel.asm	/^ffffffff80106a10:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106a15	obj/kern/kernel.asm	/^ffffffff80106a15:	c3                   	retq   $/;"	l
ffffffff80106a16	obj/kern/kernel.asm	/^ffffffff80106a16 <strncpy>:$/;"	l
ffffffff80106a16	obj/kern/kernel.asm	/^ffffffff80106a16:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106a1a	obj/kern/kernel.asm	/^ffffffff80106a1a:	48 89 f8             	mov    %rdi,%rax$/;"	l
ffffffff80106a1d	obj/kern/kernel.asm	/^ffffffff80106a1d:	4c 8d 14 16          	lea    (%rsi,%rdx,1),%r10$/;"	l
ffffffff80106a21	obj/kern/kernel.asm	/^ffffffff80106a21:	48 89 f9             	mov    %rdi,%rcx$/;"	l
ffffffff80106a24	obj/kern/kernel.asm	/^ffffffff80106a24:	49 89 d1             	mov    %rdx,%r9$/;"	l
ffffffff80106a27	obj/kern/kernel.asm	/^ffffffff80106a27:	48 83 ea 01          	sub    $0x1,%rdx$/;"	l
ffffffff80106a2b	obj/kern/kernel.asm	/^ffffffff80106a2b:	4c 39 d6             	cmp    %r10,%rsi$/;"	l
ffffffff80106a2e	obj/kern/kernel.asm	/^ffffffff80106a2e:	74 20                	je     ffffffff80106a50 <strncpy+0x3a>$/;"	l
ffffffff80106a30	obj/kern/kernel.asm	/^ffffffff80106a30:	48 83 c6 01          	add    $0x1,%rsi$/;"	l
ffffffff80106a34	obj/kern/kernel.asm	/^ffffffff80106a34:	48 83 c1 01          	add    $0x1,%rcx$/;"	l
ffffffff80106a38	obj/kern/kernel.asm	/^ffffffff80106a38:	44 0f b6 46 ff       	movzbl -0x1(%rsi),%r8d$/;"	l
ffffffff80106a3d	obj/kern/kernel.asm	/^ffffffff80106a3d:	44 88 41 ff          	mov    %r8b,-0x1(%rcx)$/;"	l
ffffffff80106a41	obj/kern/kernel.asm	/^ffffffff80106a41:	45 84 c0             	test   %r8b,%r8b$/;"	l
ffffffff80106a44	obj/kern/kernel.asm	/^ffffffff80106a44:	75 de                	jne    ffffffff80106a24 <strncpy+0xe>$/;"	l
ffffffff80106a46	obj/kern/kernel.asm	/^ffffffff80106a46:	49 83 e9 02          	sub    $0x2,%r9$/;"	l
ffffffff80106a4a	obj/kern/kernel.asm	/^ffffffff80106a4a:	48 85 d2             	test   %rdx,%rdx$/;"	l
ffffffff80106a4d	obj/kern/kernel.asm	/^ffffffff80106a4d:	75 05                	jne    ffffffff80106a54 <strncpy+0x3e>$/;"	l
ffffffff80106a4f	obj/kern/kernel.asm	/^ffffffff80106a4f:	c3                   	retq   $/;"	l
ffffffff80106a50	obj/kern/kernel.asm	/^ffffffff80106a50:	49 83 e9 02          	sub    $0x2,%r9$/;"	l
ffffffff80106a54	obj/kern/kernel.asm	/^ffffffff80106a54:	4a 8d 54 09 01       	lea    0x1(%rcx,%r9,1),%rdx$/;"	l
ffffffff80106a59	obj/kern/kernel.asm	/^ffffffff80106a59:	48 83 c1 01          	add    $0x1,%rcx$/;"	l
ffffffff80106a5d	obj/kern/kernel.asm	/^ffffffff80106a5d:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)$/;"	l
ffffffff80106a61	obj/kern/kernel.asm	/^ffffffff80106a61:	48 39 d1             	cmp    %rdx,%rcx$/;"	l
ffffffff80106a64	obj/kern/kernel.asm	/^ffffffff80106a64:	75 f3                	jne    ffffffff80106a59 <strncpy+0x43>$/;"	l
ffffffff80106a66	obj/kern/kernel.asm	/^ffffffff80106a66:	c3                   	retq   $/;"	l
ffffffff80106a67	obj/kern/kernel.asm	/^ffffffff80106a67 <safestrcpy>:$/;"	l
ffffffff80106a67	obj/kern/kernel.asm	/^ffffffff80106a67:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106a6b	obj/kern/kernel.asm	/^ffffffff80106a6b:	48 89 f8             	mov    %rdi,%rax$/;"	l
ffffffff80106a6e	obj/kern/kernel.asm	/^ffffffff80106a6e:	85 d2                	test   %edx,%edx$/;"	l
ffffffff80106a70	obj/kern/kernel.asm	/^ffffffff80106a70:	7e 25                	jle    ffffffff80106a97 <safestrcpy+0x30>$/;"	l
ffffffff80106a72	obj/kern/kernel.asm	/^ffffffff80106a72:	44 8d 42 ff          	lea    -0x1(%rdx),%r8d$/;"	l
ffffffff80106a76	obj/kern/kernel.asm	/^ffffffff80106a76:	49 01 f0             	add    %rsi,%r8$/;"	l
ffffffff80106a79	obj/kern/kernel.asm	/^ffffffff80106a79:	48 89 fa             	mov    %rdi,%rdx$/;"	l
ffffffff80106a7c	obj/kern/kernel.asm	/^ffffffff80106a7c:	4c 39 c6             	cmp    %r8,%rsi$/;"	l
ffffffff80106a7f	obj/kern/kernel.asm	/^ffffffff80106a7f:	74 13                	je     ffffffff80106a94 <safestrcpy+0x2d>$/;"	l
ffffffff80106a81	obj/kern/kernel.asm	/^ffffffff80106a81:	48 83 c6 01          	add    $0x1,%rsi$/;"	l
ffffffff80106a85	obj/kern/kernel.asm	/^ffffffff80106a85:	48 83 c2 01          	add    $0x1,%rdx$/;"	l
ffffffff80106a89	obj/kern/kernel.asm	/^ffffffff80106a89:	0f b6 4e ff          	movzbl -0x1(%rsi),%ecx$/;"	l
ffffffff80106a8d	obj/kern/kernel.asm	/^ffffffff80106a8d:	88 4a ff             	mov    %cl,-0x1(%rdx)$/;"	l
ffffffff80106a90	obj/kern/kernel.asm	/^ffffffff80106a90:	84 c9                	test   %cl,%cl$/;"	l
ffffffff80106a92	obj/kern/kernel.asm	/^ffffffff80106a92:	75 e8                	jne    ffffffff80106a7c <safestrcpy+0x15>$/;"	l
ffffffff80106a94	obj/kern/kernel.asm	/^ffffffff80106a94:	c6 02 00             	movb   $0x0,(%rdx)$/;"	l
ffffffff80106a97	obj/kern/kernel.asm	/^ffffffff80106a97:	c3                   	retq   $/;"	l
ffffffff80106a98	obj/kern/kernel.asm	/^ffffffff80106a98 <strlen>:$/;"	l
ffffffff80106a98	obj/kern/kernel.asm	/^ffffffff80106a98:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106a9c	obj/kern/kernel.asm	/^ffffffff80106a9c:	80 3f 00             	cmpb   $0x0,(%rdi)$/;"	l
ffffffff80106a9f	obj/kern/kernel.asm	/^ffffffff80106a9f:	74 10                	je     ffffffff80106ab1 <strlen+0x19>$/;"	l
ffffffff80106aa1	obj/kern/kernel.asm	/^ffffffff80106aa1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106aa6	obj/kern/kernel.asm	/^ffffffff80106aa6:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffffffff80106aaa	obj/kern/kernel.asm	/^ffffffff80106aaa:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)$/;"	l
ffffffff80106aae	obj/kern/kernel.asm	/^ffffffff80106aae:	75 f6                	jne    ffffffff80106aa6 <strlen+0xe>$/;"	l
ffffffff80106ab0	obj/kern/kernel.asm	/^ffffffff80106ab0:	c3                   	retq   $/;"	l
ffffffff80106ab1	obj/kern/kernel.asm	/^ffffffff80106ab1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106ab6	obj/kern/kernel.asm	/^ffffffff80106ab6:	c3                   	retq   $/;"	l
ffffffff80106ab7	obj/kern/kernel.asm	/^ffffffff80106ab7 <strchr>:$/;"	l
ffffffff80106ab7	obj/kern/kernel.asm	/^ffffffff80106ab7:	f3 0f 1e fa          	endbr64 $/;"	l
ffffffff80106abb	obj/kern/kernel.asm	/^ffffffff80106abb:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
ffffffff80106abe	obj/kern/kernel.asm	/^ffffffff80106abe:	84 c0                	test   %al,%al$/;"	l
ffffffff80106ac0	obj/kern/kernel.asm	/^ffffffff80106ac0:	74 16                	je     ffffffff80106ad8 <strchr+0x21>$/;"	l
ffffffff80106ac2	obj/kern/kernel.asm	/^ffffffff80106ac2:	40 38 f0             	cmp    %sil,%al$/;"	l
ffffffff80106ac5	obj/kern/kernel.asm	/^ffffffff80106ac5:	74 17                	je     ffffffff80106ade <strchr+0x27>$/;"	l
ffffffff80106ac7	obj/kern/kernel.asm	/^ffffffff80106ac7:	48 83 c7 01          	add    $0x1,%rdi$/;"	l
ffffffff80106acb	obj/kern/kernel.asm	/^ffffffff80106acb:	0f b6 07             	movzbl (%rdi),%eax$/;"	l
ffffffff80106ace	obj/kern/kernel.asm	/^ffffffff80106ace:	84 c0                	test   %al,%al$/;"	l
ffffffff80106ad0	obj/kern/kernel.asm	/^ffffffff80106ad0:	75 f0                	jne    ffffffff80106ac2 <strchr+0xb>$/;"	l
ffffffff80106ad2	obj/kern/kernel.asm	/^ffffffff80106ad2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106ad7	obj/kern/kernel.asm	/^ffffffff80106ad7:	c3                   	retq   $/;"	l
ffffffff80106ad8	obj/kern/kernel.asm	/^ffffffff80106ad8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffffffff80106add	obj/kern/kernel.asm	/^ffffffff80106add:	c3                   	retq   $/;"	l
ffffffff80106ade	obj/kern/kernel.asm	/^ffffffff80106ade:	48 89 f8             	mov    %rdi,%rax$/;"	l
ffffffff80106ae1	obj/kern/kernel.asm	/^ffffffff80106ae1:	c3                   	retq   $/;"	l
file	kern/file.c	/^  struct file file[NFILE];$/;"	m	struct:__anon1	typeref:struct:__anon1::file	file:
file	kern/file.h	/^struct file {$/;"	s
file	user/sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
filealloc	kern/file.c	/^struct file *filealloc(void) {$/;"	f
fileclose	kern/file.c	/^void fileclose(struct file *f) {$/;"	f
filedup	kern/file.c	/^struct file *filedup(struct file *f) {$/;"	f
fileinit	kern/file.c	/^void fileinit(void) { initlock(&ftable.lock, "ftable"); }$/;"	f
fileread	kern/file.c	/^int fileread(struct file *f, char *addr, int n) {$/;"	f
filestat	kern/file.c	/^int filestat(struct file *f, struct stat *st) {$/;"	f
filesz	boot/elf.h	/^  uint64_t filesz;$/;"	m	struct:proghdr
filesz	kern/elf.h	/^  uint64_t filesz;$/;"	m	struct:proghdr
filewrite	kern/file.c	/^int filewrite(struct file *f, char *addr, int n) {$/;"	f
first	obj/kern/kernel.asm	/^    first = 0;$/;"	d
flags	boot/elf.h	/^  uint32_t flags;$/;"	m	struct:elfhdr
flags	boot/elf.h	/^  uint32_t flags;$/;"	m	struct:proghdr
flags	kern/buf.h	/^  int flags;$/;"	m	struct:buf
flags	kern/elf.h	/^  uint32_t flags;$/;"	m	struct:elfhdr
flags	kern/elf.h	/^  uint32_t flags;$/;"	m	struct:proghdr
flags	kern/mp.h	/^  uint8_t flags;     \/\/ CPU flags$/;"	m	struct:mpproc
flags	kern/mp.h	/^  uint8_t flags;   \/\/ I\/O APIC flags$/;"	m	struct:mpioapic
flags	obj/kern/kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
fmtname	user/ls.c	/^char *fmtname(char *path) {$/;"	f
fork	kern/proc.c	/^pid_t fork(void) {$/;"	f
fork1	user/sh.c	/^int fork1(void) {$/;"	f
forkret	kern/proc.c	/^void forkret(void) {$/;"	f
free	user/umalloc.c	/^void free(void *ap) {$/;"	f
freeblock	kern/mkfs.c	/^uint freeblock;$/;"	v
freeinode	kern/mkfs.c	/^uint freeinode = 1;$/;"	v
freelist	kern/kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon2	typeref:struct:__anon2::run	file:
freep	obj/user/cat.asm	/^      freep = prevp;$/;"	d
freep	obj/user/cat.asm	/^  freep = p;$/;"	d
freep	obj/user/echo.asm	/^      freep = prevp;$/;"	d
freep	obj/user/echo.asm	/^  freep = p;$/;"	d
freep	obj/user/fstest.asm	/^      freep = prevp;$/;"	d
freep	obj/user/fstest.asm	/^  freep = p;$/;"	d
freep	obj/user/init.asm	/^      freep = prevp;$/;"	d
freep	obj/user/init.asm	/^  freep = p;$/;"	d
freep	obj/user/ln.asm	/^      freep = prevp;$/;"	d
freep	obj/user/ln.asm	/^  freep = p;$/;"	d
freep	obj/user/ls.asm	/^      freep = prevp;$/;"	d
freep	obj/user/ls.asm	/^  freep = p;$/;"	d
freep	obj/user/mkdir.asm	/^      freep = prevp;$/;"	d
freep	obj/user/mkdir.asm	/^  freep = p;$/;"	d
freep	obj/user/preemptiontest1.asm	/^      freep = prevp;$/;"	d
freep	obj/user/preemptiontest1.asm	/^  freep = p;$/;"	d
freep	obj/user/preemptiontest2.asm	/^      freep = prevp;$/;"	d
freep	obj/user/preemptiontest2.asm	/^  freep = p;$/;"	d
freep	obj/user/rm.asm	/^      freep = prevp;$/;"	d
freep	obj/user/rm.asm	/^  freep = p;$/;"	d
freep	obj/user/sh.asm	/^      freep = prevp;$/;"	d
freep	obj/user/sh.asm	/^  freep = p;$/;"	d
freep	obj/user/vatest.asm	/^      freep = prevp;$/;"	d
freep	obj/user/vatest.asm	/^  freep = p;$/;"	d
freep	obj/user/wc.asm	/^      freep = prevp;$/;"	d
freep	obj/user/wc.asm	/^  freep = p;$/;"	d
freep	user/umalloc.c	/^static Header *freep;$/;"	v	file:
freerange	kern/kalloc.c	/^void freerange(void *vstart, void *vend) {$/;"	f
freevm	kern/vm.c	/^void freevm(pte_t *pgdir, uintptr_t utop) {$/;"	f
fsfd	kern/mkfs.c	/^int fsfd;$/;"	v
ftable	kern/file.c	/^} ftable;$/;"	v	typeref:struct:__anon1
g	kern/mmu.h	/^  uint g : 1;  \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
g	kern/mmu.h	/^  uint32_t g : 1;  \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:tssdesc
gatedesc	kern/mmu.h	/^struct gatedesc {$/;"	s
gdt	boot/stage_1.S	/^gdt:$/;"	l
gdt	kern/proc.h	/^  struct segdesc gdt[NSEGS]; \/\/ x86 global descriptor table$/;"	m	struct:cpu	typeref:struct:cpu::segdesc
gdt64	boot/stage_3.S	/^gdt64:$/;"	l
gdt64desc	boot/stage_3.S	/^gdt64desc:$/;"	l
gdtdesc	boot/stage_1.S	/^gdtdesc:$/;"	l
getcmd	user/sh.c	/^int getcmd(char *buf, int nbuf) {$/;"	f
gets	user/gets.c	/^char *gets(char *buf, int max) {$/;"	f
gettoken	user/sh.c	/^int gettoken(char **ps, char *es, char **q, char **eq) {$/;"	f
growproc	kern/proc.c	/^int growproc(int n) {$/;"	f
havedisk1	kern/ide.c	/^static int havedisk1;$/;"	v	file:
havedisk1	obj/kern/kernel.asm	/^        havedisk1 = 1;$/;"	d
havekids	obj/kern/kernel.asm	/^      havekids = 1;$/;"	d
havekids	obj/kern/kernel.asm	/^    havekids = 0;$/;"	d
head	kern/bio.c	/^  struct buf head;$/;"	m	struct:__anon3	typeref:struct:__anon3::buf	file:
header	user/umalloc.c	/^union header {$/;"	u	file:
holding	kern/spinlock.c	/^int holding(struct spinlock *lock) {$/;"	f
holdingsleep	kern/sleeplock.c	/^int holdingsleep(struct sleeplock *lk) {$/;"	f
i	obj/kern/kernel.asm	/^  i = 0;$/;"	d
i	obj/user/cat.asm	/^  i = 0;$/;"	d
i	obj/user/echo.asm	/^  i = 0;$/;"	d
i	obj/user/fstest.asm	/^  i = 0;$/;"	d
i	obj/user/init.asm	/^  i = 0;$/;"	d
i	obj/user/ln.asm	/^  i = 0;$/;"	d
i	obj/user/ls.asm	/^  i = 0;$/;"	d
i	obj/user/mkdir.asm	/^  i = 0;$/;"	d
i	obj/user/preemptiontest1.asm	/^  i = 0;$/;"	d
i	obj/user/preemptiontest2.asm	/^  i = 0;$/;"	d
i	obj/user/rm.asm	/^  i = 0;$/;"	d
i	obj/user/sh.asm	/^  i = 0;$/;"	d
i	obj/user/vatest.asm	/^  i = 0;$/;"	d
i	obj/user/wc.asm	/^  i = 0;$/;"	d
ialloc	kern/fs.c	/^struct inode *ialloc(uint dev, short type) {$/;"	f
ialloc	kern/mkfs.c	/^uint ialloc(ushort type) {$/;"	f
iappend	kern/mkfs.c	/^void iappend(uint inum, void *xp, uint n) {$/;"	f
icache	kern/fs.c	/^} icache;$/;"	v	typeref:struct:__anon7
id	obj/kern/kernel.asm	/^  id = ioapicread(REG_ID) >> 24;$/;"	d
ideinit	kern/ide.c	/^void ideinit(void) {$/;"	f
ideintr	kern/ide.c	/^void ideintr(void) {$/;"	f
idelock	kern/ide.c	/^static struct spinlock idelock;$/;"	v	typeref:struct:spinlock	file:
idequeue	kern/ide.c	/^static struct buf *idequeue;$/;"	v	typeref:struct:buf	file:
idequeue	obj/kern/kernel.asm	/^  idequeue = b->qnext;$/;"	d
iderw	kern/ide.c	/^void iderw(struct buf *b) {$/;"	f
idestart	kern/ide.c	/^void idestart(struct buf *b) {$/;"	f
idewait	kern/ide.c	/^static int idewait(int checkerr) {$/;"	f	file:
idt	kern/trap.c	/^struct gatedesc idt[256];$/;"	v	typeref:struct:gatedesc
idtinit	kern/trap.c	/^void idtinit(void) { lidt(idt, sizeof(idt)); }$/;"	f
idup	kern/fs.c	/^struct inode *idup(struct inode *ip) {$/;"	f
iget	kern/fs.c	/^static struct inode *iget(uint dev, uint inum) {$/;"	f	file:
iinit	kern/fs.c	/^void iinit(int dev) {$/;"	f
ilock	kern/fs.c	/^void ilock(struct inode *ip) {$/;"	f
imcrp	kern/mp.h	/^  uint8_t imcrp;$/;"	m	struct:mp
inb	boot/x86.h	/^inline uchar inb(ushort port) {$/;"	f
inb	kern/x86.h	/^static inline uchar inb(ushort port) {$/;"	f
init	kern/initcode.S	/^init:$/;"	l
init_kmap	kern/vm.c	/^void init_kmap(void) {$/;"	f
initlock	kern/spinlock.c	/^void initlock(struct spinlock *lk, char *name) {$/;"	f
initlog	kern/log.c	/^void initlog(int dev) {$/;"	f
initproc	kern/proc.c	/^static struct proc *initproc;$/;"	v	typeref:struct:proc	file:
initproc	obj/kern/kernel.asm	/^  initproc = p;$/;"	d
initsleeplock	kern/sleeplock.c	/^void initsleeplock(struct sleeplock *lk, char *name) {$/;"	f
inituvm	kern/vm.c	/^void inituvm(pte_t *pgdir, char *init, size_t sz) {$/;"	f
inline	obj/boot/bootblock.asm	/^inline uchar inb(ushort port) {$/;"	l
inline	obj/boot/bootblock.asm	/^inline void insl(int port, void *addr, int cnt) {$/;"	l
inline	obj/boot/bootblock.asm	/^inline void outb(ushort port, uchar data) {$/;"	l
inline	obj/boot/bootblock.asm	/^inline void stosb(void *addr, int data, int cnt) {$/;"	l
ino	inc/stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat
inode	kern/file.h	/^struct inode {$/;"	s
inode	kern/fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon7	typeref:struct:__anon7::inode	file:
inodestart	kern/fs.h	/^  uint inodestart; \/\/ Block number of first inode block$/;"	m	struct:superblock
input	kern/console.c	/^} input;$/;"	v	typeref:struct:__anon5
insl	boot/x86.h	/^inline void insl(int port, void *addr, int cnt) {$/;"	f
insl	kern/x86.h	/^static inline void insl(int port, void *addr, int cnt) {$/;"	f
install_trans	kern/log.c	/^static void install_trans(void) {$/;"	f	file:
int	obj/kern/kernel.asm	/^int allocuvm(pte_t *pgdir, size_t oldsz, size_t newsz) {$/;"	l
int	obj/kern/kernel.asm	/^int arg(int n, uint64_t *ip) {$/;"	l
int	obj/kern/kernel.asm	/^int argint(int n, int *ip) {$/;"	l
int	obj/kern/kernel.asm	/^int argptr(int n, char **pp, int size) {$/;"	l
int	obj/kern/kernel.asm	/^int argstr(int n, char **pp) {$/;"	l
int	obj/kern/kernel.asm	/^int consoleread(struct inode *ip, char *dst, int n) {$/;"	l
int	obj/kern/kernel.asm	/^int consolewrite(struct inode *ip, char *buf, int n) {$/;"	l
int	obj/kern/kernel.asm	/^int copyout(pte_t *pgdir, uintptr_t va, void *p, size_t len) {$/;"	l
int	obj/kern/kernel.asm	/^int cpuid() { return mycpu() - cpus; }$/;"	l
int	obj/kern/kernel.asm	/^int deallocuvm(pte_t *pgdir, size_t oldsz, size_t newsz) {$/;"	l
int	obj/kern/kernel.asm	/^int dirlink(struct inode *dp, char *name, uint inum) {$/;"	l
int	obj/kern/kernel.asm	/^int exec(char *path, char **argv) {$/;"	l
int	obj/kern/kernel.asm	/^int fetchint(uintptr_t addr, uint64_t *ip) {$/;"	l
int	obj/kern/kernel.asm	/^int fetchstr(uintptr_t addr, char **pp) {$/;"	l
int	obj/kern/kernel.asm	/^int fileread(struct file *f, char *addr, int n) {$/;"	l
int	obj/kern/kernel.asm	/^int filestat(struct file *f, struct stat *st) {$/;"	l
int	obj/kern/kernel.asm	/^int filewrite(struct file *f, char *addr, int n) {$/;"	l
int	obj/kern/kernel.asm	/^int growproc(int n) {$/;"	l
int	obj/kern/kernel.asm	/^int holding(struct spinlock *lock) {$/;"	l
int	obj/kern/kernel.asm	/^int holdingsleep(struct sleeplock *lk) {$/;"	l
int	obj/kern/kernel.asm	/^int kbdgetc(void) {$/;"	l
int	obj/kern/kernel.asm	/^int kill(int pid) {$/;"	l
int	obj/kern/kernel.asm	/^int lapicid(void) {$/;"	l
int	obj/kern/kernel.asm	/^int loaduvm(pte_t *pgdir, char *addr, struct inode *ip, uint offset,$/;"	l
int	obj/kern/kernel.asm	/^int main(void) {$/;"	l
int	obj/kern/kernel.asm	/^int memcmp(const void *v1, const void *v2, size_t n) {$/;"	l
int	obj/kern/kernel.asm	/^int namecmp(const char *s, const char *t) { return strncmp(s, t, DIRSIZ); }$/;"	l
int	obj/kern/kernel.asm	/^int pipealloc(struct file **f0, struct file **f1) {$/;"	l
int	obj/kern/kernel.asm	/^int piperead(struct pipe *p, char *addr, int n) {$/;"	l
int	obj/kern/kernel.asm	/^int pipewrite(struct pipe *p, char *addr, int n) {$/;"	l
int	obj/kern/kernel.asm	/^int readi(struct inode *ip, char *dst, uint off, uint n) {$/;"	l
int	obj/kern/kernel.asm	/^int strncmp(const char *p, const char *q, size_t n) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_chdir(void) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_dup(void) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_fstat(void) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_link(void) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_mkdir(void) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_mknod(void) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_pipe(void) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_read(void) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_unlink(void) {$/;"	l
int	obj/kern/kernel.asm	/^int sys_write(void) {$/;"	l
int	obj/kern/kernel.asm	/^int writei(struct inode *ip, char *src, uint off, uint n) {$/;"	l
int	obj/user/cat.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/cat.asm	/^int main(int argc, char *argv[]) {$/;"	l
int	obj/user/cat.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/cat.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/echo.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/echo.asm	/^int main(int argc, char *argv[]) {$/;"	l
int	obj/user/echo.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/echo.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/fstest.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/fstest.asm	/^int main(int argc, char *argv[]) {$/;"	l
int	obj/user/fstest.asm	/^int memcmp(const void *v1, const void *v2, size_t n) {$/;"	l
int	obj/user/fstest.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/fstest.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/fstest.asm	/^int strncmp(const char *p, const char *q, size_t n) {$/;"	l
int	obj/user/init.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/init.asm	/^int main(void) {$/;"	l
int	obj/user/init.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/init.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/ln.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/ln.asm	/^int main(int argc, char *argv[]) {$/;"	l
int	obj/user/ln.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/ln.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/ls.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/ls.asm	/^int main(int argc, char *argv[]) {$/;"	l
int	obj/user/ls.asm	/^int memcmp(const void *v1, const void *v2, size_t n) {$/;"	l
int	obj/user/ls.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/ls.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/ls.asm	/^int strncmp(const char *p, const char *q, size_t n) {$/;"	l
int	obj/user/mkdir.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/mkdir.asm	/^int main(int argc, char *argv[]) {$/;"	l
int	obj/user/mkdir.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/mkdir.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/preemptiontest1.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/preemptiontest1.asm	/^int main(int argc, char *argv[]) {$/;"	l
int	obj/user/preemptiontest1.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/preemptiontest1.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/preemptiontest2.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/preemptiontest2.asm	/^int main(void) {$/;"	l
int	obj/user/preemptiontest2.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/preemptiontest2.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/rm.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/rm.asm	/^int main(int argc, char *argv[]) {$/;"	l
int	obj/user/rm.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/rm.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/sh.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/sh.asm	/^int fork1(void) {$/;"	l
int	obj/user/sh.asm	/^int getcmd(char *buf, int nbuf) {$/;"	l
int	obj/user/sh.asm	/^int gettoken(char **ps, char *es, char **q, char **eq) {$/;"	l
int	obj/user/sh.asm	/^int main(void) {$/;"	l
int	obj/user/sh.asm	/^int memcmp(const void *v1, const void *v2, size_t n) {$/;"	l
int	obj/user/sh.asm	/^int peek(char **ps, char *es, char *toks) {$/;"	l
int	obj/user/sh.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/sh.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/sh.asm	/^int strncmp(const char *p, const char *q, size_t n) {$/;"	l
int	obj/user/vatest.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/vatest.asm	/^int main(int argc, char *argv[]) { f("%d %s %d\\n", 1, "hello", 3); }$/;"	l
int	obj/user/vatest.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/vatest.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/wc.asm	/^int dprintf(int fd, const char *fmt, ...) {$/;"	l
int	obj/user/wc.asm	/^int main(int argc, char *argv[]) {$/;"	l
int	obj/user/wc.asm	/^int memcmp(const void *v1, const void *v2, size_t n) {$/;"	l
int	obj/user/wc.asm	/^int printf(const char *fmt, ...) {$/;"	l
int	obj/user/wc.asm	/^int stat(const char *path, struct stat *st) {$/;"	l
int	obj/user/wc.asm	/^int strncmp(const char *p, const char *q, size_t n) {$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int64_t	obj/kern/kernel.asm	/^int64_t sys_close(void) {$/;"	l
int64_t	obj/kern/kernel.asm	/^int64_t sys_exec(void) {$/;"	l
int64_t	obj/kern/kernel.asm	/^int64_t sys_exit(void) {$/;"	l
int64_t	obj/kern/kernel.asm	/^int64_t sys_fork(void) { return fork(); }$/;"	l
int64_t	obj/kern/kernel.asm	/^int64_t sys_getpid(void) { return (int64_t)myproc()->pid; }$/;"	l
int64_t	obj/kern/kernel.asm	/^int64_t sys_kill(void) {$/;"	l
int64_t	obj/kern/kernel.asm	/^int64_t sys_open(void) {$/;"	l
int64_t	obj/kern/kernel.asm	/^int64_t sys_sbrk(void) {$/;"	l
int64_t	obj/kern/kernel.asm	/^int64_t sys_sleep(void) {$/;"	l
int64_t	obj/kern/kernel.asm	/^int64_t sys_wait(void) { return wait(); }$/;"	l
int8_t	inc/types.h	/^typedef char int8_t;$/;"	t
intena	kern/proc.h	/^  int intena;                \/\/ Were interrupts enabled before pushcli?$/;"	m	struct:cpu
intena	obj/kern/kernel.asm	/^  intena = mycpu()->intena;$/;"	d
intptr_t	inc/types.h	/^typedef long long intptr_t;$/;"	t
inum	inc/dir.h	/^  ushort inum;$/;"	m	struct:dirent
inum	kern/file.h	/^  uint inum;             \/\/ Inode number$/;"	m	struct:inode
inum	obj/kern/kernel.asm	/^      inum = de.inum;$/;"	d
inword	obj/user/wc.asm	/^        inword = 0;$/;"	d
inword	obj/user/wc.asm	/^        inword = 1;$/;"	d
inword	obj/user/wc.asm	/^  inword = 0;$/;"	d
ioapic	kern/ioapic.c	/^struct ioapic {$/;"	s	file:
ioapic	kern/ioapic.c	/^volatile struct ioapic *ioapic;$/;"	v	typeref:struct:ioapic
ioapic	obj/kern/kernel.asm	/^      ioapic = (struct ioapic *)DEVSPACE_P2V((uintptr_t)mp_ioapic->addr);$/;"	d
ioapicenable	kern/ioapic.c	/^void ioapicenable(int irq, int cpunum) {$/;"	f
ioapicid	kern/ioapic.c	/^uint8_t ioapicid;$/;"	v
ioapicid	obj/kern/kernel.asm	/^      ioapicid = mp_ioapic->apicno;$/;"	d
ioapicinit	kern/ioapic.c	/^void ioapicinit(void) {$/;"	f
ioapicread	kern/ioapic.c	/^static uint ioapicread(int reg) {$/;"	f	file:
ioapicwrite	kern/ioapic.c	/^static void ioapicwrite(int reg, uint32_t data) {$/;"	f	file:
iomb	kern/mmu.h	/^  uint16_t iomb; \/\/ I\/O map base address$/;"	m	struct:taskstate
ip	kern/file.h	/^  struct inode *ip;$/;"	m	struct:file	typeref:struct:file::inode
ip	obj/kern/kernel.asm	/^    ip = create(path, T_FILE, 0, 0);$/;"	d
ip	obj/kern/kernel.asm	/^    ip = idup(myproc()->cwd);$/;"	d
ip	obj/kern/kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO);$/;"	d
ip	obj/kern/kernel.asm	/^    ip = next;$/;"	d
ip	obj/kern/kernel.asm	/^  ip = 0;$/;"	d
iput	kern/fs.c	/^void iput(struct inode *ip) {$/;"	f
isdirempty	kern/sysfile.c	/^static int isdirempty(struct inode *dp) {$/;"	f	file:
ismp	obj/kern/kernel.asm	/^      ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^  ismp = 1;$/;"	d
ist	kern/mmu.h	/^  uint32_t ist : 3;        \/\/ interrupt stack table index$/;"	m	struct:gatedesc
ist1_31_0	kern/mmu.h	/^  uint32_t ist1_31_0;$/;"	m	struct:taskstate
ist1_63_32	kern/mmu.h	/^  uint32_t ist1_63_32;$/;"	m	struct:taskstate
ist2_31_0	kern/mmu.h	/^  uint32_t ist2_31_0;$/;"	m	struct:taskstate
ist2_63_32	kern/mmu.h	/^  uint32_t ist2_63_32;$/;"	m	struct:taskstate
ist3_31_0	kern/mmu.h	/^  uint32_t ist3_31_0;$/;"	m	struct:taskstate
ist3_63_32	kern/mmu.h	/^  uint32_t ist3_63_32;$/;"	m	struct:taskstate
ist4_31_0	kern/mmu.h	/^  uint32_t ist4_31_0;$/;"	m	struct:taskstate
ist4_63_32	kern/mmu.h	/^  uint32_t ist4_63_32;$/;"	m	struct:taskstate
ist5_31_0	kern/mmu.h	/^  uint32_t ist5_31_0;$/;"	m	struct:taskstate
ist5_63_32	kern/mmu.h	/^  uint32_t ist5_63_32;$/;"	m	struct:taskstate
ist6_31_0	kern/mmu.h	/^  uint32_t ist6_31_0;$/;"	m	struct:taskstate
ist6_63_32	kern/mmu.h	/^  uint32_t ist6_63_32;$/;"	m	struct:taskstate
ist7_31_0	kern/mmu.h	/^  uint32_t ist7_31_0;$/;"	m	struct:taskstate
ist7_63_32	kern/mmu.h	/^  uint32_t ist7_63_32;$/;"	m	struct:taskstate
itrunc	kern/fs.c	/^static void itrunc(struct inode *ip) {$/;"	f	file:
iunlock	kern/fs.c	/^void iunlock(struct inode *ip) {$/;"	f
iunlockput	kern/fs.c	/^void iunlockput(struct inode *ip) {$/;"	f
iupdate	kern/fs.c	/^void iupdate(struct inode *ip) {$/;"	f
jump_to_long_mode	boot/stage_3.S	/^jump_to_long_mode:$/;"	l
jump_to_long_mode	obj/boot/bootblock.asm	/^jump_to_long_mode:$/;"	l
kalloc	kern/kalloc.c	/^char *kalloc(void) {$/;"	f
kbdgetc	kern/kbd.c	/^int kbdgetc(void) {$/;"	f
kbdintr	kern/kbd.c	/^void kbdintr(void) { consoleintr(kbdgetc); }$/;"	f
kernel_entry	boot/stage_2.c	/^void (*kernel_entry)(void);$/;"	v
kernel_entry	obj/boot/bootblock.asm	/^  kernel_entry = (void (*)(void))((uint32_t)elf->entry);$/;"	d
kfree	kern/kalloc.c	/^void kfree(char *v) {$/;"	f
kill	kern/proc.c	/^int kill(int pid) {$/;"	f
killed	kern/proc.h	/^  int killed;                 \/\/ If non-zero, have been killed$/;"	m	struct:proc
kinit1	kern/kalloc.c	/^void kinit1(void *vstart) {$/;"	f
kinit2	kern/kalloc.c	/^void kinit2() {$/;"	f
kmap	kern/vm.c	/^static struct kmap {$/;"	s	file:
kmap	kern/vm.c	/^} kmap[4];$/;"	v	typeref:struct:kmap	file:
kmem	kern/kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon2
kpgdir	kern/vm.c	/^pte_t *kpgdir;      \/\/ for use in scheduler()$/;"	v
kpgdir	obj/kern/kernel.asm	/^  kpgdir = setupkvm();$/;"	d
kstack	kern/proc.h	/^  char *kstack;               \/\/ Bottom of kernel stack for this process$/;"	m	struct:proc
kvmalloc	kern/vm.c	/^void kvmalloc(void) {$/;"	f
l	kern/mmu.h	/^  uint l : 1;          \/\/ 64-bit code segment (IA-32e mode only)$/;"	m	struct:segdesc
l	kern/mmu.h	/^  uint32_t l : 1;          \/\/ 64-bit code segment (IA-32e mode only)$/;"	m	struct:tssdesc
l	obj/user/wc.asm	/^  l = w = c = 0;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic; \/\/ Initialized in mp.c$/;"	v
lapic	obj/kern/kernel.asm	/^  lapic = (uint32_t *)DEVSPACE_P2V((uintptr_t)mp_conf->lapicaddr);$/;"	d
lapicaddr	kern/mp.h	/^  uint32_t lapicaddr;  \/\/ address of local APIC$/;"	m	struct:mpconf
lapiceoi	kern/lapic.c	/^void lapiceoi(void) {$/;"	f
lapicid	kern/lapic.c	/^int lapicid(void) {$/;"	f
lapicinit	kern/lapic.c	/^void lapicinit(void) {$/;"	f
lapicw	kern/lapic.c	/^static void lapicw(int index, uint32_t value) {$/;"	f	file:
last	obj/kern/kernel.asm	/^      last = s + 1;$/;"	d
last	obj/kern/kernel.asm	/^  last = (char *)PGROUNDDOWN(((uintptr_t)va) + size - 1);$/;"	d
lcr3	kern/x86.h	/^static inline void lcr3(uintptr_t val) {$/;"	f
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
len	obj/kern/kernel.asm	/^  len = path - s;$/;"	d
length	kern/mp.h	/^  uint16_t length;     \/\/ total table length$/;"	m	struct:mpconf
length	kern/mp.h	/^  uint8_t length;    \/\/ 1$/;"	m	struct:mp
lgdt	kern/x86.h	/^static inline void lgdt(struct segdesc *p, uint16_t size) {$/;"	f
lh	kern/log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:log::logheader	file:
lidt	kern/x86.h	/^static inline void lidt(struct gatedesc *p, uint16_t size) {$/;"	f
lim_15_0	kern/mmu.h	/^  uint lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:segdesc
lim_15_0	kern/mmu.h	/^  uint32_t lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:tssdesc
lim_19_16	kern/mmu.h	/^  uint lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:segdesc
lim_19_16	kern/mmu.h	/^  uint32_t lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:tssdesc
listcmd	user/sh.c	/^struct cmd *listcmd(struct cmd *left, struct cmd *right) {$/;"	f
listcmd	user/sh.c	/^struct listcmd {$/;"	s	file:
lk	kern/sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:sleeplock::spinlock
load_64bit_gdt	boot/stage_3.S	/^load_64bit_gdt:$/;"	l
load_64bit_gdt	obj/boot/bootblock.asm	/^load_64bit_gdt:$/;"	l
load_rest_of_bootloader_from_disk	boot/stage_1.S	/^load_rest_of_bootloader_from_disk:$/;"	l
load_rest_of_bootloader_from_disk	obj/boot/bootblock.asm	/^load_rest_of_bootloader_from_disk:$/;"	l
loaduvm	kern/vm.c	/^int loaduvm(pte_t *pgdir, char *addr, struct inode *ip, uint offset,$/;"	f
lock	kern/bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon3	typeref:struct:__anon3::spinlock	file:
lock	kern/buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:buf::sleeplock
lock	kern/console.c	/^  struct spinlock lock;$/;"	m	struct:__anon4	typeref:struct:__anon4::spinlock	file:
lock	kern/file.c	/^  struct spinlock lock;$/;"	m	struct:__anon1	typeref:struct:__anon1::spinlock	file:
lock	kern/file.h	/^  struct sleeplock lock; \/\/ protects everything below here$/;"	m	struct:inode	typeref:struct:inode::sleeplock
lock	kern/fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon7	typeref:struct:__anon7::spinlock	file:
lock	kern/kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon2	typeref:struct:__anon2::spinlock	file:
lock	kern/log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:log::spinlock	file:
lock	kern/pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:pipe::spinlock	file:
lock	kern/proc.c	/^  struct spinlock lock;$/;"	m	struct:__anon6	typeref:struct:__anon6::spinlock	file:
locked	kern/sleeplock.h	/^  uint locked;        \/\/ Is the lock held?$/;"	m	struct:sleeplock
locked	kern/spinlock.h	/^  uint locked; \/\/ Is the lock held?$/;"	m	struct:spinlock
locking	kern/console.c	/^  int locking;$/;"	m	struct:__anon4	file:
locking	obj/kern/kernel.asm	/^  locking = cons.locking;$/;"	d
log	kern/log.c	/^struct log {$/;"	s	file:
log_write	kern/log.c	/^void log_write(struct buf *b) {$/;"	f
logheader	kern/log.c	/^struct logheader {$/;"	s	file:
logstart	kern/fs.h	/^  uint logstart;   \/\/ Block number of first log block$/;"	m	struct:superblock
ls	user/ls.c	/^void ls(char *path) {$/;"	f
ltr	kern/x86.h	/^static inline void ltr(uint16_t sel) {$/;"	f
m	obj/kern/kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	obj/kern/kernel.asm	/^    m = min(n - tot, BSIZE - off % BSIZE);$/;"	d
m	obj/kern/kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
machine	boot/elf.h	/^  uint16_t machine;$/;"	m	struct:elfhdr
machine	kern/elf.h	/^  uint16_t machine;$/;"	m	struct:elfhdr
magic	boot/elf.h	/^  uint32_t magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
magic	kern/elf.h	/^  uint32_t magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
main	kern/main.c	/^int main(void) {$/;"	f
main	kern/mkfs.c	/^int main(int argc, char *argv[]) {$/;"	f
main	user/cat.c	/^int main(int argc, char *argv[]) {$/;"	f
main	user/echo.c	/^int main(int argc, char *argv[]) {$/;"	f
main	user/fstest.c	/^int main(int argc, char *argv[]) {$/;"	f
main	user/init.c	/^int main(void) {$/;"	f
main	user/ln.c	/^int main(int argc, char *argv[]) {$/;"	f
main	user/ls.c	/^int main(int argc, char *argv[]) {$/;"	f
main	user/mkdir.c	/^int main(int argc, char *argv[]) {$/;"	f
main	user/preemptiontest1.c	/^int main(int argc, char *argv[]) {$/;"	f
main	user/preemptiontest2.c	/^int main(void) {$/;"	f
main	user/rm.c	/^int main(int argc, char *argv[]) {$/;"	f
main	user/sh.c	/^int main(void) {$/;"	f
main	user/vatest.c	/^int main(int argc, char *argv[]) { f("%d %s %d\\n", 1, "hello", 3); }$/;"	f
main	user/wc.c	/^int main(int argc, char *argv[]) {$/;"	f
major	kern/file.h	/^  short major;$/;"	m	struct:inode
major	kern/fs.h	/^  short major;             \/\/ Major device number (T_DEV only)$/;"	m	struct:dinode
malloc	user/umalloc.c	/^void *malloc(size_t nbytes) {$/;"	f
mappages	kern/vm.c	/^mappages(pte_t *pgdir, void *va, uint size, uintptr_t pa, int perm) {$/;"	f	file:
maxintr	obj/kern/kernel.asm	/^  maxintr = (ioapicread(REG_VER) >> 16) & 0xFF;$/;"	d
mc146818_read	kern/kclock.c	/^uint mc146818_read(uint reg) {$/;"	f
mc146818_write	kern/kclock.c	/^void mc146818_write(uint reg, uint datum) {$/;"	f
mem	obj/kern/kernel.asm	/^    mem = kalloc();$/;"	d
mem	obj/kern/kernel.asm	/^  mem = kalloc();$/;"	d
memcmp	lib/string.c	/^int memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memmove	lib/string.c	/^void *memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	lib/string.c	/^void *memset(void *dst, int c, size_t n) {$/;"	f
memsz	boot/elf.h	/^  uint64_t memsz;$/;"	m	struct:proghdr
memsz	kern/elf.h	/^  uint64_t memsz;$/;"	m	struct:proghdr
microdelay	kern/lapic.c	/^void microdelay(int us) {$/;"	f
min	kern/fs.c	9;"	d	file:
min	kern/mkfs.c	243;"	d	file:
minor	kern/file.h	/^  short minor;$/;"	m	struct:inode
minor	kern/fs.h	/^  short minor;             \/\/ Minor device number (T_DEV only)$/;"	m	struct:dinode
mode	user/sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
morecore	user/umalloc.c	/^static Header *morecore(size_t nu) {$/;"	f	file:
mp	kern/mp.h	/^struct mp {$/;"	s
mp_ioapic	obj/kern/kernel.asm	/^      mp_ioapic = (struct mpioapic *)p;$/;"	d
mpconf	kern/mp.h	/^struct mpconf {$/;"	s
mpconfig	kern/mp.c	/^static struct mpconf *mpconfig(struct mp **pmp) {$/;"	f	file:
mpinit	kern/mp.c	/^void mpinit(void) {$/;"	f
mpioapic	kern/mp.h	/^struct mpioapic {$/;"	s
mpmain	kern/main.c	/^static void mpmain(void) {$/;"	f	file:
mpproc	kern/mp.h	/^struct mpproc {$/;"	s
mpsearch	kern/mp.c	/^static struct mp *mpsearch(void) {$/;"	f	file:
mpsearch1	kern/mp.c	/^static struct mp *mpsearch1(uintptr_t a, int len) {$/;"	f	file:
msg	user/preemptiontest1.c	/^char *msg = "I am preemptiontest1\\n";$/;"	v
msg	user/preemptiontest2.c	/^char *msg = "I am preemptiontest2\\n";$/;"	v
mycpu	kern/proc.c	/^struct cpu *mycpu(void) {$/;"	f
myproc	kern/proc.c	/^struct proc *myproc(void) {$/;"	f
n	kern/log.c	/^  int n;$/;"	m	struct:logheader	file:
n	obj/kern/kernel.asm	/^      n = len;$/;"	d
n	obj/kern/kernel.asm	/^      n = sz - i;$/;"	d
n	obj/kern/kernel.asm	/^    n = PGSIZE - (va - va0);$/;"	d
n	obj/kern/kernel.asm	/^    n = ip->size - off;$/;"	d
n	obj/user/cat.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/echo.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/fstest.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/init.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/ln.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/ls.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/mkdir.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/preemptiontest1.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/preemptiontest2.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/rm.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/sh.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/vatest.asm	/^    n = read(0, &c, 1);$/;"	d
n	obj/user/wc.asm	/^    n = read(0, &c, 1);$/;"	d
name	inc/dir.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent
name	kern/proc.h	/^  char name[16];              \/\/ Process name (debugging)$/;"	m	struct:proc
name	kern/sleeplock.h	/^  char *name; \/\/ Name of lock.$/;"	m	struct:sleeplock
name	kern/spinlock.h	/^  char *name;      \/\/ Name of lock.$/;"	m	struct:spinlock
name	obj/user/cat.asm	/^  name: \\$/;"	l
name	obj/user/echo.asm	/^  name: \\$/;"	l
name	obj/user/fstest.asm	/^  name: \\$/;"	l
name	obj/user/init.asm	/^  name: \\$/;"	l
name	obj/user/ln.asm	/^  name: \\$/;"	l
name	obj/user/ls.asm	/^  name: \\$/;"	l
name	obj/user/mkdir.asm	/^  name: \\$/;"	l
name	obj/user/preemptiontest1.asm	/^  name: \\$/;"	l
name	obj/user/preemptiontest2.asm	/^  name: \\$/;"	l
name	obj/user/rm.asm	/^  name: \\$/;"	l
name	obj/user/sh.asm	/^  name: \\$/;"	l
name	obj/user/vatest.asm	/^  name: \\$/;"	l
name	obj/user/wc.asm	/^  name: \\$/;"	l
name	user/usys.S	/^  name: \\$/;"	l
namecmp	kern/fs.c	/^int namecmp(const char *s, const char *t) { return strncmp(s, t, DIRSIZ); }$/;"	f
namei	kern/fs.c	/^struct inode *namei(char *path) {$/;"	f
nameiparent	kern/fs.c	/^struct inode *nameiparent(char *path, char *name) {$/;"	f
namex	kern/fs.c	/^static struct inode *namex(char *path, int nameiparent, char *name) {$/;"	f	file:
nbitmap	kern/mkfs.c	/^int nbitmap = FSSIZE \/ (BSIZE * 8) + 1;$/;"	v
nblocks	kern/fs.h	/^  uint nblocks;    \/\/ Number of data blocks$/;"	m	struct:superblock
nblocks	kern/mkfs.c	/^int nblocks; \/\/ Number of data blocks$/;"	v
ncli	kern/proc.h	/^  int ncli;                  \/\/ Depth of pushcli nesting.$/;"	m	struct:cpu
ncpu	kern/mp.c	/^int ncpu;$/;"	v
neg	obj/user/cat.asm	/^    neg = 1;$/;"	d
neg	obj/user/cat.asm	/^  neg = 0;$/;"	d
neg	obj/user/echo.asm	/^    neg = 1;$/;"	d
neg	obj/user/echo.asm	/^  neg = 0;$/;"	d
neg	obj/user/fstest.asm	/^    neg = 1;$/;"	d
neg	obj/user/fstest.asm	/^  neg = 0;$/;"	d
neg	obj/user/init.asm	/^    neg = 1;$/;"	d
neg	obj/user/init.asm	/^  neg = 0;$/;"	d
neg	obj/user/ln.asm	/^    neg = 1;$/;"	d
neg	obj/user/ln.asm	/^  neg = 0;$/;"	d
neg	obj/user/ls.asm	/^    neg = 1;$/;"	d
neg	obj/user/ls.asm	/^  neg = 0;$/;"	d
neg	obj/user/mkdir.asm	/^    neg = 1;$/;"	d
neg	obj/user/mkdir.asm	/^  neg = 0;$/;"	d
neg	obj/user/preemptiontest1.asm	/^    neg = 1;$/;"	d
neg	obj/user/preemptiontest1.asm	/^  neg = 0;$/;"	d
neg	obj/user/preemptiontest2.asm	/^    neg = 1;$/;"	d
neg	obj/user/preemptiontest2.asm	/^  neg = 0;$/;"	d
neg	obj/user/rm.asm	/^    neg = 1;$/;"	d
neg	obj/user/rm.asm	/^  neg = 0;$/;"	d
neg	obj/user/sh.asm	/^    neg = 1;$/;"	d
neg	obj/user/sh.asm	/^  neg = 0;$/;"	d
neg	obj/user/vatest.asm	/^    neg = 1;$/;"	d
neg	obj/user/vatest.asm	/^  neg = 0;$/;"	d
neg	obj/user/wc.asm	/^    neg = 1;$/;"	d
neg	obj/user/wc.asm	/^  neg = 0;$/;"	d
next	kern/buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf::buf
next	kern/kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run::run	file:
next_table	obj/kern/kernel.asm	/^    next_table = (pte_t *)P2V(PTE_ADDR(*pte));$/;"	d
nextpid	kern/proc.c	/^int nextpid = 1;$/;"	v
ninodeblocks	kern/mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v
ninodes	kern/fs.h	/^  uint ninodes;    \/\/ Number of inodes.$/;"	m	struct:superblock
nlink	inc/stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat
nlink	kern/file.h	/^  short nlink;$/;"	m	struct:inode
nlink	kern/fs.h	/^  short nlink;             \/\/ Number of links to inode in file system$/;"	m	struct:dinode
nlog	kern/fs.h	/^  uint nlog;       \/\/ Number of log blocks$/;"	m	struct:superblock
nlog	kern/mkfs.c	/^int nlog = LOGSIZE;$/;"	v
nmeta	kern/mkfs.c	/^int nmeta;   \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v
normalmap	kern/kbd.h	/^static uchar normalmap[256] = {NO,$/;"	v
nread	kern/pipe.c	/^  uint nread;    \/\/ number of bytes read$/;"	m	struct:pipe	file:
nulterminate	user/sh.c	/^struct cmd *nulterminate(struct cmd *cmd) {$/;"	f
num	obj/kern/kernel.asm	/^  num = curproc->tf->rax;$/;"	d
nunits	obj/user/cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/fstest.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/init.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/preemptiontest1.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/preemptiontest2.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/vatest.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nunits	obj/user/wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nvram_read	kern/kalloc.c	/^static int nvram_read(int r) {$/;"	f	file:
nwrite	kern/pipe.c	/^  uint nwrite;   \/\/ number of bytes written$/;"	m	struct:pipe	file:
oemlength	kern/mp.h	/^  uint16_t oemlength;  \/\/ OEM table length$/;"	m	struct:mpconf
oemtable	kern/mp.h	/^  uint32_t oemtable;   \/\/ OEM table pointer$/;"	m	struct:mpconf
off	boot/elf.h	/^  uint64_t off;$/;"	m	struct:proghdr
off	kern/elf.h	/^  uint64_t off;$/;"	m	struct:proghdr
off	kern/file.h	/^  uint off;$/;"	m	struct:file
off_15_0	kern/mmu.h	/^  uint32_t off_15_0 : 16;  \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
off_31_16	kern/mmu.h	/^  uint32_t off_31_16 : 16; \/\/ middle bits of offset in segment$/;"	m	struct:gatedesc
off_63_32	kern/mmu.h	/^  uint32_t off_63_32;      \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
offset	obj/boot/bootblock.asm	/^  offset = (offset \/ SECTSIZE) + KERNEL_START_SECTOR;$/;"	d
ofile	kern/proc.h	/^  struct file *ofile[NOFILE]; \/\/ Open files$/;"	m	struct:proc	typeref:struct:proc::file
oldpgdir	obj/kern/kernel.asm	/^  oldpgdir = curproc->pgdir;$/;"	d
os	obj/kern/kernel.asm	/^  os = s;$/;"	d
os	obj/user/fstest.asm	/^  os = s;$/;"	d
os	obj/user/ls.asm	/^  os = s;$/;"	d
os	obj/user/sh.asm	/^  os = s;$/;"	d
os	obj/user/wc.asm	/^  os = s;$/;"	d
outb	boot/x86.h	/^inline void outb(ushort port, uchar data) {$/;"	f
outb	kern/x86.h	/^static inline void outb(ushort port, uchar data) {$/;"	f
outsl	kern/x86.h	/^static inline void outsl(int port, const void *addr, int cnt) {$/;"	f
outstanding	kern/log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	file:
p	kern/mmu.h	/^  uint p : 1;          \/\/ Present$/;"	m	struct:segdesc
p	kern/mmu.h	/^  uint32_t p : 1;          \/\/ Present$/;"	m	struct:gatedesc
p	kern/mmu.h	/^  uint32_t p : 1;          \/\/ Present$/;"	m	struct:tssdesc
p	obj/kern/kernel.asm	/^    p = ((bda[0x14] << 8) | bda[0x13]) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^  p = (char *)PGROUNDUP((uintptr_t)vstart);$/;"	d
p	obj/kern/kernel.asm	/^  p = 0;$/;"	d
p	obj/kern/kernel.asm	/^  p = allocproc();$/;"	d
p	obj/kern/kernel.asm	/^  p = c->proc;$/;"	d
p	obj/user/cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/fstest.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/ls.asm	/^    p = buf + strlen(buf);$/;"	d
p	obj/user/ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/preemptiontest1.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/preemptiontest2.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/vatest.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	obj/user/wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p3_1	boot/entrypgdir.S	/^p3_1:$/;"	l
p3_2	boot/entrypgdir.S	/^p3_2:$/;"	l
p4	boot/entrypgdir.S	/^p4:$/;"	l
pa	obj/boot/bootblock.asm	/^    pa = (uchar *)((uint32_t)ph->paddr);$/;"	d
pa	obj/kern/kernel.asm	/^      pa = PTE_ADDR(*pte);$/;"	d
pa	obj/kern/kernel.asm	/^    pa = PTE_ADDR(*pte);$/;"	d
pa0	obj/kern/kernel.asm	/^    pa0 = uva2ka(pgdir, (char *)va0);$/;"	d
pad	kern/ioapic.c	/^  uint32_t pad[3];$/;"	m	struct:ioapic	file:
padding1	kern/mmu.h	/^  uint32_t padding1;$/;"	m	struct:gatedesc
padding1	kern/mmu.h	/^  uint32_t padding1;$/;"	m	struct:taskstate
padding1	kern/mmu.h	/^  uint32_t padding1;$/;"	m	struct:tssdesc
padding2	kern/mmu.h	/^  uint32_t padding2;$/;"	m	struct:taskstate
padding3	kern/mmu.h	/^  uint32_t padding3;$/;"	m	struct:taskstate
padding4	kern/mmu.h	/^  uint32_t padding4;$/;"	m	struct:taskstate
padding5	kern/mmu.h	/^  uint32_t padding5;$/;"	m	struct:taskstate
padding6	kern/mmu.h	/^  uint16_t padding6;$/;"	m	struct:taskstate
padding_cs1	kern/x86.h	/^  uint16_t padding_cs1;$/;"	m	struct:trapframe
padding_cs2	kern/x86.h	/^  uint32_t padding_cs2;$/;"	m	struct:trapframe
padding_ss1	kern/x86.h	/^  uint16_t padding_ss1;$/;"	m	struct:trapframe
padding_ss2	kern/x86.h	/^  uint32_t padding_ss2;$/;"	m	struct:trapframe
paddr	boot/elf.h	/^  uint64_t paddr;$/;"	m	struct:proghdr
paddr	kern/elf.h	/^  uint64_t paddr;$/;"	m	struct:proghdr
panic	kern/console.c	/^void panic(char *s) {$/;"	f
panic	user/sh.c	/^void panic(char *s) {$/;"	f
panicked	kern/console.c	/^static int panicked = 0;$/;"	v	file:
panicked	obj/kern/kernel.asm	/^  panicked = 1; \/\/ freeze other CPU$/;"	d
parent	kern/proc.h	/^  struct proc *parent;        \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc::proc
parseblock	user/sh.c	/^struct cmd *parseblock(char **ps, char *es) {$/;"	f
parsecmd	user/sh.c	/^struct cmd *parsecmd(char *s) {$/;"	f
parseexec	user/sh.c	/^struct cmd *parseexec(char **ps, char *es) {$/;"	f
parseline	user/sh.c	/^struct cmd *parseline(char **ps, char *es) {$/;"	f
parsepipe	user/sh.c	/^struct cmd *parsepipe(char **ps, char *es) {$/;"	f
parseredirs	user/sh.c	/^struct cmd *parseredirs(struct cmd *cmd, char **ps, char *es) {$/;"	f
peek	user/sh.c	/^int peek(char **ps, char *es, char *toks) {$/;"	f
perm	kern/vm.c	/^  int perm;$/;"	m	struct:kmap	file:
pgdir	kern/proc.h	/^  pte_t *pgdir;               \/\/ Page table$/;"	m	struct:proc
ph	obj/boot/bootblock.asm	/^  ph = (struct proghdr *)((uchar *)elf + elf->phoff);$/;"	d
phentsize	boot/elf.h	/^  uint16_t phentsize;$/;"	m	struct:elfhdr
phentsize	kern/elf.h	/^  uint16_t phentsize;$/;"	m	struct:elfhdr
phnum	boot/elf.h	/^  uint16_t phnum;$/;"	m	struct:elfhdr
phnum	kern/elf.h	/^  uint16_t phnum;$/;"	m	struct:elfhdr
phoff	boot/elf.h	/^  uint64_t phoff;$/;"	m	struct:elfhdr
phoff	kern/elf.h	/^  uint64_t phoff;$/;"	m	struct:elfhdr
phys_end	kern/vm.c	/^  uintptr_t phys_end;$/;"	m	struct:kmap	file:
phys_start	kern/vm.c	/^  uintptr_t phys_start;$/;"	m	struct:kmap	file:
phys_temporary_top	kern/kalloc.c	/^static uintptr_t phys_temporary_top = 4 * 1024 * 1024;$/;"	v	file:
phys_top	kern/kalloc.c	/^uintptr_t phys_top;$/;"	v
phys_top	obj/kern/kernel.asm	/^  phys_top = ((uintptr_t)totalmem * 1024) \/ PGSIZE * PGSIZE;$/;"	d
physaddr	kern/mp.h	/^  uint32_t physaddr; \/\/ phys addr of MP config table$/;"	m	struct:mp
picinit	kern/picirq.c	/^void picinit(void) {$/;"	f
pid	kern/proc.h	/^  pid_t pid;                  \/\/ Process ID$/;"	m	struct:proc
pid	kern/sleeplock.h	/^  pid_t pid;  \/\/ Process holding lock$/;"	m	struct:sleeplock
pid	obj/kern/kernel.asm	/^        pid = p->pid;$/;"	d
pid	obj/kern/kernel.asm	/^  pid = np->pid;$/;"	d
pid	obj/user/init.asm	/^    pid = fork();$/;"	d
pid	obj/user/sh.asm	/^  pid = fork();$/;"	d
pid_t	inc/types.h	/^typedef int32_t pid_t;$/;"	t
pid_t	obj/kern/kernel.asm	/^pid_t fork(void) {$/;"	l
pid_t	obj/kern/kernel.asm	/^pid_t wait(void) {$/;"	l
pipe	kern/file.h	/^  struct pipe *pipe;$/;"	m	struct:file	typeref:struct:file::pipe
pipe	kern/pipe.c	/^struct pipe {$/;"	s	file:
pipealloc	kern/pipe.c	/^int pipealloc(struct file **f0, struct file **f1) {$/;"	f
pipeclose	kern/pipe.c	/^void pipeclose(struct pipe *p, int writable) {$/;"	f
pipecmd	user/sh.c	/^struct cmd *pipecmd(struct cmd *left, struct cmd *right) {$/;"	f
pipecmd	user/sh.c	/^struct pipecmd {$/;"	s	file:
piperead	kern/pipe.c	/^int piperead(struct pipe *p, char *addr, int n) {$/;"	f
pipewrite	kern/pipe.c	/^int pipewrite(struct pipe *p, char *addr, int n) {$/;"	f
popcli	kern/spinlock.c	/^void popcli(void) {$/;"	f
pos	obj/kern/kernel.asm	/^  pos = inb(CRTPORT + 1) << 8;$/;"	d
prev	kern/buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf::buf
printchar	user/printf.c	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	f	file:
printf	user/printf.c	/^int printf(const char *fmt, ...) {$/;"	f
printint	kern/console.c	/^static void printint(long xx, int base, int sign) {$/;"	f	file:
printint	user/printf.c	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	f	file:
proc	kern/proc.c	/^  struct proc proc[NPROC];$/;"	m	struct:__anon6	typeref:struct:__anon6::proc	file:
proc	kern/proc.h	/^  struct proc *proc;         \/\/ The process running on this cpu or null$/;"	m	struct:cpu	typeref:struct:cpu::proc
proc	kern/proc.h	/^struct proc {$/;"	s
procdump	kern/proc.c	/^void procdump(void) {$/;"	f
procstate	kern/proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
product	kern/mp.h	/^  uint8_t product[20]; \/\/ product id$/;"	m	struct:mpconf
proghdr	boot/elf.h	/^struct proghdr {$/;"	s
proghdr	kern/elf.h	/^struct proghdr {$/;"	s
ptable	kern/proc.c	/^} ptable;$/;"	v	typeref:struct:__anon6
pte	obj/kern/kernel.asm	/^    pte = walkpgdir(pgdir, (char *)a, 0);$/;"	d
pte	obj/kern/kernel.asm	/^  pte = walkpgdir(pgdir, uva, 0);$/;"	d
pte_t	inc/types.h	/^typedef uint64_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *copyuvm(pte_t *pgdir, size_t sz) {$/;"	l
pte_t	obj/kern/kernel.asm	/^pte_t *setupkvm(void) {$/;"	l
ptr	user/umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon9	typeref:union:header::__anon9::header	file:
ptx	kern/vm.c	/^static uint ptx(const void *va, int level) {$/;"	f	file:
pushcli	kern/spinlock.c	/^void pushcli(void) {$/;"	f
qnext	kern/buf.h	/^  struct buf *qnext; \/\/ disk queue$/;"	m	struct:buf	typeref:struct:buf::buf
r	kern/console.c	/^  uint r; \/\/ Read index$/;"	m	struct:__anon5	file:
r	obj/kern/kernel.asm	/^  r = (struct run *)v;$/;"	d
r	obj/kern/kernel.asm	/^  r = kmem.freelist;$/;"	d
r	obj/kern/kernel.asm	/^  r = lk->locked && (lk->pid == myproc()->pid);$/;"	d
r	obj/kern/kernel.asm	/^  r = lock->locked && lock->cpu == mycpu();$/;"	d
r	obj/user/cat.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/echo.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/fstest.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/init.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/ln.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/ls.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/preemptiontest1.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/preemptiontest2.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/rm.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/sh.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/vatest.asm	/^  r = fstat(fd, st);$/;"	d
r	obj/user/wc.asm	/^  r = fstat(fd, st);$/;"	d
r10	kern/x86.h	/^  uint64_t r10;$/;"	m	struct:trapframe
r11	kern/x86.h	/^  uint64_t r11;$/;"	m	struct:trapframe
r12	kern/proc.h	/^  uint64_t r12;$/;"	m	struct:context
r12	kern/x86.h	/^  uint64_t r12;$/;"	m	struct:trapframe
r13	kern/proc.h	/^  uint64_t r13;$/;"	m	struct:context
r13	kern/x86.h	/^  uint64_t r13;$/;"	m	struct:trapframe
r14	kern/proc.h	/^  uint64_t r14;$/;"	m	struct:context
r14	kern/x86.h	/^  uint64_t r14;$/;"	m	struct:trapframe
r15	kern/proc.h	/^  uint64_t r15;$/;"	m	struct:context
r15	kern/x86.h	/^  uint64_t r15;$/;"	m	struct:trapframe
r8	kern/x86.h	/^  uint64_t r8;$/;"	m	struct:trapframe
r9	kern/x86.h	/^  uint64_t r9;$/;"	m	struct:trapframe
rax	kern/x86.h	/^  uint64_t rax;$/;"	m	struct:trapframe
rbp	kern/proc.h	/^  uint64_t rbp;$/;"	m	struct:context
rbp	kern/x86.h	/^  uint64_t rbp;$/;"	m	struct:trapframe
rbx	kern/proc.h	/^  uint64_t rbx;$/;"	m	struct:context
rbx	kern/x86.h	/^  uint64_t rbx;$/;"	m	struct:trapframe
rcmd	obj/user/sh.asm	/^    rcmd = (struct redircmd *)cmd;$/;"	d
rcr2	kern/x86.h	/^static inline uintptr_t rcr2(void) {$/;"	f
rcx	kern/x86.h	/^  uint64_t rcx;$/;"	m	struct:trapframe
rdi	kern/proc.h	/^  uint64_t rdi;$/;"	m	struct:context
rdi	kern/x86.h	/^  uint64_t rdi;$/;"	m	struct:trapframe
rdx	kern/x86.h	/^  uint64_t rdx;$/;"	m	struct:trapframe
read	kern/file.h	/^  int (*read)(struct inode *, char *, int);$/;"	m	struct:devsw
read_head	kern/log.c	/^static void read_head(void) {$/;"	f	file:
readable	kern/file.h	/^  char readable;$/;"	m	struct:file
readeflags	kern/x86.h	/^static inline uint readeflags(void) {$/;"	f
readi	kern/fs.c	/^int readi(struct inode *ip, char *dst, uint off, uint n) {$/;"	f
readopen	kern/pipe.c	/^  int readopen;  \/\/ read fd is still open$/;"	m	struct:pipe	file:
readsb	kern/fs.c	/^void readsb(int dev, struct superblock *sb) {$/;"	f
readsect	boot/stage_2.c	/^void readsect(void *dst, uint offset) {$/;"	f
readseg	boot/stage_2.c	/^void readseg(uchar *pa, uint count, uint offset) {$/;"	f
recover_from_log	kern/log.c	/^static void recover_from_log(void) {$/;"	f	file:
redircmd	user/sh.c	/^struct cmd *redircmd(struct cmd *subcmd, char *file, char *efile, int mode,$/;"	f
redircmd	user/sh.c	/^struct redircmd {$/;"	s	file:
ref	kern/file.h	/^  int ref;               \/\/ Reference count$/;"	m	struct:inode
ref	kern/file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file
refcnt	kern/buf.h	/^  uint refcnt;$/;"	m	struct:buf
reg	kern/ioapic.c	/^  uint32_t reg;$/;"	m	struct:ioapic	file:
release	kern/spinlock.c	/^void release(struct spinlock *lk) {$/;"	f
releasesleep	kern/sleeplock.c	/^void releasesleep(struct sleeplock *lk) {$/;"	f
reserved	kern/mp.h	/^  uint8_t reserved;$/;"	m	struct:mpconf
reserved	kern/mp.h	/^  uint8_t reserved[3];$/;"	m	struct:mp
reserved	kern/mp.h	/^  uint8_t reserved[8];$/;"	m	struct:mpproc
reset_esr	kern/lapic.c	/^static void reset_esr(void) {$/;"	f	file:
rest_of_bootloader_load_failed	boot/stage_1.S	/^rest_of_bootloader_load_failed:$/;"	l
rest_of_bootloader_load_failed	obj/boot/bootblock.asm	/^rest_of_bootloader_load_failed:$/;"	l
rest_of_bootloader_load_failed_str	boot/stage_1.S	/^rest_of_bootloader_load_failed_str:$/;"	l
ret	obj/user/sh.asm	/^      ret = '+';$/;"	d
ret	obj/user/sh.asm	/^    ret = 'a';$/;"	d
ret	obj/user/sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	obj/user/sh.asm	/^  ret = *s;$/;"	d
ret	obj/user/sh.asm	/^  ret = execcmd();$/;"	d
ret	obj/user/sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
return	obj/kern/kernel.asm	/^  return d;$/;"	d
rflags	kern/x86.h	/^  uint64_t rflags;$/;"	m	struct:trapframe
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rinode	kern/mkfs.c	/^void rinode(uint inum, struct dinode *ip) {$/;"	f
rip	kern/proc.h	/^  uint64_t rip;$/;"	m	struct:context
rip	kern/x86.h	/^  uint64_t rip;$/;"	m	struct:trapframe
rsect	kern/mkfs.c	/^void rsect(uint sec, void *buf) {$/;"	f
rsi	kern/proc.h	/^  uint64_t rsi;$/;"	m	struct:context
rsi	kern/x86.h	/^  uint64_t rsi;$/;"	m	struct:trapframe
rsp	kern/x86.h	/^  uint64_t rsp;$/;"	m	struct:trapframe
rsp0_31_0	kern/mmu.h	/^  uint32_t rsp0_31_0;$/;"	m	struct:taskstate
rsp0_63_32	kern/mmu.h	/^  uint32_t rsp0_63_32;$/;"	m	struct:taskstate
rsp1_31_0	kern/mmu.h	/^  uint32_t rsp1_31_0;$/;"	m	struct:taskstate
rsp1_63_32	kern/mmu.h	/^  uint32_t rsp1_63_32;$/;"	m	struct:taskstate
rsp2_31_0	kern/mmu.h	/^  uint32_t rsp2_31_0;$/;"	m	struct:taskstate
rsp2_63_32	kern/mmu.h	/^  uint32_t rsp2_63_32;$/;"	m	struct:taskstate
rsv1	kern/mmu.h	/^  uint32_t rsv1 : 3;       \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
run	kern/kalloc.c	/^struct run {$/;"	s	file:
runcmd	user/sh.c	/^void runcmd(struct cmd *cmd) {$/;"	f
s	kern/mmu.h	/^  uint s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
s	kern/mmu.h	/^  uint32_t s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:tssdesc
s	kern/mmu.h	/^  uint32_t s : 1;          \/\/ must be 0 (system)$/;"	m	struct:gatedesc
s	obj/kern/kernel.asm	/^  s = src;$/;"	d
s	obj/user/fstest.asm	/^  s = src;$/;"	d
s	obj/user/ls.asm	/^  s = src;$/;"	d
s	obj/user/sh.asm	/^  s = *ps;$/;"	d
s	obj/user/sh.asm	/^  s = src;$/;"	d
s	obj/user/wc.asm	/^  s = src;$/;"	d
s	user/umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon9	file:
s1	obj/kern/kernel.asm	/^  s1 = v1;$/;"	d
s1	obj/user/fstest.asm	/^  s1 = v1;$/;"	d
s1	obj/user/ls.asm	/^  s1 = v1;$/;"	d
s1	obj/user/sh.asm	/^  s1 = v1;$/;"	d
s1	obj/user/wc.asm	/^  s1 = v1;$/;"	d
s2	obj/kern/kernel.asm	/^  s2 = v2;$/;"	d
s2	obj/user/fstest.asm	/^  s2 = v2;$/;"	d
s2	obj/user/ls.asm	/^  s2 = v2;$/;"	d
s2	obj/user/sh.asm	/^  s2 = v2;$/;"	d
s2	obj/user/wc.asm	/^  s2 = v2;$/;"	d
safestrcpy	lib/string.c	/^char *safestrcpy(char *s, const char *t, int n) {$/;"	f
sb	kern/fs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sb	kern/mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sched	kern/proc.c	/^void sched(void) {$/;"	f
scheduler	kern/proc.c	/^void scheduler(void) {$/;"	f
scheduler	kern/proc.h	/^  struct context *scheduler; \/\/ swtch() here to enter scheduler$/;"	m	struct:cpu	typeref:struct:cpu::context
segdesc	kern/mmu.h	/^struct segdesc {$/;"	s
seginit	kern/vm.c	/^void seginit(void) {$/;"	f
set_target_operating_mode	boot/stage_1.S	/^set_target_operating_mode:$/;"	l
set_up_page_table	boot/stage_3.S	/^set_up_page_table:$/;"	l
set_up_page_table	obj/boot/bootblock.asm	/^set_up_page_table:$/;"	l
setupkvm	kern/vm.c	/^pte_t *setupkvm(void) {$/;"	f
shentsize	boot/elf.h	/^  uint16_t shentsize;$/;"	m	struct:elfhdr
shentsize	kern/elf.h	/^  uint16_t shentsize;$/;"	m	struct:elfhdr
shiftcode	kern/kbd.h	/^static uchar shiftcode[256] = {[0x1D] = CTL, [0x2A] = SHIFT, [0x36] = SHIFT,$/;"	v
shiftmap	kern/kbd.h	/^static uchar shiftmap[256] = {NO,$/;"	v
shnum	boot/elf.h	/^  uint16_t shnum;$/;"	m	struct:elfhdr
shnum	kern/elf.h	/^  uint16_t shnum;$/;"	m	struct:elfhdr
shoff	boot/elf.h	/^  uint64_t shoff;$/;"	m	struct:elfhdr
shoff	kern/elf.h	/^  uint64_t shoff;$/;"	m	struct:elfhdr
shstrndx	boot/elf.h	/^  uint16_t shstrndx;$/;"	m	struct:elfhdr
shstrndx	kern/elf.h	/^  uint16_t shstrndx;$/;"	m	struct:elfhdr
signature	kern/mp.h	/^  char signature[4];   \/\/ "PCMP"$/;"	m	struct:mpconf
signature	kern/mp.h	/^  char signature[4]; \/\/ "_MP_"$/;"	m	struct:mp
signature	kern/mp.h	/^  char signature[4]; \/\/ CPU signature$/;"	m	struct:mpproc
size	inc/stat.h	/^  uint size;   \/\/ Size of file in bytes$/;"	m	struct:stat
size	kern/file.h	/^  uint size;$/;"	m	struct:inode
size	kern/fs.h	/^  uint size;               \/\/ Size of file (bytes)$/;"	m	struct:dinode
size	kern/fs.h	/^  uint size;       \/\/ Size of file system image (blocks)$/;"	m	struct:superblock
size	kern/log.c	/^  int size;$/;"	m	struct:log	file:
size	user/umalloc.c	/^    size_t size;$/;"	m	struct:header::__anon9	file:
size_t	inc/types.h	/^typedef unsigned long size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t strlen(const char *s) {$/;"	l
size_t	obj/user/fstest.asm	/^size_t strlen(const char *s) {$/;"	l
size_t	obj/user/ls.asm	/^size_t strlen(const char *s) {$/;"	l
size_t	obj/user/sh.asm	/^size_t strlen(const char *s) {$/;"	l
size_t	obj/user/wc.asm	/^size_t strlen(const char *s) {$/;"	l
skipelem	kern/fs.c	/^static char *skipelem(char *path, char *name) {$/;"	f	file:
sleep	kern/proc.c	/^void sleep(void *chan, struct spinlock *lk) {$/;"	f
sleeplock	kern/sleeplock.h	/^struct sleeplock {$/;"	s
sp	obj/kern/kernel.asm	/^    sp = (sp - (strlen(argv[argc]) + 1)) & ~(sizeof(uintptr_t) - 1);$/;"	d
sp	obj/kern/kernel.asm	/^  sp = sz;$/;"	d
specrev	kern/mp.h	/^  uint8_t specrev;   \/\/ [14]$/;"	m	struct:mp
spin16	boot/stage_1.S	/^spin16:$/;"	l
spin16	obj/boot/bootblock.asm	/^spin16:$/;"	l
spin32	boot/stage_1.S	/^spin32:$/;"	l
spin32	obj/boot/bootblock.asm	/^spin32:$/;"	l
spin64	boot/stage_3.S	/^spin64:$/;"	l
spin64	obj/boot/bootblock.asm	/^spin64:$/;"	l
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
ss	kern/x86.h	/^  uint16_t ss;$/;"	m	struct:trapframe
ssize_t	inc/types.h	/^typedef long ssize_t;$/;"	t
st	obj/kern/kernel.asm	/^  st = inb(KBSTATP);$/;"	d
stage_2	boot/stage_2.c	/^void stage_2(void) {$/;"	f
stage_3	boot/stage_3.S	/^stage_3:$/;"	l
stage_3	obj/boot/bootblock.asm	/^stage_3:$/;"	l
start	boot/stage_1.S	/^start:$/;"	l
start	kern/initcode.S	/^start:$/;"	l
start	kern/log.c	/^  int start;$/;"	m	struct:log	file:
start	obj/boot/bootblock.asm	/^start:$/;"	l
start	obj/kern/initcode.asm	/^start:$/;"	l
start32	boot/stage_1.S	/^start32:$/;"	l
start32	obj/boot/bootblock.asm	/^start32:$/;"	l
started	kern/proc.h	/^  volatile uint started;     \/\/ Has the CPU started?$/;"	m	struct:cpu
stat	inc/stat.h	/^struct stat {$/;"	s
stat	kern/mkfs.c	9;"	d	file:
stat	user/stat.c	/^int stat(const char *path, struct stat *st) {$/;"	f
state	kern/proc.h	/^  enum procstate state;       \/\/ Process state$/;"	m	struct:proc	typeref:enum:proc::procstate
state	obj/kern/kernel.asm	/^      state = "???";$/;"	d
state	obj/kern/kernel.asm	/^      state = states[p->state];$/;"	d
state	obj/user/cat.asm	/^        state = '%';$/;"	d
state	obj/user/cat.asm	/^      state = 0;$/;"	d
state	obj/user/cat.asm	/^  state = 0;$/;"	d
state	obj/user/echo.asm	/^        state = '%';$/;"	d
state	obj/user/echo.asm	/^      state = 0;$/;"	d
state	obj/user/echo.asm	/^  state = 0;$/;"	d
state	obj/user/fstest.asm	/^        state = '%';$/;"	d
state	obj/user/fstest.asm	/^      state = 0;$/;"	d
state	obj/user/fstest.asm	/^  state = 0;$/;"	d
state	obj/user/init.asm	/^        state = '%';$/;"	d
state	obj/user/init.asm	/^      state = 0;$/;"	d
state	obj/user/init.asm	/^  state = 0;$/;"	d
state	obj/user/ln.asm	/^        state = '%';$/;"	d
state	obj/user/ln.asm	/^      state = 0;$/;"	d
state	obj/user/ln.asm	/^  state = 0;$/;"	d
state	obj/user/ls.asm	/^        state = '%';$/;"	d
state	obj/user/ls.asm	/^      state = 0;$/;"	d
state	obj/user/ls.asm	/^  state = 0;$/;"	d
state	obj/user/mkdir.asm	/^        state = '%';$/;"	d
state	obj/user/mkdir.asm	/^      state = 0;$/;"	d
state	obj/user/mkdir.asm	/^  state = 0;$/;"	d
state	obj/user/preemptiontest1.asm	/^        state = '%';$/;"	d
state	obj/user/preemptiontest1.asm	/^      state = 0;$/;"	d
state	obj/user/preemptiontest1.asm	/^  state = 0;$/;"	d
state	obj/user/preemptiontest2.asm	/^        state = '%';$/;"	d
state	obj/user/preemptiontest2.asm	/^      state = 0;$/;"	d
state	obj/user/preemptiontest2.asm	/^  state = 0;$/;"	d
state	obj/user/rm.asm	/^        state = '%';$/;"	d
state	obj/user/rm.asm	/^      state = 0;$/;"	d
state	obj/user/rm.asm	/^  state = 0;$/;"	d
state	obj/user/sh.asm	/^        state = '%';$/;"	d
state	obj/user/sh.asm	/^      state = 0;$/;"	d
state	obj/user/sh.asm	/^  state = 0;$/;"	d
state	obj/user/vatest.asm	/^        state = '%';$/;"	d
state	obj/user/vatest.asm	/^      state = 0;$/;"	d
state	obj/user/vatest.asm	/^  state = 0;$/;"	d
state	obj/user/wc.asm	/^        state = '%';$/;"	d
state	obj/user/wc.asm	/^      state = 0;$/;"	d
state	obj/user/wc.asm	/^  state = 0;$/;"	d
stati	kern/fs.c	/^void stati(struct inode *ip, struct stat *st) {$/;"	f
static	obj/kern/kernel.asm	/^static inline uint readeflags(void) {$/;"	l
static	obj/kern/kernel.asm	/^static inline uint xchg(volatile uint *addr, uint newval) {$/;"	l
static	obj/kern/kernel.asm	/^static inline void cli(void) { __asm__ volatile("cli"); }$/;"	l
static	obj/kern/kernel.asm	/^static inline void sti(void) { __asm__ volatile("sti"); }$/;"	l
static	obj/kern/kernel.asm	/^static inline void stosb(void *addr, int data, int cnt) {$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((noinline))$/;"	l
static	obj/kern/kernel.asm	/^static int argfd(int n, int *pfd, struct file **pf) {$/;"	l
static	obj/kern/kernel.asm	/^static int fdalloc(struct file *f) {$/;"	l
static	obj/kern/kernel.asm	/^static int nvram_read(int r) {$/;"	l
static	obj/kern/kernel.asm	/^static int uartgetc(void) {$/;"	l
static	obj/kern/kernel.asm	/^static pte_t *__attribute__((noinline))$/;"	l
static	obj/kern/kernel.asm	/^static struct inode *create(char *path, short type, short major, short minor) {$/;"	t
static	obj/kern/kernel.asm	/^static struct inode *iget(uint dev, uint inum) {$/;"	t
static	obj/kern/kernel.asm	/^static struct inode *namex(char *path, int nameiparent, char *name) {$/;"	t
static	obj/kern/kernel.asm	/^static struct mp *mpsearch1(uintptr_t a, int len) {$/;"	t
static	obj/kern/kernel.asm	/^static struct proc *allocproc(void) {$/;"	t
static	obj/kern/kernel.asm	/^static uint balloc(uint dev) {$/;"	l
static	obj/kern/kernel.asm	/^static uint bmap(struct inode *ip, uint bn) {$/;"	l
static	obj/kern/kernel.asm	/^static uint ptx(const void *va, int level) {$/;"	l
static	obj/kern/kernel.asm	/^static uintptr_t phys_temporary_top = 4 * 1024 * 1024;$/;"	l
static	obj/kern/kernel.asm	/^static void bfree(int dev, uint b) {$/;"	l
static	obj/kern/kernel.asm	/^static void commit(void) {$/;"	l
static	obj/kern/kernel.asm	/^static void install_trans(void) {$/;"	l
static	obj/kern/kernel.asm	/^static void ioapicwrite(int reg, uint32_t data) {$/;"	l
static	obj/kern/kernel.asm	/^static void lapicw(int index, uint32_t value) {$/;"	l
static	obj/kern/kernel.asm	/^static void mpmain(void) {$/;"	l
static	obj/kern/kernel.asm	/^static void printint(long xx, int base, int sign) {$/;"	l
static	obj/kern/kernel.asm	/^static void recover_from_log(void) {$/;"	l
static	obj/kern/kernel.asm	/^static void wakeup1(void *chan) {$/;"	l
static	obj/kern/kernel.asm	/^static void write_head(void) {$/;"	l
static	obj/user/cat.asm	/^static Header *freep;$/;"	l
static	obj/user/cat.asm	/^static Header base;$/;"	l
static	obj/user/cat.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/cat.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/cat.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/echo.asm	/^static Header *freep;$/;"	l
static	obj/user/echo.asm	/^static Header base;$/;"	l
static	obj/user/echo.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/echo.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/echo.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/fstest.asm	/^static Header *freep;$/;"	l
static	obj/user/fstest.asm	/^static Header base;$/;"	l
static	obj/user/fstest.asm	/^static inline void stosb(void *addr, int data, int cnt) {$/;"	l
static	obj/user/fstest.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/fstest.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/fstest.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/init.asm	/^static Header *freep;$/;"	l
static	obj/user/init.asm	/^static Header base;$/;"	l
static	obj/user/init.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/init.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/init.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/ln.asm	/^static Header *freep;$/;"	l
static	obj/user/ln.asm	/^static Header base;$/;"	l
static	obj/user/ln.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/ln.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/ln.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/ls.asm	/^static Header *freep;$/;"	l
static	obj/user/ls.asm	/^static Header base;$/;"	l
static	obj/user/ls.asm	/^static inline void stosb(void *addr, int data, int cnt) {$/;"	l
static	obj/user/ls.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/ls.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/ls.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/mkdir.asm	/^static Header *freep;$/;"	l
static	obj/user/mkdir.asm	/^static Header base;$/;"	l
static	obj/user/mkdir.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/mkdir.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/mkdir.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/preemptiontest1.asm	/^static Header *freep;$/;"	l
static	obj/user/preemptiontest1.asm	/^static Header base;$/;"	l
static	obj/user/preemptiontest1.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/preemptiontest1.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/preemptiontest1.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/preemptiontest2.asm	/^static Header *freep;$/;"	l
static	obj/user/preemptiontest2.asm	/^static Header base;$/;"	l
static	obj/user/preemptiontest2.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/preemptiontest2.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/preemptiontest2.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/rm.asm	/^static Header *freep;$/;"	l
static	obj/user/rm.asm	/^static Header base;$/;"	l
static	obj/user/rm.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/rm.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/rm.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/sh.asm	/^static Header *freep;$/;"	l
static	obj/user/sh.asm	/^static Header base;$/;"	l
static	obj/user/sh.asm	/^static inline void stosb(void *addr, int data, int cnt) {$/;"	l
static	obj/user/sh.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/sh.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/sh.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/vatest.asm	/^static Header *freep;$/;"	l
static	obj/user/vatest.asm	/^static Header base;$/;"	l
static	obj/user/vatest.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/vatest.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/vatest.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static	obj/user/wc.asm	/^static Header *freep;$/;"	l
static	obj/user/wc.asm	/^static Header base;$/;"	l
static	obj/user/wc.asm	/^static inline void stosb(void *addr, int data, int cnt) {$/;"	l
static	obj/user/wc.asm	/^static int do_printf(const char *fmt, int fd, va_list va) {$/;"	l
static	obj/user/wc.asm	/^static void printchar(int fd, char c, int *print_cnt) {$/;"	l
static	obj/user/wc.asm	/^static void printint(int fd, long xx, int base, int sign, int *print_cnt) {$/;"	l
static_assert	kern/mkfs.c	17;"	d	file:
sti	kern/x86.h	/^static inline void sti(void) { __asm__ volatile("sti"); }$/;"	f
stosb	boot/x86.h	/^inline void stosb(void *addr, int data, int cnt) {$/;"	f
stosb	inc/x86.h	/^static inline void stosb(void *addr, int data, int cnt) {$/;"	f
strchr	lib/string.c	/^char *strchr(const char *s, int c) {$/;"	f
strlen	lib/string.c	/^size_t strlen(const char *s) {$/;"	f
strncmp	lib/string.c	/^int strncmp(const char *p, const char *q, size_t n) {$/;"	f
strncpy	lib/string.c	/^char *strncpy(char *s, const char *t, size_t n) {$/;"	f
struct	obj/kern/kernel.asm	/^  struct proc *curproc = myproc();$/;"	l
struct	obj/kern/kernel.asm	/^  struct proc *p = myproc();$/;"	l
struct	obj/kern/kernel.asm	/^  struct proc *p;$/;"	l
struct	obj/kern/kernel.asm	/^struct proc *myproc(void) {$/;"	l
sum	kern/mp.c	/^static uint8_t sum(uint8_t *addr, int len) {$/;"	f	file:
sum	obj/kern/kernel.asm	/^  sum = 0;$/;"	d
superblock	kern/fs.h	/^struct superblock {$/;"	s
switchkvm	kern/vm.c	/^void switchkvm(void) {$/;"	f
switchuvm	kern/vm.c	/^void switchuvm(struct proc *p) {$/;"	f
swtch	kern/swtch.S	/^swtch:$/;"	l
swtch	obj/kern/kernel.asm	/^swtch:$/;"	l
symbols	user/sh.c	/^char symbols[] = "<|>&;()";$/;"	v
sys_chdir	kern/sysfile.c	/^int sys_chdir(void) {$/;"	f
sys_close	kern/sysfile.c	/^int64_t sys_close(void) {$/;"	f
sys_dup	kern/sysfile.c	/^int sys_dup(void) {$/;"	f
sys_exec	kern/sysfile.c	/^int64_t sys_exec(void) {$/;"	f
sys_exit	kern/sysproc.c	/^int64_t sys_exit(void) {$/;"	f
sys_fork	kern/sysproc.c	/^int64_t sys_fork(void) { return fork(); }$/;"	f
sys_fstat	kern/sysfile.c	/^int sys_fstat(void) {$/;"	f
sys_getpid	kern/sysproc.c	/^int64_t sys_getpid(void) { return (int64_t)myproc()->pid; }$/;"	f
sys_kill	kern/sysproc.c	/^int64_t sys_kill(void) {$/;"	f
sys_link	kern/sysfile.c	/^int sys_link(void) {$/;"	f
sys_mkdir	kern/sysfile.c	/^int sys_mkdir(void) {$/;"	f
sys_mknod	kern/sysfile.c	/^int sys_mknod(void) {$/;"	f
sys_open	kern/sysfile.c	/^int64_t sys_open(void) {$/;"	f
sys_pipe	kern/sysfile.c	/^int sys_pipe(void) {$/;"	f
sys_read	kern/sysfile.c	/^int sys_read(void) {$/;"	f
sys_sbrk	kern/sysproc.c	/^int64_t sys_sbrk(void) {$/;"	f
sys_sleep	kern/sysproc.c	/^int64_t sys_sleep(void) {$/;"	f
sys_unlink	kern/sysfile.c	/^int sys_unlink(void) {$/;"	f
sys_wait	kern/sysproc.c	/^int64_t sys_wait(void) { return wait(); }$/;"	f
sys_write	kern/sysfile.c	/^int sys_write(void) {$/;"	f
syscall	kern/syscall.c	/^void syscall(void) {$/;"	f
syscalls	kern/syscall.c	/^static int64_t (*syscalls[])(void) = {$/;"	v	file:
sz	kern/proc.h	/^  size_t sz;                  \/\/ Size of process memory (bytes)$/;"	m	struct:proc
sz	obj/kern/kernel.asm	/^  sz = (size_t)ip->size;$/;"	d
sz	obj/kern/kernel.asm	/^  sz = 0;$/;"	d
sz	obj/kern/kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	obj/kern/kernel.asm	/^  sz = curproc->sz;$/;"	d
target	obj/kern/kernel.asm	/^  target = n;$/;"	d
taskstate	kern/mmu.h	/^struct taskstate {$/;"	s
tf	kern/proc.h	/^  trapframe_t *tf;            \/\/ Trap frame for current syscall$/;"	m	struct:proc
ticks	kern/trap.c	/^uint ticks;$/;"	v
ticks0	obj/kern/kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	kern/trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
togglecode	kern/kbd.h	/^static uchar togglecode[256] = {$/;"	v
tok	obj/user/sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
totalmem	obj/kern/kernel.asm	/^    totalmem = 16 * 1024 + ext16mem;$/;"	d
trap	kern/trap.c	/^void trap(struct trapframe *tf) {$/;"	f
trapframe	kern/x86.h	/^struct trapframe {$/;"	s
trapframe_t	kern/x86.h	/^typedef struct trapframe trapframe_t __attribute__((aligned(16)));$/;"	t	typeref:struct:trapframe
trapno	kern/x86.h	/^  uint64_t trapno;$/;"	m	struct:trapframe
trapret	kern/trapasm.S	/^trapret:$/;"	l
trapret	obj/kern/kernel.asm	/^trapret:$/;"	l
ts	kern/proc.h	/^  struct taskstate ts;       \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:cpu	typeref:struct:cpu::taskstate
tssdesc	kern/mmu.h	/^struct tssdesc {$/;"	s
tvinit	kern/trap.c	/^void tvinit(void) {$/;"	f
type	boot/elf.h	/^  uint16_t type;$/;"	m	struct:elfhdr
type	boot/elf.h	/^  uint32_t type;$/;"	m	struct:proghdr
type	inc/stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat
type	kern/elf.h	/^  uint16_t type;$/;"	m	struct:elfhdr
type	kern/elf.h	/^  uint32_t type;$/;"	m	struct:proghdr
type	kern/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	m	struct:file	typeref:enum:file::__anon8
type	kern/file.h	/^  short type; \/\/ copy of disk inode$/;"	m	struct:inode
type	kern/fs.h	/^  short type;              \/\/ File type$/;"	m	struct:dinode
type	kern/mmu.h	/^  uint type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:segdesc
type	kern/mmu.h	/^  uint32_t type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:tssdesc
type	kern/mmu.h	/^  uint32_t type : 4;       \/\/ type(STS_{IG32,TG32})$/;"	m	struct:gatedesc
type	kern/mp.h	/^  uint8_t type;      \/\/ MP system config type$/;"	m	struct:mp
type	kern/mp.h	/^  uint8_t type;      \/\/ entry type (0)$/;"	m	struct:mpproc
type	kern/mp.h	/^  uint8_t type;    \/\/ entry type (2)$/;"	m	struct:mpioapic
type	user/sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:redircmd	file:
typedef	obj/user/cat.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/echo.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/fstest.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/init.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/ln.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/ls.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/mkdir.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/preemptiontest1.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/preemptiontest2.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/rm.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/sh.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/vatest.asm	/^typedef union header Header;$/;"	l
typedef	obj/user/wc.asm	/^typedef union header Header;$/;"	l
uart	kern/uart.c	/^static int uart; \/\/ is there a uart?$/;"	v	file:
uart	obj/kern/kernel.asm	/^  uart = 1;$/;"	d
uartgetc	kern/uart.c	/^static int uartgetc(void) {$/;"	f	file:
uartinit	kern/uart.c	/^void uartinit(void) {$/;"	f
uartintr	kern/uart.c	/^void uartintr(void) { consoleintr(uartgetc); }$/;"	f
uartputc	kern/uart.c	/^void uartputc(int c) {$/;"	f
uchar	boot/types.h	/^typedef unsigned char uchar;$/;"	t
uchar	inc/types.h	/^typedef unsigned char uchar;$/;"	t
uint	boot/types.h	/^typedef unsigned int uint;$/;"	t
uint	inc/types.h	/^typedef unsigned int uint;$/;"	t
uint	obj/kern/kernel.asm	/^uint mc146818_read(uint reg) {$/;"	l
uint	obj/kern/kernel.asm	/^uint ticks;$/;"	l
uint16_t	boot/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	boot/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	boot/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	boot/types.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef unsigned long long uintptr_t;$/;"	t
uintptr_t	obj/kern/kernel.asm	/^uintptr_t phys_top;$/;"	l
ulong	inc/types.h	/^typedef unsigned long ulong;$/;"	t
use_lock	kern/kalloc.c	/^  int use_lock;$/;"	m	struct:__anon2	file:
userinit	kern/proc.c	/^void userinit(void) {$/;"	f
ushort	boot/types.h	/^typedef unsigned short ushort;$/;"	t
ushort	inc/types.h	/^typedef unsigned short ushort;$/;"	t
uva2ka	kern/vm.c	/^char *uva2ka(pte_t *pgdir, char *uva) {$/;"	f
v	obj/kern/kernel.asm	/^    v = myproc()->tf->r8;$/;"	d
v	obj/kern/kernel.asm	/^    v = myproc()->tf->rcx;$/;"	d
v	obj/kern/kernel.asm	/^    v = myproc()->tf->rdi;$/;"	d
v	obj/kern/kernel.asm	/^    v = myproc()->tf->rdx;$/;"	d
v	obj/kern/kernel.asm	/^    v = myproc()->tf->rsi;$/;"	d
va	obj/kern/kernel.asm	/^    va = va0 + PGSIZE;$/;"	d
va0	obj/kern/kernel.asm	/^    va0 = (uintptr_t)PGROUNDDOWN(va);$/;"	d
va_arg	inc/stdarg.h	8;"	d
va_end	inc/stdarg.h	7;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	6;"	d
vaddr	boot/elf.h	/^  uint64_t vaddr;$/;"	m	struct:proghdr
vaddr	kern/elf.h	/^  uint64_t vaddr;$/;"	m	struct:proghdr
val_c	obj/kern/kernel.asm	/^      val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/cat.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/echo.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/fstest.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/init.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/ln.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/ls.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/mkdir.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/preemptiontest1.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/preemptiontest2.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/rm.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/sh.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/vatest.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_c	obj/user/wc.asm	/^        val_c = (char)va_arg(va, int);$/;"	d
val_d	obj/kern/kernel.asm	/^      val_d = va_arg(va, int);$/;"	d
val_d	obj/user/cat.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/echo.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/fstest.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/init.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/ln.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/ls.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/mkdir.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/preemptiontest1.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/preemptiontest2.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/rm.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/sh.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/vatest.asm	/^        val_d = va_arg(va, int);$/;"	d
val_d	obj/user/wc.asm	/^        val_d = va_arg(va, int);$/;"	d
val_l	obj/kern/kernel.asm	/^      val_l = va_arg(va, long);$/;"	d
val_s	obj/kern/kernel.asm	/^        val_s = "(null)";$/;"	d
val_s	obj/kern/kernel.asm	/^      val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/cat.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/cat.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/echo.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/echo.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/fstest.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/fstest.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/init.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/init.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/ln.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/ln.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/ls.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/ls.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/mkdir.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/mkdir.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/preemptiontest1.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/preemptiontest1.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/preemptiontest2.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/preemptiontest2.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/rm.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/rm.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/sh.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/sh.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/vatest.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/vatest.asm	/^        val_s = va_arg(va, char *);$/;"	d
val_s	obj/user/wc.asm	/^          val_s = "(null)";$/;"	d
val_s	obj/user/wc.asm	/^        val_s = va_arg(va, char *);$/;"	d
valid	kern/file.h	/^  int valid;             \/\/ inode has been read from disk?$/;"	m	struct:inode
vector0	kern/vectors.S	/^vector0:$/;"	l
vector0	obj/kern/kernel.asm	/^vector0:$/;"	l
vector1	kern/vectors.S	/^vector1:$/;"	l
vector1	obj/kern/kernel.asm	/^vector1:$/;"	l
vector10	kern/vectors.S	/^vector10:$/;"	l
vector10	obj/kern/kernel.asm	/^vector10:$/;"	l
vector100	kern/vectors.S	/^vector100:$/;"	l
vector100	obj/kern/kernel.asm	/^vector100:$/;"	l
vector101	kern/vectors.S	/^vector101:$/;"	l
vector101	obj/kern/kernel.asm	/^vector101:$/;"	l
vector102	kern/vectors.S	/^vector102:$/;"	l
vector102	obj/kern/kernel.asm	/^vector102:$/;"	l
vector103	kern/vectors.S	/^vector103:$/;"	l
vector103	obj/kern/kernel.asm	/^vector103:$/;"	l
vector104	kern/vectors.S	/^vector104:$/;"	l
vector104	obj/kern/kernel.asm	/^vector104:$/;"	l
vector105	kern/vectors.S	/^vector105:$/;"	l
vector105	obj/kern/kernel.asm	/^vector105:$/;"	l
vector106	kern/vectors.S	/^vector106:$/;"	l
vector106	obj/kern/kernel.asm	/^vector106:$/;"	l
vector107	kern/vectors.S	/^vector107:$/;"	l
vector107	obj/kern/kernel.asm	/^vector107:$/;"	l
vector108	kern/vectors.S	/^vector108:$/;"	l
vector108	obj/kern/kernel.asm	/^vector108:$/;"	l
vector109	kern/vectors.S	/^vector109:$/;"	l
vector109	obj/kern/kernel.asm	/^vector109:$/;"	l
vector11	kern/vectors.S	/^vector11:$/;"	l
vector11	obj/kern/kernel.asm	/^vector11:$/;"	l
vector110	kern/vectors.S	/^vector110:$/;"	l
vector110	obj/kern/kernel.asm	/^vector110:$/;"	l
vector111	kern/vectors.S	/^vector111:$/;"	l
vector111	obj/kern/kernel.asm	/^vector111:$/;"	l
vector112	kern/vectors.S	/^vector112:$/;"	l
vector112	obj/kern/kernel.asm	/^vector112:$/;"	l
vector113	kern/vectors.S	/^vector113:$/;"	l
vector113	obj/kern/kernel.asm	/^vector113:$/;"	l
vector114	kern/vectors.S	/^vector114:$/;"	l
vector114	obj/kern/kernel.asm	/^vector114:$/;"	l
vector115	kern/vectors.S	/^vector115:$/;"	l
vector115	obj/kern/kernel.asm	/^vector115:$/;"	l
vector116	kern/vectors.S	/^vector116:$/;"	l
vector116	obj/kern/kernel.asm	/^vector116:$/;"	l
vector117	kern/vectors.S	/^vector117:$/;"	l
vector117	obj/kern/kernel.asm	/^vector117:$/;"	l
vector118	kern/vectors.S	/^vector118:$/;"	l
vector118	obj/kern/kernel.asm	/^vector118:$/;"	l
vector119	kern/vectors.S	/^vector119:$/;"	l
vector119	obj/kern/kernel.asm	/^vector119:$/;"	l
vector12	kern/vectors.S	/^vector12:$/;"	l
vector12	obj/kern/kernel.asm	/^vector12:$/;"	l
vector120	kern/vectors.S	/^vector120:$/;"	l
vector120	obj/kern/kernel.asm	/^vector120:$/;"	l
vector121	kern/vectors.S	/^vector121:$/;"	l
vector121	obj/kern/kernel.asm	/^vector121:$/;"	l
vector122	kern/vectors.S	/^vector122:$/;"	l
vector122	obj/kern/kernel.asm	/^vector122:$/;"	l
vector123	kern/vectors.S	/^vector123:$/;"	l
vector123	obj/kern/kernel.asm	/^vector123:$/;"	l
vector124	kern/vectors.S	/^vector124:$/;"	l
vector124	obj/kern/kernel.asm	/^vector124:$/;"	l
vector125	kern/vectors.S	/^vector125:$/;"	l
vector125	obj/kern/kernel.asm	/^vector125:$/;"	l
vector126	kern/vectors.S	/^vector126:$/;"	l
vector126	obj/kern/kernel.asm	/^vector126:$/;"	l
vector127	kern/vectors.S	/^vector127:$/;"	l
vector127	obj/kern/kernel.asm	/^vector127:$/;"	l
vector128	kern/vectors.S	/^vector128:$/;"	l
vector128	obj/kern/kernel.asm	/^vector128:$/;"	l
vector129	kern/vectors.S	/^vector129:$/;"	l
vector129	obj/kern/kernel.asm	/^vector129:$/;"	l
vector13	kern/vectors.S	/^vector13:$/;"	l
vector13	obj/kern/kernel.asm	/^vector13:$/;"	l
vector130	kern/vectors.S	/^vector130:$/;"	l
vector130	obj/kern/kernel.asm	/^vector130:$/;"	l
vector131	kern/vectors.S	/^vector131:$/;"	l
vector131	obj/kern/kernel.asm	/^vector131:$/;"	l
vector132	kern/vectors.S	/^vector132:$/;"	l
vector132	obj/kern/kernel.asm	/^vector132:$/;"	l
vector133	kern/vectors.S	/^vector133:$/;"	l
vector133	obj/kern/kernel.asm	/^vector133:$/;"	l
vector134	kern/vectors.S	/^vector134:$/;"	l
vector134	obj/kern/kernel.asm	/^vector134:$/;"	l
vector135	kern/vectors.S	/^vector135:$/;"	l
vector135	obj/kern/kernel.asm	/^vector135:$/;"	l
vector136	kern/vectors.S	/^vector136:$/;"	l
vector136	obj/kern/kernel.asm	/^vector136:$/;"	l
vector137	kern/vectors.S	/^vector137:$/;"	l
vector137	obj/kern/kernel.asm	/^vector137:$/;"	l
vector138	kern/vectors.S	/^vector138:$/;"	l
vector138	obj/kern/kernel.asm	/^vector138:$/;"	l
vector139	kern/vectors.S	/^vector139:$/;"	l
vector139	obj/kern/kernel.asm	/^vector139:$/;"	l
vector14	kern/vectors.S	/^vector14:$/;"	l
vector14	obj/kern/kernel.asm	/^vector14:$/;"	l
vector140	kern/vectors.S	/^vector140:$/;"	l
vector140	obj/kern/kernel.asm	/^vector140:$/;"	l
vector141	kern/vectors.S	/^vector141:$/;"	l
vector141	obj/kern/kernel.asm	/^vector141:$/;"	l
vector142	kern/vectors.S	/^vector142:$/;"	l
vector142	obj/kern/kernel.asm	/^vector142:$/;"	l
vector143	kern/vectors.S	/^vector143:$/;"	l
vector143	obj/kern/kernel.asm	/^vector143:$/;"	l
vector144	kern/vectors.S	/^vector144:$/;"	l
vector144	obj/kern/kernel.asm	/^vector144:$/;"	l
vector145	kern/vectors.S	/^vector145:$/;"	l
vector145	obj/kern/kernel.asm	/^vector145:$/;"	l
vector146	kern/vectors.S	/^vector146:$/;"	l
vector146	obj/kern/kernel.asm	/^vector146:$/;"	l
vector147	kern/vectors.S	/^vector147:$/;"	l
vector147	obj/kern/kernel.asm	/^vector147:$/;"	l
vector148	kern/vectors.S	/^vector148:$/;"	l
vector148	obj/kern/kernel.asm	/^vector148:$/;"	l
vector149	kern/vectors.S	/^vector149:$/;"	l
vector149	obj/kern/kernel.asm	/^vector149:$/;"	l
vector15	kern/vectors.S	/^vector15:$/;"	l
vector15	obj/kern/kernel.asm	/^vector15:$/;"	l
vector150	kern/vectors.S	/^vector150:$/;"	l
vector150	obj/kern/kernel.asm	/^vector150:$/;"	l
vector151	kern/vectors.S	/^vector151:$/;"	l
vector151	obj/kern/kernel.asm	/^vector151:$/;"	l
vector152	kern/vectors.S	/^vector152:$/;"	l
vector152	obj/kern/kernel.asm	/^vector152:$/;"	l
vector153	kern/vectors.S	/^vector153:$/;"	l
vector153	obj/kern/kernel.asm	/^vector153:$/;"	l
vector154	kern/vectors.S	/^vector154:$/;"	l
vector154	obj/kern/kernel.asm	/^vector154:$/;"	l
vector155	kern/vectors.S	/^vector155:$/;"	l
vector155	obj/kern/kernel.asm	/^vector155:$/;"	l
vector156	kern/vectors.S	/^vector156:$/;"	l
vector156	obj/kern/kernel.asm	/^vector156:$/;"	l
vector157	kern/vectors.S	/^vector157:$/;"	l
vector157	obj/kern/kernel.asm	/^vector157:$/;"	l
vector158	kern/vectors.S	/^vector158:$/;"	l
vector158	obj/kern/kernel.asm	/^vector158:$/;"	l
vector159	kern/vectors.S	/^vector159:$/;"	l
vector159	obj/kern/kernel.asm	/^vector159:$/;"	l
vector16	kern/vectors.S	/^vector16:$/;"	l
vector16	obj/kern/kernel.asm	/^vector16:$/;"	l
vector160	kern/vectors.S	/^vector160:$/;"	l
vector160	obj/kern/kernel.asm	/^vector160:$/;"	l
vector161	kern/vectors.S	/^vector161:$/;"	l
vector161	obj/kern/kernel.asm	/^vector161:$/;"	l
vector162	kern/vectors.S	/^vector162:$/;"	l
vector162	obj/kern/kernel.asm	/^vector162:$/;"	l
vector163	kern/vectors.S	/^vector163:$/;"	l
vector163	obj/kern/kernel.asm	/^vector163:$/;"	l
vector164	kern/vectors.S	/^vector164:$/;"	l
vector164	obj/kern/kernel.asm	/^vector164:$/;"	l
vector165	kern/vectors.S	/^vector165:$/;"	l
vector165	obj/kern/kernel.asm	/^vector165:$/;"	l
vector166	kern/vectors.S	/^vector166:$/;"	l
vector166	obj/kern/kernel.asm	/^vector166:$/;"	l
vector167	kern/vectors.S	/^vector167:$/;"	l
vector167	obj/kern/kernel.asm	/^vector167:$/;"	l
vector168	kern/vectors.S	/^vector168:$/;"	l
vector168	obj/kern/kernel.asm	/^vector168:$/;"	l
vector169	kern/vectors.S	/^vector169:$/;"	l
vector169	obj/kern/kernel.asm	/^vector169:$/;"	l
vector17	kern/vectors.S	/^vector17:$/;"	l
vector17	obj/kern/kernel.asm	/^vector17:$/;"	l
vector170	kern/vectors.S	/^vector170:$/;"	l
vector170	obj/kern/kernel.asm	/^vector170:$/;"	l
vector171	kern/vectors.S	/^vector171:$/;"	l
vector171	obj/kern/kernel.asm	/^vector171:$/;"	l
vector172	kern/vectors.S	/^vector172:$/;"	l
vector172	obj/kern/kernel.asm	/^vector172:$/;"	l
vector173	kern/vectors.S	/^vector173:$/;"	l
vector173	obj/kern/kernel.asm	/^vector173:$/;"	l
vector174	kern/vectors.S	/^vector174:$/;"	l
vector174	obj/kern/kernel.asm	/^vector174:$/;"	l
vector175	kern/vectors.S	/^vector175:$/;"	l
vector175	obj/kern/kernel.asm	/^vector175:$/;"	l
vector176	kern/vectors.S	/^vector176:$/;"	l
vector176	obj/kern/kernel.asm	/^vector176:$/;"	l
vector177	kern/vectors.S	/^vector177:$/;"	l
vector177	obj/kern/kernel.asm	/^vector177:$/;"	l
vector178	kern/vectors.S	/^vector178:$/;"	l
vector178	obj/kern/kernel.asm	/^vector178:$/;"	l
vector179	kern/vectors.S	/^vector179:$/;"	l
vector179	obj/kern/kernel.asm	/^vector179:$/;"	l
vector18	kern/vectors.S	/^vector18:$/;"	l
vector18	obj/kern/kernel.asm	/^vector18:$/;"	l
vector180	kern/vectors.S	/^vector180:$/;"	l
vector180	obj/kern/kernel.asm	/^vector180:$/;"	l
vector181	kern/vectors.S	/^vector181:$/;"	l
vector181	obj/kern/kernel.asm	/^vector181:$/;"	l
vector182	kern/vectors.S	/^vector182:$/;"	l
vector182	obj/kern/kernel.asm	/^vector182:$/;"	l
vector183	kern/vectors.S	/^vector183:$/;"	l
vector183	obj/kern/kernel.asm	/^vector183:$/;"	l
vector184	kern/vectors.S	/^vector184:$/;"	l
vector184	obj/kern/kernel.asm	/^vector184:$/;"	l
vector185	kern/vectors.S	/^vector185:$/;"	l
vector185	obj/kern/kernel.asm	/^vector185:$/;"	l
vector186	kern/vectors.S	/^vector186:$/;"	l
vector186	obj/kern/kernel.asm	/^vector186:$/;"	l
vector187	kern/vectors.S	/^vector187:$/;"	l
vector187	obj/kern/kernel.asm	/^vector187:$/;"	l
vector188	kern/vectors.S	/^vector188:$/;"	l
vector188	obj/kern/kernel.asm	/^vector188:$/;"	l
vector189	kern/vectors.S	/^vector189:$/;"	l
vector189	obj/kern/kernel.asm	/^vector189:$/;"	l
vector19	kern/vectors.S	/^vector19:$/;"	l
vector19	obj/kern/kernel.asm	/^vector19:$/;"	l
vector190	kern/vectors.S	/^vector190:$/;"	l
vector190	obj/kern/kernel.asm	/^vector190:$/;"	l
vector191	kern/vectors.S	/^vector191:$/;"	l
vector191	obj/kern/kernel.asm	/^vector191:$/;"	l
vector192	kern/vectors.S	/^vector192:$/;"	l
vector192	obj/kern/kernel.asm	/^vector192:$/;"	l
vector193	kern/vectors.S	/^vector193:$/;"	l
vector193	obj/kern/kernel.asm	/^vector193:$/;"	l
vector194	kern/vectors.S	/^vector194:$/;"	l
vector194	obj/kern/kernel.asm	/^vector194:$/;"	l
vector195	kern/vectors.S	/^vector195:$/;"	l
vector195	obj/kern/kernel.asm	/^vector195:$/;"	l
vector196	kern/vectors.S	/^vector196:$/;"	l
vector196	obj/kern/kernel.asm	/^vector196:$/;"	l
vector197	kern/vectors.S	/^vector197:$/;"	l
vector197	obj/kern/kernel.asm	/^vector197:$/;"	l
vector198	kern/vectors.S	/^vector198:$/;"	l
vector198	obj/kern/kernel.asm	/^vector198:$/;"	l
vector199	kern/vectors.S	/^vector199:$/;"	l
vector199	obj/kern/kernel.asm	/^vector199:$/;"	l
vector2	kern/vectors.S	/^vector2:$/;"	l
vector2	obj/kern/kernel.asm	/^vector2:$/;"	l
vector20	kern/vectors.S	/^vector20:$/;"	l
vector20	obj/kern/kernel.asm	/^vector20:$/;"	l
vector200	kern/vectors.S	/^vector200:$/;"	l
vector200	obj/kern/kernel.asm	/^vector200:$/;"	l
vector201	kern/vectors.S	/^vector201:$/;"	l
vector201	obj/kern/kernel.asm	/^vector201:$/;"	l
vector202	kern/vectors.S	/^vector202:$/;"	l
vector202	obj/kern/kernel.asm	/^vector202:$/;"	l
vector203	kern/vectors.S	/^vector203:$/;"	l
vector203	obj/kern/kernel.asm	/^vector203:$/;"	l
vector204	kern/vectors.S	/^vector204:$/;"	l
vector204	obj/kern/kernel.asm	/^vector204:$/;"	l
vector205	kern/vectors.S	/^vector205:$/;"	l
vector205	obj/kern/kernel.asm	/^vector205:$/;"	l
vector206	kern/vectors.S	/^vector206:$/;"	l
vector206	obj/kern/kernel.asm	/^vector206:$/;"	l
vector207	kern/vectors.S	/^vector207:$/;"	l
vector207	obj/kern/kernel.asm	/^vector207:$/;"	l
vector208	kern/vectors.S	/^vector208:$/;"	l
vector208	obj/kern/kernel.asm	/^vector208:$/;"	l
vector209	kern/vectors.S	/^vector209:$/;"	l
vector209	obj/kern/kernel.asm	/^vector209:$/;"	l
vector21	kern/vectors.S	/^vector21:$/;"	l
vector21	obj/kern/kernel.asm	/^vector21:$/;"	l
vector210	kern/vectors.S	/^vector210:$/;"	l
vector210	obj/kern/kernel.asm	/^vector210:$/;"	l
vector211	kern/vectors.S	/^vector211:$/;"	l
vector211	obj/kern/kernel.asm	/^vector211:$/;"	l
vector212	kern/vectors.S	/^vector212:$/;"	l
vector212	obj/kern/kernel.asm	/^vector212:$/;"	l
vector213	kern/vectors.S	/^vector213:$/;"	l
vector213	obj/kern/kernel.asm	/^vector213:$/;"	l
vector214	kern/vectors.S	/^vector214:$/;"	l
vector214	obj/kern/kernel.asm	/^vector214:$/;"	l
vector215	kern/vectors.S	/^vector215:$/;"	l
vector215	obj/kern/kernel.asm	/^vector215:$/;"	l
vector216	kern/vectors.S	/^vector216:$/;"	l
vector216	obj/kern/kernel.asm	/^vector216:$/;"	l
vector217	kern/vectors.S	/^vector217:$/;"	l
vector217	obj/kern/kernel.asm	/^vector217:$/;"	l
vector218	kern/vectors.S	/^vector218:$/;"	l
vector218	obj/kern/kernel.asm	/^vector218:$/;"	l
vector219	kern/vectors.S	/^vector219:$/;"	l
vector219	obj/kern/kernel.asm	/^vector219:$/;"	l
vector22	kern/vectors.S	/^vector22:$/;"	l
vector22	obj/kern/kernel.asm	/^vector22:$/;"	l
vector220	kern/vectors.S	/^vector220:$/;"	l
vector220	obj/kern/kernel.asm	/^vector220:$/;"	l
vector221	kern/vectors.S	/^vector221:$/;"	l
vector221	obj/kern/kernel.asm	/^vector221:$/;"	l
vector222	kern/vectors.S	/^vector222:$/;"	l
vector222	obj/kern/kernel.asm	/^vector222:$/;"	l
vector223	kern/vectors.S	/^vector223:$/;"	l
vector223	obj/kern/kernel.asm	/^vector223:$/;"	l
vector224	kern/vectors.S	/^vector224:$/;"	l
vector224	obj/kern/kernel.asm	/^vector224:$/;"	l
vector225	kern/vectors.S	/^vector225:$/;"	l
vector225	obj/kern/kernel.asm	/^vector225:$/;"	l
vector226	kern/vectors.S	/^vector226:$/;"	l
vector226	obj/kern/kernel.asm	/^vector226:$/;"	l
vector227	kern/vectors.S	/^vector227:$/;"	l
vector227	obj/kern/kernel.asm	/^vector227:$/;"	l
vector228	kern/vectors.S	/^vector228:$/;"	l
vector228	obj/kern/kernel.asm	/^vector228:$/;"	l
vector229	kern/vectors.S	/^vector229:$/;"	l
vector229	obj/kern/kernel.asm	/^vector229:$/;"	l
vector23	kern/vectors.S	/^vector23:$/;"	l
vector23	obj/kern/kernel.asm	/^vector23:$/;"	l
vector230	kern/vectors.S	/^vector230:$/;"	l
vector230	obj/kern/kernel.asm	/^vector230:$/;"	l
vector231	kern/vectors.S	/^vector231:$/;"	l
vector231	obj/kern/kernel.asm	/^vector231:$/;"	l
vector232	kern/vectors.S	/^vector232:$/;"	l
vector232	obj/kern/kernel.asm	/^vector232:$/;"	l
vector233	kern/vectors.S	/^vector233:$/;"	l
vector233	obj/kern/kernel.asm	/^vector233:$/;"	l
vector234	kern/vectors.S	/^vector234:$/;"	l
vector234	obj/kern/kernel.asm	/^vector234:$/;"	l
vector235	kern/vectors.S	/^vector235:$/;"	l
vector235	obj/kern/kernel.asm	/^vector235:$/;"	l
vector236	kern/vectors.S	/^vector236:$/;"	l
vector236	obj/kern/kernel.asm	/^vector236:$/;"	l
vector237	kern/vectors.S	/^vector237:$/;"	l
vector237	obj/kern/kernel.asm	/^vector237:$/;"	l
vector238	kern/vectors.S	/^vector238:$/;"	l
vector238	obj/kern/kernel.asm	/^vector238:$/;"	l
vector239	kern/vectors.S	/^vector239:$/;"	l
vector239	obj/kern/kernel.asm	/^vector239:$/;"	l
vector24	kern/vectors.S	/^vector24:$/;"	l
vector24	obj/kern/kernel.asm	/^vector24:$/;"	l
vector240	kern/vectors.S	/^vector240:$/;"	l
vector240	obj/kern/kernel.asm	/^vector240:$/;"	l
vector241	kern/vectors.S	/^vector241:$/;"	l
vector241	obj/kern/kernel.asm	/^vector241:$/;"	l
vector242	kern/vectors.S	/^vector242:$/;"	l
vector242	obj/kern/kernel.asm	/^vector242:$/;"	l
vector243	kern/vectors.S	/^vector243:$/;"	l
vector243	obj/kern/kernel.asm	/^vector243:$/;"	l
vector244	kern/vectors.S	/^vector244:$/;"	l
vector244	obj/kern/kernel.asm	/^vector244:$/;"	l
vector245	kern/vectors.S	/^vector245:$/;"	l
vector245	obj/kern/kernel.asm	/^vector245:$/;"	l
vector246	kern/vectors.S	/^vector246:$/;"	l
vector246	obj/kern/kernel.asm	/^vector246:$/;"	l
vector247	kern/vectors.S	/^vector247:$/;"	l
vector247	obj/kern/kernel.asm	/^vector247:$/;"	l
vector248	kern/vectors.S	/^vector248:$/;"	l
vector248	obj/kern/kernel.asm	/^vector248:$/;"	l
vector249	kern/vectors.S	/^vector249:$/;"	l
vector249	obj/kern/kernel.asm	/^vector249:$/;"	l
vector25	kern/vectors.S	/^vector25:$/;"	l
vector25	obj/kern/kernel.asm	/^vector25:$/;"	l
vector250	kern/vectors.S	/^vector250:$/;"	l
vector250	obj/kern/kernel.asm	/^vector250:$/;"	l
vector251	kern/vectors.S	/^vector251:$/;"	l
vector251	obj/kern/kernel.asm	/^vector251:$/;"	l
vector252	kern/vectors.S	/^vector252:$/;"	l
vector252	obj/kern/kernel.asm	/^vector252:$/;"	l
vector253	kern/vectors.S	/^vector253:$/;"	l
vector253	obj/kern/kernel.asm	/^vector253:$/;"	l
vector254	kern/vectors.S	/^vector254:$/;"	l
vector254	obj/kern/kernel.asm	/^vector254:$/;"	l
vector255	kern/vectors.S	/^vector255:$/;"	l
vector255	obj/kern/kernel.asm	/^vector255:$/;"	l
vector26	kern/vectors.S	/^vector26:$/;"	l
vector26	obj/kern/kernel.asm	/^vector26:$/;"	l
vector27	kern/vectors.S	/^vector27:$/;"	l
vector27	obj/kern/kernel.asm	/^vector27:$/;"	l
vector28	kern/vectors.S	/^vector28:$/;"	l
vector28	obj/kern/kernel.asm	/^vector28:$/;"	l
vector29	kern/vectors.S	/^vector29:$/;"	l
vector29	obj/kern/kernel.asm	/^vector29:$/;"	l
vector3	kern/vectors.S	/^vector3:$/;"	l
vector3	obj/kern/kernel.asm	/^vector3:$/;"	l
vector30	kern/vectors.S	/^vector30:$/;"	l
vector30	obj/kern/kernel.asm	/^vector30:$/;"	l
vector31	kern/vectors.S	/^vector31:$/;"	l
vector31	obj/kern/kernel.asm	/^vector31:$/;"	l
vector32	kern/vectors.S	/^vector32:$/;"	l
vector32	obj/kern/kernel.asm	/^vector32:$/;"	l
vector33	kern/vectors.S	/^vector33:$/;"	l
vector33	obj/kern/kernel.asm	/^vector33:$/;"	l
vector34	kern/vectors.S	/^vector34:$/;"	l
vector34	obj/kern/kernel.asm	/^vector34:$/;"	l
vector35	kern/vectors.S	/^vector35:$/;"	l
vector35	obj/kern/kernel.asm	/^vector35:$/;"	l
vector36	kern/vectors.S	/^vector36:$/;"	l
vector36	obj/kern/kernel.asm	/^vector36:$/;"	l
vector37	kern/vectors.S	/^vector37:$/;"	l
vector37	obj/kern/kernel.asm	/^vector37:$/;"	l
vector38	kern/vectors.S	/^vector38:$/;"	l
vector38	obj/kern/kernel.asm	/^vector38:$/;"	l
vector39	kern/vectors.S	/^vector39:$/;"	l
vector39	obj/kern/kernel.asm	/^vector39:$/;"	l
vector4	kern/vectors.S	/^vector4:$/;"	l
vector4	obj/kern/kernel.asm	/^vector4:$/;"	l
vector40	kern/vectors.S	/^vector40:$/;"	l
vector40	obj/kern/kernel.asm	/^vector40:$/;"	l
vector41	kern/vectors.S	/^vector41:$/;"	l
vector41	obj/kern/kernel.asm	/^vector41:$/;"	l
vector42	kern/vectors.S	/^vector42:$/;"	l
vector42	obj/kern/kernel.asm	/^vector42:$/;"	l
vector43	kern/vectors.S	/^vector43:$/;"	l
vector43	obj/kern/kernel.asm	/^vector43:$/;"	l
vector44	kern/vectors.S	/^vector44:$/;"	l
vector44	obj/kern/kernel.asm	/^vector44:$/;"	l
vector45	kern/vectors.S	/^vector45:$/;"	l
vector45	obj/kern/kernel.asm	/^vector45:$/;"	l
vector46	kern/vectors.S	/^vector46:$/;"	l
vector46	obj/kern/kernel.asm	/^vector46:$/;"	l
vector47	kern/vectors.S	/^vector47:$/;"	l
vector47	obj/kern/kernel.asm	/^vector47:$/;"	l
vector48	kern/vectors.S	/^vector48:$/;"	l
vector48	obj/kern/kernel.asm	/^vector48:$/;"	l
vector49	kern/vectors.S	/^vector49:$/;"	l
vector49	obj/kern/kernel.asm	/^vector49:$/;"	l
vector5	kern/vectors.S	/^vector5:$/;"	l
vector5	obj/kern/kernel.asm	/^vector5:$/;"	l
vector50	kern/vectors.S	/^vector50:$/;"	l
vector50	obj/kern/kernel.asm	/^vector50:$/;"	l
vector51	kern/vectors.S	/^vector51:$/;"	l
vector51	obj/kern/kernel.asm	/^vector51:$/;"	l
vector52	kern/vectors.S	/^vector52:$/;"	l
vector52	obj/kern/kernel.asm	/^vector52:$/;"	l
vector53	kern/vectors.S	/^vector53:$/;"	l
vector53	obj/kern/kernel.asm	/^vector53:$/;"	l
vector54	kern/vectors.S	/^vector54:$/;"	l
vector54	obj/kern/kernel.asm	/^vector54:$/;"	l
vector55	kern/vectors.S	/^vector55:$/;"	l
vector55	obj/kern/kernel.asm	/^vector55:$/;"	l
vector56	kern/vectors.S	/^vector56:$/;"	l
vector56	obj/kern/kernel.asm	/^vector56:$/;"	l
vector57	kern/vectors.S	/^vector57:$/;"	l
vector57	obj/kern/kernel.asm	/^vector57:$/;"	l
vector58	kern/vectors.S	/^vector58:$/;"	l
vector58	obj/kern/kernel.asm	/^vector58:$/;"	l
vector59	kern/vectors.S	/^vector59:$/;"	l
vector59	obj/kern/kernel.asm	/^vector59:$/;"	l
vector6	kern/vectors.S	/^vector6:$/;"	l
vector6	obj/kern/kernel.asm	/^vector6:$/;"	l
vector60	kern/vectors.S	/^vector60:$/;"	l
vector60	obj/kern/kernel.asm	/^vector60:$/;"	l
vector61	kern/vectors.S	/^vector61:$/;"	l
vector61	obj/kern/kernel.asm	/^vector61:$/;"	l
vector62	kern/vectors.S	/^vector62:$/;"	l
vector62	obj/kern/kernel.asm	/^vector62:$/;"	l
vector63	kern/vectors.S	/^vector63:$/;"	l
vector63	obj/kern/kernel.asm	/^vector63:$/;"	l
vector64	kern/vectors.S	/^vector64:$/;"	l
vector64	obj/kern/kernel.asm	/^vector64:$/;"	l
vector65	kern/vectors.S	/^vector65:$/;"	l
vector65	obj/kern/kernel.asm	/^vector65:$/;"	l
vector66	kern/vectors.S	/^vector66:$/;"	l
vector66	obj/kern/kernel.asm	/^vector66:$/;"	l
vector67	kern/vectors.S	/^vector67:$/;"	l
vector67	obj/kern/kernel.asm	/^vector67:$/;"	l
vector68	kern/vectors.S	/^vector68:$/;"	l
vector68	obj/kern/kernel.asm	/^vector68:$/;"	l
vector69	kern/vectors.S	/^vector69:$/;"	l
vector69	obj/kern/kernel.asm	/^vector69:$/;"	l
vector7	kern/vectors.S	/^vector7:$/;"	l
vector7	obj/kern/kernel.asm	/^vector7:$/;"	l
vector70	kern/vectors.S	/^vector70:$/;"	l
vector70	obj/kern/kernel.asm	/^vector70:$/;"	l
vector71	kern/vectors.S	/^vector71:$/;"	l
vector71	obj/kern/kernel.asm	/^vector71:$/;"	l
vector72	kern/vectors.S	/^vector72:$/;"	l
vector72	obj/kern/kernel.asm	/^vector72:$/;"	l
vector73	kern/vectors.S	/^vector73:$/;"	l
vector73	obj/kern/kernel.asm	/^vector73:$/;"	l
vector74	kern/vectors.S	/^vector74:$/;"	l
vector74	obj/kern/kernel.asm	/^vector74:$/;"	l
vector75	kern/vectors.S	/^vector75:$/;"	l
vector75	obj/kern/kernel.asm	/^vector75:$/;"	l
vector76	kern/vectors.S	/^vector76:$/;"	l
vector76	obj/kern/kernel.asm	/^vector76:$/;"	l
vector77	kern/vectors.S	/^vector77:$/;"	l
vector77	obj/kern/kernel.asm	/^vector77:$/;"	l
vector78	kern/vectors.S	/^vector78:$/;"	l
vector78	obj/kern/kernel.asm	/^vector78:$/;"	l
vector79	kern/vectors.S	/^vector79:$/;"	l
vector79	obj/kern/kernel.asm	/^vector79:$/;"	l
vector8	kern/vectors.S	/^vector8:$/;"	l
vector8	obj/kern/kernel.asm	/^vector8:$/;"	l
vector80	kern/vectors.S	/^vector80:$/;"	l
vector80	obj/kern/kernel.asm	/^vector80:$/;"	l
vector81	kern/vectors.S	/^vector81:$/;"	l
vector81	obj/kern/kernel.asm	/^vector81:$/;"	l
vector82	kern/vectors.S	/^vector82:$/;"	l
vector82	obj/kern/kernel.asm	/^vector82:$/;"	l
vector83	kern/vectors.S	/^vector83:$/;"	l
vector83	obj/kern/kernel.asm	/^vector83:$/;"	l
vector84	kern/vectors.S	/^vector84:$/;"	l
vector84	obj/kern/kernel.asm	/^vector84:$/;"	l
vector85	kern/vectors.S	/^vector85:$/;"	l
vector85	obj/kern/kernel.asm	/^vector85:$/;"	l
vector86	kern/vectors.S	/^vector86:$/;"	l
vector86	obj/kern/kernel.asm	/^vector86:$/;"	l
vector87	kern/vectors.S	/^vector87:$/;"	l
vector87	obj/kern/kernel.asm	/^vector87:$/;"	l
vector88	kern/vectors.S	/^vector88:$/;"	l
vector88	obj/kern/kernel.asm	/^vector88:$/;"	l
vector89	kern/vectors.S	/^vector89:$/;"	l
vector89	obj/kern/kernel.asm	/^vector89:$/;"	l
vector9	kern/vectors.S	/^vector9:$/;"	l
vector9	obj/kern/kernel.asm	/^vector9:$/;"	l
vector90	kern/vectors.S	/^vector90:$/;"	l
vector90	obj/kern/kernel.asm	/^vector90:$/;"	l
vector91	kern/vectors.S	/^vector91:$/;"	l
vector91	obj/kern/kernel.asm	/^vector91:$/;"	l
vector92	kern/vectors.S	/^vector92:$/;"	l
vector92	obj/kern/kernel.asm	/^vector92:$/;"	l
vector93	kern/vectors.S	/^vector93:$/;"	l
vector93	obj/kern/kernel.asm	/^vector93:$/;"	l
vector94	kern/vectors.S	/^vector94:$/;"	l
vector94	obj/kern/kernel.asm	/^vector94:$/;"	l
vector95	kern/vectors.S	/^vector95:$/;"	l
vector95	obj/kern/kernel.asm	/^vector95:$/;"	l
vector96	kern/vectors.S	/^vector96:$/;"	l
vector96	obj/kern/kernel.asm	/^vector96:$/;"	l
vector97	kern/vectors.S	/^vector97:$/;"	l
vector97	obj/kern/kernel.asm	/^vector97:$/;"	l
vector98	kern/vectors.S	/^vector98:$/;"	l
vector98	obj/kern/kernel.asm	/^vector98:$/;"	l
vector99	kern/vectors.S	/^vector99:$/;"	l
vector99	obj/kern/kernel.asm	/^vector99:$/;"	l
vectors	kern/vectors.S	/^vectors:$/;"	l
version	boot/elf.h	/^  uint32_t version;$/;"	m	struct:elfhdr
version	kern/elf.h	/^  uint32_t version;$/;"	m	struct:elfhdr
version	kern/mp.h	/^  uint8_t version;     \/\/ [14]$/;"	m	struct:mpconf
version	kern/mp.h	/^  uint8_t version;   \/\/ local APIC verison$/;"	m	struct:mpproc
version	kern/mp.h	/^  uint8_t version; \/\/ I\/O APIC version$/;"	m	struct:mpioapic
virt	kern/vm.c	/^  void *virt;$/;"	m	struct:kmap	file:
void	obj/boot/bootblock.asm	/^void readsect(void *dst, uint offset) {$/;"	l
void	obj/boot/bootblock.asm	/^void readseg(uchar *pa, uint count, uint offset) {$/;"	l
void	obj/boot/bootblock.asm	/^void stage_2(void) {$/;"	l
void	obj/boot/bootblock.asm	/^void waitdisk(void) {$/;"	l
void	obj/kern/kernel.asm	/^void *memmove(void *dst, const void *src, size_t n) {$/;"	l
void	obj/kern/kernel.asm	/^void *memset(void *dst, int c, size_t n) {$/;"	l
void	obj/kern/kernel.asm	/^void acquire(struct spinlock *lk) {$/;"	l
void	obj/kern/kernel.asm	/^void acquiresleep(struct sleeplock *lk) {$/;"	l
void	obj/kern/kernel.asm	/^void begin_op(void) {$/;"	l
void	obj/kern/kernel.asm	/^void binit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void brelse(struct buf *b) {$/;"	l
void	obj/kern/kernel.asm	/^void bwrite(struct buf *b) {$/;"	l
void	obj/kern/kernel.asm	/^void clearpteu(pte_t *pgdir, char *uva) {$/;"	l
void	obj/kern/kernel.asm	/^void consoleinit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void consoleintr(int (*getc)(void)) {$/;"	l
void	obj/kern/kernel.asm	/^void consputc(int c) {$/;"	l
void	obj/kern/kernel.asm	/^void cprintf(char *fmt, ...) {$/;"	l
void	obj/kern/kernel.asm	/^void do_freevm(pte_t *table, int level) {$/;"	l
void	obj/kern/kernel.asm	/^void end_op(void) {$/;"	l
void	obj/kern/kernel.asm	/^void exit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void fileclose(struct file *f) {$/;"	l
void	obj/kern/kernel.asm	/^void fileinit(void) { initlock(&ftable.lock, "ftable"); }$/;"	l
void	obj/kern/kernel.asm	/^void forkret(void) {$/;"	l
void	obj/kern/kernel.asm	/^void freerange(void *vstart, void *vend) {$/;"	l
void	obj/kern/kernel.asm	/^void freevm(pte_t *pgdir, uintptr_t utop) {$/;"	l
void	obj/kern/kernel.asm	/^void ideinit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void ideintr(void) {$/;"	l
void	obj/kern/kernel.asm	/^void iderw(struct buf *b) {$/;"	l
void	obj/kern/kernel.asm	/^void idestart(struct buf *b) {$/;"	l
void	obj/kern/kernel.asm	/^void idtinit(void) { lidt(idt, sizeof(idt)); }$/;"	l
void	obj/kern/kernel.asm	/^void iinit(int dev) {$/;"	l
void	obj/kern/kernel.asm	/^void ilock(struct inode *ip) {$/;"	l
void	obj/kern/kernel.asm	/^void init_kmap(void) {$/;"	l
void	obj/kern/kernel.asm	/^void initlock(struct spinlock *lk, char *name) {$/;"	l
void	obj/kern/kernel.asm	/^void initlog(int dev) {$/;"	l
void	obj/kern/kernel.asm	/^void initsleeplock(struct sleeplock *lk, char *name) {$/;"	l
void	obj/kern/kernel.asm	/^void inituvm(pte_t *pgdir, char *init, size_t sz) {$/;"	l
void	obj/kern/kernel.asm	/^void ioapicenable(int irq, int cpunum) {$/;"	l
void	obj/kern/kernel.asm	/^void ioapicinit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void iput(struct inode *ip) {$/;"	l
void	obj/kern/kernel.asm	/^void iunlock(struct inode *ip) {$/;"	l
void	obj/kern/kernel.asm	/^void iunlockput(struct inode *ip) {$/;"	l
void	obj/kern/kernel.asm	/^void iupdate(struct inode *ip) {$/;"	l
void	obj/kern/kernel.asm	/^void kbdintr(void) { consoleintr(kbdgetc); }$/;"	l
void	obj/kern/kernel.asm	/^void kfree(char *v) {$/;"	l
void	obj/kern/kernel.asm	/^void kinit1(void *vstart) {$/;"	l
void	obj/kern/kernel.asm	/^void kinit2() {$/;"	l
void	obj/kern/kernel.asm	/^void kvmalloc(void) {$/;"	l
void	obj/kern/kernel.asm	/^void lapiceoi(void) {$/;"	l
void	obj/kern/kernel.asm	/^void lapicinit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void log_write(struct buf *b) {$/;"	l
void	obj/kern/kernel.asm	/^void mc146818_write(uint reg, uint datum) {$/;"	l
void	obj/kern/kernel.asm	/^void microdelay(int us) {$/;"	l
void	obj/kern/kernel.asm	/^void mpinit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void panic(char *s) {$/;"	l
void	obj/kern/kernel.asm	/^void picinit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void pipeclose(struct pipe *p, int writable) {$/;"	l
void	obj/kern/kernel.asm	/^void popcli(void) {$/;"	l
void	obj/kern/kernel.asm	/^void procdump(void) {$/;"	l
void	obj/kern/kernel.asm	/^void pushcli(void) {$/;"	l
void	obj/kern/kernel.asm	/^void readsb(int dev, struct superblock *sb) {$/;"	l
void	obj/kern/kernel.asm	/^void release(struct spinlock *lk) {$/;"	l
void	obj/kern/kernel.asm	/^void releasesleep(struct sleeplock *lk) {$/;"	l
void	obj/kern/kernel.asm	/^void sched(void) {$/;"	l
void	obj/kern/kernel.asm	/^void scheduler(void) {$/;"	l
void	obj/kern/kernel.asm	/^void seginit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void sleep(void *chan, struct spinlock *lk) {$/;"	l
void	obj/kern/kernel.asm	/^void stati(struct inode *ip, struct stat *st) {$/;"	l
void	obj/kern/kernel.asm	/^void switchkvm(void) {$/;"	l
void	obj/kern/kernel.asm	/^void switchuvm(struct proc *p) {$/;"	l
void	obj/kern/kernel.asm	/^void syscall(void) {$/;"	l
void	obj/kern/kernel.asm	/^void trap(struct trapframe *tf) {$/;"	l
void	obj/kern/kernel.asm	/^void tvinit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void uartinit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void uartintr(void) { consoleintr(uartgetc); }$/;"	l
void	obj/kern/kernel.asm	/^void uartputc(int c) {$/;"	l
void	obj/kern/kernel.asm	/^void userinit(void) {$/;"	l
void	obj/kern/kernel.asm	/^void wakeup(void *chan) {$/;"	l
void	obj/kern/kernel.asm	/^void yield(void) {$/;"	l
void	obj/user/cat.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/cat.asm	/^void cat(int fd) {$/;"	l
void	obj/user/cat.asm	/^void free(void *ap) {$/;"	l
void	obj/user/echo.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/echo.asm	/^void echo(int n, char *msgs[]) {$/;"	l
void	obj/user/echo.asm	/^void free(void *ap) {$/;"	l
void	obj/user/fstest.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/fstest.asm	/^void *memmove(void *dst, const void *src, size_t n) {$/;"	l
void	obj/user/fstest.asm	/^void *memset(void *dst, int c, size_t n) {$/;"	l
void	obj/user/fstest.asm	/^void free(void *ap) {$/;"	l
void	obj/user/init.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/init.asm	/^void free(void *ap) {$/;"	l
void	obj/user/ln.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/ln.asm	/^void free(void *ap) {$/;"	l
void	obj/user/ls.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/ls.asm	/^void *memmove(void *dst, const void *src, size_t n) {$/;"	l
void	obj/user/ls.asm	/^void *memset(void *dst, int c, size_t n) {$/;"	l
void	obj/user/ls.asm	/^void free(void *ap) {$/;"	l
void	obj/user/ls.asm	/^void ls(char *path) {$/;"	l
void	obj/user/mkdir.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/mkdir.asm	/^void free(void *ap) {$/;"	l
void	obj/user/preemptiontest1.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/preemptiontest1.asm	/^void free(void *ap) {$/;"	l
void	obj/user/preemptiontest2.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/preemptiontest2.asm	/^void free(void *ap) {$/;"	l
void	obj/user/rm.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/rm.asm	/^void free(void *ap) {$/;"	l
void	obj/user/sh.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/sh.asm	/^void *memmove(void *dst, const void *src, size_t n) {$/;"	l
void	obj/user/sh.asm	/^void *memset(void *dst, int c, size_t n) {$/;"	l
void	obj/user/sh.asm	/^void free(void *ap) {$/;"	l
void	obj/user/sh.asm	/^void panic(char *s) {$/;"	l
void	obj/user/sh.asm	/^void runcmd(struct cmd *cmd) {$/;"	l
void	obj/user/vatest.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/vatest.asm	/^void f(char *fmt, ...) {$/;"	l
void	obj/user/vatest.asm	/^void free(void *ap) {$/;"	l
void	obj/user/wc.asm	/^void *malloc(size_t nbytes) {$/;"	l
void	obj/user/wc.asm	/^void *memmove(void *dst, const void *src, size_t n) {$/;"	l
void	obj/user/wc.asm	/^void *memset(void *dst, int c, size_t n) {$/;"	l
void	obj/user/wc.asm	/^void free(void *ap) {$/;"	l
void	obj/user/wc.asm	/^void wc(int fd, char *name) {$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic; \/\/ Initialized in mp.c$/;"	l
w	kern/console.c	/^  uint w; \/\/ Write index$/;"	m	struct:__anon5	file:
wait	kern/proc.c	/^pid_t wait(void) {$/;"	f
waitdisk	boot/stage_2.c	/^void waitdisk(void) {$/;"	f
wakeup	kern/proc.c	/^void wakeup(void *chan) {$/;"	f
wakeup1	kern/proc.c	/^static void wakeup1(void *chan) {$/;"	f	file:
walkpgdir	kern/vm.c	/^walkpgdir(pte_t *pgdir, const void *va, int alloc) {$/;"	f	file:
wc	user/wc.c	/^void wc(int fd, char *name) {$/;"	f
whitespace	user/sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
winode	kern/mkfs.c	/^void winode(uint inum, struct dinode *ip) {$/;"	f
writable	kern/file.h	/^  char writable;$/;"	m	struct:file
write	kern/file.h	/^  int (*write)(struct inode *, char *, int);$/;"	m	struct:devsw
write_head	kern/log.c	/^static void write_head(void) {$/;"	f	file:
write_log	kern/log.c	/^static void write_log(void) {$/;"	f	file:
writei	kern/fs.c	/^int writei(struct inode *ip, char *src, uint off, uint n) {$/;"	f
writeopen	kern/pipe.c	/^  int writeopen; \/\/ write fd is still open$/;"	m	struct:pipe	file:
wsect	kern/mkfs.c	/^void wsect(uint sec, void *buf) {$/;"	f
x	obj/kern/kernel.asm	/^    x = -xx;$/;"	d
x	obj/kern/kernel.asm	/^    x = xx;$/;"	d
x	obj/user/cat.asm	/^    x = -xx;$/;"	d
x	obj/user/cat.asm	/^    x = xx;$/;"	d
x	obj/user/echo.asm	/^    x = -xx;$/;"	d
x	obj/user/echo.asm	/^    x = xx;$/;"	d
x	obj/user/fstest.asm	/^    x = -xx;$/;"	d
x	obj/user/fstest.asm	/^    x = xx;$/;"	d
x	obj/user/init.asm	/^    x = -xx;$/;"	d
x	obj/user/init.asm	/^    x = xx;$/;"	d
x	obj/user/ln.asm	/^    x = -xx;$/;"	d
x	obj/user/ln.asm	/^    x = xx;$/;"	d
x	obj/user/ls.asm	/^    x = -xx;$/;"	d
x	obj/user/ls.asm	/^    x = xx;$/;"	d
x	obj/user/mkdir.asm	/^    x = -xx;$/;"	d
x	obj/user/mkdir.asm	/^    x = xx;$/;"	d
x	obj/user/preemptiontest1.asm	/^    x = -xx;$/;"	d
x	obj/user/preemptiontest1.asm	/^    x = xx;$/;"	d
x	obj/user/preemptiontest2.asm	/^    x = -xx;$/;"	d
x	obj/user/preemptiontest2.asm	/^    x = xx;$/;"	d
x	obj/user/rm.asm	/^    x = -xx;$/;"	d
x	obj/user/rm.asm	/^    x = xx;$/;"	d
x	obj/user/sh.asm	/^    x = -xx;$/;"	d
x	obj/user/sh.asm	/^    x = xx;$/;"	d
x	obj/user/vatest.asm	/^    x = -xx;$/;"	d
x	obj/user/vatest.asm	/^    x = xx;$/;"	d
x	obj/user/wc.asm	/^    x = -xx;$/;"	d
x	obj/user/wc.asm	/^    x = xx;$/;"	d
x	user/umalloc.c	/^  Align x;$/;"	m	union:header	file:
xchecksum	kern/mp.h	/^  uint8_t xchecksum;   \/\/ extended table checksum$/;"	m	struct:mpconf
xchg	kern/x86.h	/^static inline uint xchg(volatile uint *addr, uint newval) {$/;"	f
xint	kern/mkfs.c	/^uint xint(uint x) {$/;"	f
xlength	kern/mp.h	/^  uint16_t xlength;    \/\/ extended table length$/;"	m	struct:mpconf
xshort	kern/mkfs.c	/^ushort xshort(ushort x) {$/;"	f
yield	kern/proc.c	/^void yield(void) {$/;"	f
zeroes	kern/mkfs.c	/^char zeroes[BSIZE];$/;"	v
